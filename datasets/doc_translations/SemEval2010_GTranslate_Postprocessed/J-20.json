{
    "id": "J-20",
    "original_text": "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities. These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle. We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors. With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease. The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed. Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously. Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle. We prove that the clearing problem with this cycle-length constraint is NP-hard. Solving it exactly is one of the main challenges in establishing a national kidney exchange. We present the first algorithm capable of clearing these markets on a nationwide scale. The key is incremental problem formulation. We adapt two paradigms for the task: constraint generation and column generation. For each, we develop techniques that dramatically improve both runtime and memory usage. We conclude that column generation scales drastically better than constraint generation. Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges. Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges. The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted. Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1. INTRODUCTION The role of kidneys is to filter waste from blood. Kidney failure results in accumulation of this waste, which leads to death in months. One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine. Several visits are required per week, and each takes several hours. The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death. Only 12% of dialysis patients survive 10 years [23]. Instead, the preferred treatment is a kidney transplant. Kidney transplants are by far the most common transplant. Unfortunately, the demand for kidneys far outstrips supply. In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant. During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney. The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys. Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US. However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation. In 2005, there were 6,563 live donations in the US. The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible. In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney. However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor. These markets are examples of barter exchanges. In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other. These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle. Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9]. For many years, there has even been a large shoe exchange in the United States [10]. People with different-sized feet use this to avoid having to buy two pairs of shoes. Leg amputees have a separate exchange to share the cost of buying a single pair of shoes. We can encode a barter exchange market as a directed graph G = (V, E) in the following way. Construct one vertex for each agent. Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj. The weight we of e represents the utility to vi of obtaining vjs item. A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent. The weight wc of a cycle c is the sum of its edge weights. An exchange is a collection of disjoint cycles. The weight of an exchange is the sum of its cycle weights. A social welfare maximizing exchange is one with maximum weight. Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1. The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}. Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market. The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons. For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.) This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms. Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3. Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected. For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed). More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness. In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3. One approach then might be to look for a good heuristic or approximation algorithm. However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem. For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle. Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles. Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all. In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale. Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them. The key then is incremental problem formulation. We adapt two paradigms for the task: constraint generation and column generation. For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17]. For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years. Those results are conservative in two ways. Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months. It has been reported to us that the market could be almost double this size. Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm). Allowing length-3 cycles leads to additional significant gains. This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15]. In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors). Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].) Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm. At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions. In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation. Both problems are NP-hard. Both are best solved using tree search techniques. Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].) However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways. The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice. In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.) Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows. Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms. Section 3 contains a proof that the market clearing decision problem is NP-complete. Sections 4 and 5 each contain an ILP formulation of the clearing problem. We also detail in those sections our techniques used to solve those programs on large instances. Section 6 presents experiments on the various techniques. Section 7 discusses recent fielding of our algorithm. Finally, we present our conclusions in Section 8, and suggest future research directions. 2. MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17]. This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution. Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17]. Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor. These probabilities are based on actual real-world population data. Each patient is assigned a potential donor with a random blood type and relation to the patient. If the patient and potential donor are incompatible, the two are entered into the market. Blood type and tissue type information is then used to decide on which patients and donors are compatible. One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.) Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3]. This means that the maximum-weight exchange has maximum cardinality. Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market. The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length. For each market size, the bounds were computed over 10 randomly generated markets. Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange. Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size. Table 2 gives additional characteristics of the kidney-exchange market. Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3. Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3. PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete. Theorem 1. Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete. Proof. It is clear that this problem is in NP. For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q. One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple. Instead then, we use the following reduction. Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z. For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69]. Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z. It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching. We will show the construction admits a perfect cycle cover by short cycles. If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively. Also add the cycle ª xi a, yi b, zi c « . Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively. It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles. Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets. It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4. SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge. This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints. Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item. Add an edge ev with weight 0 between each agent v and its own item. At this point, the encoding is a perfect matching. Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj. Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item. It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching. Figure 3 contains the bipartite graph encoding of the example market from Figure 1. The weight-0 edges are encoded by dashed lines, while the market edges are in bold. Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1. Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints. Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied. If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP. For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution. Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory. Therefore, we use a tree search with an incremental formulation approach. Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process. We begin with only a small subset of the constraints in the ILP. Since this ILP is small, CPLEX can solve its LP relaxation. We then check whether any of the missing constraints are violated by the fractional solution. If so, we generate a set of these constraints, add them to the ILP, and repeat. Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it. In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children. At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated. Clearly, this approach yields an optimal solution once the tree search finishes. We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include). We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail. While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution. We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators. In each, given a fractional solution, we construct the subgraph of edges with positive value. This graph is much smaller than the original graph, so we can perform the following computations efficiently. In our first constraint generator, we simply search for length-L paths with value sum more than L − 1. For any such path, we restrict its sum to be at most L − 1. Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths. In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L . This generator made the algorithm slower, so we went in the other direction in developing our final generator. It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices. In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches. Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5. SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle. This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2. Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2. It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph. Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1. We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation. The edge formulation can be solved in polynomial time when there are no constraints on the cycle size. The cycle formulation can be solved in polynomial time when the cycle size is at most 2. We now consider the case of short cycles of length at most L, where L ≥ 3. Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution. These bounds help prune subtrees and guide the search in the usual ways. Theorem 2. The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation. Proof. Consider an optimal solution to the LP relaxation of the cycle formulation. We show how to construct an equivalent solution in the edge formulation. For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member. Also, define the value of a vertex in the same manner. Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied. It remains to show that none of the path constraints are violated. Let p be any length-L path in the graph. Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1. Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p). Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true. Consider a graph which is simply a cycle with n edges. Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2. Hence, the cycle formulation is tighter than the edge formulation. Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market. With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6). To address this problem, we used an incremental formulation approach. The first step in LP-guided tree search is to solve the LP relaxation. Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach. However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation. The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP. We explain this further by way of an example. Consider the market in Figure 1 with L = 2. Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation. Let P be the restriction of P containing columns c1 and c3 only. Let D be the dual of P , that is, D is just D without the constraint c2. Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 . While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D). We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2. It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 . Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve. Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat. The problem of finding a violated constraint is called the pricing problem. Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices. If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality. In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles. This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price. We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1]. This approach does not scale however. A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2). This is too many cycles to keep in memory. Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price. We do this using a depth-first search algorithm on the market graph (see Figure 1). In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight. We also use several pruning rules to determine if the current search path can lead to a positive weight cycle. For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex. Even with these pruning rules, column generation is a bottleneck. Hence, we also implemented the following optimizations. Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases. In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration. Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found. However, we avoid this for the following reason. If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles. In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP. Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP. Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP. Of course, we cannot include so many columns that we run out of memory. We experimented with several column seeders. In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP. We implemented two heuristics. The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices. The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles. These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns. For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size. However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound. Our best column seeder constructs a random collection of feasible cycles. Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection. Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle. If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex. In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles. This last approach outperforms the heuristic seeders described above. However, in our algorithm, we use a combination that takes the union of all columns from all three seeders. In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder. We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation. Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices. Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns). There is no good general solution to the tailing-off effect. However, to mitigate this effect, we take advantage of the following problem-specific observation. Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.) Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4). Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns! In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles. Even though the first problem is polynomial-time solvable, this is not trivial for large instances. For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4. To make this idea work then, we used column generation to solve the edge formulation. This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain. We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3. We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound. The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed. This leads to memory problems on markets with as few as 4,000 patients. Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP. To address these issues, we implemented a column management scheme to limit the size of the restricted LP. Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns. If this is the case, we selectively remove columns until it is again below the threshold2 . As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution. It is unlikely that we delete such a cycle, and even if we do, it can always be generated again. Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time. There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value. Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied. This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above. However, the solutions we find are usually fractional. Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution. Briefly, this is the idea of branch-and-price. Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained). By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.) For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions. This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP. Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem). Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order. We also experimented with the A* node selection order [7, 2]. However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2). The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution. These solutions are lower bounds on the final optimal integral solutions. Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree. A primal heuristic is effective if it is efficient and constructs tight lower bounds. We experimented with two primal heuristics. The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles. Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning. We also tried using CPLEX as a primal heuristic. At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints. CPLEX has several built-in primal heuristics, which we can apply to this ILP. Moreover, we can use CPLEXs own tree search to find an optimal integral solution. In general, this tree search is much faster than our own. If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done. Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP. For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4). Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution. Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree. Hence, we make the following optimizations. Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target. If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search. Secondly, we limit the number of nodes in CPLEXs search tree. This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that. Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent. Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node. The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1. The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5. In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1. Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value. For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6. EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM. Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010. Figure 6 shows the runtime performance of four clearing algorithms. For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms. The first algorithm is CPLEX on the full cycle formulation. This algorithm fails to clear any markets with 1000 patients or more. Also, its running time on markets smaller than this is significantly worse than the other algorithms. The other algorithms are variations of the incremental column generation approach described in Section 5. We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles). Column Generation One column at a time. Column Management On, with 400,000 column limit. Optimality Prover On. Primal Heuristic Rounding & CPLEX tree search. Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients. In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness. First, we restrict the seeder so that it only begins with 10,000 cycles. This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve. However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed. For larger instance, this restricted seeder is clearly worse. Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3. As in many column generation problems, the tailing-off effect is substantial. By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7. FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006. We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted. While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives. We are in discussions with additional kidney exchanges that are interested in adopting our technology. This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges. At least computational scalability is no longer an obstacle. 8. CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors. With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease. Our work presents the first algorithm capable of clearing these markets on a nationwide scale. It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs. Thus there is no need to resort to approximate solutions. The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory. The key to our improvement is incremental problem formulation. We adapted two paradigms for the task: constraint generation and column generation. For each, we developed a host of techniques that substantially improve both runtime and memory usage. Some of the techniques use domain-specific observations while others are domain independent. We conclude that column generation scales dramatically better than constraint generation. For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques. For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies. Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster. Our algorithm also supports several generalizations, as desired by real-world kidney exchanges. These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts). Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19]. We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible. Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often). Two important directions for future work are to explicitly address both online and limited-information aspects of the problem. The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches. In fact, some work has been done on this in certain restricted settings [22, 24]. The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed. Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure. We are currently exploring a number of questions along these lines but there is certainly much more to be done. Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process. We also thank Don Sheehy for bringing to our attention the idea of shoe exchange. This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9. REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars. Branch-and-price: Column generation for solving huge integer programs. Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl. Generalized best-first search strategies and the optimality of A*. Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico. Exchanging kidneys - advances in living-donor transplantation. New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds. Path, trees, and flowers. Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson. Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery. A comparison of populations served by kidney paired donation and list paired donation. American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael. A formal basis for the heuristic determination of minimum cost paths. IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg. Solving airline crew-scheduling problems by branch-and-cut. Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver. Kidney exchange. Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver. A kidney exchange clearinghouse in New England. American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver. Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences. American Economic Review, forthcoming. [16] E. Rothberg. Gabows n3 maximum-weight matching algorithm: an implementation. The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico. Increasing the opportunity of live kidney donation by matching for two and three way exchanges. Transplantation, 81(5):773-782, 2006. [18] T. Sandholm. Optimal winner determination algorithms. In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds. MIT Press, 2006. [19] T. Sandholm and S. Suri. Side constraints and non-price attributes in markets. In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001. To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery. Kidney paired donation and optimizing the use of live donor organs. Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver. Dynamic kidney exchange. Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios. Optimal control of a paired-kidney exchange program. Management Science, 48(3):328-342, March 2002. 304",
    "original_translation": "Algoritmos de compensación para mercados de intercambio de truequese: habilitando intercambios de riñón a nivel nacional David J. Abraham Departamento de Ciencias de la Computación Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum BLUM Ciencias de la Computación de Departamento de Ciencias de la Computación Carnegie Mellon Avrim@cs.cmu.edu Tuomas Departamento de Ciencias de la Informática de Sandholm Carnegie Mellon MellonUniversity sandholm@cs.cmu.edu Resumen en mercados de intercambio de trueque, los agentes buscan intercambiar sus artículos entre sí, para mejorar sus propias utilidades. Estos swaps consisten en ciclos de agentes, y cada agente recibe el elemento del siguiente agente en el ciclo. Nos centramos principalmente en el próximo mercado nacional de intercambio renal, donde los pacientes con enfermedad renal pueden obtener donantes compatibles cambiando sus propios donantes dispuestos pero incompatibles. Con más de 70,000 pacientes que ya esperan un riñón cadáver en los Estados Unidos, este mercado se considera la única forma ética de reducir significativamente las 4.000 muertes por año atribuidas a la enfermedad renal. El problema de compensación implica encontrar un intercambio de maximización de bienestar social cuando se soluciona la longitud máxima de un ciclo. Los ciclos largos están prohibidos, ya que, por razones de incentivos, todos los trasplantes en un ciclo deben realizarse simultáneamente. Además, en los intercambios de trueque en general, más agentes se ven afectados si uno cae de un ciclo más largo. Probamos que el problema de compensación con esta restricción de longitud del ciclo es NP-HARD. Resolverlo exactamente es uno de los principales desafíos para establecer un intercambio de riñón nacional. Presentamos el primer algoritmo capaz de limpiar estos mercados a escala nacional. La clave es la formulación de problemas incrementales. Adaptamos dos paradigmas para la tarea: generación de restricciones y generación de columnas. Para cada uno, desarrollamos técnicas que mejoran dramáticamente tanto el tiempo de ejecución como el uso de la memoria. Concluimos que la generación de columnas escala drásticamente mejor que la generación de restricciones. Nuestro algoritmo también apoya varias generalizaciones, como lo demandan los intercambios de riñón del mundo real. Nuestro algoritmo reemplazó a CPlex como el algoritmo de limpieza de la Alianza para la donación emparejada, uno de los principales intercambios de riñón. Las corridas de coincidencia se realizan cada dos semanas y los trasplantes basados en nuestras optimizaciones ya se han realizado. Categorías y descriptores de sujetos J.4 [Aplicaciones informáticas]: Ciencias Sociales y del Comportamiento-Economía;F.2 [Análisis de algoritmos y complejidad del problema]: [General] Algoritmos de términos generales, Economía 1. Introducción El papel de los riñones es filtrar los desechos de la sangre. La insuficiencia renal resulta en la acumulación de este desperdicio, lo que conduce a la muerte en meses. Una opción de tratamiento es la diálisis, en la que el paciente va a un hospital para que una máquina externa filtrada la sangre. Se requieren varias visitas por semana, y cada una lleva varias horas. La calidad de vida de la diálisis puede ser extremadamente baja, y de hecho, muchos pacientes optan por retirarse de la diálisis, lo que lleva a una muerte natural. Solo el 12% de los pacientes con diálisis sobreviven 10 años [23]. En cambio, el tratamiento preferido es un trasplante de riñón. Los trasplantes de riñón son, con mucho, el trasplante más común. Desafortunadamente, la demanda de riñones supera con creces la oferta. En los Estados Unidos en 2005, 4.052 personas murieron esperando un trasplante de riñón que salva vidas. Durante este tiempo, casi 30,000 personas fueron agregadas a la lista nacional de espera, mientras que solo 9,913 personas dejaron la lista después de recibir un riñón donante fallecido. La lista de espera actualmente tiene más de 70,000 personas, y el tiempo de espera promedio varía de 2 a 5 años, dependiendo del tipo de sangre.1 Para muchos pacientes con enfermedad renal, la mejor opción es encontrar un donante vivo, es decir, una persona sanadispuesto a donar uno de sus dos riñones. Aunque hay mercados para comprar y vender riñones de donantes vivos, la comercialización de los órganos humanos se considera casi universalmente como poco ético, y la práctica a menudo es explícitamente ilegal, como en los Estados Unidos. Sin embargo, en la mayoría de los países, la donación en vivo es legal, siempre que ocurra como un regalo sin compensación financiera. En 2005, había 6.563 donaciones en vivo en los Estados Unidos. El número de donaciones en vivo habría sido mucho mayor si no fuera por el hecho de que, con frecuencia, un potencial datos del donante 1 de United Network para compartir órganos [21].295 y su receptor previsto son de tipo sangre o de tipo tejido incompatible. En el pasado, el donante incompatible fue enviado a casa, dejando al paciente esperar un riñón de donantes fallecidos. Sin embargo, ahora hay algunos intercambios de riñón regionales en los Estados Unidos, en los que los pacientes pueden intercambiar sus donantes incompatibles entre sí, para cada uno obtener un donante compatible. Estos mercados son ejemplos de intercambios de trueque. En un mercado de intercambio de trueque, los agentes (pacientes) buscan intercambiar sus artículos (donantes incompatibles) entre sí. Estos swaps consisten en ciclos de agentes, y cada agente recibe el elemento del siguiente agente en el ciclo. Los intercambios de trueque son ubicuos: los ejemplos incluyen Peerflix (DVD) [11], léelo (libros) [12] e Intervac (casas de vacaciones) [9]. Durante muchos años, incluso ha habido un gran intercambio de zapatos en los Estados Unidos [10]. Las personas con pies de diferentes tamaños usan esto para evitar tener que comprar dos pares de zapatos. Los amputados de las piernas tienen un intercambio separado para compartir el costo de comprar un solo par de zapatos. Podemos codificar un mercado de intercambio de trueque como un gráfico dirigido g = (v, e) de la siguiente manera. Construya un vértice para cada agente. Agregue un borde ponderado E de un agente VI a otro VJ, si VI quiere el artículo de VJ. El peso que de E representa la utilidad a VI de obtener el elemento VJS. Un ciclo C en este gráfico representa un posible intercambio, con cada agente en el ciclo obteniendo el elemento del siguiente agente. El peso WC de un ciclo C es la suma de sus pesos de borde. Un intercambio es una colección de ciclos disjuntos. El peso de un intercambio es la suma de sus pesos de ciclo. Un intercambio de maximización de bienestar social es uno con el máximo peso. La Figura 1 ilustra un mercado de ejemplo con 5 agentes, {V1, V2 ,..., v5}, en el que todos los bordes tienen peso 1. El mercado tiene 4 ciclos, C1 = V1, V2, C2 = V2, V3, C3 = V3, V4 y C4 = V1, V2, V3, V4, V5 e dos (inclusión) Cambios máximos, a saber, M1 = {C4}y m2 = {c1, c3}. Exchange M1 tiene un peso máximo y cardinalidad máxima (es decir, incluye la mayoría de los bordes/vértices).V1 V2 V3 V4 V5 E1 E3 E5 C1 C2 C3 E8 E7 E6E4E2 C4 Figura 1: Ejemplo de mercado de intercambio de trueques. El problema de compensación es encontrar un intercambio de máximo peso que consiste en ciclos con longitud a lo sumo algunas pequeñas y constantes L. Esta restricción de longitud del ciclo surge naturalmente por varias razones. Por ejemplo, en un intercambio de riñones, todas las operaciones en un ciclo deben realizarse simultáneamente;De lo contrario, un donante podría retirarse después de que su pareja incompatible haya recibido un riñón.(No se puede escribir un contrato vinculante para donar un órgano). Esto da lugar a una restricción logística en el tamaño del ciclo: incluso si todos los donantes se operan en primera y el mismo personal y las instalaciones se utilizan para operar en el Dees, un ciclo K requiere entre 3k y 6k médicos, alrededor de 4K enfermeras,y casi 2k salas de operaciones. Debido a tales limitaciones de recursos, el próximo mercado nacional de intercambio de riñones probablemente permitirá solo ciclos de longitud 2 y 3. Otra motivación para los ciclos cortos es que si el ciclo no se cambia, se ven afectados menos agentes. Por ejemplo, las pruebas de último minuto en un intercambio de riñón a menudo revelan nuevas incompatibilidades que no se detectaron en las pruebas iniciales (en función de las cuales se construyó el gráfico de compatibilidad). En términos más generales, un agente puede abandonar un ciclo si sus preferencias han cambiado, o él/ella simplemente no cumple con sus obligaciones (como enviar un libro a otro agente en el ciclo) debido al olvido. En la Sección 3, mostramos que (la versión de decisión de) el problema de compensación es NP-completado para L ≥ 3. Entonces, un enfoque podría ser buscar un buen algoritmo heurístico o de aproximación. Sin embargo, por dos razones, apuntamos a un algoritmo exacto basado en una formulación del programa entero-lineal (ILP), que resolvemos utilizando la búsqueda especializada de árboles.• Primero, cualquier pérdida de optimización podría conducir a muertes innecesarias del paciente.• En segundo lugar, una característica atractiva del uso de una formulación ILP es que permite modelar fácilmente una serie de variaciones en el objetivo y agregar restricciones adicionales al problema. Por ejemplo, si se cree que 3 ciclos son más propensos a fallar que 2 ciclos, entonces se puede simplemente darles un peso que sea apropiadamente inferior a 3/2 el peso de un ciclo de 2. O, si por varias razones (por ejemplo, éticas) se requieren un intercambio de cardinalidad máximo, uno puede al menos en un segundo pase encontrar la solución (de todas las soluciones de cardinalidad máxima) que tiene la menor cantidad de 3 ciclos. Otras variaciones para las que se puede resolver incluyen encontrar varias formas de colecciones de ciclos tolerantes a fallas (no desanimadas) en el caso de que ciertos pares que se pensaba que eran compatibles resultan incompatibles después de todo. En este artículo, presentamos el primer algoritmo capaz de limpiar estos mercados a escala nacional. Las codificaciones ILP directas son demasiado grandes para construir incluso en el hardware actual, no para hablar sobre resolverlas. La clave es la formulación de problemas incrementales. Adaptamos dos paradigmas para la tarea: generación de restricciones y generación de columnas. Para cada uno, desarrollamos una serie de técnicas (principalmente específicas de problemas) que mejoran drásticamente tanto el tiempo de ejecución como el uso de la memoria.1.1 Trabajo previo Varios artículos recientes han utilizado simulaciones y algoritmos de mercado de mercado para explorar el impacto de un intercambio de riñón nacional [13, 20, 6, 14, 15, 17]. Por ejemplo, el uso del algoritmo de máxima coincidencia de Edmonds [4], [20] muestra que un mercado nacional de intercambio por pares (usando solo ciclos de longitud-2) daría como resultado más trasplantes, un tiempo de espera reducido y ahorros de $ 750 millones en Heath Carecuesta más de 5 años. Esos resultados son conservadores de dos maneras. En primer lugar, el mercado simulado contenía solo 4,000 pacientes iniciales, con 250 pacientes agregados cada 3 meses. Se nos ha informado que el mercado podría ser casi el doble de este tamaño. En segundo lugar, los intercambios se restringieron a los ciclos de longitud-2 (porque eso es todo lo que puede modelarse como una coincidencia máxima y se resolvieron usando el algoritmo Edmondss). Permitir ciclos de longitud-3 conduce a ganancias significativas adicionales. Esto se ha demostrado en los mercados de intercambio de riñones con 100 pacientes mediante el uso de CPLEX para resolver una codificación de programas enteros del problema de compensación [15]. En este artículo, presentamos un algoritmo alternativo para este programa entero que puede despejar los mercados con más de 10,000 pacientes (y el mismo número de donantes dispuestos). Permitir ciclos de longitud más de 3 a menudo no conduce a una mejora en el tamaño del intercambio [15].(Además, en un modelo teórico simplificado, cualquier intercambio renal se puede convertir en uno con ciclos de longitud como máximo 4 [15].) Si bien esto no es válido para los intercambios de trueque generales, o incluso para todos los mercados de intercambio renal, en la Sección 5.2.3 utilizamos la observación de que los ciclos cortos son suficientes para aumentar drásticamente la velocidad de nuestro algoritmo. En un nivel de alto nivel, el problema de compensación para los intercambios de trueque es similar al problema de compensación (también conocido como problema de determinación de ganadores) en subastas combinatorias. En ambos entornos, la idea es reunir toda la información pertinente sobre los agentes en un punto de compensación central y ejecutar un algoritmo de compensación centralizado para determinar la asignación. Ambos problemas son NP-Hard. Ambos se resuelven mejor utilizando técnicas de búsqueda de árboles. Desde 1999, se ha realizado un trabajo significativo en la investigación de la informática y las operaciones sobre algoritmos de búsqueda de árboles óptimos más rápidos para eliminar las subastas combinatorias.(Para una revisión reciente, ver [18].) Sin embargo, el problema de compensación de intercambio renal (con un límite de 3 o más sobre el tamaño del ciclo) es diferente del problema de compensación de subasta combinatoria de manera significativa. La diferencia más importante es que las formulaciones naturales del problema de la subasta combinatoria tienden a adaptarse fácilmente a la memoria, por lo que el tiempo es el cuello de botella en la práctica. Por el contrario, las formulaciones naturales del problema de intercambio renal (con L = 3) toman al menos espacio cúbico en el número de pacientes para que incluso modelen y, por lo tanto, la memoria se convierte en un cuello de botella mucho antes de que el tiempo lo haga cuando se usa la búsqueda de árboles estándar, como la rama.-Anly en cplex, para abordar el problema.(En una computadora de 1 GB y un generador de instancias estándar realista, discutido más adelante, CPlex 10.010 se queda fuera de la memoria en cinco de las diez instancias de 900 pacientes y diez de las diez instancias de 1,000 pacientes que generamos). Por lo tanto, los enfoques que se han desarrollado para subastas combinatorias no pueden manejar el problema de intercambio renal.1.2 Esquema de papel El resto del papel está organizado de la siguiente manera. La Sección 2 discute el proceso por el cual generamos datos realistas del mercado de intercambio renal, para comparar los algoritmos de compensación. La Sección 3 contiene una prueba de que el problema de la decisión de compensación del mercado es NP-Completo. Las secciones 4 y 5 contienen una formulación ILP del problema de compensación. También detallamos en esas secciones nuestras técnicas utilizadas para resolver esos programas en grandes casos. La Sección 6 presenta experimentos sobre las diversas técnicas. La Sección 7 discute el campo reciente de nuestro algoritmo. Finalmente, presentamos nuestras conclusiones en la Sección 8 y sugerimos futuras direcciones de investigación.2. Características del mercado y generador de instancias Probamos los algoritmos en los mercados simulados de intercambio renal, que son generados por un proceso descrito en Saidman et al.[17]. Este proceso se basa en los extensos datos a nivel nacional mantenidos por United Network for Organ Compartir (UNO) [21], por lo que genera una distribución de instancias realista. Varios documentos han utilizado variaciones de este proceso para demostrar la efectividad de un intercambio renal nacional (extrapolando de pequeñas instancias o restringiendo el claro a 2 ciclos) [6, 20, 14, 13, 15, 17]. Brevemente, el proceso implica generar pacientes con un tipo de sangre aleatoria, sexo y probabilidad de ser de tipo tejido incompatible con un donante elegido al azar. Estas probabilidades se basan en datos reales de población del mundo real. A cada paciente se le asigna un donante potencial con un tipo de sangre aleatoria y una relación con el paciente. Si el paciente y el donante potencial son incompatibles, los dos se ingresan al mercado. La información del tipo de sangre y el tipo de tejido se utiliza para decidir qué pacientes y donantes son compatibles. Una complicación, manejada por el generador, es que si el paciente es mujer y ha tenido un hijo con su posible donante, entonces la probabilidad de que los dos sean incompatibles aumentan.(Esto se debe a que la madre desarrolla anticuerpos para su pareja durante el embarazo). Finalmente, aunque nuestros algoritmos pueden manejar funciones de peso más generales, los pacientes tienen una utilidad de 1 para donantes compatibles, ya que su probabilidad de supervivencia no se ve afectada por la elección del donante [3]. Esto significa que el intercambio máximo de peso tiene la máxima cardinalidad. La Tabla 1 ofrece límites inferiores y superiores en el tamaño de un intercambio de máxima cardinalidad en el mercado de intercambio renal. Los límites inferiores se encontraron limpiando el mercado solo con ciclos de longitud-2, mientras que los límites superiores no tenían restricción en la duración del ciclo. Para cada tamaño del mercado, los límites se calcularon en 10 mercados generados al azar. Tenga en cuenta que puede haber una gran cantidad de variabilidad en los mercados: en un mercado de 5000 pacientes, menos de 1000 pacientes estaban en el intercambio de máxima cardinalidad. Tamaño de intercambio máximo Longitud-2 ciclos solo ciclos arbitrarios Pacientes Media MÁS MÁS MÁS MÁXIMA 100 4.00E+1 4.60E+1 5.30E+1 6.10E+1 500 2.58E+2 2.80E+2 2.79E+2 2.97E+2 10005.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+34000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e++3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Tabla 1: límites superior e inferior en el tamaño de intercambio. La Tabla 2 ofrece características adicionales del mercado de intercambio renal. Tenga en cuenta que un mercado con 5000 pacientes ya puede tener más de 450 millones de ciclos de longitud 2 y 3. Longitud de los bordes 2 y 3 ciclos Pacientes Media MÁS MÁS MÁXIMA 100 2.38E+3 2.79E+3 2.76E+3 5.90E+3 500 6.19E+4 6.68E+4 3.96E+5 5.27E+5 1000 2.44E+52.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e++6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56E+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Tabla 2: Características del mercado.297 3. La complejidad del problema En esta sección, demostramos que (la versión de decisión de) el problema de compensación del mercado con ciclos cortos es NP-NP. Teorema 1. Dado un gráfico g = (v, e) y un número entero L ≥ 3, el problema de decidir si G admite una cubierta de ciclo perfecta que contiene ciclos de longitud en la mayoría de L es NP Completo. Prueba. Está claro que este problema está en NP. Para Nphardness, reducimos del partido 3D, que es el problema de, dados los conjuntos de disjunto X, Y y Z de tamaño Q, y un conjunto de triples t ⊆ x × y × z, decidir si hay un subconjunto de disjunto m deT con tamaño q. Una idea directa es construir un gráfico tripartito con conjuntos de vértices x ∪ y ∪ z y bordes dirigidos (xa, yb), (yb, zc) y (zc, xa) para cada triple ti = {xa, yb, zc}∈ T. Sin embargo, no es demasiado difícil ver que esta codificación falle porque una cubierta de ciclo perfecta puede incluir un ciclo sin triple correspondiente. En cambio, usamos la siguiente reducción. Dada una instancia de coincidencia 3D, construya un vértice para cada elemento en X, Y y Z. Para cada triple, ti = {xa, yb, zc} construye el gadget en la Figura 2, que es similar a uno en Garey y Johnson [5, pp 68-69]. Tenga en cuenta que los gadgets se cruzan solo en vértices en x ∪ y ∪ Z. Está claro que esta construcción se puede hacer en tiempo polinomial.1 ... 2 3 Y_B ... 2 3 Z_C Y_B^I Z_C^I L-1 L-1 L-1 X_A^I X_A ... 2 31 1 Figura 2: Gadget NP-Completness para Triple Ti y MáximoLongitud del ciclo L. Sea M una combinación 3D perfecta. Mostraremos que la construcción admite una cubierta de ciclo perfecta por ciclos cortos. Si ti = {xa, yb, zc} ∈ M, agregue del gadget los tres ciclos de longitud que contienen Xa, yb y Zc respectivamente. También agregue el ciclo ª xi a, yi b, zi c «. De lo contrario, si ti /∈ M, agregue los tres ciclos de longitud que contienen Xi A, Yi B y Zi C respectivamente. Está claro que todos los vértices están cubiertos, ya que M particionó X × Y × Z. Por el contrario, supongamos que tenemos una cubierta perfecta en ciclos cortos. Tenga en cuenta que la construcción solo tiene ciclos cortos de longitudes 3 y L, y ningún ciclo corto implica vértices distintos de dos dispositivos diferentes. Es fácil ver entonces que en una cubierta perfecta, cada gadget Ti contribuye con los ciclos de acuerdo con los casos anteriores: ti ∈ M, o ti /∈ M. Por lo tanto, existe una combinación 3D perfecta en la instancia original.4. Los enfoques de solución basados en una formulación de borde en esta sección, consideramos una formulación del problema de compensación como un ILP con una variable para cada borde. Esta codificación se basa en el siguiente algoritmo clásico para resolver el problema de la cubierta del ciclo dirigido sin restricciones de longitud de ciclo. Dado un mercado g = (v, e), construya un gráfico bipartito con un vértice para cada agente y un vértice para cada artículo. Agregue un borde EV con peso 0 entre cada agente V y su propio elemento. En este punto, la codificación es una coincidencia perfecta. Ahora, para cada borde e = (VI, VJ) en el mercado original, agregue un borde E con peso entre el Agente VI y el artículo de VJ. Las coincidencias perfectas en esta codificación corresponden exactamente a las cubiertas de ciclo, ya que cada vez que se toma un artículo de los agentes, debe recibir algún elemento de otros agentes. Se deduce que el problema de compensación sin restricciones se puede resolver en el tiempo polinomial al encontrar una coincidencia perfecta de peso máximo. La Figura 3 contiene la codificación del gráfico bipartito del mercado de ejemplo de la Figura 1. Los bordes de peso-0 están codificados por líneas discontinuas, mientras que los bordes del mercado están en negrita. Artículos Agentes V1 V2 V3 V4 V5 E1 E3 E8 E2 V1 V2 V3 V4 V5 E7E6 E5 E4 Figura 3: Codificación de coincidencia perfecta del mercado en la Figura 1. Alternativamente, podemos resolver el problema codificándolo como un ILP con una variable para cada borde en el gráfico de mercado original G. Esta ILP, que se da a continuación, tiene la ventaja de que se puede extender naturalmente para lidiar con las limitaciones de la longitud del ciclo. Por lo tanto, para el resto de esta sección, este es el enfoque que seguiremos.max e∈E wee tal que para todos vi ∈ V, la restricción de conservación eout = (vi, vj) eout - ein = (vj, vi) ein = 0 y la restricción de capacidad eout = (vi, vj) eout ≤ 1 están satisfechos. Si se permite que los ciclos tengan una longitud como máximo L, es fácil ver que solo necesitamos hacer los siguientes cambios en el ILP. Para cada ruta de longitud-L (en todo el documento, no incluimos ciclos en la definición de ruta) P = EP1, EP2 ,..., EPL, agregue una restricción EP1 + EP2 +...+ EPL ≤ L - 1, que impide que la ruta P esté en cualquier solución factible. Desafortunadamente, en un mercado con solo 1000 pacientes, el número de rutas de longitud-3 superan los 400 millones, por lo que ni siquiera podemos construir esta ILP sin quedarse sin memoria. Por lo tanto, utilizamos una búsqueda de árbol con un enfoque de formulación incremental. Específicamente, usamos CPLEX, aunque 298 agregamos restricciones como planos de corte durante el proceso de búsqueda de árboles. Comenzamos solo con un pequeño subconjunto de las limitaciones en el ILP. Dado que este ILP es pequeño, CPLEX puede resolver su relajación de LP. Luego verificamos si alguna de las restricciones faltantes es violada por la solución fraccional. Si es así, generamos un conjunto de estas restricciones, las agregamos a la ILP y repitemos. Incluso una vez que se cumplan todas las restricciones, puede que no haya una solución integral que coincida con el límite superior fraccional, e incluso si hubiera, el solucionador LP podría no encontrarla. En estos casos, CPLEX se ramifica en una variable (utilizamos la estrategia de ramificación predeterminada de CPLEXS) y genera un nuevo nodo de búsqueda correspondiente a cada uno de los niños. En cada nodo del árbol de búsqueda que se visita, se repite este proceso de resolver el LP y agregar restricciones. Claramente, este enfoque produce una solución óptima una vez que termina la búsqueda del árbol. Todavía necesitamos explicar los detalles del sembrador de restricciones (es decir, seleccionar qué restricciones para empezar) y la generación de restricciones (es decir, seleccionar cuáles violaron las restricciones para incluir). Los describimos brevemente en las siguientes dos subsecciones, respectivamente.4.1 Sembrador de restricción El semillero de restricción principal que desarrollamos prohíbe cualquier camino de longitud L - 1 que no tenga un borde que cierre el ciclo de su cabeza a su cola. Si bien es computacionalmente costoso encontrar estas restricciones, su adición enfoca la búsqueda lejos de las rutas que no pueden estar en la solución final. También intentamos sembrar el LP con una colección aleatoria de restricciones del ILP.4.2 Generación de restricciones Experimentamos con varios generadores de restricciones. En cada uno, dada una solución fraccional, construimos el subgrafo de bordes con valor positivo. Este gráfico es mucho más pequeño que el gráfico original, por lo que podemos realizar los siguientes cálculos de manera eficiente. En nuestro primer generador de restricciones, simplemente buscamos rutas de longitud-L con una suma de valor más que L-1. Para cualquier camino de este tipo, restringimos que su suma sea como máximo L - 1. Tenga en cuenta que si hay un ciclo c con longitud | c |> L, podría contener tantos como | c |Violando caminos. En nuestro segundo generador de restricciones, solo agregamos una restricción para tales ciclos: la suma de bordes en el ciclo puede ser como máximo | C | (L - 1)/L. Este generador hizo que el algoritmo fuera más lento, por lo que fuimos en la otra dirección en el desarrollo de nuestro generador final. Agrega una restricción por ruta de violación P, y además, agrega una restricción para cada ruta con los mismos vértices interiores (sin contar los puntos finales) como p.Esto mejoró la velocidad general.4.3 Rendimiento experimental Resultó que incluso con estas mejoras, el enfoque de formulación de borde no puede borrar un intercambio de riñón con 100 vértices en el tiempo que la formulación del ciclo (descrita más adelante en la Sección 5) puede borrar uno con 10,000 vértices. En otras palabras, los enfoques basados en la generación de columnas resultaron ser drásticamente mejores que los enfoques basados en la generación de restricciones. Por lo tanto, en el resto del documento, nos centraremos en la formulación del ciclo y los enfoques basados en la generación de columnas.5. Enfoques de solución basados en una formulación de ciclo en esta sección, consideramos una formulación del problema de compensación como un ILP con una variable para cada ciclo. Esta codificación se basa en el siguiente algoritmo clásico para resolver el problema de la cubierta del ciclo dirigido cuando los ciclos tienen longitud 2. Dado un mercado g = (v, e), construya un nuevo gráfico en V con un borde de peso WC para cada ciclo c de longitud 2. Es fácil ver que las coincidencias en este nuevo gráfico corresponden a las cubiertas de ciclo por ciclos de longitud-2 en el gráfico de mercado original. Por lo tanto, el problema de compensación del mercado con L = 2 se puede resolver en el tiempo polinomial al encontrar una coincidencia de peso máximo.C_1 V 1 V 2 V 3 V 4 C_3C_2 Figura 4: Codificación de correspondencia máxima del mercado en la Figura 1. Podemos generalizar esta codificación para L. Arbitrary Sea C (L) el conjunto de todos los ciclos de G con la longitud en la mayoría de L. Entonces la siguiente ILP encuentra la cubierta del ciclo de peso máximo por ciclos C (L): Max C∈C(L) WCC sujeto a c: vi∈C c ≤ 1 ∀vi ∈ V con c ∈ {0, 1} ∀c ∈ C (l) 5.1 Formulación de ciclo de borde vs En esta sección, consideramos los méritos de la formulación de borde yFormulación del ciclo. La formulación de borde se puede resolver en el tiempo polinomial cuando no hay restricciones en el tamaño del ciclo. La formulación del ciclo se puede resolver en el tiempo polinomial cuando el tamaño del ciclo es como máximo 2. Ahora consideramos el caso de ciclos cortos de longitud en la mayoría de L, donde L ≥ 3. Nuestros algoritmos de búsqueda de árboles utilizan la relajación de LP de estas formulaciones para proporcionar límites superiores en la solución óptima. Estos límites ayudan a podar subárboles y guiar la búsqueda de las formas habituales. Teorema 2. La relajación de LP de la formulación del ciclo domina débilmente la relajación de LP de la formulación de borde. Prueba. Considere una solución óptima a la relajación de LP de la formulación del ciclo. Mostramos cómo construir una solución equivalente en la formulación de borde. Para cada borde en el gráfico, establezca su valor como la suma de valores de todos los ciclos de los cuales es un miembro. Además, defina el valor de un vértice de la misma manera. Debido a las limitaciones del ciclo, las limitaciones de conservación y capacidad de la codificación de borde están claramente satisfechos. Queda por mostrar que no se violan ninguna de las limitaciones de ruta. Sea P cualquier ruta longitud-l en el gráfico. Dado que p tiene l - 1 vértices interiores (sin contar los puntos finales), la suma de valor de estos vértices interiores es como máximo L - 1. Ahora, para cualquier ciclo C de longitud en la mayoría de L, el número de bordes que tiene en P, que denotamos por EC (P), es como máximo el número de vértices interiores que tiene en P, que denotamos por VC (P). Por lo tanto, è e∈P e = è c∈C (l) c ∗ ec (p) ≤ è c∈C (l) c ∗ vc (p) = è v∈P v = l - 1.299 Lo contrario de este teorema no es cierto. Considere un gráfico que es simplemente un ciclo con n bordes. Claramente, la relajación de LP de la formulación del ciclo tiene un valor óptimo 0, ya que no hay ciclos de tamaño en la mayoría de L. Sin embargo, la formulación de borde tiene una solución de tamaño N/2, con cada borde con valor 1/2. Por lo tanto, la formulación del ciclo es más estricta que la formulación del borde. Además, para un gráfico con m bordes, la formulación de borde requiere restricciones O (M3), mientras que la formulación del ciclo requiere solo O (M2).5.2 Generación de columnas para la Tabla 2 de LP muestra cómo el número de ciclos de longitud en la mayoría de los 3 crece con el tamaño del mercado. Con una variable por ciclo en la formulación del ciclo, CPLEX ni siquiera puede limpiar los mercados con 1,000 pacientes sin quedarse sin memoria (ver Figura 6). Para abordar este problema, utilizamos un enfoque de formulación incremental. El primer paso en la búsqueda de árboles guiados por LP es resolver la relajación de LP. Dado que la formulación del ciclo no encaja en la memoria, esta etapa LP fallaría inmediatamente sin un enfoque de formulación incremental. Sin embargo, motivado por la observación de que una solución de intercambio puede incluir solo una pequeña fracción de los ciclos, exploramos el enfoque del uso de la generación de columna (es decir, ciclo). La idea de la generación de columnas es comenzar con un LP restringido que contiene solo un pequeño número de columnas (variables, es decir, ciclos), y luego agregar columnas repetidamente hasta que una solución óptima a este LP parcialmente formulada sea una solución óptima para el original (AKA Master) LP. Explicamos esto más a través de un ejemplo. Considere el mercado en la Figura 1 con L = 2. La Figura 5 proporciona el LP maestro, P, y su doble, D. Primal P Max 2C1 +2C2 +2C3 S.T.C1 ≤ 1 (V1) C1 +C2 ≤ 1 (V2) +C2 +C3 ≤ 1 (V3) +C3 ≤ 1 (V4) con C1, C2, C3 ≥ 0 dual d min v1 +v2 +v3 +v4 s.t v1+V2 ≥ 2 (C1) +V2 +V3 ≥ 2 (C2) +V3 +V4 ≥ 2 (C3) con V1, V2, V3, V4 ≥ 0 Figura 5: Formulación del ciclo. Sea P la restricción de P que contiene columnas C1 y C3 solamente. Sea D el dual de P, es decir, D es solo D sin la restricción C2. Debido a que P y D son pequeños, podemos resolverlos para obtener OPT (P) = OPT (D) = 4, con COP T (P) = C1 = C3 = 1 y Vop t (D) = V1 = V2 = V3 =V4 = 1. Mientras que COP T (P) debe ser una solución factible de P, resulta (afortunadamente) que Vop t (D) es factible para D, de modo que opta (D) ≥ Opt (D). Podemos verificar esto verificando que Vop t (d) satisface las restricciones de D que aún no están en DI.E.restricción c2. Se deduce que opt (p) = opt (d) ≥ opt (d) = opt (p), por lo que vop t (p) es probablemente una solución óptima para p, aunque P contiene un solo subconjunto estricto de las columnasde P. Por supuesto, puede resultar (desafortunadamente) que Vop t (d) no es factible para D. Esto puede suceder arriba si vop t (d) = v1 = 2, v2 = 0, v3 = 0, v4 =2. Aunque todavía podemos ver que OPT (D) = OPT (D), en general no podemos probar esto porque D y P son demasiado grandes para resolver. En cambio, debido a que se viola la restricción C2, agregamos la columna C2 a P, actualizamos D y repetimos. El problema de encontrar una restricción violada se llama problema de fijación de precios. Aquí, el precio de una columna (ciclo en nuestra configuración) es la diferencia entre su peso y la suma de doble valor de los vértices de los ciclos. Si alguna columna de P tiene un precio positivo, se viola su restricción correspondiente y aún no hemos demostrado una optimización. En este caso, debemos continuar generando columnas para agregar a P.5.2.1 Problema de precios Para casos más pequeños, podemos mantener una colección explícita de todos los ciclos factibles. Esto hace que el problema de precios sea fácil y eficiente para resolver: simplemente atravesamos la recolección de ciclos y buscamos ciclos con precio positivo. Incluso podemos encontrar ciclos con el precio más positivo, que son los más propensos a mejorar el valor objetivo del LP restringido [1]. Sin embargo, este enfoque no escala. Un mercado con 5000 pacientes puede tener hasta 400 millones de ciclos de longitud como máximo 3 (ver Tabla 2). Estos son demasiados ciclos para mantener en la memoria. Por lo tanto, para casos más grandes, tenemos que generar ciclos factibles mientras buscamos uno con un precio positivo. Hacemos esto utilizando un algoritmo de búsqueda de profundidad en el gráfico del mercado (ver Figura 1). Para hacer esta búsqueda más rápido, exploramos los vértices en un orden de valor no reducido, ya que es más probable que estos vértices pertenezcan a ciclos con peso positivo. También utilizamos varias reglas de poda para determinar si la ruta de búsqueda actual puede conducir a un ciclo de peso positivo. Por ejemplo, en un vértice dado en la búsqueda, podemos podar en función del hecho de que cada vértice que visitemos a partir de este punto tendrá valor al menos tan grande el vértice actual. Incluso con estas reglas de poda, la generación de columnas es un cuello de botella. Por lo tanto, también implementamos las siguientes optimizaciones. Cada vez que la búsqueda demuestra exhaustivamente que un vértice no pertenece a un ciclo de precio positivo, marcamos el vértice y no lo usamos como la raíz de una búsqueda de profundidad hasta que su doble valor disminuya. De esta manera, evitamos repetir innecesariamente nuestros esfuerzos computacionales de una iteración de generación de columna anterior. Finalmente, a veces puede ser beneficioso que la generación de columnas incluya varias columnas de precio positivo en una iteración, ya que puede ser más rápido generar una segunda columna, una vez que se encuentra la primera. Sin embargo, evitamos esto por la siguiente razón. Si intentamos encontrar columnas más positivas de precio que las que se encuentran, o si las columnas están muy separadas en el espacio de búsqueda, terminamos teniendo que generar y verificar una gran parte de la colección de ciclos factibles. En nuestros experimentos, hemos visto que esto ocurre en los mercados con cientos de millones de ciclos, lo que resulta en costos de cálculo prohibitivamente costosos.5.2.2 Sembrado de columna incluso si solo hay un pequeño espacio para la relajación maestra de LP, la generación de columnas requiere muchas iteraciones para mejorar el valor objetivo del LP restringido. Cada una de estas 300 iteraciones es costosa, ya que debemos resolver el problema de precios y volver a resolver el LP restringido. Por lo tanto, aunque podríamos comenzar sin columnas en el LP restringido, es mucho más rápido sembrar el LP con suficientes columnas para que el valor objetivo óptimo no esté demasiado lejos del LP maestro. Por supuesto, no podemos incluir tantas columnas que nos quedamos sin memoria. Experimentamos con varios sembradores de columna. En una clase de sembradora, usamos una heurística para encontrar un intercambio, y luego agregamos los ciclos de ese intercambio al LP restringido inicial. Implementamos dos heurísticas. El primero es un algoritmo codicioso: para cada vértice en un orden aleatorio, si se descubre, intentamos incluir un ciclo que lo contenga y otros vértices descubiertos. La otra heurística utiliza un código de correspondencia especializado de peso máximo [16] para encontrar una cubierta óptima por ciclos de longitud 2. Estas heurísticas funcionan extremadamente bien, especialmente teniendo en cuenta el hecho de que solo agregan un pequeño número de columnas. Por ejemplo, la Tabla 1 muestra que una cubierta óptima por ciclos de longitud-2 tiene casi tanto peso como el intercambio con el tamaño del ciclo sin restricciones. Sin embargo, tenemos suficiente memoria para incluir cientos de miles de columnas adicionales y, por lo tanto, acercarnos más al límite superior. Nuestro mejor sembrador de columna construye una colección aleatoria de ciclos factibles. Dado que un mercado con 5000 pacientes puede tener hasta 400 millones de ciclos factibles, lleva demasiado tiempo generar y atravesar todos los ciclos factibles, por lo que no incluimos una colección uniformemente aleatoria. En cambio, realizamos una caminata aleatoria en el gráfico del mercado (ver, por ejemplo, Figura 1), en la cual, después de cada paso de la caminata, probamos si hay una ventaja en nuestro camino que forma un ciclo factible. Si encontramos un ciclo, se incluye en el LP restringido, y comenzamos una nueva caminata desde un vértice aleatorio. En nuestros experimentos (ver Sección 6), usamos este algoritmo para sembrar el LP con 400,000 ciclos. Este último enfoque supera a los sembradores heurísticos descritos anteriormente. Sin embargo, en nuestro algoritmo, usamos una combinación que toma la unión de todas las columnas de las tres sembradoras. En la Figura 6, comparamos el rendimiento de la combinación de sembradora contra la combinación sin el sembrador de colección aleatoria. No trazamos el rendimiento del algoritmo sin ningún sembrador, ya que puede tomar horas eliminar los mercados que de otro modo podemos aclarar en unos minutos.5.2.3 Probar la optimización recuerde que nuestro objetivo es encontrar una solución óptima para la relajación maestra de LP. Usando la generación de columnas, podemos demostrar que una solución limitada a primeras es óptima una vez que todas las columnas tienen precios no positivos. Sin embargo, desafortunadamente, nuestro problema de compensación tiene el llamado efecto de cola de cola [1, Sección 6.3], en el cual, aunque el Primal restringido es óptimo en retrospectiva, se requiere una gran cantidad de iteraciones adicionales para demostrar la optimidad (es decir,, eliminar todas las columnas de precio positivo). No hay una buena solución general para el efecto de cola. Sin embargo, para mitigar este efecto, aprovechamos la siguiente observación específica del problema. Recuerde de la Sección 1.1 que, casi siempre, un intercambio de peso máximo con ciclos de longitud como máximo 3 tiene el mismo peso que un intercambio de peso máximo sin restricciones.(Esto no significa que el solucionador para el caso sin restricciones encontrará una solución con ciclos cortos, sin embargo). Además, el problema de limpieza sin restricciones se puede resolver en el tiempo polinomial (recuerdo de la sección 4). Por lo tanto, podemos calcular eficientemente un límite superior en la relajación maestra de LP y, cada vez que el Primal restringido logra este límite superior, ¡hemos demostrado optimización sin necesariamente tener que eliminar todas las columnas de precio positivo! Para que esto mejore el tiempo de ejecución del algoritmo general, necesitamos poder despejar el mercado sin restricciones en menos tiempo de lo que lleva la generación de columnas para eliminar todos los ciclos de precio positivo. A pesar de que el primer problema es la solución de tiempo polinómico, esto no es trivial para grandes casos. Por ejemplo, para un mercado con 10,000 pacientes y 25 millones de bordes, el código de correspondencia especializado de peso máximo [16] fue demasiado lento, y CPLEX se quedó sin memoria en la formulación de borde que codifica de la Sección 4. Para que esta idea funcione, utilizamos la generación de columnas para resolver la formulación de borde. Esto implica comenzar con un pequeño subconjunto aleatorio de los bordes, y luego agregar bordes de precio positivos uno por uno hasta que no quede ninguno. Llevamos a cabo esta generación de columna secundaria no en el gráfico de mercado original G, sino en el gráfico bipartito coincidente perfecto de la Figura 3. Hacemos esto para que solo necesitemos resolver el LP, no el ILP, ya que la brecha de integralidad en el gráfico bipartito coincidente perfecto es 1-I.E.Siempre existe una solución integral que logra el límite superior fraccional. La aceleración resultante del algoritmo general es dramático, como se puede ver en la Figura 6. 5.2.4 Managemento de columnas Si el valor óptimo del LP P P. está lejos del LP P Mast Master, entonces se genera una gran cantidad de columnas.antes de que se cierre la brecha. Esto lleva a problemas de memoria en los mercados con tan solo 4,000 pacientes. Además, incluso antes de que la memoria se convierta en un problema, las iteraciones de generación de columnas se vuelven lentas debido a la sobrecarga adicional de resolver un LP más grande. Para abordar estos problemas, implementamos un esquema de gestión de columnas para limitar el tamaño del LP restringido. Cada vez que agregamos columnas al LP, verificamos si contiene más de un número umbral de columnas. Si este es el caso, eliminamos selectivamente columnas hasta que esté nuevamente por debajo del umbral2. Como discutimos anteriormente, solo una pequeña fracción de todos los ciclos terminará en la solución final. Es poco probable que eliminemos ese ciclo, e incluso si lo hacemos, siempre se puede generar nuevamente. Por supuesto, no debemos ser demasiado agresivos con el umbral, porque hacerlo puede compensar las ganancias de rendimiento por iteración al aumentar significativamente el número de iteraciones necesarias para obtener una columna adecuada establecida en el LP al mismo tiempo. Hay algunas columnas que nunca eliminamos, por ejemplo, en las que hemos ramificado (ver Sección 5.3.2), o aquellas con un valor LP distinto de cero. Entre el resto, eliminamos aquellos con el precio más bajo, ya que las corresponden a las limitaciones duales que están más satisfechas. Este esquema de gestión de columnas funciona bien y nos ha permitido limpiar los mercados con 10,000 pacientes, como se ve en la Figura 6. 5.3 Búsqueda de sucursal y precio para el ILP dado un gran problema de compensación de mercado, podemos resolver con éxito su relajación de LP a la optimización porUso de las mejoras de generación de columnas descritas anteriormente. Sin embargo, las soluciones que encontramos suelen ser fraccionales. Por lo tanto, los siguientes 2 basados en el tamaño de la memoria, establecemos el umbral en 400,000.301 El paso implica realizar una búsqueda de árbol de rama y precio [1] para encontrar una solución integral óptima. Brevemente, esta es la idea de ramas y precios. Cada vez que establecemos una variable fraccional en 0 o 1 (rama), tanto el LP maestro como la restricción con la que estamos trabajando, se cambian (restringidos). Por defecto, debemos realizar la generación de columnas (pasar por el esfuerzo de precios) en cada nodo del árbol de búsqueda para demostrar que la restricción restringida es óptima para LP maestro restringido.(Sin embargo, como se discutió en la Sección 5.2.3, calculamos el límite superior integral para el nodo raíz basado en relajar por completo la restricción de la longitud del ciclo, y cada vez que cualquier nodo LP en el árbol logra ese valor, no necesitamos continuar con las columnas de fijación de preciosen ese nodo). Para el problema de compensación con ciclos de longitud en la mayoría de los 3, hemos descubierto que rara vez hay una brecha entre las soluciones integrales y fraccionales óptimas. Esto significa que podemos evitar en gran medida el costoso paso de precios por nodo: cada vez que el LP restringido restringido tiene el mismo valor óptimo que su padre en la búsqueda de árboles, podemos probar la optimización de LP, como en la Sección 5.2.3, sin tener que incluir ningún adicional.Columnas en el LP restringido. Aunque CPLEX puede resolver ILP, no admite ramas y precios (por ejemplo, porque puede haber problemas específicos que implican la interacción entre la regla de ramificación y el problema de los precios). Por lo tanto, implementamos nuestro propio algoritmo de rama y precio, que explora el árbol de búsqueda en el primer orden. También experimentamos con el orden de selección del nodo A* [7, 2]. Sin embargo, esta estrategia de búsqueda requiere significativamente más memoria, lo que encontramos que se empleó mejor para hacer que la fase de generación de columnas sea más rápida (ver Sección 5.2.2). Los componentes principales restantes del algoritmo se describen en las siguientes dos subsecciones.5.3.1 Heurística primaria Antes de ramificarse en una variable fraccional, utilizamos heurísticas primarias para construir una solución integral factible. Estas soluciones son límites más bajos en las soluciones integrales óptimas finales. Por lo tanto, cada vez que una solución fraccional restringida no es mejor que la mejor solución integral que se encuentra hasta ahora, podamos el subárbol actual. Una heurística primaria es efectiva si es eficiente y construye límites inferiores apretados. Experimentamos con dos heurísticas primarias. El primero es un algoritmo de redondeo simple [8]: incluya todos los ciclos con valor fraccional al menos 0.5, y luego, asegurando la viabilidad, agregue con codicia los ciclos restantes. Si bien esta heurística es eficiente, encontramos que los límites inferiores que construye rara vez permiten mucha poda. También intentamos usar CPlex como heurística primaria. En cualquier nodo dado del árbol de búsqueda, podemos convertir la relajación de LP restringida a un ILP reintroduciendo las restricciones de integralidad. CPLEX tiene varias heurísticas primarias incorporadas, que podemos aplicar a este ILP. Además, podemos usar la búsqueda de árboles de Cplexs Own para encontrar una solución integral óptima. En general, esta búsqueda de árboles es mucho más rápida que la nuestra. Si CPLEX encuentra una solución integral que coincide con el límite superior fraccional en el nodo raíz, estamos listos. De lo contrario, no existe dicha solución integral, o aún no tenemos la combinación correcta de ciclos en el LP restringido. Para los mercados de intercambio renal, generalmente es la segunda razón que se aplica (ver secciones 5.2.2 y 5.2.4). Por lo tanto, en algún momento de la búsqueda del árbol, una vez más columnas se han generado como resultado de la ramificación, la heurística CPlex encontrará una solución integral óptima. Aunque la búsqueda de árboles CPLEX es más rápida que la nuestra, no es tan rápido que podamos aplicarla a cada nodo de nuestro árbol de búsqueda. Por lo tanto, hacemos las siguientes optimizaciones. En primer lugar, agregamos una restricción que requiere que el valor objetivo de la ILP sea tan grande como el objetivo fraccional. Si este no es el caso, queremos abortar y proceder a generar más columnas con nuestra búsqueda de ramificación y precio. En segundo lugar, limitamos el número de nodos en el árbol de búsqueda de CPlexs. Esto se debe a que hemos observado que no existe una solución integral, CPLEX puede tardar mucho en demostrarlo. Finalmente, solo aplicamos la heurística CPLEX en un nodo si tiene un conjunto de ciclos suficientemente diferente de su padre. El uso de CPLEX como heurística primaria tiene un gran impacto porque hace que el árbol de búsqueda sea más pequeño, por lo que todo el trabajo de precios computacionalmente costoso se evita en los nodos que no se generan en este árbol más pequeño.5.3.2 Brancher de ciclo experimentamos con dos estrategias de ramificación, las cuales seleccionan una variable por nodo. La primera estrategia, ramificada por certeza, selecciona aleatoriamente una variable de aquellos cuyo valor de LP es más cercano a 1. La segunda estrategia, ramificada por incertidumbre, selecciona aleatoriamente una variable cuyo valor de LP es más cercano a 0.5. En cualquier caso, se generan dos hijos del nodo correspondiente a dos subárboles, uno en el que la variable se establece en 0, la otra en la que se establece en 1. Nuestra búsqueda en profundidad siempre elige explorar primero el subárbol en el que el valor de la variable está más cerca de su valor fraccional. Para nuestro problema de limpieza con ciclos de longitud en la mayoría de los 3, encontramos que la ramificación por incertidumbre es superior, y rara vez requiere cualquier retroceso.6. Resultados experimentales Todos nuestros experimentos se realizaron en Linux (Red Hat 9.0), utilizando una PC Dell con un procesador Intel Pentium 4 de 3GHz y 1 GB de RAM. Dondequiera que usamos CPLEX (por ejemplo, para resolver el LP y como heurística primaria, como se discutió en las secciones anteriores), utilizamos CPlex 10.010. La Figura 6 muestra el rendimiento del tiempo de ejecución de cuatro algoritmos de compensación. Para cada tamaño del mercado enumerado, generamos al azar 10 mercados e intentamos despejarlos utilizando cada uno de los algoritmos. El primer algoritmo es CPlex en la formulación de ciclo completo. Este algoritmo no puede borrar ningún mercado con 1000 pacientes o más. Además, su tiempo de ejecución en los mercados más pequeños que esto es significativamente peor que los otros algoritmos. Los otros algoritmos son las variaciones del enfoque de generación de columna incremental descrito en la Sección 5. Comenzamos con la siguiente configuración (todas las optimizaciones están encendidas): Categoría Configuración de la columna Combinación del intercambio codicioso y heurísticas correspondientes de peso máximo y sembradora de caminata aleatoria (400,000 ciclos). Columna generación una columna a la vez. Gestión de columnas en, con 400,000 columnas límite. Optimity Prover en. Redondeo heurístico primario y búsqueda de árboles CPLEX. Incertidumbre de la regla de ramificación.302 La combinación de estas optimizaciones nos permite despejar fácilmente los mercados con más de 10,000 pacientes. En cada uno de los siguientes dos algoritmos, realizamos una de estas optimizaciones para resaltar su efectividad. Primero, restringimos el sembrador para que solo comience con 10,000 ciclos. Esta configuración es más rápida para instancias más pequeñas, ya que las relajaciones de LP son más pequeñas y más rápidas de resolver. Sin embargo, con 5000 vértices, este efecto comienza a ser compensado por la generación de columnas adicional que debe realizarse. Para un caso más grande, este sembrador restringido es claramente peor. Finalmente, restauramos el sembrador a su configuración optimizada, pero esta vez, eliminamos el Prover de optimización descrito en la Sección 5.2.3. Como en muchos problemas de generación de columnas, el efecto de cola es sustancial. Al aprovechar las propiedades de nuestro problema, logramos borrar un mercado con 10,000 pacientes en aproximadamente el mismo tiempo que de otro modo habría tomado para eliminar un mercado de 6000 pacientes.7. Filmando la tecnología, nuestro algoritmo e implementación reemplazaron a CPlex como el algoritmo de compensación de la Alianza para la Donación Emparejada, uno de los principales intercambios de riñones, en diciembre de 2006. Llevamos a cabo una carrera de partido cada dos semanas, y los primeros trasplantes basados en nuestras soluciones ya se han realizado. Si bien hay (por razones políticas/interpersonales) al menos cuatro intercambios de riñones en los Estados Unidos actualmente, todos entienden que un intercambio nacional no fragmentado unificado salvaría más vidas. Estamos en conversaciones con intercambios de riñón adicionales que están interesados en adoptar nuestra tecnología. De esta manera, nuestra tecnología (y los procesos a su alrededor) servirán como un sustrato que eventualmente ayudará a unificar los intercambios. Al menos la escalabilidad computacional ya no es un obstáculo.8. Conclusión y FUTURURECERECHE en este trabajo Hemos desarrollado los algoritmos exactos más escalables para los intercambios de trueque hasta la fecha, con un enfoque especial en el próximo mercado nacional de intercambio renal en el que los pacientes con enfermedad renal serán emparejados con donantes compatibles al intercambiar sus propios donantes dispuestos pero incompatibles. Con más de 70,000 pacientes que ya esperan un riñón cadáver en los Estados Unidos, este mercado se considera la única forma ética de reducir significativamente las 4.000 muertes por año atribuidas a la enfermedad renal. Nuestro trabajo presenta el primer algoritmo capaz de limpiar estos mercados a escala nacional. Resuelve de manera óptima el problema de compensación de intercambio de riñones con 10,000 pares de donordonee. Por lo tanto, no hay necesidad de recurrir a soluciones aproximadas. La mejor tecnología previa (Vanilla CPlex) no puede manejar instancias más allá de aproximadamente 900 pares de donantes de donantes porque se queda sin memoria. La clave para nuestra mejora es la formulación de problemas incrementales. Adaptamos dos paradigmas para la tarea: generación de restricciones y generación de columnas. Para cada uno, desarrollamos una gran cantidad de técnicas que mejoran sustancialmente el tiempo de ejecución y el uso de la memoria. Algunas de las técnicas utilizan observaciones específicas del dominio, mientras que otras son independientes del dominio. Concluimos que la generación de columnas escala dramáticamente mejor que la generación de restricciones. Para la generación de columnas en el LP, nuestras mejoras incluyen técnicas de fijación de precios, técnicas de siembra de columna, técnicas para demostrar optimización sin tener que traer todas las columnas de precio positivo (y usar otro proceso de generación de columnas en una formulación diferente para hacerlo) y columnaTécnicas de eliminación. Para la búsqueda de ramificación y precio en el programa entero que rodea el LP, nuestras mejoras incluyen heurísticas primarias y también comparamos estrategias de ramificación. Sin lugar a dudas, se podrían usar una mayor ajuste de parámetros y quizás técnicas adicionales de mejora de velocidad para hacer que el algoritmo sea aún más rápido. Nuestro algoritmo también admite varias generalizaciones, como lo desean los intercambios de riñones del mundo real. Estos incluyen múltiples donantes alternativos por paciente, bordes ponderados en el gráfico del mercado (para codificar las diferencias en los años de vida esperados agregados en base a grados de compatibilidad, edad y peso del paciente, etc., así como la probabilidad de incompatibilidad de última hora), Angel-Las cadenas activadas (cadenas de trasplantes desencadenados por donantes altruistas que no tienen pacientes asociados con ellos, cada cadena que termina con un riñón sobrante) y problemas adicionales (como diferentes puntajes para guardar diferentes donantes altruistas o riñones sobrantes paraFuture Match se ejecuta en función del tipo de sangre, el tipo de tejido y la probabilidad de que el órgano no desaparezca del mercado por el donante obteniendo dudas). Debido a que utilizamos una metodología ILP, también podemos apoyar una variedad de limitaciones laterales, que a menudo juegan un papel importante en los mercados de la práctica [19]. También podemos apoyar a forzar parte de la asignación, por ejemplo, este adolescente muy enfermo tiene que obtener un riñón si es posible. Nuestro trabajo ha tratado el intercambio de riñones como un problema por lotes con información completa (al menos a corto plazo, los intercambios de riñones probablemente continuarán funcionando en modo lotes de vez en cuando). Dos instrucciones importantes para el trabajo futuro son abordar explícitamente los aspectos de información limitada y en línea del problema. El aspecto en línea es que Dones y los donantes llegarán al sistema con el tiempo, y puede ser mejor no ejecutar el intercambio miopicalmente óptimo ahora, sino que ahorrará parte del mercado actual para coincidencias posteriores. De hecho, se ha realizado algunos trabajos sobre esto en ciertos entornos restringidos [22, 24]. El aspecto de información limitada es que incluso en el modo por lotes, el gráfico proporcionado como entrada no es completamente correcto: una serie de pares de donantes-donee que se cree que son compatibles como incompatibles cuando se realizan pruebas de último minuto más caras. Por lo tanto, sería deseable realizar una optimización con esto en mente, como la producción de un subgrafio robusto de bajo grado que se probará antes de que se produzca la coincidencia final, o generar un plan de contingencia en caso de falla. Actualmente estamos explorando una serie de preguntas en este sentido, pero ciertamente hay mucho más que hacer. Agradecimientos Agradecemos a los economistas Al Roth y Utku Unver, así como al cirujano de trasplante de riñón Michael Rees, por alertarnos sobre el hecho de que la tecnología previa era inadecuada para el problema de compensación a escala nacional, suministrando conjuntos de datos iniciales y discusiones sobre los detalles delproceso de intercambio renal. También agradecemos a Don Sheehy por llamar nuestra atención la idea del intercambio de zapatos. Este trabajo fue apoyado en parte por la National Science Foundation bajo las subvenciones IIS-0427858 y CCF-0514922.9. Referencias [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh y P. H. Vance.303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Claro Tiempo (segundos) Número de pacientes nuestro algoritmo Nuestro algoritmo con sembradora de columna restringida Nuestro algoritmo sin optimización Formulación de ciclo CPLEX Figura 6: Resultados experimentales: tiempo de ejecución promedio con estándar Estándarbarras de desviación. Branch-and-Price: Generación de columnas para resolver grandes programas enteros. Operations Research, 46: 316-329, mayo-junio de 1998. [2] R. Dechter y J. Pearl. Las mejores estrategias de búsqueda generalizadas y la optimización de A*. Journal of the ACM, 32 (3): 505-536, 1985. [3] F. L. Delmonico. Cambio de riñones: avances en el trasplante de donantes vivos. New England Journal of Medicine, 350: 1812-1814, 2004. [4] J. Edmonds. Camino, árboles y flores. Canadian Journal of Mathematics, 17: 449-467, 1965. [5] M. R. Garey y D. S. Johnson. Computadoras e intratabilidad;Una guía de la teoría de la completitud de NP.1990. [6] S. E. Gentry, D. L. Segev y R. A. Montgomery. Una comparación de poblaciones servidas por donación pareada de riñón y donación emparejada en lista. American Journal of Transplantation, 5 (8): 1914-1921, agosto de 2005. [7] P. Hart, N. Nilsson y B. Raphael. Una base formal para la determinación heurística de rutas de costos mínimos. Transacciones IEEE en Systems Science and Cybernetics, 4 (2): 100-107, 1968. [8] K. Hoffman y M. Padberg. Resolver problemas de programación de la tripulación de la aerolínea por ramificación y corte. Management Science, 39: 657-682, 1993. [9] Intervac.http://intervac-online.com/.[10] Intercambio nacional de zapatos impares.http://www.oddshoe.org/.[11] Peerflix.http://www.peerflix.com.[12] Léelo cambiarlo.http://www.readitswapit.co.uk/.[13] A. E. Roth, T. Sonmez y M. U. Unver. Intercambio de riñón. Quarterly Journal of Economics, 119 (2): 457-488, mayo de 2004. [14] A. E. Roth, T. Sonmez y M. U. Unver. Una casa de compensación de intercambio de riñones en Nueva Inglaterra. American Economic Review, 95 (2): 376-380, mayo de 2005. [15] A. E. Roth, T. Sonmez y M. U. Unver. Intercambio renal eficiente: coincidencia de necesidades en un mercado con preferencias basadas en compatibilidad. American Economic Review, de próxima publicación.[16] E. Rothberg. GABOWS N3 Algoritmo de correspondencia de peso máximo: una implementación. El primer desafío de implementación de Dimacs, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver y F. L. Delmonico. Aumentando la oportunidad de la donación de riñón vivo al igualar para intercambios de dos y tres vías. Transplantation, 81 (5): 773-782, 2006. [18] T. Sandholm. Algoritmos óptimos de determinación del ganador. En subastas combinatorias, Cramton, Shoham y Steinberg, eds. MIT Press, 2006. [19] T. Sandholm y S. Suri. Restricciones laterales y atributos no publicitarios en los mercados. En el taller IJCAI-2001 sobre el razonamiento de restricciones distribuidas, páginas 55-61, Seattle, WA, 2001. Aparecer en juegos y comportamiento económico.[20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb y R. A. Montgomery. Donación de riñón y optimización del uso de órganos de donantes en vivo. Journal of the American Medical Association, 293 (15): 1883-1890, abril de 2005. [21] United Network for Organ Compartir (UNO).http://www.unos.org/.[22] M. U. Unver. Intercambio de riñón dinámico. Hoja de trabajo.[23] Sistema de datos renales de los Estados Unidos (USRDS).http://www.usrds.org/.[24] S. A. Zenios. Control óptimo de un programa de intercambio de kidney emparejado. Management Science, 48 (3): 328-342, marzo de 2002. 304",
    "original_sentences": [
        "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
        "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
        "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
        "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
        "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
        "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
        "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
        "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
        "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
        "We present the first algorithm capable of clearing these markets on a nationwide scale.",
        "The key is incremental problem formulation.",
        "We adapt two paradigms for the task: constraint generation and column generation.",
        "For each, we develop techniques that dramatically improve both runtime and memory usage.",
        "We conclude that column generation scales drastically better than constraint generation.",
        "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
        "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
        "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
        "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
        "INTRODUCTION The role of kidneys is to filter waste from blood.",
        "Kidney failure results in accumulation of this waste, which leads to death in months.",
        "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
        "Several visits are required per week, and each takes several hours.",
        "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
        "Only 12% of dialysis patients survive 10 years [23].",
        "Instead, the preferred treatment is a kidney transplant.",
        "Kidney transplants are by far the most common transplant.",
        "Unfortunately, the demand for kidneys far outstrips supply.",
        "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
        "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
        "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
        "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
        "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
        "In 2005, there were 6,563 live donations in the US.",
        "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
        "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
        "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
        "These markets are examples of barter exchanges.",
        "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
        "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
        "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
        "For many years, there has even been a large shoe exchange in the United States [10].",
        "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
        "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
        "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
        "Construct one vertex for each agent.",
        "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
        "The weight we of e represents the utility to vi of obtaining vjs item.",
        "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
        "The weight wc of a cycle c is the sum of its edge weights.",
        "An exchange is a collection of disjoint cycles.",
        "The weight of an exchange is the sum of its cycle weights.",
        "A social welfare maximizing exchange is one with maximum weight.",
        "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
        "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
        "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
        "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
        "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
        "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
        "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
        "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
        "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
        "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
        "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
        "One approach then might be to look for a good heuristic or approximation algorithm.",
        "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
        "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
        "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
        "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
        "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
        "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
        "The key then is incremental problem formulation.",
        "We adapt two paradigms for the task: constraint generation and column generation.",
        "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
        "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
        "Those results are conservative in two ways.",
        "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
        "It has been reported to us that the market could be almost double this size.",
        "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
        "Allowing length-3 cycles leads to additional significant gains.",
        "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
        "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
        "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
        "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
        "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
        "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
        "Both problems are NP-hard.",
        "Both are best solved using tree search techniques.",
        "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
        "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
        "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
        "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
        "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
        "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
        "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
        "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
        "We also detail in those sections our techniques used to solve those programs on large instances.",
        "Section 6 presents experiments on the various techniques.",
        "Section 7 discusses recent fielding of our algorithm.",
        "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
        "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
        "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
        "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
        "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
        "These probabilities are based on actual real-world population data.",
        "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
        "If the patient and potential donor are incompatible, the two are entered into the market.",
        "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
        "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
        "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
        "This means that the maximum-weight exchange has maximum cardinality.",
        "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
        "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
        "For each market size, the bounds were computed over 10 randomly generated markets.",
        "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
        "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
        "Table 2 gives additional characteristics of the kidney-exchange market.",
        "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
        "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
        "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
        "Theorem 1.",
        "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
        "Proof.",
        "It is clear that this problem is in NP.",
        "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
        "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
        "Instead then, we use the following reduction.",
        "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
        "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
        "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
        "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
        "We will show the construction admits a perfect cycle cover by short cycles.",
        "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
        "Also add the cycle ª xi a, yi b, zi c « .",
        "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
        "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
        "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
        "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
        "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
        "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
        "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
        "Add an edge ev with weight 0 between each agent v and its own item.",
        "At this point, the encoding is a perfect matching.",
        "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
        "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
        "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
        "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
        "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
        "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
        "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
        "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
        "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
        "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
        "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
        "Therefore, we use a tree search with an incremental formulation approach.",
        "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
        "We begin with only a small subset of the constraints in the ILP.",
        "Since this ILP is small, CPLEX can solve its LP relaxation.",
        "We then check whether any of the missing constraints are violated by the fractional solution.",
        "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
        "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
        "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
        "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
        "Clearly, this approach yields an optimal solution once the tree search finishes.",
        "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
        "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
        "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
        "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
        "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
        "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
        "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
        "For any such path, we restrict its sum to be at most L − 1.",
        "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
        "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
        "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
        "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
        "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
        "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
        "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
        "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
        "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
        "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
        "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
        "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
        "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
        "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
        "We now consider the case of short cycles of length at most L, where L ≥ 3.",
        "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
        "These bounds help prune subtrees and guide the search in the usual ways.",
        "Theorem 2.",
        "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
        "Proof.",
        "Consider an optimal solution to the LP relaxation of the cycle formulation.",
        "We show how to construct an equivalent solution in the edge formulation.",
        "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
        "Also, define the value of a vertex in the same manner.",
        "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
        "It remains to show that none of the path constraints are violated.",
        "Let p be any length-L path in the graph.",
        "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
        "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
        "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
        "Consider a graph which is simply a cycle with n edges.",
        "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
        "Hence, the cycle formulation is tighter than the edge formulation.",
        "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
        "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
        "To address this problem, we used an incremental formulation approach.",
        "The first step in LP-guided tree search is to solve the LP relaxation.",
        "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
        "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
        "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
        "We explain this further by way of an example.",
        "Consider the market in Figure 1 with L = 2.",
        "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
        "Let P be the restriction of P containing columns c1 and c3 only.",
        "Let D be the dual of P , that is, D is just D without the constraint c2.",
        "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
        "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
        "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
        "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
        "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
        "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
        "The problem of finding a violated constraint is called the pricing problem.",
        "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
        "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
        "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
        "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
        "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
        "This approach does not scale however.",
        "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
        "This is too many cycles to keep in memory.",
        "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
        "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
        "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
        "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
        "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
        "Even with these pruning rules, column generation is a bottleneck.",
        "Hence, we also implemented the following optimizations.",
        "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
        "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
        "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
        "However, we avoid this for the following reason.",
        "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
        "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
        "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
        "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
        "Of course, we cannot include so many columns that we run out of memory.",
        "We experimented with several column seeders.",
        "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
        "We implemented two heuristics.",
        "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
        "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
        "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
        "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
        "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
        "Our best column seeder constructs a random collection of feasible cycles.",
        "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
        "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
        "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
        "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
        "This last approach outperforms the heuristic seeders described above.",
        "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
        "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
        "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
        "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
        "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
        "There is no good general solution to the tailing-off effect.",
        "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
        "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
        "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
        "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
        "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
        "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
        "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
        "To make this idea work then, we used column generation to solve the edge formulation.",
        "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
        "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
        "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
        "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
        "This leads to memory problems on markets with as few as 4,000 patients.",
        "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
        "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
        "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
        "If this is the case, we selectively remove columns until it is again below the threshold2 .",
        "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
        "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
        "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
        "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
        "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
        "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
        "However, the solutions we find are usually fractional.",
        "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
        "Briefly, this is the idea of branch-and-price.",
        "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
        "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
        "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
        "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
        "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
        "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
        "We also experimented with the A* node selection order [7, 2].",
        "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
        "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
        "These solutions are lower bounds on the final optimal integral solutions.",
        "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
        "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
        "We experimented with two primal heuristics.",
        "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
        "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
        "We also tried using CPLEX as a primal heuristic.",
        "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
        "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
        "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
        "In general, this tree search is much faster than our own.",
        "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
        "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
        "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
        "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
        "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
        "Hence, we make the following optimizations.",
        "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
        "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
        "Secondly, we limit the number of nodes in CPLEXs search tree.",
        "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
        "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
        "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
        "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
        "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
        "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
        "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
        "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
        "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
        "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
        "Figure 6 shows the runtime performance of four clearing algorithms.",
        "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
        "The first algorithm is CPLEX on the full cycle formulation.",
        "This algorithm fails to clear any markets with 1000 patients or more.",
        "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
        "The other algorithms are variations of the incremental column generation approach described in Section 5.",
        "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
        "Column Generation One column at a time.",
        "Column Management On, with 400,000 column limit.",
        "Optimality Prover On.",
        "Primal Heuristic Rounding & CPLEX tree search.",
        "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
        "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
        "First, we restrict the seeder so that it only begins with 10,000 cycles.",
        "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
        "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
        "For larger instance, this restricted seeder is clearly worse.",
        "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
        "As in many column generation problems, the tailing-off effect is substantial.",
        "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
        "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
        "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
        "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
        "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
        "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
        "At least computational scalability is no longer an obstacle. 8.",
        "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
        "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
        "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
        "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
        "Thus there is no need to resort to approximate solutions.",
        "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
        "The key to our improvement is incremental problem formulation.",
        "We adapted two paradigms for the task: constraint generation and column generation.",
        "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
        "Some of the techniques use domain-specific observations while others are domain independent.",
        "We conclude that column generation scales dramatically better than constraint generation.",
        "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
        "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
        "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
        "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
        "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
        "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
        "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
        "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
        "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
        "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
        "In fact, some work has been done on this in certain restricted settings [22, 24].",
        "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
        "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
        "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
        "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
        "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
        "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
        "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
        "Branch-and-price: Column generation for solving huge integer programs.",
        "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
        "Generalized best-first search strategies and the optimality of A*.",
        "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
        "Exchanging kidneys - advances in living-donor transplantation.",
        "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
        "Path, trees, and flowers.",
        "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
        "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
        "A comparison of populations served by kidney paired donation and list paired donation.",
        "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
        "A formal basis for the heuristic determination of minimum cost paths.",
        "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
        "Solving airline crew-scheduling problems by branch-and-cut.",
        "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
        "Kidney exchange.",
        "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
        "A kidney exchange clearinghouse in New England.",
        "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
        "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
        "American Economic Review, forthcoming. [16] E. Rothberg.",
        "Gabows n3 maximum-weight matching algorithm: an implementation.",
        "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
        "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
        "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
        "Optimal winner determination algorithms.",
        "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
        "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
        "Side constraints and non-price attributes in markets.",
        "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
        "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
        "Kidney paired donation and optimizing the use of live donor organs.",
        "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
        "Dynamic kidney exchange.",
        "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
        "Optimal control of a paired-kidney exchange program.",
        "Management Science, 48(3):328-342, March 2002. 304"
    ],
    "error_count": 0,
    "keys": {
        "barter-exchange market": {
            "translated_key": "mercado de intercambio de trueque",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a <br>barter-exchange market</br>, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En un \"mercado de intercambio de trueque\", los agentes (pacientes) buscan intercambiar sus artículos (donantes incompatibles) entre sí."
            ],
            "translated_text": "",
            "candidates": [
                "mercado de intercambio de trueque",
                "mercado de intercambio de trueque"
            ],
            "error": []
        },
        "matching": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-<br>matching</br> algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum <br>matching</br>, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-<br>matching</br>, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-<br>matching</br>, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-<br>matching</br>.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-<br>matching</br> in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect <br>matching</br>.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect <br>matching</br>.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect <br>matching</br> encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution <br>matching</br> the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight <br>matching</br>. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight <br>matching</br> encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight <br>matching</br> code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight <br>matching</br> code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect <br>matching</br> bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect <br>matching</br> bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight <br>matching</br> heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight <br>matching</br> algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by <br>matching</br> for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Por ejemplo, el uso del algoritmo de \"coincidencia\" de EDMONDS \", [4], [20] muestra que un mercado nacional de intercambio por pares (usando solo ciclos de longitud-2) daría como resultado más trasplantes, tiempo de espera reducido y ahorros de $ 750 millones enHeath Care cuesta más de 5 años.",
                "En segundo lugar, los intercambios se restringieron a los ciclos de longitud-2 (porque eso es todo lo que puede modelarse como una \"coincidencia\" máxima, y se resolvieron usando el algoritmo Edmondss).",
                "Para Nphardness, reducimos de 3D- \"coincidencia\", que es el problema de, dados los conjuntos de disjunto x, y y z de tamaño Q, y un conjunto de triples t ⊆ x × y × z, decidiendo si hay un subconjunto disjuntoM de t con tamaño q.",
                "Dada una instancia de 3D- \"coincidencia\", construya un vértice para cada elemento en x, y y z.",
                "Está claro que esta construcción se puede hacer en tiempo polinomial.1 ... 2 3 Y_B ... 2 3 Z_C Y_B^I Z_C^I L-1 L-1 L-1 X_A^I X_A ... 2 31 1 Figura 2: Gadget NP-Completness para Triple Ti y MáximoLongitud del ciclo L. Sea m una \"coincidencia\" 3D perfecta.",
                "Es fácil ver entonces que en una cubierta perfecta, cada gadget Ti contribuye con los ciclos de acuerdo con los casos anteriores: ti ∈ M, o ti /∈ M. Por lo tanto, existe una \"coincidencia\" 3D perfecta en el caso original.4.",
                "En este punto, la codificación es una \"coincidencia\" perfecta.",
                "De ello se deduce que el problema de compensación sin restricciones se puede resolver en el tiempo polinomial al encontrar una \"coincidencia\" perfecta perfecta.",
                "Artículos Agentes V1 V2 V3 V4 V5 E1 E3 E8 E2 V1 V2 V3 V4 V5 E7E6 E5 E4 Figura 3: Codificación perfecta de \"coincidencia\" del mercado en la Figura 1.",
                "Incluso una vez que se cumplan todas las restricciones, puede que no haya una solución integral que \"coincida\" con el límite superior fraccional, e incluso si hubiera, el solucionador LP podría no encontrarla."
            ],
            "translated_text": "",
            "candidates": [
                "pareo",
                "coincidencia",
                "pareo",
                "coincidencia",
                "pareo",
                "coincidencia",
                "coincidencia",
                "coincidencia",
                "pareo",
                "coincidencia",
                "COMACIONADO",
                "coincidencia",
                "pareo",
                "coincidencia",
                "pareo",
                "coincidencia",
                "Combustible",
                "coincidencia",
                "pareo",
                "coincida"
            ],
            "error": []
        },
        "column generation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and <br>column generation</br>.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that <br>column generation</br> scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and <br>column generation</br>.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, <br>column generation</br> based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the <br>column generation</br> based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 <br>column generation</br> for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of <br>column generation</br> is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, <br>column generation</br> is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous <br>column generation</br> iteration.",
                "Finally, it can sometimes be beneficial for <br>column generation</br> to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, <br>column generation</br> requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using <br>column generation</br>, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes <br>column generation</br> to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used <br>column generation</br> to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary <br>column generation</br> not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the <br>column generation</br> iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the <br>column generation</br> enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform <br>column generation</br> (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the <br>column generation</br> phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental <br>column generation</br> approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "<br>column generation</br> One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional <br>column generation</br> that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many <br>column generation</br> problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and <br>column generation</br>.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that <br>column generation</br> scales dramatically better than constraint generation.",
                "For <br>column generation</br> in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: <br>column generation</br> for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Adaptamos dos paradigmas para la tarea: generación de restricciones y \"generación de columnas\".",
                "Concluimos que la \"generación de columnas\" escala drásticamente mejor que la generación de restricciones.",
                "Adaptamos dos paradigmas para la tarea: generación de restricciones y \"generación de columnas\".",
                "En otras palabras, los enfoques basados en la \"generación de columnas\" resultaron ser drásticamente mejores que los enfoques basados en la generación de restricciones.",
                "Por lo tanto, en el resto del documento, nos centraremos en la formulación del ciclo y los enfoques basados en la \"generación de columnas\".5.",
                "Además, para un gráfico con m bordes, la formulación de borde requiere restricciones O (M3), mientras que la formulación del ciclo requiere solo O (M2).5.2 \"Generación de columnas\" para la Tabla 2 de LP muestra cómo el número de ciclos de longitud en la mayoría de los 3 crece con el tamaño del mercado.",
                "La idea de \"generación de columnas\" es comenzar con un LP restringido que contiene solo un pequeño número de columnas (variables, es decir, ciclos), y luego agregar columnas repetidamente hasta que una solución óptima a este LP parcialmente formulada sea una solución óptima aOriginal (también conocido como maestro) LP.",
                "Incluso con estas reglas de poda, la \"generación de columnas\" es un cuello de botella.",
                "De esta manera, evitamos repetir innecesariamente nuestros esfuerzos computacionales de una iteración anterior de \"generación de columnas\".",
                "Finalmente, a veces puede ser beneficioso que la \"generación de columnas\" incluya varias columnas de precio positivo en una iteración, ya que puede ser más rápido generar una segunda columna, una vez que se encuentra la primera."
            ],
            "translated_text": "",
            "candidates": [
                "generación de columna",
                "generación de columnas",
                "generación de columna",
                "generación de columnas",
                "generación de columna",
                "generación de columnas",
                "generación de columna",
                "generación de columnas",
                "Generación de columnas",
                "generación de columnas",
                "generación de columna",
                "Generación de columnas",
                "generación de columna",
                "generación de columnas",
                "generación de columna",
                "generación de columnas",
                "generación de columna",
                "generación de columnas",
                "generación de columna",
                "generación de columnas"
            ],
            "error": []
        },
        "kidney": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide <br>kidney</br> Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national <br>kidney</br>-exchange market, where patients with <br>kidney</br> disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver <br>kidney</br> in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to <br>kidney</br> disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national <br>kidney</br> exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world <br>kidney</br> exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading <br>kidney</br> exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "<br>kidney</br> failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a <br>kidney</br> transplant.",
                "<br>kidney</br> transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving <br>kidney</br> transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor <br>kidney</br>.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with <br>kidney</br> disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor <br>kidney</br>.",
                "However, there are now a few regional <br>kidney</br> exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a <br>kidney</br> exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a <br>kidney</br>. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national <br>kidney</br> exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a <br>kidney</br> exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national <br>kidney</br> exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on <br>kidney</br> exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any <br>kidney</br> exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all <br>kidney</br> exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the <br>kidney</br> exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the <br>kidney</br> exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the <br>kidney</br> exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic <br>kidney</br> exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated <br>kidney</br> exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national <br>kidney</br> exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the <br>kidney</br>-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the <br>kidney</br>-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a <br>kidney</br> exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For <br>kidney</br>-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading <br>kidney</br> exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four <br>kidney</br> exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional <br>kidney</br> exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national <br>kidney</br>-exchange market in which patients with <br>kidney</br> disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver <br>kidney</br> in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to <br>kidney</br> disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the <br>kidney</br> exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world <br>kidney</br> exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over <br>kidney</br>), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a <br>kidney</br> if possible.",
                "Our work has treated the <br>kidney</br> exchange as a batch problem with full information (at least in the short run, <br>kidney</br> exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as <br>kidney</br> transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the <br>kidney</br> exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by <br>kidney</br> paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "<br>kidney</br> exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A <br>kidney</br> exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient <br>kidney</br> exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live <br>kidney</br> donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "<br>kidney</br> paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic <br>kidney</br> exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-<br>kidney</br> exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Algoritmos de compensación para mercados de intercambio de trueque: habilitando a los intercambios de \"riñón\" a nivel nacional David J. Abraham Departamento de Ciencias de la Computación Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Departamento de Ciencias de la Computación Carnegie Mellon University Avrim@cs.cmu.edu Tuomas de Departamento de Ciencias de la Computación de SandholmCarnegie Mellon University sandholm@cs.cmu.edu Resumen en mercados de intercambio de trueque, los agentes buscan intercambiar sus artículos entre sí, para mejorar sus propias utilidades.",
                "Nos centramos principalmente en el próximo mercado nacional de intercambio \"riñón\", donde los pacientes con enfermedad \"renal\" pueden obtener donantes compatibles cambiando sus propios donantes dispuestos pero incompatibles.",
                "Con más de 70,000 pacientes que ya esperan un \"riñón\" de cadáver en los Estados Unidos, este mercado se considera la única forma ética de reducir significativamente las 4.000 muertes por año atribuidas a la enfermedad \"renal\".",
                "Resolverlo exactamente es uno de los principales desafíos para establecer un intercambio nacional de \"riñón\".",
                "Nuestro algoritmo también apoya varias generalizaciones, como lo demandan los intercambios de \"riñón\" del mundo real.",
                "Nuestro algoritmo reemplazó a CPlex como el algoritmo de limpieza de la Alianza para la donación emparejada, uno de los principales intercambios de \"riñón\".",
                "El fracaso \"renal\" da como resultado la acumulación de este desperdicio, lo que conduce a la muerte en meses.",
                "En cambio, el tratamiento preferido es un trasplante de \"riñón\".",
                "Los trasplantes de \"riñón\" son, con mucho, el trasplante más común.",
                "En los Estados Unidos en 2005, 4.052 personas murieron esperando un trasplante de \"riñón\" que salva vidas."
            ],
            "translated_text": "",
            "candidates": [
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "renal",
                "riñón",
                "riñón",
                "renal",
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "renal",
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "riñón",
                "riñón"
            ],
            "error": []
        },
        "transplant": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney <br>transplant</br>.",
                "Kidney transplants are by far the most common <br>transplant</br>.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney <br>transplant</br>.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney <br>transplant</br> surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En cambio, el tratamiento preferido es un \"trasplante\" renal.",
                "Los trasplantes de riñón son, con mucho, el \"trasplante\" más común.",
                "En los Estados Unidos en 2005, 4.052 personas murieron esperando un \"trasplante\" de riñón que salvan vidas.",
                "Agradecimientos Agradecemos a los economistas Al Roth y Utku Unver, así como al cirujano de \"trasplante de riñón\" Michael Rees, por alertarnos sobre el hecho de que la tecnología previa era inadecuada para el problema de compensación a escala nacional, suministrando conjuntos de datos iniciales y discusiones sobre detallesdel proceso de intercambio renal."
            ],
            "translated_text": "",
            "candidates": [
                "trasplante",
                "trasplante",
                "trasplante",
                "trasplante",
                "trasplante",
                "trasplante",
                "trasplante",
                "trasplante de riñón"
            ],
            "error": []
        },
        "market characteristic": {
            "translated_key": "característica del mercado",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "instance generator": {
            "translated_key": "Generador de instancias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard <br>instance generator</br>, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND <br>instance generator</br> We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Por el contrario, las formulaciones naturales del problema de intercambio renal (con L = 3) toman al menos espacio cúbico en el número de pacientes para que incluso modelen y, por lo tanto, la memoria se convierte en un cuello de botella mucho antes de que el tiempo lo haga cuando se usa la búsqueda de árboles estándar, como la rama.-Anly en cplex, para abordar el problema.(En una computadora de 1 GB y un \"generador de instancias\" estándar realista, discutido más adelante, CPlex 10.010 se queda fuera de la memoria en cinco de las diez instancias de 900 pacientes y diez de las diez instancias de 1,000 pacientes que generamos).",
                "Características del mercado y \"generador de instancias\" Probamos los algoritmos en los mercados simulados de intercambio renal, que son generados por un proceso descrito en Saidman et al.[17]."
            ],
            "translated_text": "",
            "candidates": [
                "Generador de instancias",
                "generador de instancias",
                "generador de instancias",
                "generador de instancias"
            ],
            "error": []
        },
        "solution approach": {
            "translated_key": "enfoque de solución",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "edge formulation": {
            "translated_key": "formulación de borde",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN <br>edge formulation</br> In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the <br>edge formulation</br> approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the <br>edge formulation</br> and cycle formulation.",
                "The <br>edge formulation</br> can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the <br>edge formulation</br>.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the <br>edge formulation</br>.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the <br>edge formulation</br> has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the <br>edge formulation</br>.",
                "Additionally, for a graph with m edges, the <br>edge formulation</br> requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the <br>edge formulation</br> encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the <br>edge formulation</br>.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los enfoques de solución basados en una \"formulación de borde\" en esta sección, consideramos una formulación del problema de compensación como un ILP con una variable para cada borde.",
                "Agrega una restricción por ruta de violación P, y además, agrega una restricción para cada ruta con los mismos vértices interiores (sin contar los puntos finales) como p.Esto mejoró la velocidad general.4.3 Rendimiento experimental Resultó que incluso con estas mejoras, el enfoque de \"formulación de borde\" no puede eliminar un intercambio renal con 100 vértices en el tiempo que la formulación del ciclo (descrita más adelante en la Sección 5) puede borrar uno con 10,000 vértices.",
                "Podemos generalizar esta codificación para L. Arbitrary Sea C (L) el conjunto de todos los ciclos de G con la longitud en la mayoría de L. Entonces la siguiente ILP encuentra la cubierta del ciclo de peso máximo por ciclos C (L): Max C∈C(L) WCC sujeto a C: Vi∈C c ≤ 1 ∀vi ∈ V con c ∈ {0, 1} ∀c ∈ C (l) 5.1 Formulación de ciclo de borde vs En esta sección, consideramos los méritos de la \"formulación de borde\"y formulación del ciclo.",
                "La \"formulación de borde\" se puede resolver en el tiempo polinomial cuando no hay restricciones en el tamaño del ciclo.",
                "La relajación de LP de la formulación del ciclo domina débilmente la relajación de LP de la \"formulación de borde\".",
                "Mostramos cómo construir una solución equivalente en la \"formulación de borde\".",
                "Claramente, la relajación de LP de la formulación del ciclo tiene un valor óptimo 0, ya que no hay ciclos de tamaño en la mayoría de L. Sin embargo, la \"formulación de borde\" tiene una solución de tamaño N/2, con cada borde con valor 1/2.",
                "Por lo tanto, la formulación del ciclo es más estricta que la \"formulación de borde\".",
                "Además, para un gráfico con m bordes, la \"formulación de borde\" requiere restricciones O (M3), mientras que la formulación del ciclo requiere solo O (M2).5.2 Generación de columnas para la Tabla 2 de LP muestra cómo el número de ciclos de longitud en la mayoría de los 3 crece con el tamaño del mercado.",
                "Por ejemplo, para un mercado con 10,000 pacientes y 25 millones de bordes, el código de correspondencia especializado de peso máximo [16] fue demasiado lento, y CPLEX se quedó sin memoria en la \"formulación de borde\" que codifica la Sección 4."
            ],
            "translated_text": "",
            "candidates": [
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "formulación de borde",
                "Formulación de borde",
                "formulación de borde"
            ],
            "error": []
        },
        "cycle formulation": {
            "translated_key": "formulación del ciclo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the <br>cycle formulation</br> (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the <br>cycle formulation</br> and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A <br>cycle formulation</br> In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs <br>cycle formulation</br> In this section, we consider the merits of the edge formulation and <br>cycle formulation</br>.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The <br>cycle formulation</br> can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the <br>cycle formulation</br> weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the <br>cycle formulation</br>.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the <br>cycle formulation</br> has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the <br>cycle formulation</br> is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the <br>cycle formulation</br> requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the <br>cycle formulation</br>, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the <br>cycle formulation</br> does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: <br>cycle formulation</br>.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full <br>cycle formulation</br>.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX <br>cycle formulation</br> Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Agrega una restricción por ruta de violación P, y además, agrega una restricción para cada ruta con los mismos vértices interiores (sin contar los puntos finales) como p.Esto mejoró la velocidad general.4.3 Rendimiento experimental Resultó que incluso con estas mejoras, el enfoque de formulación de borde no puede borrar un intercambio de riñón con 100 vértices en el tiempo que la \"formulación del ciclo\" (descrita más adelante en la Sección 5) puede borrar uno con 10,000 vértices.",
                "Por lo tanto, en el resto del documento, nos centraremos en la \"formulación del ciclo\" y los enfoques basados en la generación de columnas.5.",
                "Los enfoques de solución basados en una \"formulación del ciclo\" en esta sección, consideramos una formulación del problema de compensación como un ILP con una variable para cada ciclo.",
                "Podemos generalizar esta codificación para L. Arbitrary Sea C (L) el conjunto de todos los ciclos de G con la longitud en la mayoría de L. Entonces la siguiente ILP encuentra la cubierta del ciclo de peso máximo por ciclos C (L): Max C∈C(L) WCC sujeto a C: Vi∈C c ≤ 1 ∀Vi ∈ V con c ∈ {0, 1} ∀c ∈ C (l) 5.1 Edge vs \"Formulación del ciclo\" En esta sección, consideramos los méritos del bordeformulación y \"formulación del ciclo\".",
                "La \"formulación del ciclo\" se puede resolver en el tiempo polinomial cuando el tamaño del ciclo es como máximo 2.",
                "La relajación de LP de la \"formulación del ciclo\" domina débilmente la relajación de LP de la formulación del borde.",
                "Considere una solución óptima a la relajación de LP de la \"formulación del ciclo\".",
                "Claramente, la relajación de LP de la \"formulación del ciclo\" tiene un valor óptimo 0, ya que no hay ciclos de tamaño en la mayoría de L. Sin embargo, la formulación de borde tiene una solución de tamaño N/2, con cada borde con valor 1/2.",
                "Por lo tanto, la \"formulación del ciclo\" es más estricta que la formulación de borde.",
                "Además, para un gráfico con m bordes, la formulación del borde requiere restricciones O (M3), mientras que la \"formulación del ciclo\" requiere solo O (M2).5.2 Generación de columnas para la Tabla 2 de LP muestra cómo el número de ciclos de longitud en la mayoría de los 3 crece con el tamaño del mercado."
            ],
            "translated_text": "",
            "candidates": [
                "formulación del ciclo",
                "formulación del ciclo",
                "Formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "Formulación del ciclo",
                "formulación del ciclo",
                "Formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo",
                "formulación del ciclo"
            ],
            "error": []
        },
        "barter": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for <br>barter</br> Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In <br>barter</br>-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in <br>barter</br>-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of <br>barter</br> exchanges.",
                "In a <br>barter</br>-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "<br>barter</br> exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a <br>barter</br> exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example <br>barter</br> exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general <br>barter</br> exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for <br>barter</br> exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for <br>barter</br> exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Algoritmos de compensación para mercados de intercambio de \"trueque\": habilitando los intercambios de riñón a nivel nacional David J. Abraham Departamento de Ciencias de la Computación Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Departamento de Ciencias de la Computación Carnegie Mellon University Avrim@cs.cmu.edu Tuomas de Departamento de Informática de Ciencias de la Computación de SandholmCarnegie Mellon University sandholm@cs.cmu.edu Resumen En los mercados de intercambio de \"trueque\", los agentes buscan intercambiar sus artículos entre sí, para mejorar sus propias utilidades.",
                "Además, en los intercambios de \"trueque\" en general, más agentes se ven afectados si uno cae de un ciclo más largo.",
                "Estos mercados son ejemplos de intercambios de \"trueque\".",
                "En un mercado de intercambio de \"trueque\", los agentes (pacientes) buscan intercambiar sus artículos (donantes incompatibles) entre sí.",
                "Los intercambios de \"trueque\" son ubicuos: los ejemplos incluyen Peerflix (DVD) [11], léelo (libros) [12] e Intervac (casas de vacaciones) [9].",
                "Podemos codificar un mercado de intercambio de \"trueque\" como un gráfico dirigido G = (V, E) de la siguiente manera.",
                "Exchange M1 tiene un peso máximo y cardinalidad máxima (es decir, incluye la mayoría de los bordes/vértices).V1 V2 V3 V4 V5 E1 E3 E5 C1 C2 C3 E8 E7 E6E4E2 C4 Figura 1: Ejemplo de mercado de intercambio de \"trueque\".",
                "Si bien esto no es válido para los intercambios generales de \"trueque\", o incluso para todos los mercados de intercambio de riñones, en la Sección 5.2.3 utilizamos la observación de que los ciclos cortos son suficientes para aumentar drásticamente la velocidad de nuestro algoritmo.",
                "En un nivel de alto nivel, el problema de compensación para los intercambios de \"trueque\" es similar al problema de compensación (también conocido como problema de determinación de ganadores) en subastas combinatorias.",
                "Conclusión y finta de investigación en este trabajo Hemos desarrollado los algoritmos exactos más escalables para los intercambios de \"trueque\" hasta la fecha, con un enfoque especial en el próximo mercado nacional de intercambio renal en el que los pacientes con enfermedad renal serán combinados con donantes compatibles al intercambiar sus propios dispuestos pero incompatiblesdonantes."
            ],
            "translated_text": "",
            "candidates": [
                "permuta",
                "trueque",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque",
                "permuta",
                "trueque"
            ],
            "error": []
        },
        "exchange": {
            "translated_key": "intercambio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter <br>exchange</br> Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-<br>exchange</br> markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-<br>exchange</br> market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing <br>exchange</br> when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney <br>exchange</br>.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-<br>exchange</br> market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe <br>exchange</br> in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate <br>exchange</br> to share the cost of buying a single pair of shoes.",
                "We can encode a barter <br>exchange</br> market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An <br>exchange</br> is a collection of disjoint cycles.",
                "The weight of an <br>exchange</br> is the sum of its cycle weights.",
                "A social welfare maximizing <br>exchange</br> is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "<br>exchange</br> M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter <br>exchange</br> market.",
                "The clearing problem is to find a maximum-weight <br>exchange</br> consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney <br>exchange</br>, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney <br>exchange</br> market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to <br>exchange</br>, fewer agents are affected.",
                "For example, last-minute testing in a kidney <br>exchange</br> often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality <br>exchange</br>, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney <br>exchange</br> [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-<br>exchange</br> market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney <br>exchange</br> markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the <br>exchange</br> [15]. (Furthermore, in a simplified theoretical model, any kidney <br>exchange</br> can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney <br>exchange</br> markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney <br>exchange</br> clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney <br>exchange</br> problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney <br>exchange</br> problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney <br>exchange</br> market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney <br>exchange</br> markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney <br>exchange</br> (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight <br>exchange</br> has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality <br>exchange</br> in the kidney-<br>exchange</br> market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality <br>exchange</br>.",
                "Maximum <br>exchange</br> size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on <br>exchange</br> size.",
                "Table 2 gives additional characteristics of the kidney-<br>exchange</br> market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney <br>exchange</br> with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an <br>exchange</br> solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an <br>exchange</br>, and then add the cycles of that <br>exchange</br> to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the <br>exchange</br> with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight <br>exchange</br> with cycles of length at most 3 has the same weight as an unrestricted maximum-weight <br>exchange</br>. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-<br>exchange</br> markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy <br>exchange</br> and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national <br>exchange</br> would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-<br>exchange</br> market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney <br>exchange</br> clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney <br>exchange</br> as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal <br>exchange</br> now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney <br>exchange</br> process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe <br>exchange</br>.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe <br>exchange</br>. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney <br>exchange</br>.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney <br>exchange</br> clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney <br>exchange</br>: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney <br>exchange</br>.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney <br>exchange</br> program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Algoritmos de compensación para los mercados de \"intercambio\" de trueque: habilitando los intercambios de riñón a nivel nacional David J. Abraham Departamento de Ciencias de la Computación Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Departamento de Ciencias de la Computación Carnegie Mellon University Avrim@cs.cmu.edu Tuomas de departamento de ciencias de la informática de SandholmCarnegie Mellon University sandholm@cs.cmu.edu Resumen en trueque- Mercados de \"intercambio\", los agentes buscan intercambiar sus artículos entre sí, para mejorar sus propias utilidades.",
                "Nos centramos principalmente en el próximo mercado nacional de \"intercambio\" de riñón, donde los pacientes con enfermedad renal pueden obtener donantes compatibles cambiando sus propios donantes dispuestos pero incompatibles.",
                "El problema de compensación implica encontrar un bienestar social que maximice el \"intercambio\" cuando se soluciona la longitud máxima de un ciclo.",
                "Resolverlo exactamente es uno de los principales desafíos para establecer un \"intercambio\" nacional de riñón.",
                "En un mercado de \"intercambio\", los agentes (pacientes) buscan intercambiar sus artículos (donantes incompatibles) entre sí.",
                "Durante muchos años, incluso ha habido un gran \"intercambio\" de zapatos en los Estados Unidos [10].",
                "Los amputados de las piernas tienen un \"intercambio\" separado para compartir el costo de comprar un solo par de zapatos.",
                "Podemos codificar un mercado de \"intercambio\" de trueque como un gráfico dirigido g = (v, e) de la siguiente manera.",
                "Un \"intercambio\" es una colección de ciclos disjuntos.",
                "El peso de un \"intercambio\" es la suma de sus pesos de ciclo."
            ],
            "translated_text": "",
            "candidates": [
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio",
                "intercambio"
            ],
            "error": []
        },
        "match": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The <br>match</br> runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 Branch-and-Price Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a branch-and-price tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of branch-and-price.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support branch-and-price (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own branch-and-price algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our branch-and-price search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a <br>match</br> run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future <br>match</br> runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final <br>match</br> is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "Branch-and-price: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Las ejecuciones de \"coincidencia\" se realizan cada dos semanas y ya se han realizado trasplantes basados en nuestras optimizaciones.",
                "Realizamos una ejecución de \"coincidencia\" cada dos semanas, y los primeros trasplantes basados en nuestras soluciones ya se han realizado.",
                "Estos incluyen múltiples donantes alternativos por paciente, bordes ponderados en el gráfico del mercado (para codificar las diferencias en los años de vida esperados agregados en base a grados de compatibilidad, edad y peso del paciente, etc., así como la probabilidad de incompatibilidad de última hora), Angel-Las cadenas activadas (cadenas de trasplantes desencadenados por donantes altruistas que no tienen pacientes asociados con ellos, cada cadena que termina con un riñón sobrante) y problemas adicionales (como diferentes puntajes para guardar diferentes donantes altruistas o riñones sobrantes paraEl futuro \"Match\" funciona en función del tipo de sangre, el tipo de tejido y la probabilidad de que el órgano no desaparezca del mercado por el donante que se dura dudas).",
                "Por lo tanto, sería deseable realizar una optimización con esto en mente, como la producción de un subgrafio robusto de bajo grado que se pruebe antes de que se produzca la \"coincidencia\" final, o para generar un plan de contingencia en caso de falla."
            ],
            "translated_text": "",
            "candidates": [
                "fósforo",
                "coincidencia",
                "fósforo",
                "coincidencia",
                "fósforo",
                "Match",
                "fósforo",
                "coincidencia"
            ],
            "error": []
        },
        "branch-and-price": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges David J. Abraham Computer Science Department Carnegie Mellon University dabraham@cs.cmu.edu Avrim Blum Computer Science Department Carnegie Mellon University avrim@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University sandholm@cs.cmu.edu ABSTRACT In barter-exchange markets, agents seek to swap their items with one another, in order to improve their own utilities.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "We focus mainly on the upcoming national kidney-exchange market, where patients with kidney disease can obtain compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "The clearing problem involves finding a social welfare maximizing exchange when the maximum length of a cycle is fixed.",
                "Long cycles are forbidden, since, for incentive reasons, all transplants in a cycle must be performed simultaneously.",
                "Also, in barter-exchanges generally, more agents are affected if one drops out of a longer cycle.",
                "We prove that the clearing problem with this cycle-length constraint is NP-hard.",
                "Solving it exactly is one of the main challenges in establishing a national kidney exchange.",
                "We present the first algorithm capable of clearing these markets on a nationwide scale.",
                "The key is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop techniques that dramatically improve both runtime and memory usage.",
                "We conclude that column generation scales drastically better than constraint generation.",
                "Our algorithm also supports several generalizations, as demanded by real-world kidney exchanges.",
                "Our algorithm replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges.",
                "The match runs are conducted every two weeks and transplants based on our optimizations have already been conducted.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; F.2 [Analysis of Algorithms and Problem Complexity]: [General] General Terms Algorithms, Economics 1.",
                "INTRODUCTION The role of kidneys is to filter waste from blood.",
                "Kidney failure results in accumulation of this waste, which leads to death in months.",
                "One treatment option is dialysis, in which the patient goes to a hospital to have his/her blood filtered by an external machine.",
                "Several visits are required per week, and each takes several hours.",
                "The quality of life on dialysis can be extremely low, and in fact many patients opt to withdraw from dialysis, leading to a natural death.",
                "Only 12% of dialysis patients survive 10 years [23].",
                "Instead, the preferred treatment is a kidney transplant.",
                "Kidney transplants are by far the most common transplant.",
                "Unfortunately, the demand for kidneys far outstrips supply.",
                "In the United States in 2005, 4,052 people died waiting for a life-saving kidney transplant.",
                "During this time, almost 30,000 people were added to the national waiting list, while only 9,913 people left the list after receiving a deceaseddonor kidney.",
                "The waiting list currently has over 70,000 people, and the median waiting time ranges from 2 to 5 years, depending on blood type.1 For many patients with kidney disease, the best option is to find a living donor, that is, a healthy person willing to donate one of his/her two kidneys.",
                "Although there are marketplaces for buying and selling living-donor kidneys, the commercialization of human organs is almost universally regarded as unethical, and the practice is often explicitly illegal, such as in the US.",
                "However, in most countries, live donation is legal, provided it occurs as a gift with no financial compensation.",
                "In 2005, there were 6,563 live donations in the US.",
                "The number of live donations would have been much higher if it were not for the fact that, frequently, a potential donor 1 Data from the United Network for Organ Sharing [21]. 295 and his intended recipient are blood-type or tissue-type incompatible.",
                "In the past, the incompatible donor was sent home, leaving the patient to wait for a deceased-donor kidney.",
                "However, there are now a few regional kidney exchanges in the United States, in which patients can swap their incompatible donors with each other, in order to each obtain a compatible donor.",
                "These markets are examples of barter exchanges.",
                "In a barter-exchange market, agents (patients) seek to swap their items (incompatible donors) with each other.",
                "These swaps consist of cycles of agents, with each agent receiving the item of the next agent in the cycle.",
                "Barter exchanges are ubiquitous: examples include Peerflix (DVDs) [11], Read It Swap It (books) [12], and Intervac (holiday houses) [9].",
                "For many years, there has even been a large shoe exchange in the United States [10].",
                "People with different-sized feet use this to avoid having to buy two pairs of shoes.",
                "Leg amputees have a separate exchange to share the cost of buying a single pair of shoes.",
                "We can encode a barter exchange market as a directed graph G = (V, E) in the following way.",
                "Construct one vertex for each agent.",
                "Add a weighted edge e from one agent vi to another vj, if vi wants the item of vj.",
                "The weight we of e represents the utility to vi of obtaining vjs item.",
                "A cycle c in this graph represents a possible swap, with each agent in the cycle obtaining the item of the next agent.",
                "The weight wc of a cycle c is the sum of its edge weights.",
                "An exchange is a collection of disjoint cycles.",
                "The weight of an exchange is the sum of its cycle weights.",
                "A social welfare maximizing exchange is one with maximum weight.",
                "Figure 1 illustrates an example market with 5 agents, {v1, v2, . . . , v5}, in which all edges have weight 1.",
                "The market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4 and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal exchanges, namely M1 = {c4} and M2 = {c1, c3}.",
                "Exchange M1 has both maximum weight and maximum cardinality (i.e., it includes the most edges/vertices). v1 v2 v3 v4 v5 e1 e3 e5 c1 c2 c3 e8 e7 e6e4e2 c4 Figure 1: Example barter exchange market.",
                "The clearing problem is to find a maximum-weight exchange consisting of cycles with length at most some small constant L. This cycle-length constraint arises naturally for several reasons.",
                "For example, in a kidney exchange, all operations in a cycle have to be performed simultaneously; otherwise a donor might back out after his incompatible partner has received a kidney. (One cannot write a binding contract to donate an organ.)",
                "This gives rise to a logistical constraint on cycle size: even if all the donors are operated on first and the same personnel and facilities are used to then operate on the donees, a k-cycle requires between 3k and 6k doctors, around 4k nurses, and almost 2k operating rooms.",
                "Due to such resource constraints, the upcoming national kidney exchange market will likely allow only cycles of length 2 and 3.",
                "Another motivation for short cycles is that if the cycle fails to exchange, fewer agents are affected.",
                "For example, last-minute testing in a kidney exchange often reveals new incompatibilities that were not detected in the initial testing (based on which the compatibility graph was constructed).",
                "More generally, an agent may drop out of a cycle if his preferences have changed, or he/she simply fails to fulfill his obligations (such as sending a book to another agent in the cycle) due to forgetfulness.",
                "In Section 3, we show that (the decision version of) the clearing problem is NP-complete for L ≥ 3.",
                "One approach then might be to look for a good heuristic or approximation algorithm.",
                "However, for two reasons, we aim for an exact algorithm based on an integer-linear program (ILP) formulation, which we solve using specialized tree search. • First, any loss of optimality could lead to unnecessary patient deaths. • Second, an attractive feature of using an ILP formulation is that it allows one to easily model a number of variations on the objective, and to add additional constraints to the problem.",
                "For example, if 3-cycles are believed to be more likely to fail than 2-cycles, then one can simply give them a weight that is appropriately lower than 3/2 the weight of a 2-cycle.",
                "Or, if for various (e.g., ethical) reasons one requires a maximum cardinality exchange, one can at least in a second pass find the solution (out of all maximum cardinality solutions) that has the fewest 3-cycles.",
                "Other variations one can solve for include finding various forms of fault tolerant (non-disjoint) collections of cycles in the event that certain pairs that were thought to be compatible turn out to be incompatible after all.",
                "In this paper, we present the first algorithm capable of clearing these markets on a nationwide scale.",
                "Straight-forward ILP encodings are too large to even construct on current hardware - not to talk about solving them.",
                "The key then is incremental problem formulation.",
                "We adapt two paradigms for the task: constraint generation and column generation.",
                "For each, we develop a host of (mainly problemspecific) techniques that dramatically improve both runtime and memory usage. 1.1 Prior Work Several recent papers have used simulations and marketclearing algorithms to explore the impact of a national kidney exchange [13, 20, 6, 14, 15, 17].",
                "For example, using Edmonds maximum-matching algorithm [4], [20] shows that a national pairwise-exchange market (using length-2 cycles only) would result in more transplants, reduced waiting time, and savings of $750 million in heath care costs over 5 years.",
                "Those results are conservative in two ways.",
                "Firstly, the simulated market contained only 4,000 initial patients, with 250 patients added every 3 months.",
                "It has been reported to us that the market could be almost double this size.",
                "Secondly, the exchanges were restricted to length-2 cycles (because that is all that can be modeled as maximum matching, and solved using Edmondss algorithm).",
                "Allowing length-3 cycles leads to additional significant gains.",
                "This has been demonstrated on kidney exchange markets with 100 patients by using CPLEX to solve an integer-program encoding of the clearing problem [15].",
                "In this paper, we 296 present an alternative algorithm for this integer program that can clear markets with over 10,000 patients (and that same number of willing donors).",
                "Allowing cycles of length more than 3 often leads to no improvement in the size of the exchange [15]. (Furthermore, in a simplified theoretical model, any kidney exchange can be converted into one with cycles of length at most 4 [15].)",
                "Whilst this does not hold for general barter exchanges, or even for all kidney exchange markets, in Section 5.2.3 we make use of the observation that short cycles suffice to dramatically increase the speed of our algorithm.",
                "At a high-level, the clearing problem for barter exchanges is similar to the clearing problem (aka winner determination problem) in combinatorial auctions.",
                "In both settings, the idea is to gather all the pertinent information about the agents into a central clearing point and to run a centralized clearing algorithm to determine the allocation.",
                "Both problems are NP-hard.",
                "Both are best solved using tree search techniques.",
                "Since 1999, significant work has been done in computer science and operations research on faster optimal tree search algorithms for clearing combinatorial auctions. (For a recent review, see [18].)",
                "However, the kidney exchange clearing problem (with a limit of 3 or more on cycle size) is different from the combinatorial auction clearing problem in significant ways.",
                "The most important difference is that the natural formulations of the combinatorial auction problem tend to easily fit in memory, so time is the bottleneck in practice.",
                "In contrast, the natural formulations of the kidney exchange problem (with L = 3) take at least cubic space in the number of patients to even model, and therefore memory becomes a bottleneck much before time does when using standard tree search, such as branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer and a realistic standard instance generator, discussed later, CPLEX 10.010 runs out of memory on five of the ten 900patient instances and ten of the ten 1,000-patient instances that we generated.)",
                "Therefore, the approaches that have been developed for combinatorial auctions cannot handle the kidney exchange problem. 1.2 Paper Outline The rest of the paper is organized as follows.",
                "Section 2 discusses the process by which we generate realistic kidney exchange market data, in order to benchmark the clearing algorithms.",
                "Section 3 contains a proof that the market clearing decision problem is NP-complete.",
                "Sections 4 and 5 each contain an ILP formulation of the clearing problem.",
                "We also detail in those sections our techniques used to solve those programs on large instances.",
                "Section 6 presents experiments on the various techniques.",
                "Section 7 discusses recent fielding of our algorithm.",
                "Finally, we present our conclusions in Section 8, and suggest future research directions. 2.",
                "MARKET CHARACTERISTICS AND INSTANCE GENERATOR We test the algorithms on simulated kidney exchange markets, which are generated by a process described in Saidman et al. [17].",
                "This process is based on the extensive nationwide data maintained by the United Network for Organ Sharing (UNOS) [21], so it generates a realistic instance distribution.",
                "Several papers have used variations of this process to demonstrate the effectiveness of a national kidney exchange (extrapolating from small instances or restricting the clearing to 2-cycles) [6, 20, 14, 13, 15, 17].",
                "Briefly, the process involves generating patients with a random blood type, sex, and probability of being tissue-type incompatible with a randomly chosen donor.",
                "These probabilities are based on actual real-world population data.",
                "Each patient is assigned a potential donor with a random blood type and relation to the patient.",
                "If the patient and potential donor are incompatible, the two are entered into the market.",
                "Blood type and tissue type information is then used to decide on which patients and donors are compatible.",
                "One complication, handled by the generator, is that if the patient is female, and she has had a child with her potential donor, then the probability that the two are incompatible increases. (This is because the mother develops antibodies to her partner during pregnancy.)",
                "Finally, although our algorithms can handle more general weight functions, patients have a utility of 1 for compatible donors, since their survival probability is not affected by the choice of donor [3].",
                "This means that the maximum-weight exchange has maximum cardinality.",
                "Table 1 gives lower and upper bounds on the size of a maximum-cardinality exchange in the kidney-exchange market.",
                "The lower bounds were found by clearing the market with length-2 cycles only, while the upper bounds had no restriction on cycle length.",
                "For each market size, the bounds were computed over 10 randomly generated markets.",
                "Note that there can be a large amount of variability in the markets - in one 5000 patient market, less than 1000 patients were in the maximum-cardinality exchange.",
                "Maximum exchange size Length-2 cycles only Arbitrary cycles Patients Mean Max Mean Max 100 4.00e+1 4.60e+1 5.30e+1 6.10e+1 500 2.58e+2 2.80e+2 2.79e+2 2.97e+2 1000 5.35e+2 6.22e+2 5.61e+2 6.30e+2 2000 1.05e+3 1.13e+3 1.09e+3 1.16e+3 3000 1.63e+3 1.70e+3 1.68e+3 1.73e+3 4000 2.15e+3 2.22e+3 2.20e+3 2.27e+3 5000 2.53e+3 2.87e+3 2.59e+3 2.92e+3 6000 3.26e+3 3.32e+3 3.35e+3 3.39e+3 7000 3.80e+3 3.86e+3 3.89e+3 3.97e+3 8000 4.35e+3 4.45e+3 4.46e+3 4.55e+3 9000 4.90e+3 4.96e+3 5.01e+3 5.07e+3 10000 5.47e+3 5.61e+3 5.59e+3 5.73e+3 Table 1: Upper and lower bounds on exchange size.",
                "Table 2 gives additional characteristics of the kidney-exchange market.",
                "Note that a market with 5000 patients can already have more than 450 million cycles of length 2 and 3.",
                "Edges Length 2 & 3 cycles Patients Mean Max Mean Max 100 2.38e+3 2.79e+3 2.76e+3 5.90e+3 500 6.19e+4 6.68e+4 3.96e+5 5.27e+5 1000 2.44e+5 2.68e+5 3.31e+6 4.57e+6 2000 9.60e+5 1.02e+6 2.50e+7 3.26e+7 3000 2.19e+6 2.28e+6 8.70e+7 9.64e+7 4000 3.86e+6 3.97e+6 1.94e+8 2.14e+8 5000 5.67e+6 6.33e+6 3.60e+8 4.59e+8 6000 8.80e+6 8.95e+6 7000 1.19e+7 1.21e+7 8000 1.56e+7 1.59e+7 9000 1.98e+7 2.02e+7 10000 2.44e+7 2.51e+7 Table 2: Market characteristics. 297 3.",
                "PROBLEM COMPLEXITY In this section, we prove that (the decision version of) the market clearing problem with short cycles is NP-complete.",
                "Theorem 1.",
                "Given a graph G = (V, E) and an integer L ≥ 3, the problem of deciding if G admits a perfect cycle cover containing cycles of length at most L is NP-complete.",
                "Proof.",
                "It is clear that this problem is in NP.",
                "For NPhardness, we reduce from 3D-Matching, which is the problem of, given disjoint sets X, Y and Z of size q, and a set of triples T ⊆ X × Y × Z, deciding if there is a disjoint subset M of T with size q.",
                "One straightforward idea is to construct a tripartite graph with vertex sets X ∪ Y ∪ Z and directed edges (xa, yb), (yb, zc), and (zc, xa) for each triple ti = {xa, yb, zc} ∈ T. However, it is not too hard to see that this encoding fails because a perfect cycle cover may include a cycle with no corresponding triple.",
                "Instead then, we use the following reduction.",
                "Given an instance of 3D-Matching, construct one vertex for each element in X, Y and Z.",
                "For each triple, ti = {xa, yb, zc} construct the gadget in Figure 2, which is a similar to one in Garey and Johnson [5, pp 68-69].",
                "Note that the gadgets intersect only on vertices in X ∪ Y ∪ Z.",
                "It is clear that this construction can be done in polynomial time. 1 ... 2 3 y_b ... 2 3 z_c y_b^i z_c^i L−1 L−1 L−1 x_a^i x_a ... 2 31 1 Figure 2: NP-completeness gadget for triple ti and maximum cycle length L. Let M be a perfect 3D-Matching.",
                "We will show the construction admits a perfect cycle cover by short cycles.",
                "If ti = {xa, yb, zc} ∈ M, add from tis gadget the three lengthL cycles containing xa, yb and zc respectively.",
                "Also add the cycle ª xi a, yi b, zi c « .",
                "Otherwise, if ti /∈ M, add the three lengthL cycles containing xi a, yi b and zi c respectively.",
                "It is clear that all vertices are covered, since M partitions X × Y × Z. Conversely, suppose we have a perfect cover by short cycles.",
                "Note that the construction only has short cycles of lengths 3 and L, and no short cycle involves distinct vertices from two different gadgets.",
                "It is easy to see then that in a perfect cover, each gadget ti contributes cycles according to the cases above: ti ∈ M, or ti /∈ M. Hence, there exists a perfect 3D-Matching in the original instance. 4.",
                "SOLUTION APPROACHES BASED ON AN EDGE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each edge.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem with no cycle-length constraints.",
                "Given a market G = (V, E), construct a bipartite graph with one vertex for each agent, and one vertex for each item.",
                "Add an edge ev with weight 0 between each agent v and its own item.",
                "At this point, the encoding is a perfect matching.",
                "Now, for each edge e = (vi, vj) in the original market, add an edge e with weight we between agent vi and the item of vj.",
                "Perfect matchings in this encoding correspond exactly with cycle covers, since whenever an agents item is taken, it must receive some other agents item.",
                "It follows that the unrestricted clearing problem can be solved in polynomial time by finding a maximum-weight perfect matching.",
                "Figure 3 contains the bipartite graph encoding of the example market from Figure 1.",
                "The weight-0 edges are encoded by dashed lines, while the market edges are in bold.",
                "Items Agents v1 v2 v3 v4 v5 e1 e3 e8 e2 v1 v2 v3 v4 v5 e7e6 e5 e4 Figure 3: Perfect matching encoding of the market in Figure 1.",
                "Alternatively, we can solve the problem by encoding it as an ILP with one variable for each edge in the original market graph G. This ILP, given below, has the advantage that it can be extended naturally to deal with cycle length constraints.",
                "Therefore, for the rest of this section, this is the approach we will pursue. max e∈E wee such that for all vi ∈ V , the conservation constraint eout=(vi,vj ) eout − ein=(vj ,vi) ein = 0 and capacity constraint eout=(vi,vj ) eout ≤ 1 are satisfied.",
                "If cycles are allowed to have length at most L, it is easy to see that we only need to make the following changes to the ILP.",
                "For each length-L path (throughout the paper, we do not include cycles in the definition of path) p = ep1 , ep2 , . . . , epL , add a constraint ep1 + ep2 + . . . + epL ≤ L − 1, which precludes path p from being in any feasible solution.",
                "Unfortunately, in a market with only 1000 patients, the number of length-3 paths is in excess of 400 million, and so we cannot even construct this ILP without running out of memory.",
                "Therefore, we use a tree search with an incremental formulation approach.",
                "Specifically, we use CPLEX, though 298 we add constraints as cutting planes during the tree search process.",
                "We begin with only a small subset of the constraints in the ILP.",
                "Since this ILP is small, CPLEX can solve its LP relaxation.",
                "We then check whether any of the missing constraints are violated by the fractional solution.",
                "If so, we generate a set of these constraints, add them to the ILP, and repeat.",
                "Even once all constraints are satisfied, there may be no integral solution matching the fractional upper bound, and even if there were, the LP solver might not find it.",
                "In these cases, CPLEX branches on a variable (we used CPLEXs default branching strategy), and generates one new search node corresponding to each of the children.",
                "At each node of the search tree that is visited, this process of solving the LP and adding constraints is repeated.",
                "Clearly, this approach yields an optimal solution once the tree search finishes.",
                "We still need to explain the details of the constraint seeder (i.e., selecting which constraints to begin with) and the constraint generation (i.e., selecting which violated constraints to include).",
                "We describe these briefly in the next two subsections, respectively. 4.1 Constraint Seeder The main constraint seeder we developed forbids any path of length L − 1 that does not have an edge closing the cycle from its head to its tail.",
                "While it is computationally expensive to find these constraints, their addition focuses the search away from paths that cannot be in the final solution.",
                "We also tried seeding the LP with a random collection of constraints from the ILP. 4.2 Constraint Generation We experimented with several constraint generators.",
                "In each, given a fractional solution, we construct the subgraph of edges with positive value.",
                "This graph is much smaller than the original graph, so we can perform the following computations efficiently.",
                "In our first constraint generator, we simply search for length-L paths with value sum more than L − 1.",
                "For any such path, we restrict its sum to be at most L − 1.",
                "Note that if there is a cycle c with length |c| > L, it could contain as many as |c| violating paths.",
                "In our second constraint generator, we only add one constraint for such cycles: the sum of edges in the cycle can be at most |c|(L − 1)/L .",
                "This generator made the algorithm slower, so we went in the other direction in developing our final generator.",
                "It adds one constraint per violating path p, and furthermore, it adds a constraint for each path with the same interior vertices (not counting the endpoints) as p. This improved the overall speed. 4.3 Experimental performance It turned out that even with these improvements, the edge formulation approach cannot clear a kidney exchange with 100 vertices in the time the cycle formulation (described later in Section 5) can clear one with 10,000 vertices.",
                "In other words, column generation based approaches turned out to be drastically better than constraint generation based approaches.",
                "Therefore, in the rest of the paper, we will focus on the cycle formulation and the column generation based approaches. 5.",
                "SOLUTION APPROACHES BASED ON A CYCLE FORMULATION In this section, we consider a formulation of the clearing problem as an ILP with one variable for each cycle.",
                "This encoding is based on the following classical algorithm for solving the directed cycle cover problem when cycles have length 2.",
                "Given a market G = (V, E), construct a new graph on V with a weight wc edge for each cycle c of length 2.",
                "It is easy to see that matchings in this new graph correspond to cycle covers by length-2 cycles in the original market graph.",
                "Hence, the market clearing problem with L = 2 can be solved in polynomial time by finding a maximum-weight matching. c_1 v 1 v 2 v 3 v 4 c_3c_2 Figure 4: Maximum-weight matching encoding of the market in Figure 1.",
                "We can generalize this encoding for arbitrary L. Let C(L) be the set of all cycles of G with length at most L. Then the following ILP finds the maximum-weight cycle cover by C(L) cycles: max c∈C(L) wcc subject to c:vi∈c c ≤ 1 ∀vi ∈ V with c ∈ {0, 1} ∀c ∈ C(L) 5.1 Edge vs Cycle Formulation In this section, we consider the merits of the edge formulation and cycle formulation.",
                "The edge formulation can be solved in polynomial time when there are no constraints on the cycle size.",
                "The cycle formulation can be solved in polynomial time when the cycle size is at most 2.",
                "We now consider the case of short cycles of length at most L, where L ≥ 3.",
                "Our tree search algorithms use the LP relaxation of these formulations to provide upper bounds on the optimal solution.",
                "These bounds help prune subtrees and guide the search in the usual ways.",
                "Theorem 2.",
                "The LP relaxation of the cycle formulation weakly dominates the LP relaxation of the edge formulation.",
                "Proof.",
                "Consider an optimal solution to the LP relaxation of the cycle formulation.",
                "We show how to construct an equivalent solution in the edge formulation.",
                "For each edge in the graph, set its value as the sum of values of all the cycles of which it is a member.",
                "Also, define the value of a vertex in the same manner.",
                "Because of the cycle constraints, the conservation and capacity constraints of the edge encoding are clearly satisfied.",
                "It remains to show that none of the path constraints are violated.",
                "Let p be any length-L path in the graph.",
                "Since p has L−1 interior vertices (not counting the endpoints), the value sum of these interior vertices is at most L−1.",
                "Now, for any cycle c of length at most L, the number of edges it has in p, which we denote by ec(p), is at most the number of interior vertices it has in p, which we denote by vc(p).",
                "Hence, È e∈p e = È c∈C(L) c∗ec(p) ≤ È c∈C(L) c∗vc(p) = È v∈p v = L−1. 299 The converse of this theorem is not true.",
                "Consider a graph which is simply a cycle with n edges.",
                "Clearly, the LP relaxation of the cycle formulation has optimal value 0, since there are no cycles of size at most L. However, the edge formulation has a solution of size n/2, with each edge having value 1/2.",
                "Hence, the cycle formulation is tighter than the edge formulation.",
                "Additionally, for a graph with m edges, the edge formulation requires O(m3 ) constraints, while the cycle formulation requires only O(m2 ). 5.2 Column Generation for the LP Table 2 shows how the number of cycles of length at most 3 grows with the size of the market.",
                "With one variable per cycle in the cycle formulation, CPLEX cannot even clear markets with 1,000 patients without running out of memory (see Figure 6).",
                "To address this problem, we used an incremental formulation approach.",
                "The first step in LP-guided tree search is to solve the LP relaxation.",
                "Since the cycle formulation does not fit in memory, this LP stage would fail immediately without an incremental formulation approach.",
                "However, motivated by the observation that an exchange solution can include only a tiny fraction of the cycles, we explored the approach of using column (i.e., cycle) generation.",
                "The idea of column generation is to start with a restricted LP containing only a small number of columns (variables, i.e., cycles), and then to repeatedly add columns until an optimal solution to this partially formulated LP is an optimal solution to the original (aka master) LP.",
                "We explain this further by way of an example.",
                "Consider the market in Figure 1 with L = 2.",
                "Figure 5 gives the corresponding master LP, P, and its dual, D. Primal P max 2c1 +2c2 +2c3 s.t. c1 ≤ 1 (v1) c1 +c2 ≤ 1 (v2) +c2 +c3 ≤ 1 (v3) +c3 ≤ 1 (v4) with c1, c2, c3 ≥ 0 Dual D min v1 +v2 +v3 +v4 s.t v1 +v2 ≥ 2 (c1) +v2 +v3 ≥ 2 (c2) +v3 +v4 ≥ 2 (c3) with v1, v2, v3, v4 ≥ 0 Figure 5: Cycle formulation.",
                "Let P be the restriction of P containing columns c1 and c3 only.",
                "Let D be the dual of P , that is, D is just D without the constraint c2.",
                "Because P and D are small, we can solve them to obtain OPT(P ) = OPT(D ) = 4, with cOP T (P ) = c1 = c3 = 1 and vOP T (D ) = v1 = v2 = v3 = v4 = 1 .",
                "While cOP T (P ) must be a feasible solution of P, it turns out (fortunately) that vOP T (D ) is feasible for D, so that OPT(D ) ≥ OPT(D).",
                "We can verify this by checking that vOP T (D ) satisfies the constraints of D not already in Di.e. constraint c2.",
                "It follows that OPT(P ) = OPT(D ) ≥ OPT(D) = OPT(P), and so vOP T (P ) is provably an optimal solution for P, even though P is contains a only strict subset of the columns of P. Of course, it may turn out (unfortunately) that vOP T (D ) is not feasible for D. This can happen above if vOP T (D ) = v1 = 2, v2 = 0, v3 = 0, v4 = 2 .",
                "Although we can still see that OPT(D ) = OPT(D), in general we cannot prove this because D and P are too large to solve.",
                "Instead, because constraint c2 is violated, we add column c2 to P , update D , and repeat.",
                "The problem of finding a violated constraint is called the pricing problem.",
                "Here, the price of a column (cycle in our setting) is the difference between its weight, and the dual-value sum of the cycles vertices.",
                "If any column of P has a positive price, its corresponding constraint is violated and we have not yet proven optimality.",
                "In this case, we must continue generating columns to add to P . 5.2.1 Pricing Problem For smaller instances, we can maintain an explicit collection of all feasible cycles.",
                "This makes the pricing problem easy and efficient to solve: we simply traverse the collection of cycles, and look for cycles with positive price.",
                "We can even find cycles with the most positive price, which are the ones most likely to improve the objective value of restricted LP [1].",
                "This approach does not scale however.",
                "A market with 5000 patients can have as many as 400 million cycles of length at most 3 (see Table 2).",
                "This is too many cycles to keep in memory.",
                "Hence, for larger instances, we have to generate feasible cycles while looking for one with a positive price.",
                "We do this using a depth-first search algorithm on the market graph (see Figure 1).",
                "In order to make this search faster, we explore vertices in non-decreasing value order, as these vertices are more likely to belong to cycles with positive weight.",
                "We also use several pruning rules to determine if the current search path can lead to a positive weight cycle.",
                "For example, at a given vertex in the search, we can prune based on the fact that every vertex we visit from this point onwards will have value at least as great the current vertex.",
                "Even with these pruning rules, column generation is a bottleneck.",
                "Hence, we also implemented the following optimizations.",
                "Whenever the search exhaustively proves that a vertex belongs to no positive price cycle, we mark the vertex and do not use it as the root of a depth-first search until its dual value decreases.",
                "In this way, we avoid unnecessarily repeating our computational efforts from a previous column generation iteration.",
                "Finally, it can sometimes be beneficial for column generation to include several positive-price columns in one iteration, since it may be faster to generate a second column, once the first one is found.",
                "However, we avoid this for the following reason.",
                "If we attempt to find more positive-price columns than there are to be found, or if the columns are far apart in the search space, we end up having to generate and check a large part of the collection of feasible cycles.",
                "In our experiments, we have seen this occur in markets with hundreds of millions of cycles, resulting in prohibitively expensive computation costs. 5.2.2 Column Seeding Even if there is only a small gap to the master LP relaxation, column generation requires many iterations to improve the objective value of the restricted LP.",
                "Each of these 300 iterations is expensive, as we must solve the pricing problem, and re-solve the restricted LP.",
                "Hence, although we could begin with no columns in the restricted LP, it is much faster to seed the LP with enough columns that the optimal objective value is not too far from the master LP.",
                "Of course, we cannot include so many columns that we run out of memory.",
                "We experimented with several column seeders.",
                "In one class of seeder, we use a heuristic to find an exchange, and then add the cycles of that exchange to the initial restricted LP.",
                "We implemented two heuristics.",
                "The first is a greedy algorithm: for each vertex in a random order, if it is uncovered, we attempt to include a cycle containing it and other uncovered vertices.",
                "The other heuristic uses specialized maximum-weight matching code [16] to find an optimal cover by length-2 cycles.",
                "These heuristics perform extremely well, especially taking into account the fact that they only add a small number of columns.",
                "For example, Table 1 shows that an optimal cover by length-2 cycles has almost as much weight as the exchange with unrestricted cycle size.",
                "However, we have enough memory to include hundreds-of-thousands of additional columns and thereby get closer still to the upper bound.",
                "Our best column seeder constructs a random collection of feasible cycles.",
                "Since a market with 5000 patients can have as many as 400 million feasible cycles, it takes too long to generate and traverse all feasible cycles, and so we do not include a uniformly random collection.",
                "Instead, we perform a random walk on the market graph (see, for example, Figure 1), in which, after each step of the walk, we test whether there is an edge back onto our path that forms a feasible cycle.",
                "If we find a cycle, it is included in the restricted LP, and we start a new walk from a random vertex.",
                "In our experiments (see Section 6), we use this algorithm to seed the LP with 400,000 cycles.",
                "This last approach outperforms the heuristic seeders described above.",
                "However, in our algorithm, we use a combination that takes the union of all columns from all three seeders.",
                "In Figure 6, we compare the performance of the combination seeder against the combination without the random collection seeder.",
                "We do not plot the performance of the algorithm without any seeder at all, because it can take hours to clear markets we can otherwise clear in a few minutes. 5.2.3 Proving Optimality Recall that our aim is to find an optimal solution to the master LP relaxation.",
                "Using column generation, we can prove that a restricted-primal solution is optimal once all columns have non-positive prices.",
                "Unfortunately though, our clearing problem has the so-called tailing-off effect [1, Section 6.3], in which, even though the restricted primal is optimal in hindsight, a large number of additional iterations are required in order to prove optimality (i.e., eliminate all positive-price columns).",
                "There is no good general solution to the tailing-off effect.",
                "However, to mitigate this effect, we take advantage of the following problem-specific observation.",
                "Recall from Section 1.1 that, almost always, a maximum-weight exchange with cycles of length at most 3 has the same weight as an unrestricted maximum-weight exchange. (This does not mean that the solver for the unrestricted case will find a solution with short cycles, however.)",
                "Furthermore, the unrestricted clearing problem can be solved in polynomial time (recall Section 4).",
                "Hence, we can efficiently compute an upper bound on the master LP relaxation, and, whenever the restricted primal achieves this upper bound, we have proven optimality without necessarily having to eliminate all positive-price columns!",
                "In order for this to improve the running time of the overall algorithm, we need to be able to clear the unrestricted market in less time than it takes column generation to eliminate all the positive-price cycles.",
                "Even though the first problem is polynomial-time solvable, this is not trivial for large instances.",
                "For example, for a market with 10,000 patients and 25 million edges, specialized maximum-weight matching code [16] was too slow, and CPLEX ran out of memory on the edge formulation encoding from Section 4.",
                "To make this idea work then, we used column generation to solve the edge formulation.",
                "This involves starting with a small random subset of the edges, and then adding positive price edges one-by-one until none remain.",
                "We conduct this secondary column generation not in the original market graph G, but in the perfect matching bipartite graph of Figure 3.",
                "We do this so that we only need to solve the LP, not the ILP, since the integrality gap in the perfect matching bipartite graph is 1-i.e. there always exists an integral solution that achieves the fractional upper bound.",
                "The resulting speedup to the overall algorithm is dramatic, as can be seen in Figure 6. 5.2.4 Column Management If the optimal value of the initial restricted LP P is far from the the master LP P, then a large number of columns are generated before the gap is closed.",
                "This leads to memory problems on markets with as few as 4,000 patients.",
                "Also, even before memory becomes an issue, the column generation iterations become slow because of the additional overhead of solving a larger LP.",
                "To address these issues, we implemented a column management scheme to limit the size of the restricted LP.",
                "Whenever we add columns to the LP, we check to see if it contains more than a threshold number of columns.",
                "If this is the case, we selectively remove columns until it is again below the threshold2 .",
                "As we discussed earlier, only a tiny fraction of all the cycles will end up in the final solution.",
                "It is unlikely that we delete such a cycle, and even if we do, it can always be generated again.",
                "Of course, we must not be too aggressive with the threshold, because doing so may offset the per-iteration performance gains by significantly increasing the number of iterations required to get a suitable column set in the LP at the same time.",
                "There are some columns we never delete, for example those we have branched on (see Section 5.3.2), or those with a non-zero LP value.",
                "Amongst the rest, we delete those with the lowest price, since those correspond to the dual constraints that are most satisfied.",
                "This column management scheme works well and has enabled us to clear markets with 10,000 patients, as seen in Figure 6. 5.3 <br>branch-and-price</br> Search for the ILP Given a large market clearing problem, we can successfully solve its LP relaxation to optimality by using the column generation enhancements described above.",
                "However, the solutions we find are usually fractional.",
                "Thus the next 2 Based on memory size, we set the threshold at 400,000. 301 step involves performing a <br>branch-and-price</br> tree search [1] to find an optimal integral solution.",
                "Briefly, this is the idea of <br>branch-and-price</br>.",
                "Whenever we set a fractional variable to 0 or 1 (branch), both the master LP, and the restriction we are working with, are changed (constrained).",
                "By default then, we need to perform column generation (go through the effort of pricing) at each node of the search tree to prove that the constrained restriction is optimal for constrained master LP. (However, as discussed in Section 5.2.3, we compute the integral upper bound for the root node based on relaxing the cycle length constraint completely, and whenever any nodes LP in the tree achieves that value, we do not need to continue pricing columns at that node.)",
                "For the clearing problem with cycles of length at most 3, we have found that there is rarely a gap between the optimal integral and fractional solutions.",
                "This means we can largely avoid the expensive per node pricing step: whenever the constrained restricted LP has the same optimal value as its parent in the tree search, we can prove LP optimality, as in Section 5.2.3, without having to include any additional columns in the restricted LP.",
                "Although CPLEX can solve ILPs, it does not support <br>branch-and-price</br> (for example, because there can be problemspecific complications involving the interaction between the branching rule and the pricing problem).",
                "Hence, we implemented our own <br>branch-and-price</br> algorithm, which explores the search tree in depth-first order.",
                "We also experimented with the A* node selection order [7, 2].",
                "However, this search strategy requires significantly more memory, which we found was better employed in making the column generation phase faster (see Section 5.2.2).",
                "The remaining major components of the algorithm are described in the next two subsections. 5.3.1 Primal Heuristics Before branching on a fractional variable, we use primal heuristics to construct a feasible integral solution.",
                "These solutions are lower bounds on the final optimal integral solutions.",
                "Hence, whenever a restricted fractional solution is no better than the best integral solution found so far, we prune the current subtree.",
                "A primal heuristic is effective if it is efficient and constructs tight lower bounds.",
                "We experimented with two primal heuristics.",
                "The first is a simple rounding algorithm [8]: include all cycles with fractional value at least 0.5, and then, ensuring feasibility, greedily add the remaining cycles.",
                "Whilst this heuristic is efficient, we found that the lower bounds it constructs rarely enable much pruning.",
                "We also tried using CPLEX as a primal heuristic.",
                "At any given node of the search tree, we can convert the restricted LP relaxation back to an ILP by reintroducing the integrality constraints.",
                "CPLEX has several built-in primal heuristics, which we can apply to this ILP.",
                "Moreover, we can use CPLEXs own tree search to find an optimal integral solution.",
                "In general, this tree search is much faster than our own.",
                "If CPLEX finds an integral solution that matches the fractional upper bound at the root node, we are done.",
                "Otherwise, no such integral solution exists, or we dont yet have the right combination of cycles in the restricted LP.",
                "For kidney-exchange markets, it is usually the second reason that applies (see Sections 5.2.2 and 5.2.4).",
                "Hence, at some point in the tree search, once more columns have been generated as a result of branching, the CPLEX heuristic will find an optimal integral solution.",
                "Although CPLEX tree search is faster than our own, it is not so fast that we can apply it to every node in our search tree.",
                "Hence, we make the following optimizations.",
                "Firstly, we add a constraint that requires the objective value of the ILP to be as large as the fractional target.",
                "If this is not the case, we want to abort and proceed to generate more columns with our <br>branch-and-price</br> search.",
                "Secondly, we limit the number of nodes in CPLEXs search tree.",
                "This is because we have observed that no integral solution exists, CPLEX can take a very long time to prove that.",
                "Finally, we only apply the CPLEX heuristic at a node if it has a sufficiently different set of cycles from its parent.",
                "Using CPLEX as a primal heuristic has a large impact because it makes the search tree smaller, so all the computationally expensive pricing work is avoided at nodes that are not generated in this smaller tree. 5.3.2 Cycle Brancher We experimented with two branching strategies, both of which select one variable per node.",
                "The first strategy, branching by certainty, randomly selects a variable from those whose LP value is closest to 1.",
                "The second strategy, branching by uncertainty, randomly selects a variable whose LP value is closest to 0.5.",
                "In either case, two children of the node are generated corresponding to two subtrees, one in which the variable is set to 0, the other in which it is set to 1.",
                "Our depth-first search always chooses to explore first the subtree in which the value of the variable is closest to its fractional value.",
                "For our clearing problem with cycles of length at most 3, we found branching by uncertainty to be superior, rarely requiring any backtracking. 6.",
                "EXPERIMENTAL RESULTS All our experiments were performed in Linux (Red Hat 9.0), using a Dell PC with a 3GHz Intel Pentium 4 processor, and 1GB of RAM.",
                "Wherever we used CPLEX (e.g., in solving the LP and as a primal heuristic, as discussed in the previous sections), we used CPLEX 10.010.",
                "Figure 6 shows the runtime performance of four clearing algorithms.",
                "For each market size listed, we randomly generated 10 markets, and attempted to clear them using each of the algorithms.",
                "The first algorithm is CPLEX on the full cycle formulation.",
                "This algorithm fails to clear any markets with 1000 patients or more.",
                "Also, its running time on markets smaller than this is significantly worse than the other algorithms.",
                "The other algorithms are variations of the incremental column generation approach described in Section 5.",
                "We begin with the following settings (all optimizations are switched on): Category Setting Column Seeder Combination of greedy exchange and maximum-weight matching heuristics, and random walk seeder (400,000 cycles).",
                "Column Generation One column at a time.",
                "Column Management On, with 400,000 column limit.",
                "Optimality Prover On.",
                "Primal Heuristic Rounding & CPLEX tree search.",
                "Branching Rule Uncertainty. 302 The combination of these optimizations allows us to easily clear markets with over 10,000 patients.",
                "In each of the next two algorithms, we turn one of these optimizations off to highlight its effectiveness.",
                "First, we restrict the seeder so that it only begins with 10,000 cycles.",
                "This setting is faster for smaller instances, since the LP relaxations are smaller, and faster to solve.",
                "However, at 5000 vertices, this effect starts to be offset by the additional column generation that must be performed.",
                "For larger instance, this restricted seeder is clearly worse.",
                "Finally, we restore the seeder to its optimized setting, but this time, remove the optimality prover described in Section 5.2.3.",
                "As in many column generation problems, the tailing-off effect is substantial.",
                "By taking advantage of the properties of our problem, we manage to clear a market with 10,000 patients in about the same time it would otherwise have taken to clear a 6000 patient market. 7.",
                "FIELDING THE TECHNOLOGY Our algorithm and implementation replaced CPLEX as the clearing algorithm of the Alliance for Paired Donation, one of the leading kidney exchanges, in December 2006.",
                "We conduct a match run every two weeks, and the first transplants based on our solutions have already been conducted.",
                "While there are (for political/inter-personal reasons) at least four kidney exchanges in the US currently, everyone understands that a unified unfragmented national exchange would save more lives.",
                "We are in discussions with additional kidney exchanges that are interested in adopting our technology.",
                "This way our technology (and the processes around it) will hopefully serve as a substrate that will eventually help in unifying the exchanges.",
                "At least computational scalability is no longer an obstacle. 8.",
                "CONCLUSIONANDFUTURERESEARCH In this work we have developed the most scalable exact algorithms for barter exchanges to date, with special focus on the upcoming national kidney-exchange market in which patients with kidney disease will be matched with compatible donors by swapping their own willing but incompatible donors.",
                "With over 70,000 patients already waiting for a cadaver kidney in the US, this market is seen as the only ethical way to significantly reduce the 4,000 deaths per year attributed to kidney disease.",
                "Our work presents the first algorithm capable of clearing these markets on a nationwide scale.",
                "It optimally solves the kidney exchange clearing problem with 10,000 donordonee pairs.",
                "Thus there is no need to resort to approximate solutions.",
                "The best prior technology (vanilla CPLEX) cannot handle instances beyond about 900 donor-donee pairs because it runs out of memory.",
                "The key to our improvement is incremental problem formulation.",
                "We adapted two paradigms for the task: constraint generation and column generation.",
                "For each, we developed a host of techniques that substantially improve both runtime and memory usage.",
                "Some of the techniques use domain-specific observations while others are domain independent.",
                "We conclude that column generation scales dramatically better than constraint generation.",
                "For column generation in the LP, our enhancements include pricing techniques, column seeding techniques, techniques for proving optimality without having to bring in all positive-price columns (and using another column-generation process in a different formulation to do so), and column removal techniques.",
                "For the branch-andprice search in the integer program that surrounds the LP, our enhancements include primal heuristics and we also compared branching strategies.",
                "Undoubtedly, further parameter tuning and perhaps additional speed improvement techniques could be used to make the algorithm even faster.",
                "Our algorithm also supports several generalizations, as desired by real-world kidney exchanges.",
                "These include multiple alternative donors per patient, weighted edges in the market graph (to encode differences in expected life years added based on degrees of compatibility, patient age and weight, etc., as well as the probability of last-minute incompatibility), angel-triggered chains (chains of transplants triggered by altruistic donors who do not have patients associated with them, each chain ending with a left-over kidney), and additional issues (such as different scores for saving different altruistic donors or left-over kidneys for future match runs based on blood type, tissue type, and likelihood that the organ would not disappear from the market by the donor getting second thoughts).",
                "Because we use an ILP methodology, we can also support a variety of side constraints, which often play an important role in markets in practice [19].",
                "We can also support forcing part of the allocation, for example, This acutely sick teenager has to get a kidney if possible.",
                "Our work has treated the kidney exchange as a batch problem with full information (at least in the short run, kidney exchanges will most likely continue to run in batch mode every so often).",
                "Two important directions for future work are to explicitly address both online and limited-information aspects of the problem.",
                "The online aspect is that donees and donors will be arriving into the system over time, and it may be best to not execute the myopically optimal exchange now, but rather save part of the current market for later matches.",
                "In fact, some work has been done on this in certain restricted settings [22, 24].",
                "The limited-information aspect is that even in batch mode, the graph provided as input is not completely correct: a number of donor-donee pairs believed to be compatible turn out to be incompatible when more expensive last-minute tests are performed.",
                "Therefore, it would be desirable to perform an optimization with this in mind, such as outputting a low-degree robust subgraph to be tested before the final match is produced, or to output a contingency plan in case of failure.",
                "We are currently exploring a number of questions along these lines but there is certainly much more to be done.",
                "Acknowledgments We thank economists Al Roth and Utku Unver, as well as kidney transplant surgeon Michael Rees, for alerting us to the fact that prior technology was inadequate for the clearing problem on a national scale, supplying initial data sets, and discussions on details of the kidney exchange process.",
                "We also thank Don Sheehy for bringing to our attention the idea of shoe exchange.",
                "This work was supported in part by the National Science Foundation under grants IIS-0427858 and CCF-0514922. 9.",
                "REFERENCES [1] C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance. 303 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 Clearingtime(seconds) Number of patients Our algorithm Our algorithm with restricted column seeder Our algorithm with no optimality prover CPLEX cycle formulation Figure 6: Experimental results: average runtime with standard deviation bars.",
                "<br>branch-and-price</br>: Column generation for solving huge integer programs.",
                "Operations Research, 46:316-329, May-June 1998. [2] R. Dechter and J. Pearl.",
                "Generalized best-first search strategies and the optimality of A*.",
                "Journal of the ACM, 32(3):505-536, 1985. [3] F. L. Delmonico.",
                "Exchanging kidneys - advances in living-donor transplantation.",
                "New England Journal of Medicine, 350:1812-1814, 2004. [4] J. Edmonds.",
                "Path, trees, and flowers.",
                "Canadian Journal of Mathematics, 17:449-467, 1965. [5] M. R. Garey and D. S. Johnson.",
                "Computers and Intractability; A Guide to the Theory of NP-Completeness. 1990. [6] S. E. Gentry, D. L. Segev, and R. A. Montgomery.",
                "A comparison of populations served by kidney paired donation and list paired donation.",
                "American Journal of Transplantation, 5(8):1914-1921, August 2005. [7] P. Hart, N. Nilsson, and B. Raphael.",
                "A formal basis for the heuristic determination of minimum cost paths.",
                "IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. [8] K. Hoffman and M. Padberg.",
                "Solving airline crew-scheduling problems by branch-and-cut.",
                "Management Science, 39:657-682, 1993. [9] Intervac. http://intervac-online.com/. [10] National odd shoe exchange. http://www.oddshoe.org/. [11] Peerflix. http://www.peerflix.com. [12] Read it swap it. http://www.readitswapit.co.uk/. [13] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Kidney exchange.",
                "Quarterly Journal of Economics, 119(2):457-488, May 2004. [14] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "A kidney exchange clearinghouse in New England.",
                "American Economic Review, 95(2):376-380, May 2005. [15] A. E. Roth, T. Sonmez, and M. U. Unver.",
                "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences.",
                "American Economic Review, forthcoming. [16] E. Rothberg.",
                "Gabows n3 maximum-weight matching algorithm: an implementation.",
                "The First DIMACS Implementation Challenge, 1990. [17] S. L. Saidman, A. E. Roth, T. Snmez, M. U. Unver, and F. L. Delmonico.",
                "Increasing the opportunity of live kidney donation by matching for two and three way exchanges.",
                "Transplantation, 81(5):773-782, 2006. [18] T. Sandholm.",
                "Optimal winner determination algorithms.",
                "In Combinatorial Auctions, Cramton, Shoham, and Steinberg, eds.",
                "MIT Press, 2006. [19] T. Sandholm and S. Suri.",
                "Side constraints and non-price attributes in markets.",
                "In IJCAI-2001 Workshop on Distributed Constraint Reasoning, pages 55-61, Seattle, WA, 2001.",
                "To appear in Games and Economic Behavior. [20] D. L. Segev, S. E. Gentry, D. S. Warren, B. Reeb, and R. A. Montgomery.",
                "Kidney paired donation and optimizing the use of live donor organs.",
                "Journal of the American Medical Association, 293(15):1883-1890, April 2005. [21] United Network for Organ Sharing (UNOS). http://www.unos.org/. [22] M. U. Unver.",
                "Dynamic kidney exchange.",
                "Working paper. [23] United States Renal Data System (USRDS). http://www.usrds.org/. [24] S. A. Zenios.",
                "Optimal control of a paired-kidney exchange program.",
                "Management Science, 48(3):328-342, March 2002. 304"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Este esquema de gestión de columnas funciona bien y nos ha permitido limpiar los mercados con 10,000 pacientes, como se ve en la Figura 6. 5.3 Búsqueda de \"ramificación y precio\" de la ILP.Optimización mediante el uso de mejoras de generación de columnas descritas anteriormente.",
                "Por lo tanto, los siguientes 2 basados en el tamaño de la memoria, establecemos el umbral en 400,000.301 El paso implica realizar una búsqueda de árbol \"ramificada y precio\" [1] para encontrar una solución integral óptima.",
                "Brevemente, esta es la idea de \"ramificación y precio\".",
                "Aunque CPLEX puede resolver ILP, no admite \"ramificación y precio\" (por ejemplo, porque puede haber problemas específicos que implican la interacción entre la regla de ramificación y el problema de los precios).",
                "Por lo tanto, implementamos nuestro propio algoritmo de \"ramificación y precio\", que explora el árbol de búsqueda en profundidad primero.",
                "Si este no es el caso, queremos abortar y proceder a generar más columnas con nuestra búsqueda de \"ramificación y precio\".",
                "\"Branch-and-Price\": Generación de columnas para resolver grandes programas enteros."
            ],
            "translated_text": "",
            "candidates": [
                "rama y precio",
                "ramificación y precio",
                "rama y precio",
                "ramificada y precio",
                "rama y precio",
                "ramificación y precio",
                "rama y precio",
                "ramificación y precio",
                "rama y precio",
                "ramificación y precio",
                "rama y precio",
                "ramificación y precio",
                "rama y precio",
                "Branch-and-Price"
            ],
            "error": []
        }
    }
}