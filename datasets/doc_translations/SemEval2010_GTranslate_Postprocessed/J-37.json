{
    "id": "J-37",
    "original_text": "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games. To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation. For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game. We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively. Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree. It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree. Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously. We discuss several electronic commerce applications for GameShrink. To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies. Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics. General Terms: Algorithms, Economics, Theory. 1. INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s). Consequently, the optimal action of one agent can depend on the others. Game theory provides a normative framework for analyzing such strategic situations. In particular, it provides solution concepts that define what rational behavior is in such settings. The most famous and important solution concept is that of Nash equilibrium [36]. It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy. However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium. Games can be classified as either games of perfect information or imperfect information. Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type. To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes. If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed). Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world. In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time. Thus the algorithms for perfect information games do not solve games of imperfect information. For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52]. By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables. Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation. Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game. Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game. The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game. To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes. Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives. They are used in our analysis and abstraction algorithm. By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding. We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3). As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8]. The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44]. For a survey of equilibrium computation in 2-player games, see [53]. Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43]. For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35]. Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ. Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ). If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF . The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule. We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game. We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4). Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree. It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree. We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions. Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game. On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification. However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely. Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game. Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation. One broad application area that has this property is sequential negotiation (potentially over multiple issues). Another broad application area is sequential auctions (potentially over multiple goods). For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation. Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities). Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42]. Our techniques are in no way specific to an application. The main experiment that we present in this paper is on 161 a recreational game. We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world. The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event. Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments. Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5]. Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219]. However, this work was limited to tiny games that could be solved by hand. More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games. Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25]. Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies. Furthermore, the approximations were designed manually by a human expert. Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance. Rhode Island Holdem was invented as a testbed for computational game playing [47]. It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].) We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes. Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns. This is much too large for (current) linear programming algorithms to handle. We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients. We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.) GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations). Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2. We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html. While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before. This is the largest poker game solved to date by over four orders of magnitude. 2. GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form. This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations. A game with ordered signals consists of a finite number of rounds. Within a round, the players play a game on a directed tree (the tree can be different in different rounds). The only uncertainty players face stems from private signals the other players have received and from the unknown future signals. In other words, players observe each others actions, but potentially not natures actions. In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players). For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed). We also assume that the legal actions that a player has are independent of the signals received. For example, in poker, the legal betting actions are independent of the cards received. Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals. For example, in poker, this partial ordering corresponds exactly to the ranking of card hands. Definition 1. A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1. I = {1, . . . , n} is a finite set of players. 2. G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej . Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j . Gj is the stage game for round j. 3. L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4. Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j. Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|. The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ . The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ . We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i . The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ. Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round. Clearly, we require ω(z) = over for all z ∈ Zr . Note that ω is independent of the signals. Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i . We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games. Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player. By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact. We will use this when designing our abstraction techniques. Formally, an information filter is as follows. Definition 2. Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game. Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j. An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl . We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ). A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF . We refer to such games as filtered ordered games. We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o . We have the following simple (but important) result: Proposition 1. A filtered ordered game is an extensive form game satisfying perfect recall. A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall. In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games. Definition 3. A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.) A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i. A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ . A strategy profile is σ = (σ1, . . . , σn). A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn). By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ. Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i. A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29]. Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1. For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3. EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games. We begin by defining a filtered signal tree which represents all of the chance moves in the game. The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game. Definition 4. Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals. The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time. The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk . We denote children of a node x as N(x). In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached. In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game. By melding these situations together, it is possible to arrive at a strategically equivalent smaller game. The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation. Definition 5. Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic. Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ). Definition 6. Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ. Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j. The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ . Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game. Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster. Theorem 2. Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ. Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation. Let σ be a Nash equilibrium of the induced game ΓF . If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF . Proof. For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF . Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium. Fix some player i ∈ I. Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj . Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set. Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z . Each node in an information set corresponds to the possible private signals the other players have received. Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)). In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated. Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .) We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game. Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player. Open circles are chance nodes with the indicated transition probabilities. The root node is the chance node for player 1s card, and the next level is for player 2s card. The payment from player 2 to player 1 is given below each leaf. In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) . The following three claims show that μ as calculated above supports σ as a Nash equilibrium. Claim 1. μ is a valid belief system for ΓF . Claim 2. For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3. For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ. The proofs of Claims 1-3 are in an extended version of this paper [13]. By Claims 1 and 2, we know that condition C2 holds. By Claim 3, we know that condition C1 holds. Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals. In this subsection we show that removing either of these conditions can make our technique invalid. First, we demonstrate a failure when removing the first assumption. Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties. By merging the subtrees beginning at a and b, we get the game on the right in Figure 2. In this game, player 1s only Nash equilibrium strategy is to play left. But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games. Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure. Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1. It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4. GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions. It only needs to analyze the signal tree discussed above, rather than the entire game tree. We first present a subroutine that GameShrink uses. It is a dynamic program for computing the ordered game isomorphic relation. Again, it operates on the signal tree. Algorithm 1. OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1. If ϑ and ϑ have different parents, then return false. 2. If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3. Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4. For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5. Return true if Gϑ,ϑ has a perfect matching; otherwise, return false. By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic. We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic. The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game. Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals). Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time. Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table). The number of nodes, n, in the signal tree is O(|Θ|S ). The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine. So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation. While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree. The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.) The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S ! S! which is a lower bound on the number of nodes. For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S ! S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ). Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree. The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.) See Figure 1. In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree. For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705. Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink. Algorithm 2. GameShrink (Γ) 1. Initialize F to be the identity filter for Γ. 2. For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic?(Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3. Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible. Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2. Thus, we have the following result: Theorem 3. GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations. Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium. The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop. There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game. Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times. As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly). Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« . By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ . Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree. Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation. One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49]. Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set. Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure. This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree. Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching. We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold. One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents. We can precompute these frequencies for every game tree node. This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section). The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry. This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.) We store the histograms in a 2-dimensional database. The first dimension is indexed by the private signals, the second by the public signals. The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ . We efficiently compute this using the subsets colexicographical ordering [6]. Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1. We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5. APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique. This section discusses general techniques for computing approximately optimal strategy profiles. For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy. To illustrate this, suppose we know player 2s planned strategy for some game. We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves. Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node. Thus, we can objectively determine the expected worst-case performance of player 2s strategy. This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.) This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2. Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases. There are many ways in which the penalty function could be defined and implemented. One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold). Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions). This knob also begets an anytime algorithm. One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method. This approach has inherent features which we can leverage into desirable properties in the context of solving games. In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1. There are two versions of the simplex method: the primal simplex and the dual simplex. The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached. Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.) Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively. At any point in time, they can output the best strategies found so far. Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.) Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57]. Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent. One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.) In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution. For example, many interiorpoint path-following algorithms have this property [55, Ch. 5]. We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating). A threshold on can also be used as a termination criterion for using the method as an anytime algorithm. Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6. RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11]. In contrast to our work, those approaches were not for making the game smaller and easier to solve. The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form. The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27]. An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21]. Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10]. The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism. The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations. Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms. However, that definition requires that the games to be tested for weak isomorphism are of the same size. Our focus is totally different: we find strategically equivalent smaller games. Also, their paper does not provide algorithms. Abstraction techniques have been used in artificial intelligence research before. In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]). Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions. A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2]. However, a significant difference to our work is that Sprouts is a game of perfect information. One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18]. In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.) Partition search can lead to substantial speed improvements over α-β-search. However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically. There has been some research on the use of abstraction for imperfect information games. Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players. However, this approach has significant drawbacks. First, it is highly specialized for Texas Holdem. Second, a large amount of expert knowledge and effort was used in constructing the abstraction. Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium. Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7. CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively. We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game. The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree. It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either. Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge. There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48]. Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree. Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously. To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction. We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality. The method also yields bounds on the suboptimality of the resulting strategies. We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes. That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8. REFERENCES [1] W. Ackermann. Zum Hilbertschen Aufbau der reellen Zahlen. Math. Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator. Computer analysis of sprouts. Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell. Some two-person games involving bluffing. PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron. Approximating game-theoretic optimal strategies for full-scale poker. In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron. The challenge of poker. Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as. Combinatorics. Cambridge University Press, 1986. [7] A. Casajus. Weak isomorphism of extensive games. Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng. Settling the complexity of 2-player Nash equilibrium. ECCC, Report No. 150, 2005. [9] V. Chv´atal. Linear Programming. W. H. Freeman & Co., 1983. [10] B. P. de Bruin. Game transformations and game equivalence. Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny. On the strategic equivalence of extensive form games. J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson. Flows in Networks. Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm. Finding equilibria in large sequential games of imperfect information. Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm. Optimal Rhode Island Holdem poker. In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm. A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation. Mimeo, 2006. [16] A. Gilpin and T. Sandholm. A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation. In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg. Partition search. In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg. GIB: Steps toward an expert-level bridge-playing program. In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson. A global Newton method to compute Nash equilibria. J. of Econ. Theory, 110:65-86, 2003. [20] C. A. Knoblock. Automatically generating abstractions for planning. Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens. On the strategic stability of equilibria. Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo. The complexity of two-person zero-sum games in extensive form. Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo. Finding mixed strategies with small supports in extensive form games. International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel. Efficient computation of equilibria for extensive two-person games. Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer. Representations and solutions for game-theoretic problems. Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson. Sequential equilibria. Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn. Extensive games. PNAS, 36:570-576, 1950. [28] H. W. Kuhn. A simplified two-person poker. In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103. Princeton University Press, 1950. [29] H. W. Kuhn. Extensive games and the problem of information. In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216. Princeton University Press, 1953. [30] C. Lemke and J. Howson. Equilibrium points of bimatrix games. Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta. Playing large games using simple strategies. In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman. On state-space abstraction for anytime evaluation of Bayesian networks. SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green. Microeconomic Theory. Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan. Computation of equilibria in finite games. In Handbook of Computational Economics, volume 1, pages 87-142. Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen. Computing sequential equilibria for two-player games. In SODA, pages 107-116, 2006. [36] J. Nash. Equilibrium points in n-person games. Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley. A simple three-person poker game. In Contributions to the Theory of Games, volume 1, pages 105-116. Princeton University Press, 1950. [38] A. Perea. Rationality in extensive form games. Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa. State-space approximations for extensive form games, July 2000. Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham. Simple search methods for finding a Nash equilibrium. In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii. Reduction of a game with complete memory to a matrix game. Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin. Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation. In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer. Mixed-integer programming methods for finding Nash equilibria. In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel. Exponentially many steps for finding a Nash equilibrium in a bimatrix game. In FOCS, pages 258-267, 2004. [45] R. Selten. Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit. Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten. Evolutionary stability in extensive two-person games - correction and further development. Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman. Abstraction methods for game theoretic poker. In Computers and Games, pages 333-345. Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop. Computer bridge: A big win for AI planning. AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan. Efficiency of a good but not linear set union algorithm. Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson. Equivalence of games in extensive form. RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern. Theory of games and economic behavior. Princeton University Press, 1947. [52] B. von Stengel. Efficient computation of behavior strategies. Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel. Computing equilibria for two-person games. In Handbook of Game Theory, volume 3. North Holland, Amsterdam, 2002. [54] R. Wilson. Computing equilibria of two-person games from the extensive form. Management Science, 18(7):448-460, 1972. [55] S. J. Wright. Primal-Dual Interior-Point Methods. SIAM, 1997. 169",
    "original_translation": "Encontrar equilibrios en grandes juegos secuenciales de información imperfecta ∗ Andrew Gilpin Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Gilpin@cs.cmu.edu tuomas de Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Sandholm@cs.cmu.edu.edu.Resumen Encontrar un equilibrio de un juego extenso de información imperfecta es un problema fundamental en la teoría de juegos computacionales, pero las técnicas actuales no se escala a juegos grandes. Para abordar esto, presentamos el isomorfismo del juego ordenado y la transformación de abstracción isomórfica del juego ordenado relacionado. Para un juego secuencial de información imperfecta de múltiples jugadores con acciones observables y un espacio de señal ordenado, demostramos que cualquier equilibrio de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en un equilibrio NASH enel juego original. Presentamos un algoritmo, Gameshrink, para abstraer el juego usando nuestro isomorfismo exhaustivamente. Su complejidad es ˜o (n2), donde n es el número de nodos en una estructura que llamamos el árbol de señal. No es más grande que el árbol de juego, y en los juegos no triviales es drásticamente más pequeño, por lo que Gameshrink tiene tiempo y complejidad espacial sublineal en el tamaño del árbol de juego. Usando Gameshrink, encontramos un equilibrio para un juego de póker con 3.100 millones de nodos más de cuatro órdenes de magnitud más que en el juego de póker más grande resuelto anteriormente. Discutimos varias aplicaciones de comercio electrónico para Gameshrink. Para abordar los juegos aún más grandes, introducimos métodos de aproximación que no preservan el equilibrio, pero sin embargo, el rendimiento (ex post) se puede probar estrategias cercanas a las óptimas. Categorías y descriptores de sujetos: I.2 [Inteligencia artificial], F. [Teoría de la computación], J.4 [Ciencias Sociales y del Comportamiento]: Economía. Términos generales: algoritmos, economía, teoría.1. Introducción en entornos con más de un agente, un resultado de los agentes generalmente se ve afectado por las acciones de los otros agentes. En consecuencia, la acción óptima de un agente puede depender de los demás. La teoría de juegos proporciona un marco normativo para analizar tales situaciones estratégicas. En particular, proporciona conceptos de solución que definen qué comportamiento racional es en tales entornos. El concepto de solución más famoso e importante es el de equilibrio de Nash [36]. Es un perfil de estrategia (una estrategia para cada agente) en el que ningún agente tiene un incentivo para desviarse a una estrategia diferente. Sin embargo, para que el concepto esté operativo, necesitamos técnicas algorítmicas para encontrar un equilibrio. Los juegos se pueden clasificar como juegos de información perfecta o información imperfecta. Chess y Go son ejemplos de los primeros y, hasta hace poco, la mayoría de los juegos de juego han estado en juegos de este tipo. Para calcular una estrategia óptima en un juego de información perfecta, un agente atraviesa el árbol de juego y evalúa nodos individuales. Si el agente puede atravesar todo el árbol de juego, simplemente calcula una estrategia óptima de abajo hacia arriba, utilizando el principio de inducción hacia atrás.1 En términos informáticos, esto se realiza utilizando una búsqueda Minimax (a menudo junto con αβ-poda para reducir el tamaño del árbol de búsqueda y, por lo tanto, mejorar la velocidad). La búsqueda Minimax se ejecuta en tiempo lineal en el tamaño del árbol de juego.2 La característica diferenciadora de los juegos de información imperfecta, como el póker, es que no son completamente observables: cuando es un recurso de agentes para moverse, ella no tiene accesoa toda la información sobre el mundo. En tales juegos, la decisión de qué hacer en un momento en el tiempo generalmente no se puede tomar de manera óptima sin considerar las decisiones en todos los demás puntos (incluidas las de otros caminos de juego) porque esas otras decisiones afectan las probabilidades de estar en diferentes estadosen el momento actual. Por lo tanto, los algoritmos para juegos de información perfectos no resuelven juegos de información imperfecta. Para juegos secuenciales con información imperfecta, uno podría intentar encontrar un equilibrio utilizando la forma normal (matriz), donde cada plan de contingencia del agente es una estrategia pura para el agente.3 Desafortunadamente (incluso si las estrategias equivalentes 1 realmente producen una solución de soluciónEso satisface no solo el concepto de solución de equilibrio de Nash, sino un concepto de solución más fuerte llamado Subgame Perfect Nash Equilibrio [45]. 2 Este tipo de algoritmo todavía no se escala en árboles enormes (como en el ajedrez o GO), sino la jugada de juego efectivaLos agentes se pueden desarrollar incluso entonces mediante la evaluación de nodos intermedios utilizando una evaluación heurística y luego tratando esos nodos como hojas. 3 an -equilibrio en un juego de forma normal con cualquier 160 se reemplazan por una sola estrategia [27]) Esta representación es generalmente exponencial enEl tamaño del árbol de juego [52]. Al observar que uno necesita considerar solo secuencias de movimientos en lugar de estrategias puras [41, 46, 22, 52], uno llega a una representación más compacta, la forma de secuencia, que es lineal en el tamaño del árbol de juego.4 paraJuegos de 2 jugadores, hay una formulación de programación lineal de tamaño polinómico (en el tamaño del árbol de juego) (complementariedad lineal en el caso no cero) basado en la forma de secuencia de tal manera que las estrategias para los jugadores 1 y 2 corresponden aVariables primarias y duales. Por lo tanto, el equilibrio de los juegos de 2 jugadores de tamaño razonable se puede calcular utilizando este método [52, 24, 25] .5 Sin embargo, este enfoque todavía produce enormes problemas de optimización (insoluble) para muchos juegos del mundo real, como el póker.1.1 Nuestro enfoque En este documento, adoptamos un enfoque diferente para abordar el difícil problema de cálculo de equilibrio. En lugar de desarrollar un método de búsqueda de equilibrio per se, desarrollamos una metodología para abstraer automáticamente los juegos de tal manera que cualquier equilibrio en el juego más pequeño (abstracto) corresponde directamente a un equilibrio en el juego original. Por lo tanto, al calcular un equilibrio en el juego más pequeño (usando cualquier algoritmo de búsqueda de equilibrio disponible), podemos construir un equilibrio en el juego original. La motivación es que un equilibrio para el juego más pequeño se puede calcular drásticamente más rápido que para el juego original. Con este fin, presentamos juegos con señales ordenadas (Sección 2), una amplia clase de juegos que tiene suficiente estructura que podamos explotar para fines de abstracción. En lugar de operar directamente en el árbol de juego (algo que encontramos técnicamente desafiante), en su lugar presentamos el uso de filtros de información (Sección 2.1), que cubre la información que recibe cada jugador. Se utilizan en nuestro algoritmo de análisis y abstracción. Al operar solo en el espacio de los filtros, podemos mantener intacta la estructura estratégica del juego, al tiempo que abstrae los detalles del juego de una manera sin pérdidas desde la perspectiva del hallazgo de equilibrio. Presentamos el isomorfismo del juego ordenado para describir situaciones estratégicamente simétricas y la transformación de abstracción isomórfica del juego ordenado para adquirir tales simetrías (Sección 3). Como nuestro principal resultado de equilibrio, tenemos lo siguiente: el número constante de agentes se puede construir en el tiempo cuasipolinomial [31], pero encontrar un equilibrio exacto es complete PPAD incluso en un juego de 2 jugadores [8]. El algoritmo más frecuente para encontrar un equilibrio en un juego de 2 agentes es Lemke-Howson [30], pero toma exponencialmente muchos pasos en el peor de los casos [44]. Para una encuesta de cálculo de equilibrio en juegos de 2 jugadores, ver [53]. Recientemente, se han demostrado que los algoritmos de detección de equilibrio que enumeran los soportes (es decir, conjuntos de estrategias puras que se juegan con probabilidad positiva) en muchos juegos [40], y se han desarrollado algoritmos eficientes de programación de enteros mixtos que buscan en el espacio de soportes [43 [43 [43] Para más de dos jugadores, se han propuesto muchos algoritmos, pero actualmente solo escalan a juegos muy pequeños [19, 34, 40].4 También hubo técnicas tempranas que capitalizaron de diferentes maneras sobre el hecho de que en muchos juegos la gran mayoría de las estrategias puras no se juegan en equilibrio [54, 23].5 Recientemente, este enfoque también se extendió para manejar los equilibrios secuenciales de la computación [26] [35]. Teorema 2 Sea γ un juego con señales ordenadas, y sea F un filtro de información para γ. Sea F un filtro de información construido a partir de F mediante una aplicación de la transformación de abstracción isomórfica del juego ordenado, y sea un perfil de estrategia de equilibrio NASH del juego inducido γf (es decir, el juego γ usando el filtro F). Si σ se construye utilizando las estrategias correspondientes de σ, entonces σ es un equilibrio NASH de γf. La prueba del teorema utiliza una caracterización equivalente de los equilibrios de Nash: σ es un equilibrio de Nash si y solo si existen creencias μ (creencias de jugadores sobre información desconocida) en todos los puntos del juego accesibles por σ de modo que σ es secuencialmente racional (es decir, es decir,, una mejor respuesta) dada μ, donde μ se actualiza usando la regla Bayes. Luego podemos usar el hecho de que σ es un equilibrio de Nash para mostrar que σ es un equilibrio de Nash considerando solo propiedades locales del juego. También damos un algoritmo, Gameshrink, para abstraer el juego usando nuestro isomorfismo exhaustivamente (Sección 4). Su complejidad es ˜o (n2), donde n es el número de nodos en una estructura que llamamos el árbol de señal. No es más grande que el árbol de juego, y en los juegos no triviales es drásticamente más pequeño, por lo que Gameshrink tiene tiempo y complejidad espacial sublineal en el tamaño del árbol de juego. Presentamos varias mejoras de velocidad algorítmicas y de estructura de datos relacionadas (Sección 4.1), y demostramos cómo una simple modificación a nuestro algoritmo produce un algoritmo de aproximación (Sección 5).1.2 Aplicaciones de comercio electrónico Los juegos secuenciales de información imperfecta son ubicuos, por ejemplo, en negociación y en subastas. A menudo, los aspectos del conocimiento de los jugadores no son pertinentes para decidir qué acción debe tomar el jugador en un punto dado del juego. En el extremo trivial, algunos aspectos del conocimiento de los jugadores nunca son pertinentes (por ejemplo, ya sea que esté lloviendo o no no tenga relación con la estrategia de licitación en una subasta de arte), y tales aspectos pueden quedarse completamente fuera de la especificación del modelo. Sin embargo, algunos aspectos pueden ser pertinentes en ciertos estados del juego, mientras que no son pertinentes en otros estados, y por lo tanto no pueden dejarse fuera del modelo por completo. Además, puede ser muy no obvio qué aspectos son pertinentes en los que los estados del juego. Nuestro algoritmo descubre automáticamente qué aspectos son irrelevantes en diferentes estados y elimina esos aspectos del juego, lo que resulta en una representación del juego más compacta y equivalente. Un área de aplicación amplia que tiene esta propiedad es la negociación secuencial (potencialmente sobre múltiples temas). Otra amplia área de aplicación son las subastas secuenciales (potencialmente sobre múltiples bienes). Por ejemplo, en aquellos estados de una subasta de 1 objeto donde el postor A puede inferir que su valoración es mayor que la del Bidder B, el Licitante A puede ignorar toda su información sobre las señales BS, aunque esa información sería relevante para inferir BS exactavaluación. Además, en algunos estados de la subasta, a un postor podría no importarle qué otros postores tienen qué valoraciones, pero se preocupan por qué valoraciones tienen los otros postores en conjunto (ignorando sus identidades). Muchos mecanismos de subasta y negociación secuenciales de grito abierto se encuentran dentro del modelo de juego estudiado en este documento (especificado en detalle más adelante), al igual que otros juegos en el comercio electrónico, como secuencias de ofertas de Take-it O-Leave-It [42] Nuestras técnicas no son de ninguna manera específicas para una aplicación. El experimento principal que presentamos en este documento es en 161 un juego recreativo. Elegimos un juego de póker particular como problema de referencia porque produce un árbol de juego extremadamente complicado y enorme, es un juego de información imperfecta, se especifica completamente como un juego (y los datos están disponibles), y se ha publicado comoUn problema de desafío de otros [47] (hasta donde sabemos, no se han propuesto instancias de problemas de desafío para las aplicaciones de comercio electrónico que requieren resolver juegos secuenciales).1.3 Rhode Island Holdem Poker Poker es un juego de cartas enormemente popular jugado en todo el mundo. La Serie Mundial de Póker de 2005 tenía más de $ 103 millones de dólares en premios totales, incluidos $ 56 millones para el evento principal. Cada vez más, los jugadores de póker compiten en casinos en línea, y las estaciones de televisión transmiten regularmente torneos de póker. El póker ha sido identificado como un área de investigación importante en la IA debido a la incertidumbre derivada de las cartas de oponentes, las acciones futuras de los oponentes y los movimientos casuales, entre otras razones [5]. Casi desde la fundación de los campos, la teoría del juego se ha utilizado para analizar diferentes aspectos del póker [28;37;3;51, pp. 186-219]. Sin embargo, este trabajo se limitó a pequeños juegos que podrían resolverse a mano. Más recientemente, los investigadores de IA han estado aplicando el poder computacional del hardware moderno para calcular estrategias basadas en la teoría de juegos para juegos más grandes. Koller y Pfeffer determinaron las soluciones a los juegos de póker con hasta 140,000 nodos utilizando el formulario de secuencia y la programación lineal [25]. Se han desarrollado aproximaciones a gran escala [4], pero esos métodos no proporcionan ninguna garantía sobre el rendimiento de las estrategias calculadas. Además, las aproximaciones fueron diseñadas manualmente por un experto humano. Nuestro enfoque produce un mecanismo de abstracción automatizado junto con garantías teóricas sobre el rendimiento de las estrategias. Rhode Island Holdem fue inventado como un Bed de Test Bed para el juego computacional [47]. Fue diseñado para que fuera similar en estilo a Texas Holdem, pero no tan grande que la necesidad de estrategias razonablemente inteligentes sería imposible.(Las reglas de Rhode Island Holdem, así como una discusión de cómo Rhode Island Holdem puede modelarse como un juego con señales ordenadas, es decir, encaja en nuestro modelo, está disponible en una versión extendida de este documento [13].) Aplicamos las técnicas desarrolladas en este documento para encontrar una solución exacta (Minax) a Rhode Island Holdem, que tiene un árbol de juego superior a 3.1 mil millones de nodos. La aplicación del formulario de secuencia a Rhode Island Holdem directamente sin abstracción produce un programa lineal con 91,224,226 filas y el mismo número de columnas. Esto es demasiado grande para los algoritmos de programación lineal (actual) para manejar. Utilizamos nuestro algoritmo Gameshrink para reducir esto con una abstracción sin pérdidas, y produjo un programa lineal con 1,237,238 filas y columnas con 50,428,638 coeficientes no cero. Luego aplicamos la eliminación iterada de estrategias dominadas, lo que redujo aún más a 1,190,443 filas y 1,181,084 columnas.(Aplicar la eliminación iterada de estrategias dominadas sin Gameshrink produjo 89,471,986 filas y 89,121,538 columnas, que aún habrían sido prohibitivamente grandes para resolver). Gameshrink requería menos de un segundo para realizar la reducción (es decir, calcular todas las transformaciones de abstracción isomórficas del juego ordenado). Usando un IBM EServer P5 570 de 1.65 GHz con 64 gigabytes de RAM (el solucionador de programa lineal realmente necesitaba 25 gigabytes), lo resolvimos en 7 días y 17 horas usando el método de barrera de punto interior de la versión Cplex 9.1.2. Recientemente demostramos nuestro óptimo jugador de Rhode Island Holdem Poker en la conferencia AAAI-05 [14], y está disponible para jugar en línea en http://www.cs.cmu.edu/ ~ gilpin/gsi.html. Mientras que otros han trabajado en programas de computadora para jugar Rhode Island Holdem [47], no se ha encontrado una estrategia óptima antes. Este es el juego de póker más grande resuelto hasta la fecha en más de cuatro órdenes de magnitud.2. Juegos con señales ordenadas que trabajamos con una clase de juegos ligeramente restringida, en comparación con la generalidad completa de la forma extensa. Esta clase, que llamamos juegos con señales ordenadas, está altamente estructurada, pero aún lo suficientemente general como para capturar una amplia gama de situaciones estratégicas. Un juego con señales ordenadas consiste en un número finito de rondas. Dentro de una ronda, los jugadores juegan un juego en un árbol dirigido (el árbol puede ser diferente en diferentes rondas). La única incertidumbre que enfrentan los jugadores provienen de señales privadas que los otros jugadores han recibido y de las señales futuras desconocidas. En otras palabras, los jugadores observan las acciones de los demás, pero potencialmente no son acciones de naturaleza. En cada ronda, puede haber señales públicas (anunciadas a todos los jugadores) y señales privadas (comunicadas confidencialmente a los jugadores individuales). Para simplificar, suponemos que es el caso en la mayoría de los juegos recreativos, que dentro de cada ronda, el número de señales privadas recibidas es la misma entre los jugadores (esto probablemente podría relajarse). También suponemos que las acciones legales que tiene un jugador son independientes de las señales recibidas. Por ejemplo, en el póker, las acciones de apuestas legales son independientes de las tarjetas recibidas. Finalmente, la suposición más fuerte es que hay un orden parcial sobre conjuntos de señales, y los pagos están aumentando (no necesariamente estrictamente) en estas señales. Por ejemplo, en el póker, este orden parcial corresponde exactamente a la clasificación de las manos de la tarjeta. Un juego con señales ordenadas es una tupla γ = i, g, l, θ, κ, γ, p ,, ω, u donde: 1. I = {1 ,..., n} es un conjunto finito de jugadores.2. G = G1 ,..., GR, GJ = `V J, EJ ´, es una colección finita de árboles dirigidos finitos con nodos v j y bordes EJ. Deje que ZJ denote los nodos de hoja de GJ y que NJ (V) denote los vecinos salientes de V ∈ V J. GJ es el juego escénico para la ronda j.3. L = l1 ,..., LR, LJ: V J \\ ZJ → I Indica qué jugador actúa (elige un borde saliente) en cada nodo interno en la ronda j.4. Θ es un conjunto finito de señales.5. κ = κ1 ,..., κR y γ = γ1 ,..., γr son vectores de enteros no negativos, donde κJ y γj denotan el número de señales públicas y privadas (por jugador), respectivamente, reveladas en la ronda j. Cada señal θ ∈ θ solo puede revelarse una vez, y en cada ronda cada jugador recibe el mismo número de señales privadas, por lo que requerimos PR J = 1 κJ + Nγj ≤ | θ |. La información pública revelada en la redonda J es αJ ∈ θκJ y la información pública revelada en todas las redondas a través de la redonda J es ˜αJ = `α1 ,..., αJ ´. La información privada revelada al jugador i ∈ I en la redonda j es βj i ∈ θγj y la información privada revaluada al jugador i ∈ I en todas las redondeo a la redonda j es ˜βj i = `β1 I ,..., βJ I ´. 162 también escribimos ˜βJ = ˜βJ 1 ,..., ˜βJ n para representar toda la información privada a través de la redonda J, y ~ J I, ˜βJ −i = ˜βJ 1 ,..., ˜βJ I - 1, ˜β J I, ˜βJ I+1 ,..., ˜βJ n es ˜βJ con ˜βJ I reemplazado con ˜β J I. Se dice que la información total revelada a través de la ronda J, ˜αJ, ˜βJ, es legal si no se repiten señales.6. P es una distribución de probabilidad sobre θ, con p (θ)> 0 para todos θ ∈ θ. Las señales se extraen de θ según P sin reemplazo, por lo que si x es el conjunto de señales ya reveladas, entonces p (x | x) = (p (x) p y /∈X P (y) si x /∈ X 0Si x ∈ X. 7. es un orden parcial de subconjuntos de θ y se define para al menos aquellos pares requeridos por u. 8. Ω: rs j = 1 zj → {over, continuar} es una asignación de nodos terminales dentro de unJuego de escenario a uno de dos valores: en cuyo caso el juego termina, o continúa, en cuyo caso el juego continúa a la siguiente ronda. Claramente, requerimos ω (z) = para todos z ∈ Zr. Tenga en cuenta que ω es independiente de las señales. Deje ωj sobre = {z ∈ Zj |Ω (z) = over} y ωj cont = {z ∈ Zj |ω (z) = continuar}.9. u = (u1, ..., ur), uj: j - 1 k = 1 Ωk cont × ωj sobre × j k = 1 θκk × n i = 1 j k = 1 θγk → rn es una función de utilidad tal para cada uno para cada uno para cada uno.j, 1 ≤ j ≤ r, por cada i ∈ I, y para cada ˜z ∈ J - 1 k = 1 ωk cont × ωj, al menos una de las siguientes dos condiciones se mantiene: (a) la utilidad es la señal independiente:Uj I (˜z, ϑ) = UJ I (˜z, ϑ) para todos los legales ϑ, ϑ ∈ J K = 1 θκK × N i = 1 J K = 1 θγK.(b) se define para todas las señales legales (˜αJ, ˜βJ I), (˜αJ, ˜β J I) a través de la redonda J y una utilidad de los jugadores está aumentando en sus señales privadas, todo lo demás igual: ˜αJ, ˜βJ I˜αj, ˜β J I = ⇒ Ui ˜z, ˜αJ, ˜βJ I, ˜βJ −i ≥ UI ˜z, ˜αJ, ˜β J I, ˜βJ −I. Usaremos el término juego con señales ordenadas y el término juego ordenado indistintamente.2.1 Filtros de información En esta subsección, definimos un filtro de información para los juegos ordenados. En lugar de revelar completamente una señal (ya sea pública o privada) a un jugador, la señal pasa por primera vez a través de este filtro, que genera una señal gruesa al jugador. Al variar el filtro aplicado a un juego, podemos obtener una amplia variedad de juegos mientras mantiene intacto el espacio de acción subyacente del juego. Usaremos esto al diseñar nuestras técnicas de abstracción. Formalmente, un filtro de información es el siguiente. Sea γ = I, G, L, θ, κ, γ, P, ω, U sea un juego ordenado. Deje que SJ ⊆ J K = 1 θκK × J K = 1 θγk sea el conjunto de señales legales (es decir, sin señales repetidas) para un jugador a través de la ronda J. Un filtro de información para γ es una colección F = F1 ,..., Fr donde cada FJ es una función FJ: SJ → 2SJ de modo que cada una de las siguientes condiciones se mantenga: 1. (Verdad) (˜J, ˜βJ I) ∈ FJ (˜αJ, ˜βJ I) para todos los legales (˜αJ, ˜βJ I).2. (Independencia) El rango de FJ es una partición de SJ.3. (Preservación de la información) Si dos valores de una señal se distinguen en la Ronda K, entonces se distinguen FPR cada Ronda J> K.Sea MJ = PJ L = 1 κL +γL. Requerimos que para todos los legales (θ1, ..., θmk, ..., θmj) ⊆ θ y (θ1, ..., θmk, ..., θmj) ⊆ θ: (θ1, .., θmk) /∈ Fk (θ1, ..., θmk) = ⇒ (θ1, ..., θmk, ..., θmj) /∈ Fj (θ1, ..., Θmk, ..., θmj). Un juego con señales ordenadas γ y un filtro de información F para γ define un nuevo juego γf. Nos referimos a juegos como juegos ordenados filtrados. Nos quedamos con el juego original si usamos el filtro de identidad FJ ˜αJ, ˜βJ i = n ˜αj, ˜βj i o. Tenemos el siguiente resultado simple (pero importante): Proposición 1. Un juego ordenado filtrado es un juego extenso que satisface el recuerdo perfecto. Una prueba simple procede construyendo un juego de formulario extenso directamente desde el juego ordenado, y demostrando que satisface el recuerdo perfecto. Al determinar los pagos en un juego con señales filtradas, tomamos el promedio sobre todas las señales reales en la clase filtrada, ponderada por la probabilidad de que ocurra cada señal real.2.2 Estrategias y equilibrio de Nash ahora estamos listos para definir estrategias de comportamiento en el contexto de los juegos ordenados filtrados. Una estrategia de comportamiento para el jugador I en la redonda J de γ = I, G, L, θ, κ, γ, P, ω, U con filtro de información F es una distribución de probabilidad sobre posibles acciones, y se define para cada jugador I,Cada ronda j, y cada v ∈ V j \\ zj para lj (v) = i: σj i, v: j - 1 k = 1 Ωk cont × rango fj → Δ n w ∈ V j |(v, w) ∈ Ej o.(Δ (x) es el conjunto de distribuciones de probabilidad en un conjunto finito X.) Una estrategia de comportamiento para el jugador I en la redonda j es σj i = (σj i, v1, ..., σj i, vm) para cada vk ∈ V j \\ zj donde lj (vk) = i. Una estrategia de comportamiento para el jugador I en γ es σi = `σ1 I ,..., σr I ´. Un perfil de estrategia es σ = (σ1, ..., σn). Un perfil de estrategia con σi reemplazado por σi es (σi, σ - i) = (σ1, ..., σi - 1, σi, σi+1, ..., σn). Por un abuso de notación, diremos que el jugador que recibe una recompensa esperada de la interfaz de usuario (σ) cuando todos los jugadores están jugando el perfil de estrategia σ. La estrategia σi se dice que es el jugador es la mejor respuesta a σ - I si para todas las demás estrategias σi para el jugador I tenemos ui (σi, σ - i) ≥ ui (σi, σ - i).σ es un equilibrio de Nash si, para cada jugador I, σi es una mejor respuesta para σ -I. Siempre existe un equilibrio de Nash en juegos finitos de forma extensa [36], y uno existe en estrategias de comportamiento para juegos con un retiro perfecto [29]. Usando estas observaciones, tenemos el siguiente corolario a la Proposición 1: 163 Corolario 1. Para cualquier juego ordenado filtrado, existe un equilibrio de Nash en estrategias de comportamiento.3. Abstracciones de preservación de equilibrio En esta sección, presentamos nuestra técnica principal para reducir el tamaño de los juegos. Comenzamos definiendo un árbol de señal filtrado que representa todos los movimientos de posibilidades en el juego. Los bordes en negrita (es decir, los dos primeros niveles del árbol) en los árboles de juego en la Figura 1 corresponden a los árboles de señal filtrados en cada juego. Asociado con cada juego ordenado γ = I, G, L, θ, κ, γ, P ,, ω, U y Filtro de información F es un árbol de señal filtrado, un árbol dirigido en el que cada nodo corresponde a algunas señales reveladas (filtradas)y los bordes corresponden a revelar señales específicas (filtradas). Los nodos en el árbol de señal filtrado representan el conjunto de todas las señales filtradas reveladas posibles (públicas y privadas) en algún momento. Las señales públicas filtradas reveladas en la ronda J corresponden a los nodos en los niveles de κJ que comienzan en el nivel PJ - 1 K = 1 `κK + NγK ´ y las señales privadas reveladas en la redonda J corresponden a los nodos en los niveles de NγJ que comienzan en el nivel PJK = 1 κK + PJ - 1 K = 1 NγK. Denotamos a los niños de un nodo x como n (x). Además, asociamos pesos con los bordes correspondientes a la probabilidad de que el borde particular sea elegido dado que se alcanzó a su padre. En muchos juegos, hay ciertas situaciones en el juego que se puede considerar como estratégicamente equivalente a otras situaciones en el juego. Al fusionar estas situaciones juntas, es posible llegar a un juego más pequeño estratégicamente equivalente. Las siguientes dos definiciones formalizan esta noción a través de la introducción de la relación isomórfica del juego ordenado y la transformación de abstracción isomórfica del juego ordenado. Dos subárboles que comienzan en los nodos internos x e y de un árbol de señal filtrado se ordenan el juego isomórfica si x e y tienen el mismo padre y hay una biyección f: n (x) → n (y), de modo que para w ∈ N ((x) y v ∈ N (y), v = f (w) implica que los pesos en los bordes (x, w) y (y, v) son los mismos y los subárboles que comienzan en W y V se ordenan el juego isomórficos. Dos hojas (correspondientes a señales filtradas ϑ y ϑ hacia arriba a la ronda R) se ordenan el juego isomórfica si para todas ˜z ∈ R - 1 j = 1 ΩJ cont × ωr Over, ur (˜z, ϑ) = ur (˜z,ϑ). Sea γ = I, G, L, θ, κ, γ, P, ω, U sea un juego ordenado y sea F un filtro de información para γ. Sea ϑ y ϑ dos nodos donde los subárboles en el árbol de señal filtrado inducido correspondiente a los nodos ϑ y ϑ se ordenan el juego isomórficos, y ϑ y ϑ están en cualquier nivelpj - 1 k = 1 `κK + nγk ´ o pj k =1 κK + PJ - 1 K = 1 NγK para alguna ronda J. La transformación de abstracción isomórfica del juego ordenado se da creando un nuevo filtro de información F: F J ight, ˜βJ I = 8 <: FJ ˜αJ, ˜βJ I if ˜αJ, ˜J i /∈ ϑ ∪ ϑ ∪ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ϑ ∪ ϑ ϑ ∪ ϑ ϑif ˜αj, ˜βj i ∈ ϑ ∪ ϑ. La Figura 1 muestra la transformación de abstracción isomórfica del juego ordenado aplicada dos veces a un pequeño juego de póker. El Teorema 2, nuestro principal resultado de equilibrio, muestra cómo la transformación de abstracción isomórfica del juego ordenado puede usarse para calcular los equilibrios más rápido. Sea γ = I, G, L, θ, κ, γ, P, ω, U sea un juego ordenado y F sea un filtro de información para γ. Sea F un filtro de información construido a partir de F mediante una aplicación de la transformación de abstracción isomórfica del juego ordenado. Sea σ un equilibrio NASH del juego inducido γf. Si tomamos σj I, V ˜z, fj ˜αj, ˜βJ i = σ J I, V ˜z, F J ˜αJ, ˜βJ I, σ es un equilibrio NASH de γf. Para un juego de forma extensa, un sistema de creencias μ asigna una probabilidad para cada nodo de decisión x tal quep x∈H μ (x) = 1 para cada información establecida h.Un perfil de estrategia σ es secuencialmente racional en h Sistema de creencias dado μ si UI (σi, σ - i | h, μ) ≥ ui (τi, σ - i | h, μ) para todas las demás estrategias τi, donde i es el reproductorquien controla h.Un resultado básico [33, Proposición 9.C.1] que caracteriza los equilibrios de Nash dicta que σ es un equilibrio de Nash si y solo si hay un sistema de creencias μ tal que para cada información establecida H con PR (H | σ)> 0,Las siguientes dos condiciones tienen: (C1) σ es secuencialmente racional a H dado μ;y (c2) μ (x) = pr (x | σ) Pr (h | σ) para todos x ∈ H.Dado que σ es un equilibrio NASH de γ, existe tal sistema de creencias μ para γf. Usando μ, construiremos un sistema de creencias μ para γ y mostraremos que las condiciones C1 y C2 mantienen, lo que respalda a σ como un equilibrio de Nash. Cada uno de los conjuntos de información en alguna ronda J corresponde a señales filtradas FJ ˜α ∗ J, ˜β ∗ J I, Historia en las primeras rondas J - 1 (Z1, ..., Zj - 1) ∈ J - 1 K = 1ωk cont, e historia hasta ahora en la redonda J, v ∈ V j \\ zj. Sea ˜z = (Z1, ..., Zj - 1, V) Representen todas las acciones del jugador que conducen a este conjunto de información. Por lo tanto, podemos especificar de manera única este conjunto de información utilizando la información FJ ˜α ∗ J, ˜β ∗ J I, ˜z. Cada nodo en un conjunto de información corresponde a las posibles señales privadas que han recibido los otros jugadores. Denota por ˜β algunos legales (FJ (˜αJ, ˜βJ 1), ..., FJ (˜αJ, ˜βJ i - 1), FJ (˜αJ, ˜βJ i+1), ..., FJ(˜αj, ˜βj n)). En otras palabras, existe (˜J, ˜βJ 1, ..., ˜βJ n) tal que (˜αJ, ˜βJ i) ∈ FJ (˜α ∗ J, ˜β ∗ J I), (˜αJ,˜βj k) ∈ Fj (˜αJ, ˜βJ K) para k = I, y no se repiten señales. Usando este conjunto de señales (˜αJ, ˜βJ 1, ..., ˜βJ n), que ˆβ denote (F J (˜αJ, ˜βJ 1), ..., F J (˜αJ, ˜βJi - 1), f j (˜αj, ˜βj i+1), ..., f j (˜αj, ˜βj n). (Abusaremos de la notación y escribiremos F j −i ˆβ = ˆβ). Ahora podemos calcular μ directamente de μ: μ ˆβ |FJ ˜αJ, ˜βJ I, ˜z = 8 >>>>>> <>>>>>>: μ ˆβ |F J ˜αJ, ˜βJ I, ˜z Si fj ˜αJ, ˜βJ I = F J, αJ, ˜βJ I o ˆβ = ˆβ P ∗ μ ˆβ |F j ˜αJ, ˜βJ I, ˜z si fj ˜αJ, ˜βJ i = f J, αJ, ˜βJ I y ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 C B B B B B B B B B B B B B B B C C B B B B B B C B C B B B B CC F B B Bf C B B B B F B F B C B C BF B F B B B B B B B B B B B B B B C F B B B B B B B B C F B B B B B B B C F B B B B B B B B F B B B C B B B B F B F B B 0 0 0 0-1 -1 -1 -1 -1 -1-1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -2-1 -2 -2 -1 -1 -2 -2 -1 -2 -2 -2 1 2 2 1 2 2 1 2 2 2 2 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 22 2 2 2 2., J2 K1 K2 1 1 C B C F B B B BF C B B C BF B F B C B C B C B F B B B B B B B F B F B J1, J2 K1 K2 1 1 1 1 1 J1, J2 K2 J1, J2 K1 0 0 0-1 -1 -1 -1-1 -1 -1 -2 -2 -1 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 2C B B B F B F B -1 -10 0 0 C B B B F B F B -1 -1-1 -2 -2 -2 C B C BF B F B 0 0 0-1 -1 -1 C B C BF B F B J1, J2 J1, J2 J1, J2K1, K2K1, K2 K1, K2 -1 -1 1 2 2 2 2 2 2 2 {{J1, J2}, {K1, K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figura 1: Gameshrink aplicó a un pequeño juego de póker de cuatro cartas (dos jacks y dos reyes). Al lado de cada árbol de juego se encuentra el rango del filtro de información F. Las líneas punteadas denotan conjuntos de información, que están etiquetados por el jugador de control. Los círculos abiertos son nodos casuales con las probabilidades de transición indicadas. El nodo raíz es el nodo casual para la carta del jugador 1, y el siguiente nivel es para la carta del jugador 2S. El pago del jugador 2 al jugador 1 se da debajo de cada hoja. En este ejemplo, el algoritmo reduce el árbol de juego de 53 nodos a 19 nodos.donde p ∗ = PR (ˆβ | F J (˜αJ, ˜β J I)) PR (ˆβ | F J (˜αJ, ˜β J I))). Las siguientes tres afirmaciones muestran que μ como se calcula anteriormente admite σ como un equilibrio de Nash. Reclamación 1. μ es un sistema de creencias válido para γF. Para todas las configuraciones de información H con Pr (H | σ)> 0, μ (x) = PR (x | σ) Pr (H | σ) para todos x ∈ H.Reclamación 3. Para todos los conjuntos de información H con PR (H | σ)> 0, σ es secuencialmente racional en H dado μ. Las pruebas de reclamos 1-3 están en una versión extendida de este documento [13]. Por reclamos 1 y 2, sabemos que la condición C2 tiene. Por reclamo 3, sabemos que la condición C1 tiene. Por lo tanto, σ es un equilibrio de Nash.3.1 No trivialidad de generalizar más allá de este modelo Nuestro modelo no captura juegos secuenciales generales de información imperfecta porque está restringida de dos maneras (como se discutió anteriormente): 1) Existe una estructura especial que conecta las acciones del jugador y las acciones casuales (para uno,Se supone que los jugadores observan las acciones de los demás, pero las acciones de naturaleza pueden no ser observables públicamente), y 2) hay un orden común de señales. En esta subsección mostramos que eliminar cualquiera de estas condiciones puede hacer que nuestra técnica sea inválida. Primero, demostramos una falla al eliminar la primera suposición. Considere el juego en la Figura 2.6 Los nodos A y B están en el mismo conjunto de información, tienen el mismo nodo padre (casual), tienen subárboles isomórficos con los mismos pagos, y los nodos C y D también tienen propiedades estructurales similares. Al fusionar los subárboles que comienzan en A y B, obtenemos el juego a la derecha en la Figura 2. En este juego, la estrategia de equilibrio NASH de Player 1s es jugar a la izquierda. Pero en el juego original, el jugador 1 sabe que el nodo C nunca será alcanzado, por lo que debería jugar correctamente en ese conjunto de información.1/4 1/4 1/4 1/4 2 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 2 1 1 2 3 0 3 0 A B 2 2 22 10-10 C D Figura 2: Ejemplo que ilustra la dificultad para desarrollar una teoría de las abstracciones de preservación de equilibrio para los juegos generales de forma extensa. Eliminar la segunda suposición (que las funciones de utilidad se basan en un orden común de señales) también puede causar falla. Considere un juego simple de tres tarjetas con un mazo que contiene dos Jacks (J1 y J2) y un Rey (K), donde la función de utilidad del jugador 1 se basa en el orden 6, agradecemos a Albert Xin Jiang por proporcionar este ejemplo.165 K J1 ∼ J2 Pero la función de utilidad del jugador 2 se basa en el orden J2 K J1. Es fácil verificar que en el juego abstraído (donde el jugador 1 trata a J1 y J2 como equivalente), el equilibrio Nash no corresponde a un equilibrio de Nash en el juego original.7 4. Gameshrink: un algoritmo eficiente para calcular las transformaciones de abstracción isomórficas ordenadas esta sección presenta un algoritmo, Gameshrink, para realizar las abstracciones. Solo necesita analizar el árbol de señal discutido anteriormente, en lugar de todo el árbol de juego. Primero presentamos una subrutina que usa Gameshrink. Es un programa dinámico para calcular la relación isomórfica del juego ordenado. Nuevamente, funciona en el árbol de la señal. ¿OrdenGameisomorphic?(Γ, ϑ, ϑ) 1. Si ϑ y ϑ tienen padres diferentes, entonces regrese falso.2. Si ϑ y ϑ son ambas hojas del árbol de señal: (a) si ur (ϑ | ˜z) = ur (ϑ | ˜z) para todos ˜z ∈ R - 1 j = 1 ΩJ cont × ωr, luego regreseverdadero.(b) De lo contrario, regrese falso.3. Cree un gráfico bipartito Gϑ, ϑ = (V1, V2, E) con V1 = N (ϑ) y V2 = N (ϑ).4. Para cada v1 ∈ V1 y V2 ∈ V2: si ordene elGameIsomórfica?(Γ, V1, V2) Crear borde (V1, V2) 5. Regrese verdadero si Gϑ, ϑ tiene una coincidencia perfecta;De lo contrario, devuelva falso. Al evaluar este programa dinámico de abajo hacia arriba, el algoritmo 1 determina, en el tiempo polinomio en el tamaño del árbol de señal, ya sea que cualquier par de nodos de misma profundidad de igual profundidad X e Y se ordenen el juego isomórfica. Podemos acelerar aún más este cálculo examinando solo los nodos con el mismo padre, ya que sabemos (del paso 1) que no se ordenan los nodos con diferentes padres isomórficos. La prueba en el paso 2 (a) se puede calcular en el tiempo O (1) consultando la relación a partir de la especificación del juego. ¿Cada llamada a OrderedGameisomorphic?Realiza como máximo un cálculo de coincidencia perfecto en un gráfico bipartito con nodos O (| θ |) y bordes O (| θ | 2) (recuerde que θ es el conjunto de señales). Usando el algoritmo de Ford-Fulkerson [12] para encontrar una coincidencia máxima, esto lleva tiempo o (| θ | 3). Sea S el número máximo de señales posiblemente reveladas en el juego (por ejemplo, en Rhode Island Holdem, S = 4 porque cada uno de los dos jugadores tiene una carta en la mano, además, hay dos cartas en la mesa). El número de nodos, n, en el árbol de señal es o (| θ | s). ¿El programa dinámico visita cada nodo en el árbol de señal, con cada visita que requiere o (| θ | 2) llamas al ORDENDGAMEISOMORFICO?rutina. Entonces, se necesita O (| θ | S | θ | 3 | θ | 2) = O (| θ | S+5) Tiempo para calcular toda la relación isomórfica del juego ordenado. Si bien esto es exponencial en el número de señales reveladas, ahora mostramos que es polinomio en el tamaño del árbol de señal y, por lo tanto, polinomio en el tamaño del árbol del juego 7, agradecemos a una persona anónima por este ejemplo.Porque el árbol de la señal es más pequeño que el árbol de juego. El número de nodos en el árbol de señal es N = 1 + SX I = 1 iy j = 1 (| θ | - j + 1) (cada término en la suma corresponde al número de nodos a una profundidad específica del árbol.) El número de hojas es sy j = 1 (| θ | - j + 1) = | θ |S ! ¡S!que es un límite inferior en el número de nodos. Para grande | θ |Podemos usar la relación `n k ´ ∼ nk k!Para obtener | θ |S ! ¡S!∼ „| θ | s s!\" ¡S!= | Θ | S y, por lo tanto, el número de hojas en el árbol de señal es Ω (| θ | S). Por lo tanto, o (| θ | s+5) = o (n | θ | 5), lo que demuestra que podemos calcular la relación isomórfica ordenada en el polinomio de tiempo en el número de nodos, n, del árbol de señal. El algoritmo a menudo se ejecuta en el tiempo sublineal (y el espacio) en el tamaño del árbol de juego porque el árbol de la señal es significativamente más pequeño que el árbol de juego en la mayoría de los juegos no triviales.(Tenga en cuenta que la entrada al algoritmo no es un árbol de juego explícito, sino una especificación de las reglas, por lo que el algoritmo no necesita leer en el árbol de juego). En general, si un juego ordenado tiene rondas R, y cada juego de etapa de rondas tiene al menos b hojas no terminales, entonces el tamaño del árbol de señal es como máximo 1 BR del tamaño del árbol de juego. Por ejemplo, en Rhode Island Holdem, el árbol de juegos tiene 3.100 millones de nodos, mientras que el árbol de señales solo tiene 6.632,705. ¿Dado el ORDENDGAMEISOMORFICO?Rutina para determinar los isomorfismos del juego ordenado en un juego ordenado, estamos listos para presentar el algoritmo principal, Gameshrink. Inicializar F para ser el filtro de identidad para γ.2. Para j de 1 a R: para cada par de nodos hermanos ϑ, ϑ a cualquier nivelpj - 1 k = 1 `κk + nγk ´ o pj k = 1 κk + pj - 1 k = 1 nγk en el filtrado (según F) Árbol de señal: si ordeneGameIsomórfica?(Γ, ϑ, ϑ), entonces FJ (ϑ) ← FJ (ϑ) ← FJ (ϑ) ∪ FJ (ϑ).3. Salida F. Dada como entrada Un juego ordenado γ, Gameshrink aplica las ideas de reducción presentadas anteriormente de la manera más agresiva posible. Una vez que termina, no hay nodos contratibles (ya que compara cada par de nodos en cada nivel del árbol de señal), y genera el filtro de información correspondiente F. La corrección de Gameshrink sigue por una aplicación repetida del Teorema 2. Por lo tanto, tenemos el siguiente resultado: Teorema 3. GameShrink encuentra todos los isomorfismos de juegos ordenados y aplica las transformaciones de abstracción isomórficas de juego ordenadas asociadas. Además, para cualquier equilibrio de Nash, σ, del juego abstraído, el perfil de estrategia construido para el juego original a partir de σ es un equilibrio de Nash. El factor dominante en el tiempo de ejecución de Gameshrink está en la iteración RTH del bucle principal. Hay como máximo 166 `| θ |S ´ s!Nodos en este nivel, donde nuevamente tomamos S como el número máximo de señales posiblemente reveladas en el juego. Por lo tanto, el bucle interno se ejecuta o „` | θ |S ´ s!2 veces. Como se discutió en la próxima subsección, utilizamos una estructura de datos de la sindicato para representar el filtro de información F. Cada iteración del circuito interno posiblemente realiza una operación de unión en la estructura de datos;La realización de operaciones M en una estructura de datos de findir sindical que contiene elementos N toma O (α (m, n)) tiempo amortizado por operación, donde α (m, n) es la función inversa de ackermanns [1, 49] (que crece extremadamente lentamente lentamente lentamente). Por lo tanto, el tiempo total para Gameshrink es O „` | θ |S ´ s!2 α „` | θ |S ´ s!2, | θ | S ««. Por la desigualdad `n k ´ ≤ nk k!, esto es O `(| θ | S) 2 α` (| θ | S) 2, | θ | S ´´. Nuevamente, aunque esto es exponencial en S, es ˜o (N2), donde N es el número de nodos en el árbol de señal. Además, Gameshrink tiende a correr en el tiempo y espacio sublineario en el tamaño del árbol de juego porque el árbol de la señal es significativamente más pequeño que el árbol de juego en la mayoría de los juegos no triviales, como se discutió anteriormente.4.1 Mejoras de eficiencia Diseñamos varias técnicas de mejora de velocidad para Gameshrink, y todas ellas se incorporan a nuestra implementación. Una técnica es el uso de la estructura de datos de unión para almacenar el filtro de información F. Esta estructura de datos utiliza el tiempo casi lineal en el número de operaciones [49]. Inicialmente, cada nodo en el árbol de señalización es su propio conjunto (esto corresponde al filtro de información de identidad);Cuando se contraen dos nodos, se unen a un nuevo conjunto. Tras la terminación, las señales filtradas para el juego abstraído corresponden exactamente a los conjuntos de disjunto en la estructura de datos. Este es un método eficiente para grabar contracciones dentro del árbol de juego, y los requisitos de memoria son solo lineales en el tamaño del árbol de señal. Determinar si dos nodos están ordenados, el juego isomórfica requiere que determinemos si un gráfico bipartito tiene una coincidencia perfecta. Podemos eliminar algunos de estos cálculos mediante el uso de condiciones necesarias fáciles de controlar para la relación isomórfica del juego ordenado con Hold. Una de esas condiciones es verificar que los nodos tengan el mismo número de oportunidades que ser clasificados (según) más altos que, más bajo que y lo mismo que los oponentes. Podemos precomputar estas frecuencias para cada nodo de árbol de juego. Esto acelera sustancialmente Gameshrink, y podemos aprovechar esta base de datos en múltiples ejecuciones del algoritmo (por ejemplo, al intentar diferentes niveles de abstracción; ver la siguiente sección). Los índices para esta base de datos dependen de las señales privadas y públicas, pero no del orden en que se revelaron, y por lo tanto, dos nodos pueden tener la misma entrada de base de datos correspondiente. Esto hace que la base de datos sea significativamente más compacta.(Por ejemplo, en Texas Holdem, la base de datos se reduce en un factor `50 3 ´ '47 1 ´ '46 1 ´ /` 50 5 ´ = 20.) Almacenamos los histogramas en una base de datos bidimensional. La primera dimensión está indexada por las señales privadas, la segunda por las señales públicas. El problema de calcular el índice en (cualquiera de los dos) una de las dimensiones es exactamente el problema de calcular una biyección entre todos los subconjuntos de tamaño R de un conjunto de tamaño n y enteros en ˆ 0 ,..., `n r ´ - 1 ˜. Calculamos de manera eficiente esto utilizando los subconjuntos de orden colexicográfico [6]. Sea {c1 ,..., cr}, ci ∈ {0 ,..., n - 1}, denota las señales R y suponga que Ci <ci+1. Calculamos un índice único para este conjunto de señales de la siguiente manera: índice (c1, ..., cr) = pr i = 1 `ci i ´.5. Métodos de aproximación Algunos juegos son demasiado grandes para calcular un equilibrio exacto, incluso después de usar la técnica de abstracción presentada. Esta sección discute técnicas generales para calcular los perfiles de estrategia aproximadamente óptimos. Para un juego de dos jugadores, siempre podemos evaluar el peor rendimiento de una estrategia, proporcionando así una evaluación objetiva de la fortaleza de la estrategia. Para ilustrar esto, supongamos que sabemos la estrategia planificada del jugador 2 para algún juego. Luego podemos arreglar las probabilidades de las acciones de Jugador 2 en el árbol del juego como si fueran movimientos casuales. Luego, el jugador 1 se enfrenta a un problema de decisión de agente único, que se puede resolver de abajo, maximizando el pago esperado en cada nodo. Por lo tanto, podemos determinar objetivamente el rendimiento esperado del peor de los casos de la estrategia del jugador 2. Esto será más útil cuando queremos evaluar qué tan bien funciona una estrategia dada cuando sabemos que no es una estrategia de equilibrio.(Una variación de esta técnica también se puede aplicar en los juegos N-persona donde solo las estrategias de un jugador se mantienen solucionadas). Esta técnica proporciona garantías ex post sobre el peor rendimiento de una estrategia, y puede usarse independientemente del método que se utiliza para calcular las estrategias.5.1 Aproximaciones del espacio de estado Al modificar ligeramente el rind laspasiones, podemos obtener un algoritmo que produce árboles de juego aún más pequeños, a expensas de perder las garantías de equilibrio del Teorema 2. En lugar de requerir que los pagos en los nodos terminales coincidan exactamente, podemos calcular una multa que aumenta a medida que aumenta la diferencia en la utilidad entre dos nodos. Hay muchas formas en que la función de penalización podría definirse e implementarse. Una posibilidad es crear pesas de borde en los gráficos bipartitos utilizados en el Algoritmo 1, y luego, en lugar de requerir combinaciones perfectas en el gráfico no ponderado, requeriríamos coincidencias perfectas con bajo costo (es decir, solo considere dos nodos que se ordenan el juego isomórfica si elEl gráfico bipartito correspondiente tiene una coincidencia perfecta con costo por debajo de algún umbral). Por lo tanto, con este umbral como parámetro, tenemos una perilla para girar que en un extremo (umbral = 0) produce una abstracción óptima y en el otro extremo (umbral = ∞) produce un juego altamente abstraído (esto en efecto restringiría a los jugadorespara ignorar todas las señales, pero aún observando acciones). Esta perilla también engendra un algoritmo en cualquier momento. Uno puede resolver versiones cada vez menos abstractadas del juego y evaluar la calidad de la solución en cada iteración utilizando el método ex post discutido anteriormente.5.2 Aproximaciones algorítmicas En el caso de los juegos de dos jugadores de suma cero, el cálculo de equilibrio se puede modelar como un programa lineal (LP), que a su vez puede resolverse utilizando el método simplex. Este enfoque tiene características inherentes que podemos aprovechar en propiedades deseables en el contexto de la resolución de juegos. En el LP, las soluciones Primal corresponden a las estrategias del Jugador 2, y las soluciones duales corresponden a las estrategias del Jugador 1. Hay dos versiones del método simple: el Primal Simplex y el Dual Simplex. El Primal Simplex mantiene la viabilidad Primal y se realiza al encontrar mejores y mejores soluciones primarias hasta que el vector de solución dual sea factible, 167 en el cual se ha alcanzado la optimización. Análogamente, el Dual Simplex mantiene la doble viabilidad y procede al encontrar soluciones duales cada vez mejores hasta que el vector de solución primaria sea factible.(Se puede considerar que el método Dual Simplex está ejecutando el método Primal Simplex en el problema dual). Por lo tanto, los métodos Primal y Dual Simplex sirven como algoritmos en cualquier momento (para una abstracción dada) para los jugadores 2 y 1, respectivamente. En cualquier momento, pueden generar las mejores estrategias que se encuentran hasta ahora. Además, para cualquier solución factible al LP, podemos obtener límites de la calidad de las estrategias examinando las soluciones primarias y duales.(Al usar el método Primal Simplex, se pueden leer soluciones duales del Tableau LP). Cada solución factible del doble rendimiento de un límite superior en el valor óptimo del primal, y viceversa [9, p.57]. Por lo tanto, sin requerir un mayor cálculo, obtenemos límites más bajos en la utilidad esperada de la estrategia de cada agente contra el peor oponente de los agentes. Un problema con el método simplex es que no es un algoritmo primal-dual, es decir, no mantiene la viabilidad primaria y dual a lo largo de su ejecución.(De hecho, solo obtiene una viabilidad primaria y dual al final de la ejecución). En contraste, existen métodos de punto interior para la programación lineal que mantienen una viabilidad primitiva y dual durante toda la ejecución. Por ejemplo, muchos algoritmos de seguimiento de la ruta del punto interior tienen esta propiedad [55, cap.5]. Observamos que la ejecución de un método de programación lineal produce un método para encontrar -equilibrios (es decir, perfiles de estrategia en los que ningún agente puede aumentar su utilidad esperada en más que desviarse). También se puede usar un umbral en un criterio de terminación para usar el método como algoritmo en cualquier momento. Además, los métodos de punto interior en esta clase tienen el tiempo de ejecución del peor de los casos de tiempo polinómico, a diferencia del algoritmo Simplex, que toma exponencialmente muchos pasos en el peor de los casos.6. Se han introducido funciones de investigación relacionadas que transforman juegos extensos de forma [50, 11]. En contraste con nuestro trabajo, esos enfoques no fueron para hacer que el juego sea más pequeño y más fácil de resolver. El resultado principal es que un juego puede derivarse de otro por una secuencia de esas transformaciones si y solo si los juegos tienen la misma forma normal reducida pura. La forma normal reducida pura es el juego de forma extensa representada como un juego en forma normal donde se eliminan los duplicados de estrategias puras (es decir, las con pagos idénticos) y los jugadores esencialmente seleccionan clases de estrategias de equivalencia [27]. Una extensión de ese trabajo muestra un resultado similar, pero para transformaciones ligeramente diferentes y juegos de forma normales reducidos mixtos [21]. Existen tratamientos modernos de este trabajo previo sobre transformaciones del juego [38, cap.6], [10]. La reciente noción de isomorfismo débil en juegos extensos [7] está relacionada con nuestra noción de isomorfismo restringido del juego. La motivación de ese trabajo fue justificar conceptos de solución argumentando que son invariantes con respecto a las transformaciones isomórficas. De hecho, el autor muestra, entre otras cosas, que muchos conceptos de soluciones, incluidos Nash, Perfect, Subjame Perfect y el equilibrio secuencial, son invariables con respecto a los isomorfismos débiles. Sin embargo, esa definición requiere que los juegos sean probados para el isomorfismo débil sean del mismo tamaño. Nuestro enfoque es totalmente diferente: encontramos juegos más pequeños estratégicamente equivalentes. Además, su trabajo no proporciona algoritmos. Las técnicas de abstracción se han utilizado en la investigación de inteligencia artificial antes. A diferencia de nuestro trabajo, la mayoría (pero no todas) la investigación que implica abstracción ha sido para problemas individuales (por ejemplo, [20, 32]). Además, el uso de la abstracción generalmente conduce a soluciones subóptimas, a diferencia de las técnicas presentadas en este documento, que producen soluciones óptimas. Una excepción notable es el uso de la abstracción para calcular estrategias óptimas para el juego de brotes [2]. Sin embargo, una diferencia significativa para nuestro trabajo es que Sprouts es un juego de información perfecta. Una de las primeras piezas de investigación que utiliza la abstracción en entornos de múltiples agentes fue el desarrollo de la búsqueda de partición, que es el algoritmo detrás de GIB, el primer jugador de puentes de computadora de expertos de Worlds [17, 18]. A diferencia de otros algoritmos de búsqueda de árboles de juego que almacenan una posición de juego particular en cada nodo del árbol de búsqueda, la búsqueda de partition almacena grupos de posiciones que son similares.(Por lo general, la similitud de dos posiciones de juego se calcula ignorando los componentes menos importantes de cada posición del juego y luego verificando si las posiciones abstractadas son similares en algunos sentidos de dominio definidos por el experto entre sí). La búsqueda de partición puede conducir a mejoras de velocidad sustanciales sobre la búsqueda α-β. Sin embargo, no se basa en la teoría de juegos (no considera conjuntos de información en el árbol de juego) y, por lo tanto, no resuelve el equilibrio de un juego de información imperfecta, como el póker.8 Otra diferencia es que la abstracción se definepor un humano experto, mientras que nuestras abstracciones se determinan automáticamente. Ha habido algunas investigaciones sobre el uso de la abstracción para los juegos de información imperfectos. En particular, Billings et al [4] describen una abstracción construida manualmente para Texas Holdem Poker e incluyen resultados prometedores contra jugadores expertos. Sin embargo, este enfoque tiene inconvenientes significativos. Primero, es altamente especializado para Texas Holdem. En segundo lugar, se utilizó una gran cantidad de conocimiento y esfuerzo expertos para construir la abstracción. Tercero, la abstracción no preserva el equilibrio: incluso si se aplica a un juego más pequeño, podría no producir un equilibrio teórico del juego. Las ideas prometedoras para la abstracción en el contexto de los juegos generales de forma extensa se han descrito en un resumen extendido [39], pero hasta donde sabemos, no se han desarrollado completamente.7. Conclusiones y discusión Introdujimos la transformación de abstracción isomórfica del juego ordenado y dio un algoritmo, Gameshrink, para abstraer el juego usando el isomorfismo exhaustivamente. Probamos que en los juegos con señales ordenadas, cualquier equilibrio de NASH en los mapas de juego abstractos más pequeños directamente a un equilibrio de Nash en el juego original. La complejidad de Gameshrink es ˜o (N2), donde n es el número de nodos en el árbol de señal. No es más grande que el árbol de juego, y en los juegos no triviales es drásticamente más pequeño, por lo que GameShrink tiene tiempo y complejidad espacial Sublinear en 8 Bridge también es un juego de información imperfecta, y la búsqueda de partición tampoco encuentra el equilibrio para ese juego. En cambio, la búsqueda de partición se usa junto con el muestreo estadístico para simular la incertidumbre en el puente. También hay otros programas de puentes que utilizan técnicas de búsqueda para juegos de información perfectos junto con el muestreo estadístico y la abstracción definida por expertos [48]. Es poco probable que tales técnicas (no teóricas) sean competitivas en el póker debido a la mayor importancia de la información y el farol.168 El tamaño del árbol de juego. Usando Gameshrink, encontramos un equilibrio Minimax para Rhode Island Holdem, un juego de póker con 3.100 millones de nodos en el juego de cuatro órdenes de magnitud más que en el juego de póker más grande resuelto anteriormente. Para mejorar aún más la escalabilidad, introdujimos una variante de aproximación de Gameshrink, que puede usarse como un algoritmo en cualquier momento variando un parámetro que controla la grosería de la abstracción. También discutimos cómo (en un juego de suma cero de dos jugadores), la programación lineal se puede usar de manera en cualquier momento para generar estrategias aproximadamente óptimas de calidad creciente. El método también produce límites sobre la suboptimización de las estrategias resultantes. Actualmente estamos trabajando en el uso de estas técnicas para el límite de 2 jugadores a gran escala Texas Holdem Poker, un juego de cartas muy popular cuyo árbol de juegos tiene alrededor de 1018 nodos. Ese tamaño del árbol de juego nos ha requerido que usemos la versión de aproximación de Gameshrink (así como la abstracción basada en la ronda) [16, 15].8. Zum Hilbertschen Aufbau der Reellen Zahlen. Annalen, 99: 118-133, 1928. [2] D. Applegate, G. Jacobson y D. Sleator. Informe técnico CMU-CS-91-144, 1991. [3] R. Bellman y D. Blackwell. Algunos juegos de dos personas que involucran farol. PNAS, 35: 600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg y D. Szafron. Se aproxima a las estrategias óptimas teóricas del juego para el póker a gran escala. En Ijcai, 2003. [5] D. Billings, A. Davidson, J. Schaeffer y D. Szafron. Inteligencia Artificial, 134: 201-240, 2002. [6] B. Bollob´as. Cambridge University Press, 1986. [7] A. Casajus. Isomorfismo débil de juegos extensos. Matemáticas Ciencias Sociales, 46: 267-290, 2003. [8] X. Chen y X. Deng. Liquidando la complejidad del equilibrio NASH de 2 jugadores. ECCC, Informe No. 150, 2005. [9] V. Chv´atal. W. H. Freeman & Co., 1983. [10] B. P. de Bruin. Transformaciones del juego y equivalencia del juego. Nota técnica X-1999-01, Universidad de Amsterdam, Instituto de Lógica, Lenguaje y Computación, 1999. [11] S. Elmes y P. J. Reny. Sobre la equivalencia estratégica de extensos juegos de forma. J. of Economic Theory, 62: 1-23, 1994. [12] L. R. Ford, Jr. y D. R. Fulkerson. Princeton University Press, 1962. [13] A. Gilpin y T. Sandholm. Encontrar equilibrios en grandes juegos secuenciales de información imperfecta. Informe técnico CMU-CS-05-158, Universidad Carnegie Mellon, 2005. [14] A. Gilpin y T. Sandholm. POKER óptimo de Rhode Island Holdem. En AAAI, páginas 1684-1685, Pittsburgh, PA, EE. UU., 2005. [15] A. Gilpin y T. Sandholm. Un jugador competitivo de póker de Texas Holdem a través de la abstracción automatizada y el cálculo de equilibrio en tiempo real. Mimeo, 2006. [16] A. Gilpin y T. Sandholm. Un jugador de póker de Texas Holdem basado en la abstracción automatizada y el cálculo de equilibrio en tiempo real. En Aamas, Hakodate, Japón, 2006. [17] M. L. Ginsberg. En AAAI, páginas 228-233, Portland, OR, 1996. [18] M. L. Ginsberg. GIB: Pasos hacia un programa de juego de puentes de nivel experto. En Ijcai, Estocolmo, Suecia, 1999. [19] S. Govindan y R. Wilson. Un método global de Newton para calcular los equilibrios de Nash. Teoría, 110: 65-86, 2003. [20] C. A. Knoblock. Generando automáticamente abstracciones para la planificación. Artificial Intelligence, 68 (2): 243-302, 1994. [21] E. Kohlberg y J.-F.Mertens. Sobre la estabilidad estratégica de los equilibrios. Econometrica, 54: 1003-1037, 1986. [22] D. Koller y N. Megiddo. La complejidad de los juegos de suma cero de dos personas en forma extensa. Juegos y comportamiento económico, 4 (4): 528-552, octubre de 1992. [23] D. Koller y N. Megiddo. Encontrar estrategias mixtas con pequeños apoyos en juegos extensos de forma. International Journal of Game Theory, 25: 73-92, 1996. [24] D. Koller, N. Megiddo y B. Von Stengel. Cálculo eficiente de equilibrios para extensos juegos de dos personas. Juegos y comportamiento económico, 14 (2): 247-259, 1996. [25] D. Koller y A. Pfeffer. Representaciones y soluciones para problemas teóricos del juego. Artificial Intelligence, 94 (1): 167-215, julio de 1997. [26] D. M. Kreps y R. Wilson. Econometrica, 50 (4): 863-894, 1982. [27] H. W. Kuhn. PNAS, 36: 570-576, 1950. [28] H. W. Kuhn. Un póker simplificado de dos personas. En contribuciones a la teoría de los juegos, Volumen 1 de Annals of Mathematics Studies, 24, páginas 97-103. Princeton University Press, 1950. [29] H. W. Kuhn. Extensos juegos y el problema de la información. En contribuciones a la teoría de los juegos, Volumen 2 de Annals of Mathematics Studies, 28, páginas 193-216. Princeton University Press, 1953. [30] C. Lemke y J. Howson. Puntos de equilibrio de los juegos de bimatriz. Journal of the Society for Industrial and Applied Mathematics, 12: 413-423, 1964. [31] R. Lipton, E. Markakis y A. Mehta. Jugando juegos grandes usando estrategias simples. En ACM-EC, páginas 36-41, 2003. [32] C.-L.Liu y M. Wellman. En la abstracción del espacio de estado para la evaluación en cualquier momento de las redes bayesianas. Sigart Bulletin, 7 (2): 50-57, 1996. [33] A. Mas-Colell, M. Whinston y J. R. Green. Oxford University Press, 1995. [34] R. D. McKelvey y A. McLennan. Cálculo de equilibrios en juegos finitos. En Handbook of Computational Economics, Volumen 1, páginas 87-142. Elsevier, 1996. [35] P. B. Miltersen y T. B. Sørensen. Calculación de equilibrio secuencial para juegos de dos jugadores. En Soda, páginas 107-116, 2006. [36] J. Nash. Puntos de equilibrio en los juegos N-persona. Proc.de la Academia Nacional de Ciencias, 36: 48-49, 1950. [37] J. F. Nash y L. S. Shapley. Un simple juego de póker de tres personas. En contribuciones a la teoría de los juegos, volumen 1, páginas 105-116. Princeton University Press, 1950. [38] A. Perea. Racionalidad en juegos extensos de forma. Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller y K. Takusagawa. Aproximaciones del espacio de estado para juegos extensos de forma, julio de 2000. Habla dada en el primer Congreso Internacional de la Teoría del Juego, Bilbao, España.[40] R. Porter, E. Nudelman e Y. Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, San José, CA, EE. UU., 2004. [41] I. Romanovskii. Reducción de un juego con memoria completa a un juego de matriz. Matemáticas soviéticas, 3: 678-681, 1962. [42] T. Sandholm y A. Gilpin. Secuencias de las ofertas de Take-It O-Leave-It: subastas casi óptimas sin revelación de valoración completa. En Aamas, Hakodate, Japón, 2006. [43] T. Sandholm, A. Gilpin y V. Conitzer. Métodos de programación de enteros mixtos para encontrar equilibrios de Nash. En AAAI, páginas 495-501, Pittsburgh, PA, EE. UU., 2005. [44] R. Savani y B. von Stengel. Exponencialmente muchos pasos para encontrar un equilibrio de Nash en un juego de bimatriz. En FOCS, páginas 258-267, 2004. [45] R. Selten. Spieltheoretische Behandlung Eines Oligopolmodells Mit Nachfragetr¨agheit. Zeitschrift für die gesamte Staatswissenschaft, 12: 301-324, 1965. [46] R. Selten. Estabilidad evolutiva en extensos juegos de dos personas: corrección y desarrollo adicional. Ciencias Sociales Matemáticas, 16: 223-266, 1988. [47] J. Shi y M. Littman. Métodos de abstracción para el póker teórico del juego. En computadoras y juegos, páginas 333-345. Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau y T. Throop. Puente de la computadora: una gran victoria para la planificación de la IA. AI Magazine, 19 (2): 93-105, 1998. [49] R. E. Tarjan. Eficiencia de un algoritmo de unión de conjunto bueno pero no lineal. Journal of the ACM, 22 (2): 215-225, 1975. [50] F. Thompson. Equivalencia de juegos en forma extensa. Rand Memo RM-759, The Rand Corporation, enero de 1952. [51] J. Von Neumann y O. Morgenstern. Teoría de los juegos y comportamiento económico. Princeton University Press, 1947. [52] B. von Stengel. Cálculo eficiente de estrategias de comportamiento. Juegos y comportamiento económico, 14 (2): 220-246, 1996. [53] B. von Stengel. Equilibrios de computación para juegos de dos personas. En Handbook of Game Theory, Volumen 3. North Holland, Amsterdam, 2002. [54] R. Wilson. Calibrios de computación de juegos de dos personas desde la forma extensa. Management Science, 18 (7): 448-460, 1972. [55] S. J. Wright. Métodos de punto interior primal-dual.",
    "original_sentences": [
        "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
        "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
        "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
        "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
        "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
        "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
        "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
        "We discuss several electronic commerce applications for GameShrink.",
        "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
        "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
        "General Terms: Algorithms, Economics, Theory. 1.",
        "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
        "Consequently, the optimal action of one agent can depend on the others.",
        "Game theory provides a normative framework for analyzing such strategic situations.",
        "In particular, it provides solution concepts that define what rational behavior is in such settings.",
        "The most famous and important solution concept is that of Nash equilibrium [36].",
        "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
        "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
        "Games can be classified as either games of perfect information or imperfect information.",
        "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
        "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
        "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
        "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
        "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
        "Thus the algorithms for perfect information games do not solve games of imperfect information.",
        "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
        "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
        "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
        "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
        "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
        "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
        "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
        "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
        "They are used in our analysis and abstraction algorithm.",
        "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
        "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
        "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
        "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
        "For a survey of equilibrium computation in 2-player games, see [53].",
        "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
        "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
        "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
        "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
        "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
        "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
        "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
        "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
        "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
        "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
        "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
        "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
        "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
        "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
        "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
        "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
        "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
        "Another broad application area is sequential auctions (potentially over multiple goods).",
        "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
        "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
        "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
        "Our techniques are in no way specific to an application.",
        "The main experiment that we present in this paper is on 161 a recreational game.",
        "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
        "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
        "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
        "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
        "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
        "However, this work was limited to tiny games that could be solved by hand.",
        "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
        "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
        "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
        "Furthermore, the approximations were designed manually by a human expert.",
        "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
        "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
        "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
        "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
        "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
        "This is much too large for (current) linear programming algorithms to handle.",
        "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
        "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
        "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
        "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
        "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
        "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
        "This is the largest poker game solved to date by over four orders of magnitude. 2.",
        "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
        "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
        "A game with ordered signals consists of a finite number of rounds.",
        "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
        "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
        "In other words, players observe each others actions, but potentially not natures actions.",
        "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
        "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
        "We also assume that the legal actions that a player has are independent of the signals received.",
        "For example, in poker, the legal betting actions are independent of the cards received.",
        "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
        "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
        "Definition 1.",
        "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
        "I = {1, . . . , n} is a finite set of players. 2.",
        "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
        "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
        "Gj is the stage game for round j. 3.",
        "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
        "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
        "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
        "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
        "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
        "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
        "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
        "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
        "Clearly, we require ω(z) = over for all z ∈ Zr .",
        "Note that ω is independent of the signals.",
        "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
        "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
        "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
        "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
        "We will use this when designing our abstraction techniques.",
        "Formally, an information filter is as follows.",
        "Definition 2.",
        "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
        "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
        "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
        "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
        "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
        "We refer to such games as filtered ordered games.",
        "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
        "We have the following simple (but important) result: Proposition 1.",
        "A filtered ordered game is an extensive form game satisfying perfect recall.",
        "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
        "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
        "Definition 3.",
        "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
        "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
        "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
        "A strategy profile is σ = (σ1, . . . , σn).",
        "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
        "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
        "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
        "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
        "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
        "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
        "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
        "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
        "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
        "Definition 4.",
        "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
        "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
        "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
        "We denote children of a node x as N(x).",
        "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
        "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
        "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
        "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
        "Definition 5.",
        "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
        "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
        "Definition 6.",
        "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
        "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
        "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
        "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
        "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
        "Theorem 2.",
        "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
        "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
        "Let σ be a Nash equilibrium of the induced game ΓF .",
        "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
        "Proof.",
        "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
        "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
        "Fix some player i ∈ I.",
        "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
        "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
        "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
        "Each node in an information set corresponds to the possible private signals the other players have received.",
        "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
        "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
        "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
        "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
        "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
        "Open circles are chance nodes with the indicated transition probabilities.",
        "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
        "The payment from player 2 to player 1 is given below each leaf.",
        "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
        "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
        "Claim 1. μ is a valid belief system for ΓF .",
        "Claim 2.",
        "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
        "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
        "The proofs of Claims 1-3 are in an extended version of this paper [13].",
        "By Claims 1 and 2, we know that condition C2 holds.",
        "By Claim 3, we know that condition C1 holds.",
        "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
        "In this subsection we show that removing either of these conditions can make our technique invalid.",
        "First, we demonstrate a failure when removing the first assumption.",
        "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
        "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
        "In this game, player 1s only Nash equilibrium strategy is to play left.",
        "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
        "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
        "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
        "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
        "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
        "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
        "We first present a subroutine that GameShrink uses.",
        "It is a dynamic program for computing the ordered game isomorphic relation.",
        "Again, it operates on the signal tree.",
        "Algorithm 1.",
        "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
        "If ϑ and ϑ have different parents, then return false. 2.",
        "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
        "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
        "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
        "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
        "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
        "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
        "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
        "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
        "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
        "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
        "The number of nodes, n, in the signal tree is O(|Θ|S ).",
        "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
        "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
        "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
        "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
        "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
        "S! which is a lower bound on the number of nodes.",
        "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
        "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
        "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
        "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
        "See Figure 1.",
        "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
        "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
        "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
        "Algorithm 2.",
        "GameShrink (Γ) 1.",
        "Initialize F to be the identity filter for Γ. 2.",
        "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
        "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
        "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
        "Thus, we have the following result: Theorem 3.",
        "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
        "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
        "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
        "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
        "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
        "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
        "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
        "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
        "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
        "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
        "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
        "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
        "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
        "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
        "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
        "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
        "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
        "We can precompute these frequencies for every game tree node.",
        "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
        "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
        "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
        "We store the histograms in a 2-dimensional database.",
        "The first dimension is indexed by the private signals, the second by the public signals.",
        "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
        "We efficiently compute this using the subsets colexicographical ordering [6].",
        "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
        "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
        "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
        "This section discusses general techniques for computing approximately optimal strategy profiles.",
        "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
        "To illustrate this, suppose we know player 2s planned strategy for some game.",
        "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
        "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
        "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
        "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
        "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
        "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
        "There are many ways in which the penalty function could be defined and implemented.",
        "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
        "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
        "This knob also begets an anytime algorithm.",
        "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
        "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
        "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
        "There are two versions of the simplex method: the primal simplex and the dual simplex.",
        "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
        "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
        "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
        "At any point in time, they can output the best strategies found so far.",
        "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
        "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
        "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
        "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
        "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
        "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
        "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
        "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
        "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
        "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
        "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
        "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
        "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
        "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
        "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
        "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
        "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
        "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
        "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
        "Our focus is totally different: we find strategically equivalent smaller games.",
        "Also, their paper does not provide algorithms.",
        "Abstraction techniques have been used in artificial intelligence research before.",
        "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
        "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
        "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
        "However, a significant difference to our work is that Sprouts is a game of perfect information.",
        "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
        "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
        "Partition search can lead to substantial speed improvements over α-β-search.",
        "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
        "There has been some research on the use of abstraction for imperfect information games.",
        "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
        "However, this approach has significant drawbacks.",
        "First, it is highly specialized for Texas Holdem.",
        "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
        "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
        "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
        "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
        "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
        "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
        "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
        "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
        "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
        "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
        "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
        "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
        "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
        "The method also yields bounds on the suboptimality of the resulting strategies.",
        "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
        "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
        "REFERENCES [1] W. Ackermann.",
        "Zum Hilbertschen Aufbau der reellen Zahlen.",
        "Math.",
        "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
        "Computer analysis of sprouts.",
        "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
        "Some two-person games involving bluffing.",
        "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
        "Approximating game-theoretic optimal strategies for full-scale poker.",
        "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
        "The challenge of poker.",
        "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
        "Combinatorics.",
        "Cambridge University Press, 1986. [7] A. Casajus.",
        "Weak isomorphism of extensive games.",
        "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
        "Settling the complexity of 2-player Nash equilibrium.",
        "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
        "Linear Programming.",
        "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
        "Game transformations and game equivalence.",
        "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
        "On the strategic equivalence of extensive form games.",
        "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
        "Flows in Networks.",
        "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
        "Finding equilibria in large sequential games of imperfect information.",
        "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
        "Optimal Rhode Island Holdem poker.",
        "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
        "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
        "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
        "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
        "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
        "Partition search.",
        "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
        "GIB: Steps toward an expert-level bridge-playing program.",
        "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
        "A global Newton method to compute Nash equilibria.",
        "J. of Econ.",
        "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
        "Automatically generating abstractions for planning.",
        "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
        "On the strategic stability of equilibria.",
        "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
        "The complexity of two-person zero-sum games in extensive form.",
        "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
        "Finding mixed strategies with small supports in extensive form games.",
        "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
        "Efficient computation of equilibria for extensive two-person games.",
        "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
        "Representations and solutions for game-theoretic problems.",
        "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
        "Sequential equilibria.",
        "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
        "Extensive games.",
        "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
        "A simplified two-person poker.",
        "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
        "Princeton University Press, 1950. [29] H. W. Kuhn.",
        "Extensive games and the problem of information.",
        "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
        "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
        "Equilibrium points of bimatrix games.",
        "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
        "Playing large games using simple strategies.",
        "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
        "On state-space abstraction for anytime evaluation of Bayesian networks.",
        "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
        "Microeconomic Theory.",
        "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
        "Computation of equilibria in finite games.",
        "In Handbook of Computational Economics, volume 1, pages 87-142.",
        "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
        "Computing sequential equilibria for two-player games.",
        "In SODA, pages 107-116, 2006. [36] J. Nash.",
        "Equilibrium points in n-person games.",
        "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
        "A simple three-person poker game.",
        "In Contributions to the Theory of Games, volume 1, pages 105-116.",
        "Princeton University Press, 1950. [38] A. Perea.",
        "Rationality in extensive form games.",
        "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
        "State-space approximations for extensive form games, July 2000.",
        "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
        "Simple search methods for finding a Nash equilibrium.",
        "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
        "Reduction of a game with complete memory to a matrix game.",
        "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
        "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
        "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
        "Mixed-integer programming methods for finding Nash equilibria.",
        "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
        "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
        "In FOCS, pages 258-267, 2004. [45] R. Selten.",
        "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
        "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
        "Evolutionary stability in extensive two-person games - correction and further development.",
        "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
        "Abstraction methods for game theoretic poker.",
        "In Computers and Games, pages 333-345.",
        "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
        "Computer bridge: A big win for AI planning.",
        "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
        "Efficiency of a good but not linear set union algorithm.",
        "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
        "Equivalence of games in extensive form.",
        "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
        "Theory of games and economic behavior.",
        "Princeton University Press, 1947. [52] B. von Stengel.",
        "Efficient computation of behavior strategies.",
        "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
        "Computing equilibria for two-person games.",
        "In Handbook of Game Theory, volume 3.",
        "North Holland, Amsterdam, 2002. [54] R. Wilson.",
        "Computing equilibria of two-person games from the extensive form.",
        "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
        "Primal-Dual Interior-Point Methods.",
        "SIAM, 1997. 169"
    ],
    "error_count": 0,
    "keys": {
        "equilibrium": {
            "translated_key": "equilibrio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an <br>equilibrium</br> of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash <br>equilibrium</br> in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash <br>equilibrium</br> in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an <br>equilibrium</br> to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve <br>equilibrium</br>, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash <br>equilibrium</br> [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an <br>equilibrium</br>.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an <br>equilibrium</br> using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash <br>equilibrium</br> solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of <br>equilibrium</br> computation.",
                "Instead of developing an <br>equilibrium</br>-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any <br>equilibrium</br> in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an <br>equilibrium</br> in the smaller game (using any available <br>equilibrium</br>-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an <br>equilibrium</br> for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of <br>equilibrium</br> finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main <br>equilibrium</br> result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact <br>equilibrium</br> is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an <br>equilibrium</br> in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of <br>equilibrium</br> computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in <br>equilibrium</br> [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash <br>equilibrium</br> strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash <br>equilibrium</br> of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash <br>equilibrium</br> if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash <br>equilibrium</br> to show that σ is a Nash <br>equilibrium</br> considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash <br>equilibrium</br> We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash <br>equilibrium</br> if, for every player i, σi is a best response for σ−i.",
                "A Nash <br>equilibrium</br> always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash <br>equilibrium</br> exists in behavior strateges. 3.",
                "<br>equilibrium</br>-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main <br>equilibrium</br> result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash <br>equilibrium</br> of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash <br>equilibrium</br> of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash <br>equilibrium</br> if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash <br>equilibrium</br> of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash <br>equilibrium</br>.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash <br>equilibrium</br>.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash <br>equilibrium</br>. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash <br>equilibrium</br> strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of <br>equilibrium</br>-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash <br>equilibrium</br> does not correspond to a Nash <br>equilibrium</br> in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash <br>equilibrium</br>, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash <br>equilibrium</br>.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact <br>equilibrium</br>, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an <br>equilibrium</br> strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the <br>equilibrium</br> guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the <br>equilibrium</br> computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential <br>equilibrium</br>, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the <br>equilibrium</br> of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve <br>equilibrium</br>: even if applied to a smaller game, it might not yield a game-theoretic <br>equilibrium</br>.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash <br>equilibrium</br> in the smaller abstracted game maps directly to a Nash <br>equilibrium</br> in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the <br>equilibrium</br> for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax <br>equilibrium</br> to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash <br>equilibrium</br>.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time <br>equilibrium</br> computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time <br>equilibrium</br> computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "<br>equilibrium</br> points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "<br>equilibrium</br> points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash <br>equilibrium</br>.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash <br>equilibrium</br> in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Encontrar equilibrios en grandes juegos secuenciales de información imperfecta ∗ Andrew Gilpin Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Gilpin@cs.cmu.edu tuomas de Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Sandholm@cs.cmu.edu.edu.Resumen Encontrar un \"equilibrio\" de un juego extenso de información imperfecta es un problema fundamental en la teoría de los juegos computacionales, pero las técnicas actuales no se escalan a juegos grandes.",
                "Para un juego secuencial de información imperfecta de múltiples jugadores con acciones observables y un espacio de señal ordenado, demostramos que cualquier \"equilibrio\" de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en una NASH\"Equilibrio\" en el juego original.",
                "Usando Gameshrink, encontramos un \"equilibrio\" en un juego de póker con 3.100 millones de nodos más de cuatro órdenes de magnitud más que en el juego de póker más grande resuelto anteriormente.",
                "Para abordar los juegos aún más grandes, introducimos métodos de aproximación que no preservan el \"equilibrio\", pero sin embargo, el rendimiento (ex post) se puede probar estrategias cercanas a las óptimas.",
                "El concepto de solución más famoso e importante es el del \"equilibrio\" de Nash [36].",
                "Sin embargo, para que el concepto esté operativo, necesitamos técnicas algorítmicas para encontrar un \"equilibrio\".",
                "Para juegos secuenciales con información imperfecta, uno podría intentar encontrar un \"equilibrio\" utilizando la forma normal (matriz), donde cada plan de contingencia del agente es una estrategia pura para el agente.3 Desafortunadamente (incluso si las estrategias equivalentes 1 realmente produceUna solución que satisface no solo el concepto de solución de \"equilibrio\" NASH, sino un concepto de solución más fuerte llamado Subgame Perfect Nash Equilibrium [45]. 2 Este tipo de algoritmo todavía no se escala en árboles enormes (como en el ajedrez o Go), sino), sino también, sino también, sino también), sino), sino), sino), sino también), sino), sino también), sino), sino), sino), sino), sino), sino), sino), sino), sino), sino), sino), sino), sino), sino), sino también), sino), sino), sino), sino), sino), sino), sino), sino enLos agentes efectivos de juego de juegos se pueden desarrollar incluso entonces mediante la evaluación de nodos intermedios utilizando una evaluación heurística y luego tratando esos nodos como hojas. 3 y -equilibrio en un juego de forma normal con cualquier 160 se reemplazan por una sola estrategia [27]) esta representaciónes generalmente exponencial en el tamaño del árbol de juego [52].",
                "Por lo tanto, el equilibrio de los juegos de 2 jugadores de tamaño razonable se puede calcular utilizando este método [52, 24, 25] .5 Sin embargo, este enfoque todavía produce enormes problemas de optimización (insoluble) para muchos juegos del mundo real, como el póker.1.1 Nuestro enfoque En este documento, adoptamos un enfoque diferente para abordar el difícil problema de la computación de \"equilibrio\".",
                "En lugar de desarrollar un método de encontrar el \"equilibrio\" per se, desarrollamos una metodología para abstraer automáticamente los juegos de tal manera que cualquier \"equilibrio\" en el juego más pequeño (abstraído) corresponde directamente a un equilibrio en el juego original.",
                "Por lo tanto, al calcular un \"equilibrio\" en el juego más pequeño (utilizando cualquier algoritmo de fingiendo \"equilibrio\" disponible), podemos construir un equilibrio en el juego original."
            ],
            "translated_text": "",
            "candidates": [
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "Equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio"
            ],
            "error": []
        },
        "sequential game": {
            "translated_key": "juego secuencial",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player <br>sequential game</br> of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para un \"juego secuencial\" múltiple de información imperfecta con acciones observables y un espacio de señal ordenado, demostramos que cualquier equilibrio de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en un NASHequilibrio en el juego original."
            ],
            "translated_text": "",
            "candidates": [
                "juego secuencial",
                "juego secuencial"
            ],
            "error": []
        },
        "imperfect information": {
            "translated_key": "información imperfecta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of <br>imperfect information</br>∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of <br>imperfect information</br> is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of <br>imperfect information</br> with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or <br>imperfect information</br>.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of <br>imperfect information</br>, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of <br>imperfect information</br>.",
                "For sequential games with <br>imperfect information</br>, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of <br>imperfect information</br> are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of <br>imperfect information</br>, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of <br>imperfect information</br> because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of <br>imperfect information</br>, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for <br>imperfect information</br> games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of <br>imperfect information</br>, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of <br>imperfect information</br>.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Encontrar equilibrios en grandes juegos secuenciales de \"información imperfecta\" ∗ Andrew Gilpin Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Gilpin@cs.cmu.edu tuomas Sandholm Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Sandholm@cs.cmu.Edu Resumen Encontrar un equilibrio de un extenso juego de forma de \"información imperfecta\" es un problema fundamental en la teoría de los juegos computacionales, pero las técnicas actuales no se reducen a juegos grandes.",
                "Para un juego secuencial múltiple de \"información imperfecta\" con acciones observables y un espacio de señal ordenado, demostramos que cualquier equilibrio de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en un NASHequilibrio en el juego original.",
                "Los juegos se pueden clasificar como juegos de información perfecta o \"información imperfecta\".",
                "La búsqueda Minimax se ejecuta en tiempo lineal en el tamaño del árbol de juego.2 La característica diferenciadora de los juegos de \"información imperfecta\", como el póker, es que no son completamente observables: cuando es un agente que se mueve, ella notener acceso a toda la información sobre el mundo.",
                "Por lo tanto, los algoritmos para juegos de información perfectos no resuelven juegos de \"información imperfecta\".",
                "Para juegos secuenciales con \"información imperfecta\", uno podría intentar encontrar un equilibrio utilizando la forma normal (matriz), donde cada plan de contingencia del agente es una estrategia pura para el agente.3 Desafortunadamente (incluso si las estrategias equivalentes 1 realmente produceUna solución que satisface no solo el concepto de solución de equilibrio NASH, sino un concepto de solución más fuerte llamado Subgame Perfect Nash Equilibrio [45]. 2 Este tipo de algoritmo todavía no se escala a árboles enormes (como en el ajedrez o el juego efectivo), sino un juego efectivo-Los agentes que juegan se pueden desarrollar incluso entonces mediante la evaluación de nodos intermedios utilizando una evaluación heurística y luego tratando esos nodos como hojas. 3 an -equilibrio en un juego de forma normal con cualquier 160 se reemplazan por una sola estrategia [27]) Esta representación es generalmenteExponencial en el tamaño del árbol de juego [52].",
                "Presentamos varias mejoras de velocidad algorítmicas y de estructura de datos relacionadas (Sección 4.1), y demostramos cómo una simple modificación a nuestro algoritmo produce un algoritmo de aproximación (Sección 5).1.2 Aplicaciones de comercio electrónico Los juegos secuenciales de \"información imperfecta\" son ubicuos, por ejemplo, en negociación y en subastas.",
                "Elegimos un juego de póker en particular como problema de referencia porque produce un árbol de juego extremadamente complicado y enorme, es un juego de \"información imperfecta\", se especifica completamente como un juego (y los datos están disponibles), y se haPublicado como un problema de desafío por otros [47] (Hasta donde sabemos, no se han propuesto instancias de problemas de desafío para las aplicaciones de comercio electrónico que requieren resolver juegos secuenciales).1.3 Rhode Island Holdem Poker Poker es un juego de cartas enormemente popular jugado en todo el mundo.",
                "Por lo tanto, σ es un equilibrio de Nash.3.1 No trivialidad de generalizar más allá de este modelo Nuestro modelo no captura juegos secuenciales generales de \"información imperfecta\" porque está restringido de dos maneras (como se discutió anteriormente): 1) Existe una estructura especial que conecta las acciones del jugador y las acciones de posibilidades (paraUno, se supone que los jugadores observan las acciones de los demás, pero las acciones de naturaleza podrían no ser observables públicamente), y 2) hay un orden común de señales.",
                "Sin embargo, no se basa en la teoría de juegos (no considera conjuntos de información en el árbol de juego) y, por lo tanto, no resuelve el equilibrio de un juego de \"información imperfecta\", como el póker.8 Otra diferencia es que la abstracciónse define por un humano experto, mientras que nuestras abstracciones se determinan automáticamente."
            ],
            "translated_text": "",
            "candidates": [
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta",
                "información imperfecta"
            ],
            "error": []
        },
        "computational game theory": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in <br>computational game theory</br>, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Encontrar equilibrios en grandes juegos secuenciales de información imperfecta ∗ Andrew Gilpin Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Gilpin@cs.cmu.edu tuomas de Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Sandholm@cs.cmu.edu.edu.Resumen Encontrar un equilibrio de un extenso juego de información imperfecta es un problema fundamental en la \"teoría de juegos computacionales\", pero las técnicas actuales no se escala a juegos grandes."
            ],
            "translated_text": "",
            "candidates": [
                "Teoría del juego computacional",
                "teoría de juegos computacionales"
            ],
            "error": []
        },
        "ordered game isomorphism": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the <br>ordered game isomorphism</br> and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the <br>ordered game isomorphism</br> to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para abordar esto, presentamos el \"isomorfismo del juego ordenado\" y la transformación de abstracción isomórfica del juego ordenado relacionado.",
                "Presentamos el \"isomorfismo del juego ordenado\" para describir situaciones estratégicamente simétricas y la transformación de abstracción isomórfica del juego ordenado para que sean ventajas de tales simetrías (Sección 3)."
            ],
            "translated_text": "",
            "candidates": [
                "Isomorfismo de juego ordenado",
                "isomorfismo del juego ordenado",
                "Isomorfismo de juego ordenado",
                "isomorfismo del juego ordenado"
            ],
            "error": []
        },
        "related ordered game isomorphic abstraction transformation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the <br>related ordered game isomorphic abstraction transformation</br>.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para abordar esto, presentamos el isomorfismo del juego ordenado y la \"transformación de abstracción isomórfica del juego ordenado relacionado\"."
            ],
            "translated_text": "",
            "candidates": [
                "Transformación de abstracción isomórfica de juego ordenado relacionado",
                "transformación de abstracción isomórfica del juego ordenado relacionado"
            ],
            "error": []
        },
        "ordered signal space": {
            "translated_key": "espacio de señal ordenado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an <br>ordered signal space</br>, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para un juego secuencial de información imperfecta de múltiples jugadores con acciones observables y un \"espacio de señal ordenado\", demostramos que cualquier equilibrio de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en una NASHequilibrio en el juego original."
            ],
            "translated_text": "",
            "candidates": [
                "espacio de señal ordenado",
                "espacio de señal ordenado"
            ],
            "error": []
        },
        "observable action": {
            "translated_key": "acción observable",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with <br>observable action</br>s and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para un juego secuencial múltiple de información imperfecta con \"acción observable\" sy un espacio de señal ordenado, demostramos que cualquier equilibrio de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en unEquilibrio de Nash en el juego original."
            ],
            "translated_text": "",
            "candidates": [
                "acción observable",
                "acción observable"
            ],
            "error": []
        },
        "nash equilibrium": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any <br>nash equilibrium</br> in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a <br>nash equilibrium</br> in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of <br>nash equilibrium</br> [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the <br>nash equilibrium</br> solution concept, but a stronger solution concept called subgame perfect <br>nash equilibrium</br> [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a <br>nash equilibrium</br> strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a <br>nash equilibrium</br> of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a <br>nash equilibrium</br> if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a <br>nash equilibrium</br> to show that σ is a <br>nash equilibrium</br> considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and <br>nash equilibrium</br> We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a <br>nash equilibrium</br> if, for every player i, σi is a best response for σ−i.",
                "A <br>nash equilibrium</br> always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a <br>nash equilibrium</br> exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a <br>nash equilibrium</br> of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a <br>nash equilibrium</br> of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a <br>nash equilibrium</br> if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a <br>nash equilibrium</br> of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a <br>nash equilibrium</br>.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a <br>nash equilibrium</br>.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a <br>nash equilibrium</br>. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only <br>nash equilibrium</br> strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the <br>nash equilibrium</br> does not correspond to a <br>nash equilibrium</br> in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any <br>nash equilibrium</br>, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a <br>nash equilibrium</br>.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any <br>nash equilibrium</br> in the smaller abstracted game maps directly to a <br>nash equilibrium</br> in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player <br>nash equilibrium</br>.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a <br>nash equilibrium</br>.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a <br>nash equilibrium</br> in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para un juego secuencial de información imperfecta de múltiples jugadores con acciones observables y un espacio de señal ordenado, demostramos que cualquier \"equilibrio de Nash\" en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en A \"\"Equilibrio de Nash \"en el juego original.",
                "El concepto de solución más famoso e importante es el del \"equilibrio de Nash\" [36].",
                "Para juegos secuenciales con información imperfecta, uno podría intentar encontrar un equilibrio utilizando la forma normal (matriz), donde cada plan de contingencia del agente es una estrategia pura para el agente.3 Desafortunadamente (incluso si las estrategias equivalentes 1 realmente producen una solución de soluciónEso satisface no solo el concepto de solución de \"equilibrio de Nash\", sino un concepto de solución más fuerte llamado subjuego perfecto \"equilibrio de nash\" [45]. 2 Este tipo de algoritmo todavía no se escala a árboles enormes (como en el ajedrez o go), sino también, sino), sino a), sino a), sino a, sino a), sino a), sino aLos agentes efectivos de juego de juegos se pueden desarrollar incluso entonces mediante la evaluación de nodos intermedios utilizando una evaluación heurística y luego tratando esos nodos como hojas. 3 y -equilibrio en un juego de forma normal con cualquier 160 se reemplazan por una sola estrategia [27]) esta representaciónes generalmente exponencial en el tamaño del árbol de juego [52].",
                "Sea F un filtro de información construido a partir de F mediante una aplicación de la transformación de abstracción isomórfica del juego ordenado, y sea un perfil de estrategia de \"equilibrio NASH\" del juego inducido γf (es decir, el juego γ usando el filtro F).",
                "Si σ se construye utilizando las estrategias correspondientes de σ, entonces σ es un \"equilibrio NASH\" de γf.",
                "La prueba del teorema utiliza una caracterización equivalente de los equilibrios de Nash: σ es un \"equilibrio de Nash\" si y solo si existen creencias μ (creencias de jugadores sobre información desconocida) en todos los puntos del juego accesibles por σ de modo que σ es secuencialmente racional(es decir, una mejor respuesta) Dada μ, donde μ se actualiza utilizando la regla Bayes.",
                "Luego podemos usar el hecho de que σ es un \"equilibrio de Nash\" para mostrar que σ es un \"equilibrio de Nash\" considerando solo las propiedades locales del juego.",
                "Al determinar los pagos en un juego con señales filtradas, tomamos el promedio sobre todas las señales reales en la clase filtrada, ponderada por la probabilidad de que ocurra cada señal real.2.2 Estrategias y \"equilibrio de Nash\" ahora estamos listos para definir estrategias de comportamiento en el contexto de los juegos ordenados filtrados.",
                "La estrategia σi se dice que es el jugador es la mejor respuesta a σ - I si para todas las demás estrategias σi para el jugador I tenemos ui (σi, σ - i) ≥ ui (σi, σ - i).σ es un \"equilibrio de Nash\" si, para cada jugador I, σi es una mejor respuesta para σ -I.",
                "Siempre existe un \"equilibrio de Nash\" en juegos finitos de forma extensa [36], y uno existe en estrategias de comportamiento para juegos con un retiro perfecto [29]."
            ],
            "translated_text": "",
            "candidates": [
                "equilibrio de Nash",
                "equilibrio de Nash",
                "Equilibrio de Nash ",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de nash",
                "equilibrio de Nash",
                "equilibrio NASH",
                "equilibrio de Nash",
                "equilibrio NASH",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash",
                "equilibrio de Nash"
            ],
            "error": []
        },
        "gameshrink": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, <br>gameshrink</br>, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so <br>gameshrink</br> has time and space complexity sublinear in the size of the game tree.",
                "Using <br>gameshrink</br>, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for <br>gameshrink</br>.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, <br>gameshrink</br>, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so <br>gameshrink</br> has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our <br>gameshrink</br> algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without <br>gameshrink</br> yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "<br>gameshrink</br> required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: <br>gameshrink</br> applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "<br>gameshrink</br>: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, <br>gameshrink</br>, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that <br>gameshrink</br> uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, <br>gameshrink</br>.",
                "Algorithm 2.",
                "<br>gameshrink</br> (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, <br>gameshrink</br> applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of <br>gameshrink</br> follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "<br>gameshrink</br> finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of <br>gameshrink</br> is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for <br>gameshrink</br> is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, <br>gameshrink</br> tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for <br>gameshrink</br>, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up <br>gameshrink</br>, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying <br>gameshrink</br>, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, <br>gameshrink</br>, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of <br>gameshrink</br> is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so <br>gameshrink</br> has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using <br>gameshrink</br>, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of <br>gameshrink</br>, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of <br>gameshrink</br> (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Presentamos un algoritmo, \"Gameshrink\", para abstraer el juego usando nuestro isomorfismo exhaustivamente.",
                "No es más grande que el árbol de juego, y en los juegos no triviales es drásticamente más pequeño, por lo que \"Gameshrink\" tiene sublineal de tiempo y espacio en el tamaño del árbol de juego.",
                "Usando \"Gameshrink\", encontramos un equilibrio para un juego de póker con 3.100 millones de nodos más de cuatro órdenes de magnitud más que en el juego de póker más grande resuelto anteriormente.",
                "Discutimos varias aplicaciones de comercio electrónico para \"Gameshrink\".",
                "También damos un algoritmo, \"Gameshrink\", para abstraer el juego usando nuestro isomorfismo exhaustivamente (Sección 4).",
                "No es más grande que el árbol de juego, y en los juegos no triviales es drásticamente más pequeño, por lo que \"Gameshrink\" tiene sublineal de tiempo y espacio en el tamaño del árbol de juego.",
                "Utilizamos nuestro algoritmo \"Gameshrink\" para reducir esto con una abstracción sin pérdidas, y produjo un programa lineal con 1,237,238 filas y columnas con 50,428,638 coeficientes no cero.",
                "",
                "\"Gameshrink\" requirió menos de un segundo para realizar la reducción (es decir, calcular todas las transformaciones de abstracción isomórficas del juego ordenado).",
                "Ahora podemos calcular μ directamente de μ: μ ˆβ |FJ ˜αJ, ˜βJ I, ˜z = 8 >>>>>> <>>>>>>: μ ˆβ |F J ˜αJ, ˜βJ I, ˜z Si fj ˜αJ, ˜βJ I = F J, αJ, ˜βJ I o ˆβ = ˆβ P ∗ μ ˆβ |F j ˜αJ, ˜βJ I, ˜z si fj ˜αJ, ˜βJ i = f J, αJ, ˜βJ I y ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 C B B B B B B B B B B B B B B B C C B B B B B B C B C B B B B CC F B B Bf C B B B B F B F B C B C BF B F B B B B B B B B B B B B B B C F B B B B B B B B C F B B B B B B B C F B B B B B B B B F B B B C B B B B F B F B B 0 0 0 0-1 -1 -1 -1 -1 -1-1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -2-1 -2 -2 -1 -1 -2 -2 -1 -2 -2 -2 1 2 2 1 2 2 1 2 2 2 2 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 22 2 2 2 2., J2 K1 K2 1 1 C B C F B B B BF C B B C BF B F B C B C B C B F B B B B B B B F B F B J1, J2 K1 K2 1 1 1 1 1 J1, J2 K2 J1, J2 K1 0 0 0-1 -1 -1 -1-1 -1 -1 -2 -2 -1 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 2C B B B F B F B -1 -10 0 0 C B B B F B F B -1 -1-1 -2 -2 -2 C B C BF B F B 0 0 0-1 -1 -1 C B C BF B F B J1, J2 J1, J2 J1, J2K1, K2K1, K2 K1, K2 -1 -1 1 2 2 2 2 2 2 2 {{J1, J2}, {K1, K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figura 1: \"Gameshrink\" aplicado a una pequeña tarta de cuatro personas (dos gatos y dos reyes)Juego de póker."
            ],
            "translated_text": "",
            "candidates": [
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "",
                "Gameshrink",
                "rejilla",
                "Gameshrink",
                "rejilla",
                "Gameshrink"
            ],
            "error": []
        },
        "signal tree": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the <br>signal tree</br>.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the <br>signal tree</br>.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered <br>signal tree</br> which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered <br>signal tree</br>, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered <br>signal tree</br> represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered <br>signal tree</br> are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered <br>signal tree</br> corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the <br>signal tree</br> discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the <br>signal tree</br>.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the <br>signal tree</br>: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the <br>signal tree</br>, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the <br>signal tree</br> is O(|Θ|S ).",
                "The dynamic program visits each node in the <br>signal tree</br>, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the <br>signal tree</br>-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the <br>signal tree</br> is smaller than the game tree.",
                "The number of nodes in the <br>signal tree</br> is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the <br>signal tree</br> is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the <br>signal tree</br>.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the <br>signal tree</br> is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the <br>signal tree</br> is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the <br>signal tree</br> only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) <br>signal tree</br>: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the <br>signal tree</br>), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the <br>signal tree</br>.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the <br>signal tree</br> is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the <br>signal tree</br>.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the <br>signal tree</br>.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Su complejidad es ˜o (n2), donde n es el número de nodos en una estructura que llamamos el \"árbol de señal\".",
                "Su complejidad es ˜o (n2), donde n es el número de nodos en una estructura que llamamos el \"árbol de señal\".",
                "Comenzamos definiendo un \"árbol de señal\" filtrado que representa todos los movimientos de posibilidades en el juego.",
                "Asociado con cada juego ordenado γ = i, g, l, θ, κ, γ, p ,, ω, u y filtro de información f es un \"árbol de señal\" filtrado, un árbol dirigido en el que cada nodo corresponde a algunos revelados (filtrados (filtrados) Las señales y los bordes corresponden a revelar señales específicas (filtradas).",
                "Los nodos en el \"árbol de señal\" filtrado representan el conjunto de todas las señales filtradas reveladas posibles (públicas y privadas) en algún momento.",
                "Dos subárboles que comienzan en los nodos internos x e y de un \"árbol de señal\" filtrado se ordenan el juego isomórfica si x e y tienen el mismo padre y hay una biyección f: n (x) → n (y), de modo que para w ∈N (x) y v ∈ N (y), v = f (w) implica que los pesos en los bordes (x, w) y (y, v) son los mismos y los subárboles que comienzan en W y V se ordenan el juego isomórfica.",
                "Sea ϑ y ϑ dos nodos donde los subárboles en el \"árbol de señal\" filtrado inducido correspondiente a los nodos ϑ y ϑ se ordenan el juego isomórficos, y ϑ y ϑ están en cualquier nivelpj - 1 k = 1 `κK + nγk ´ o pjK = 1 κK + PJ - 1 K = 1 NγK para alguna ronda J.",
                "Solo necesita analizar el \"árbol de señal\" discutido anteriormente, en lugar de todo el árbol de juego.",
                "Nuevamente, funciona en el \"Árbol de señal\".",
                "Si ϑ y ϑ son ambas hojas del \"árbol de señal\": (a) si ur (ϑ | ˜z) = ur (ϑ | ˜z) para todos ˜z ∈ R - 1 j = 1 ΩJ cont × ωr,luego regresa verdadero.(b) De lo contrario, regrese falso.3."
            ],
            "translated_text": "",
            "candidates": [
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "árbol de señal",
                "árbol de señales",
                "Árbol de señal",
                "Árbol de señales",
                "árbol de señal"
            ],
            "error": []
        },
        "game theory": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational <br>game theory</br>, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "<br>game theory</br> provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, <br>game theory</br> has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing <br>game theory</br>-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not <br>game theory</br>-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of <br>game theory</br>, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the <br>game theory</br> Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of <br>game theory</br>, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Encontrar equilibrios en grandes juegos secuenciales de información imperfecta ∗ Andrew Gilpin Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Gilpin@cs.cmu.edu tuomas de Departamento de Ciencias de la Computación Carnegie Mellon University Pittsburgh, PA, EE. UU. Sandholm@cs.cmu.edu.edu.Resumen Encontrar un equilibrio de un juego extenso de información imperfecta es un problema fundamental en la \"teoría de juegos\" computacional, pero las técnicas actuales no escalan a juegos grandes.",
                "La \"teoría del juego\" proporciona un marco normativo para analizar tales situaciones estratégicas.",
                "Casi desde la fundación de los campos, la \"teoría del juego\" se ha utilizado para analizar diferentes aspectos del póker [28;37;3;51, pp. 186-219].",
                "Más recientemente, los investigadores de IA han estado aplicando el poder computacional del hardware moderno para calcular estrategias basadas en \"teoría de juegos\" para juegos más grandes.",
                "Sin embargo, no se basa en la \"teoría de juegos\" (no considera conjuntos de información en el árbol del juego) y, por lo tanto, no resuelve el equilibrio de un juego de información imperfecta, como el póker.8 Otra diferencia es que la abstracciónse define por un humano experto, mientras que nuestras abstracciones se determinan automáticamente.",
                "International Journal of \"Game Theory\", 25: 73-92, 1996. [24] D. Koller, N. Megiddo y B. von Stengel.",
                "Habla dada en el primer Congreso Internacional de la Sociedad \"Teoría del juego\", Bilbao, España.[40] R. Porter, E. Nudelman e Y. Shoham.",
                "En Handbook of \"Game Theory\", Volumen 3."
            ],
            "translated_text": "",
            "candidates": [
                "teoría de juego",
                "teoría de juegos",
                "teoría de juego",
                "teoría del juego",
                "teoría de juego",
                "teoría del juego",
                "teoría de juego",
                "teoría de juegos",
                "teoría de juego",
                "teoría de juegos",
                "teoría de juego",
                "Game Theory",
                "teoría de juego",
                "Teoría del juego",
                "Teoría del juego",
                "Game Theory"
            ],
            "error": []
        },
        "normative framework": {
            "translated_key": "marco normativo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a <br>normative framework</br> for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La teoría de juegos proporciona un \"marco normativo\" para analizar tales situaciones estratégicas."
            ],
            "translated_text": "",
            "candidates": [
                "marco normativo",
                "marco normativo"
            ],
            "error": []
        },
        "rational behavior": {
            "translated_key": "comportamiento racional",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what <br>rational behavior</br> is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En particular, proporciona conceptos de solución que definen qué \"comportamiento racional\" es en tales entornos."
            ],
            "translated_text": "",
            "candidates": [
                "comportamiento racional",
                "comportamiento racional"
            ],
            "error": []
        },
        "strategy profile": {
            "translated_key": "perfil de estrategia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a <br>strategy profile</br> (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium <br>strategy profile</br> of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A <br>strategy profile</br> is σ = (σ1, . . . , σn).",
                "A <br>strategy profile</br> with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the <br>strategy profile</br> σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A <br>strategy profile</br> σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the <br>strategy profile</br> constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Es un \"perfil de estrategia\" (una estrategia para cada agente) en la que ningún agente tiene un incentivo para desviarse a una estrategia diferente.",
                "Sea F un filtro de información construido a partir de F mediante una aplicación de la transformación de abstracción isomórfica del juego ordenado, y sea un \"perfil de estrategia\" de equilibrio de Nash del juego inducido γf (es decir, el juego γ usando el filtro F).",
                "Un \"perfil de estrategia\" es σ = (σ1, ..., σn).",
                "Un \"perfil de estrategia\" con σi reemplazado por σi es (σi, σ - i) = (σ1, ..., σi - 1, σi, σi+1, ..., σn).",
                "Por un abuso de notación, diremos que el jugador que recibe una recompensa esperada de la interfaz de usuario (σ) cuando todos los jugadores están jugando el \"perfil de estrategia\" σ.",
                "Para un juego de forma extensa, un sistema de creencias μ asigna una probabilidad para cada nodo de decisión x tal quep x∈H μ (x) = 1 para cada información establecida h.Un \"perfil de estrategia\" σ es secuencialmente racional en H dada el sistema de creencias μ μ si UI (σi, σ - i | h, μ) ≥ ui (τi, σ - i | h, μ) para todas las demás estrategias τi, donde i issEl jugador que controla h.Un resultado básico [33, Proposición 9.C.1] que caracteriza los equilibrios de Nash dicta que σ es un equilibrio de Nash si y solo si hay un sistema de creencias μ tal que para cada información establecida H con PR (H | σ)> 0,Las siguientes dos condiciones tienen: (C1) σ es secuencialmente racional a H dado μ;y (c2) μ (x) = pr (x | σ) Pr (h | σ) para todos x ∈ H.Dado que σ es un equilibrio NASH de γ, existe tal sistema de creencias μ para γf.",
                "Además, para cualquier equilibrio de Nash, σ, del juego abstraído, el \"perfil de estrategia\" construido para el juego original a partir de σ es un equilibrio de Nash."
            ],
            "translated_text": "",
            "candidates": [
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia",
                "perfil de estrategia"
            ],
            "error": []
        },
        "sequential game of imperfect information": {
            "translated_key": "Juego secuencial de información imperfecta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player <br>sequential game of imperfect information</br> with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para un \"juego secuencial de información imperfecta\" de múltiples jugadores con acciones observables y un espacio de señal ordenado, demostramos que cualquier equilibrio de Nash en un juego más pequeño abstracto, obtenido por una o más aplicaciones de la transformación, puede convertirse fácilmente en una NASHequilibrio en el juego original."
            ],
            "translated_text": "",
            "candidates": [
                "Juego secuencial de información imperfecta",
                "juego secuencial de información imperfecta"
            ],
            "error": []
        },
        "automate abstraction": {
            "translated_key": "Automatizar la abstracción",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "equilibrium find": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of <br>equilibrium find</br>ing.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Al operar solo en el espacio de los filtros, podemos mantener intacta la estructura estratégica del juego, al tiempo que abstrae los detalles del juego de una manera sin pérdidas desde la perspectiva de \"equilibrio\"."
            ],
            "translated_text": "",
            "candidates": [
                "equilibrio encontrar",
                "equilibrio"
            ],
            "error": []
        },
        "computer poker": {
            "translated_key": "póker",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Finding Equilibria in Large Sequential Games of Imperfect Information∗ Andrew Gilpin Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA gilpin@cs.cmu.edu Tuomas Sandholm Computer Science Department Carnegie Mellon University Pittsburgh, PA, USA sandholm@cs.cmu.edu ABSTRACT Finding an equilibrium of an extensive form game of imperfect information is a fundamental problem in computational game theory, but current techniques do not scale to large games.",
                "To address this, we introduce the ordered game isomorphism and the related ordered game isomorphic abstraction transformation.",
                "For a multi-player sequential game of imperfect information with observable actions and an ordered signal space, we prove that any Nash equilibrium in an abstracted smaller game, obtained by one or more applications of the transformation, can be easily converted into a Nash equilibrium in the original game.",
                "We present an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively.",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "Using GameShrink, we find an equilibrium to a poker game with 3.1 billion nodes-over four orders of magnitude more than in the largest poker game solved previously.",
                "We discuss several electronic commerce applications for GameShrink.",
                "To address even larger games, we introduce approximation methods that do not preserve equilibrium, but nevertheless yield (ex post) provably close-to-optimal strategies.",
                "Categories and Subject Descriptors: I.2 [Artificial Intelligence], F. [Theory of Computation], J.4 [Social and Behavioral Sciences]: Economics.",
                "General Terms: Algorithms, Economics, Theory. 1.",
                "INTRODUCTION In environments with more than one agent, an agents outcome is generally affected by the actions of the other agent(s).",
                "Consequently, the optimal action of one agent can depend on the others.",
                "Game theory provides a normative framework for analyzing such strategic situations.",
                "In particular, it provides solution concepts that define what rational behavior is in such settings.",
                "The most famous and important solution concept is that of Nash equilibrium [36].",
                "It is a strategy profile (one strategy for each agent) in which no agent has incentive to deviate to a different strategy.",
                "However, for the concept to be operational, we need algorithmic techniques for finding an equilibrium.",
                "Games can be classified as either games of perfect information or imperfect information.",
                "Chess and Go are examples of the former, and, until recently, most game playing work has been on games of this type.",
                "To compute an optimal strategy in a perfect information game, an agent traverses the game tree and evaluates individual nodes.",
                "If the agent is able to traverse the entire game tree, she simply computes an optimal strategy from the bottom-up, using the principle of backward induction.1 In computer science terms, this is done using minimax search (often in conjunction with αβ-pruning to reduce the search tree size and thus enhance speed).",
                "Minimax search runs in linear time in the size of the game tree.2 The differentiating feature of games of imperfect information, such as poker, is that they are not fully observable: when it is an agents turn to move, she does not have access to all of the information about the world.",
                "In such games, the decision of what to do at a point in time cannot generally be optimally made without considering decisions at all other points in time (including ones on other paths of play) because those other decisions affect the probabilities of being at different states at the current point in time.",
                "Thus the algorithms for perfect information games do not solve games of imperfect information.",
                "For sequential games with imperfect information, one could try to find an equilibrium using the normal (matrix) form, where every contingency plan of the agent is a pure strategy for the agent.3 Unfortunately (even if equivalent strategies 1 This actually yields a solution that satisfies not only the Nash equilibrium solution concept, but a stronger solution concept called subgame perfect Nash equilibrium [45]. 2 This type of algorithm still does not scale to huge trees (such as in chess or Go), but effective game-playing agents can be developed even then by evaluating intermediate nodes using a heuristic evaluation and then treating those nodes as leaves. 3 An -equilibrium in a normal form game with any 160 are replaced by a single strategy [27]) this representation is generally exponential in the size of the game tree [52].",
                "By observing that one needs to consider only sequences of moves rather than pure strategies [41, 46, 22, 52], one arrives at a more compact representation, the sequence form, which is linear in the size of the game tree.4 For 2-player games, there is a polynomial-sized (in the size of the game tree) linear programming formulation (linear complementarity in the non-zero-sum case) based on the sequence form such that strategies for players 1 and 2 correspond to primal and dual variables.",
                "Thus, the equilibria of reasonable-sized 2-player games can be computed using this method [52, 24, 25].5 However, this approach still yields enormous (unsolvable) optimization problems for many real-world games, such as poker. 1.1 Our approach In this paper, we take a different approach to tackling the difficult problem of equilibrium computation.",
                "Instead of developing an equilibrium-finding method per se, we instead develop a methodology for automatically abstracting games in such a way that any equilibrium in the smaller (abstracted) game corresponds directly to an equilibrium in the original game.",
                "Thus, by computing an equilibrium in the smaller game (using any available equilibrium-finding algorithm), we are able to construct an equilibrium in the original game.",
                "The motivation is that an equilibrium for the smaller game can be computed drastically faster than for the original game.",
                "To this end, we introduce games with ordered signals (Section 2), a broad class of games that has enough structure which we can exploit for abstraction purposes.",
                "Instead of operating directly on the game tree (something we found to be technically challenging), we instead introduce the use of information filters (Section 2.1), which coarsen the information each player receives.",
                "They are used in our analysis and abstraction algorithm.",
                "By operating only in the space of filters, we are able to keep the strategic structure of the game intact, while abstracting out details of the game in a way that is lossless from the perspective of equilibrium finding.",
                "We introduce the ordered game isomorphism to describe strategically symmetric situations and the ordered game isomorphic abstraction transformation to take advantange of such symmetries (Section 3).",
                "As our main equilibrium result we have the following: constant number of agents can be constructed in quasipolynomial time [31], but finding an exact equilibrium is PPAD-complete even in a 2-player game [8].",
                "The most prevalent algorithm for finding an equilibrium in a 2-agent game is Lemke-Howson [30], but it takes exponentially many steps in the worst case [44].",
                "For a survey of equilibrium computation in 2-player games, see [53].",
                "Recently, equilibriumfinding algorithms that enumerate supports (i.e., sets of pure strategies that are played with positive probability) have been shown efficient on many games [40], and efficient mixed integer programming algorithms that search in the space of supports have been developed [43].",
                "For more than two players, many algorithms have been proposed, but they currently only scale to very small games [19, 34, 40]. 4 There were also early techniques that capitalized in different ways on the fact that in many games the vast majority of pure strategies are not played in equilibrium [54, 23]. 5 Recently this approach was extended to handle computing sequential equilibria [26] as well [35].",
                "Theorem 2 Let Γ be a game with ordered signals, and let F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation, and let σ be a Nash equilibrium strategy profile of the induced game ΓF (i.e., the game Γ using the filter F ).",
                "If σ is constructed by using the corresponding strategies of σ , then σ is a Nash equilibrium of ΓF .",
                "The proof of the theorem uses an equivalent characterization of Nash equilibria: σ is a Nash equilibrium if and only if there exist beliefs μ (players beliefs about unknown information) at all points of the game reachable by σ such that σ is sequentially rational (i.e., a best response) given μ, where μ is updated using Bayes rule.",
                "We can then use the fact that σ is a Nash equilibrium to show that σ is a Nash equilibrium considering only local properties of the game.",
                "We also give an algorithm, GameShrink, for abstracting the game using our isomorphism exhaustively (Section 4).",
                "Its complexity is ˜O(n2 ), where n is the number of nodes in a structure we call the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in the size of the game tree.",
                "We present several algorithmic and data structure related speed improvements (Section 4.1), and we demonstrate how a simple modification to our algorithm yields an approximation algorithm (Section 5). 1.2 Electronic commerce applications Sequential games of imperfect information are ubiquitous, for example in negotiation and in auctions.",
                "Often aspects of a players knowledge are not pertinent for deciding what action the player should take at a given point in the game.",
                "On the trivial end, some aspects of a players knowledge are never pertinent (e.g., whether it is raining or not has no bearing on the bidding strategy in an art auction), and such aspects can be completely left out of the model specification.",
                "However, some aspects can be pertinent in certain states of the game while they are not pertinent in other states, and thus cannot be left out of the model completely.",
                "Furthermore, it may be highly non-obvious which aspects are pertinent in which states of the game.",
                "Our algorithm automatically discovers which aspects are irrelevant in different states, and eliminates those aspects of the game, resulting in a more compact, equivalent game representation.",
                "One broad application area that has this property is sequential negotiation (potentially over multiple issues).",
                "Another broad application area is sequential auctions (potentially over multiple goods).",
                "For example, in those states of a 1-object auction where bidder A can infer that his valuation is greater than that of bidder B, bidder A can ignore all his other information about Bs signals, although that information would be relevant for inferring Bs exact valuation.",
                "Furthermore, in some states of the auction, a bidder might not care which exact other bidders have which valuations, but cares about which valuations are held by the other bidders in aggregate (ignoring their identities).",
                "Many open-cry sequential auction and negotiation mechanisms fall within the game model studied in this paper (specified in detail later), as do certain other games in electronic commerce, such as sequences of take-it-or-leave-it offers [42].",
                "Our techniques are in no way specific to an application.",
                "The main experiment that we present in this paper is on 161 a recreational game.",
                "We chose a particular poker game as the benchmark problem because it yields an extremely complicated and enormous game tree, it is a game of imperfect information, it is fully specified as a game (and the data is available), and it has been posted as a challenge problem by others [47] (to our knowledge no such challenge problem instances have been proposed for electronic commerce applications that require solving sequential games). 1.3 Rhode Island Holdem poker Poker is an enormously popular card game played around the world.",
                "The 2005 World Series of Poker had over $103 million dollars in total prize money, including $56 million for the main event.",
                "Increasingly, poker players compete in online casinos, and television stations regularly broadcast poker tournaments.",
                "Poker has been identified as an important research area in AI due to the uncertainty stemming from opponents cards, opponents future actions, and chance moves, among other reasons [5].",
                "Almost since the fields founding, game theory has been used to analyze different aspects of poker [28; 37; 3; 51, pp. 186-219].",
                "However, this work was limited to tiny games that could be solved by hand.",
                "More recently, AI researchers have been applying the computational power of modern hardware to computing game theory-based strategies for larger games.",
                "Koller and Pfeffer determined solutions to poker games with up to 140,000 nodes using the sequence form and linear programming [25].",
                "Large-scale approximations have been developed [4], but those methods do not provide any guarantees about the performance of the computed strategies.",
                "Furthermore, the approximations were designed manually by a human expert.",
                "Our approach yields an automated abstraction mechanism along with theoretical guarantees on the strategies performance.",
                "Rhode Island Holdem was invented as a testbed for computational game playing [47].",
                "It was designed so that it was similar in style to Texas Holdem, yet not so large that devising reasonably intelligent strategies would be impossible. (The rules of Rhode Island Holdem, as well as a discussion of how Rhode Island Holdem can be modeled as a game with ordered signals, that is, it fits in our model, is available in an extended version of this paper [13].)",
                "We applied the techniques developed in this paper to find an exact (minimax) solution to Rhode Island Holdem, which has a game tree exceeding 3.1 billion nodes.",
                "Applying the sequence form to Rhode Island Holdem directly without abstraction yields a linear program with 91,224,226 rows, and the same number of columns.",
                "This is much too large for (current) linear programming algorithms to handle.",
                "We used our GameShrink algorithm to reduce this with lossless abstraction, and it yielded a linear program with 1,237,238 rows and columns-with 50,428,638 non-zero coefficients.",
                "We then applied iterated elimination of dominated strategies, which further reduced this to 1,190,443 rows and 1,181,084 columns. (Applying iterated elimination of dominated strategies without GameShrink yielded 89,471,986 rows and 89,121,538 columns, which still would have been prohibitively large to solve.)",
                "GameShrink required less than one second to perform the shrinking (i.e., to compute all of the ordered game isomorphic abstraction transformations).",
                "Using a 1.65GHz IBM eServer p5 570 with 64 gigabytes of RAM (the linear program solver actually needed 25 gigabytes), we solved it in 7 days and 17 hours using the interior-point barrier method of CPLEX version 9.1.2.",
                "We recently demonstrated our optimal Rhode Island Holdem poker player at the AAAI-05 conference [14], and it is available for play on-line at http://www.cs.cmu.edu/ ~gilpin/gsi.html.",
                "While others have worked on computer programs for playing Rhode Island Holdem [47], no optimal strategy has been found before.",
                "This is the largest poker game solved to date by over four orders of magnitude. 2.",
                "GAMES WITH ORDERED SIGNALS We work with a slightly restricted class of games, as compared to the full generality of the extensive form.",
                "This class, which we call games with ordered signals, is highly structured, but still general enough to capture a wide range of strategic situations.",
                "A game with ordered signals consists of a finite number of rounds.",
                "Within a round, the players play a game on a directed tree (the tree can be different in different rounds).",
                "The only uncertainty players face stems from private signals the other players have received and from the unknown future signals.",
                "In other words, players observe each others actions, but potentially not natures actions.",
                "In each round, there can be public signals (announced to all players) and private signals (confidentially communicated to individual players).",
                "For simplicity, we assume-as is the case in most recreational games-that within each round, the number of private signals received is the same across players (this could quite likely be relaxed).",
                "We also assume that the legal actions that a player has are independent of the signals received.",
                "For example, in poker, the legal betting actions are independent of the cards received.",
                "Finally, the strongest assumption is that there is a partial ordering over sets of signals, and the payoffs are increasing (not necessarily strictly) in these signals.",
                "For example, in poker, this partial ordering corresponds exactly to the ranking of card hands.",
                "Definition 1.",
                "A game with ordered signals is a tuple Γ = I, G, L, Θ, κ, γ, p, , ω, u where: 1.",
                "I = {1, . . . , n} is a finite set of players. 2.",
                "G = G1 , . . . , Gr , Gj = ` V j , Ej ´ , is a finite collection of finite directed trees with nodes V j and edges Ej .",
                "Let Zj denote the leaf nodes of Gj and let Nj (v) denote the outgoing neighbors of v ∈ V j .",
                "Gj is the stage game for round j. 3.",
                "L = L1 , . . . , Lr , Lj : V j \\ Zj → I indicates which player acts (chooses an outgoing edge) at each internal node in round j. 4.",
                "Θ is a finite set of signals. 5. κ = κ1 , . . . , κr and γ = γ1 , . . . , γr are vectors of nonnegative integers, where κj and γj denote the number of public and private signals (per player), respectively, revealed in round j.",
                "Each signal θ ∈ Θ may only be revealed once, and in each round every player receives the same number of private signals, so we require Pr j=1 κj + nγj ≤ |Θ|.",
                "The public information revealed in round j is αj ∈ Θκj and the public information revealed in all rounds up through round j is ˜αj = ` α1 , . . . , αj ´ .",
                "The private information revealed to player i ∈ I in round j is βj i ∈ Θγj and the private information revaled to player i ∈ I in all rounds up through round j is ˜βj i = ` β1 i , . . . , βj i ´ .",
                "We 162 also write ˜βj = ˜βj 1, . . . , ˜βj n to represent all private information up through round j, and ˜β j i , ˜βj −i = ˜βj 1, . . . , ˜βj i−1, ˜β j i , ˜βj i+1, . . . , ˜βj n is ˜βj with ˜βj i replaced with ˜β j i .",
                "The total information revealed up through round j, ˜αj , ˜βj , is said to be legal if no signals are repeated. 6. p is a probability distribution over Θ, with p(θ) > 0 for all θ ∈ Θ.",
                "Signals are drawn from Θ according to p without replacement, so if X is the set of signals already revealed, then p(x | X) = ( p(x)P y /∈X p(y) if x /∈ X 0 if x ∈ X. 7. is a partial ordering of subsets of Θ and is defined for at least those pairs required by u. 8. ω : rS j=1 Zj → {over, continue} is a mapping of terminal nodes within a stage game to one of two values: over, in which case the game ends, or continue, in which case the game continues to the next round.",
                "Clearly, we require ω(z) = over for all z ∈ Zr .",
                "Note that ω is independent of the signals.",
                "Let ωj over = {z ∈ Zj | ω(z) = over} and ωj cont = {z ∈ Zj | ω(z) = continue}. 9. u = (u1 , . . . , ur ), uj : j−1 k=1 ωk cont × ωj over × j k=1 Θκk × n i=1 j k=1 Θγk → Rn is a utility function such that for every j, 1 ≤ j ≤ r, for every i ∈ I, and for every ˜z ∈ j−1 k=1 ωk cont × ωj over, at least one of the following two conditions holds: (a) Utility is signal independent: uj i (˜z, ϑ) = uj i (˜z, ϑ ) for all legal ϑ, ϑ ∈ j k=1 Θκk × n i=1 j k=1 Θγk . (b) is defined for all legal signals (˜αj , ˜βj i ), (˜αj , ˜β j i ) through round j and a players utility is increasing in her private signals, everything else equal: ˜αj , ˜βj i  ˜αj , ˜β j i =⇒ ui ˜z, ˜αj , ˜βj i , ˜βj −i ≥ ui ˜z, ˜αj , ˜β j i , ˜βj −i .",
                "We will use the term game with ordered signals and the term ordered game interchangeably. 2.1 Information filters In this subsection, we define an information filter for ordered games.",
                "Instead of completely revealing a signal (either public or private) to a player, the signal first passes through this filter, which outputs a coarsened signal to the player.",
                "By varying the filter applied to a game, we are able to obtain a wide variety of games while keeping the underlying action space of the game intact.",
                "We will use this when designing our abstraction techniques.",
                "Formally, an information filter is as follows.",
                "Definition 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game.",
                "Let Sj ⊆ j k=1 Θκk × j k=1 Θγk be the set of legal signals (i.e., no repeated signals) for one player through round j.",
                "An information filter for Γ is a collection F = F1 , . . . , Fr where each Fj is a function Fj : Sj → 2Sj such that each of the following conditions hold: 1. (Truthfulness) (˜αj , ˜βj i ) ∈ Fj (˜αj , ˜βj i ) for all legal (˜αj , ˜βj i ). 2. (Independence) The range of Fj is a partition of Sj . 3. (Information preservation) If two values of a signal are distinguishable in round k, then they are distinguishable fpr each round j > k. Let mj = Pj l=1 κl +γl .",
                "We require that for all legal (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ and (θ1, . . . , θmk , . . . , θmj ) ⊆ Θ: (θ1, . . . , θmk ) /∈ Fk (θ1, . . . , θmk ) =⇒ (θ1, . . . , θmk , . . . , θmj ) /∈ Fj (θ1, . . . , θmk , . . . , θmj ).",
                "A game with ordered signals Γ and an information filter F for Γ defines a new game ΓF .",
                "We refer to such games as filtered ordered games.",
                "We are left with the original game if we use the identity filter Fj ˜αj , ˜βj i = n ˜αj , ˜βj i o .",
                "We have the following simple (but important) result: Proposition 1.",
                "A filtered ordered game is an extensive form game satisfying perfect recall.",
                "A simple proof proceeds by constructing an extensive form game directly from the ordered game, and showing that it satisfies perfect recall.",
                "In determining the payoffs in a game with filtered signals, we take the average over all real signals in the filtered class, weighted by the probability of each real signal occurring. 2.2 Strategies and Nash equilibrium We are now ready to define behavior strategies in the context of filtered ordered games.",
                "Definition 3.",
                "A behavior strategy for player i in round j of Γ = I, G, L, Θ, κ, γ, p, , ω, u with information filter F is a probability distribution over possible actions, and is defined for each player i, each round j, and each v ∈ V j \\Zj for Lj (v) = i: σj i,v : j−1 k=1 ωk cont×Range Fj → Δ n w ∈ V j | (v, w) ∈ Ej o . (Δ(X) is the set of probability distributions over a finite set X.)",
                "A behavior strategy for player i in round j is σj i = (σj i,v1 , . . . , σj i,vm ) for each vk ∈ V j \\ Zj where Lj (vk) = i.",
                "A behavior strategy for player i in Γ is σi = ` σ1 i , . . . , σr i ´ .",
                "A strategy profile is σ = (σ1, . . . , σn).",
                "A strategy profile with σi replaced by σi is (σi, σ−i) = (σ1, . . . , σi−1, σi, σi+1, . . . , σn).",
                "By an abuse of notation, we will say player i receives an expected payoff of ui(σ) when all players are playing the strategy profile σ.",
                "Strategy σi is said to be player is best response to σ−i if for all other strategies σi for player i we have ui(σi, σ−i) ≥ ui(σi, σ−i). σ is a Nash equilibrium if, for every player i, σi is a best response for σ−i.",
                "A Nash equilibrium always exists in finite extensive form games [36], and one exists in behavior strategies for games with perfect recall [29].",
                "Using these observations, we have the following corollary to Proposition 1: 163 Corollary 1.",
                "For any filtered ordered game, a Nash equilibrium exists in behavior strateges. 3.",
                "EQUILIBRIUM-PRESERVING ABSTRACTIONS In this section, we present our main technique for reducing the size of games.",
                "We begin by defining a filtered signal tree which represents all of the chance moves in the game.",
                "The bold edges (i.e. the first two levels of the tree) in the game trees in Figure 1 correspond to the filtered signal trees in each game.",
                "Definition 4.",
                "Associated with every ordered game Γ = I, G, L, Θ, κ, γ, p, , ω, u and information filter F is a filtered signal tree, a directed tree in which each node corresponds to some revealed (filtered) signals and edges correspond to revealing specific (filtered) signals.",
                "The nodes in the filtered signal tree represent the set of all possible revealed filtered signals (public and private) at some point in time.",
                "The filtered public signals revealed in round j correspond to the nodes in the κj levels beginning at level Pj−1 k=1 ` κk + nγk ´ and the private signals revealed in round j correspond to the nodes in the nγj levels beginning at level Pj k=1 κk + Pj−1 k=1 nγk .",
                "We denote children of a node x as N(x).",
                "In addition, we associate weights with the edges corresponding to the probability of the particular edge being chosen given that its parent was reached.",
                "In many games, there are certain situations in the game that can be thought of as being strategically equivalent to other situations in the game.",
                "By melding these situations together, it is possible to arrive at a strategically equivalent smaller game.",
                "The next two definitions formalize this notion via the introduction of the ordered game isomorphic relation and the ordered game isomorphic abstraction transformation.",
                "Definition 5.",
                "Two subtrees beginning at internal nodes x and y of a filtered signal tree are ordered game isomorphic if x and y have the same parent and there is a bijection f : N(x) → N(y), such that for w ∈ N(x) and v ∈ N(y), v = f(w) implies the weights on the edges (x, w) and (y, v) are the same and the subtrees beginning at w and v are ordered game isomorphic.",
                "Two leaves (corresponding to filtered signals ϑ and ϑ up through round r) are ordered game isomorphic if for all ˜z ∈ r−1 j=1 ωj cont × ωr over, ur (˜z, ϑ) = ur (˜z, ϑ ).",
                "Definition 6.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and let F be an information filter for Γ.",
                "Let ϑ and ϑ be two nodes where the subtrees in the induced filtered signal tree corresponding to the nodes ϑ and ϑ are ordered game isomorphic, and ϑ and ϑ are at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk for some round j.",
                "The ordered game isomorphic abstraction transformation is given by creating a new information filter F : F j ˜αj , ˜βj i = 8 < : Fj ˜αj , ˜βj i if ˜αj , ˜βj i /∈ ϑ ∪ ϑ ϑ ∪ ϑ if ˜αj , ˜βj i ∈ ϑ ∪ ϑ .",
                "Figure 1 shows the ordered game isomorphic abstraction transformation applied twice to a tiny poker game.",
                "Theorem 2, our main equilibrium result, shows how the ordered game isomorphic abstraction transformation can be used to compute equilibria faster.",
                "Theorem 2.",
                "Let Γ = I, G, L, Θ, κ, γ, p, , ω, u be an ordered game and F be an information filter for Γ.",
                "Let F be an information filter constructed from F by one application of the ordered game isomorphic abstraction transformation.",
                "Let σ be a Nash equilibrium of the induced game ΓF .",
                "If we take σj i,v ˜z, Fj ˜αj , ˜βj i = σ j i,v ˜z, F j ˜αj , ˜βj i , σ is a Nash equilibrium of ΓF .",
                "Proof.",
                "For an extensive form game, a belief system μ assigns a probability to every decision node x such thatP x∈h μ(x) = 1 for every information set h. A strategy profile σ is sequentially rational at h given belief system μ if ui(σi, σ−i | h, μ) ≥ ui(τi, σ−i | h, μ) for all other strategies τi, where i is the player who controls h. A basic result [33, Proposition 9.C.1] characterizing Nash equilibria dictates that σ is a Nash equilibrium if and only if there is a belief system μ such that for every information set h with Pr(h | σ) > 0, the following two conditions hold: (C1) σ is sequentially rational at h given μ; and (C2) μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Since σ is a Nash equilibrium of Γ , there exists such a belief system μ for ΓF .",
                "Using μ , we will construct a belief system μ for Γ and show that conditions C1 and C2 hold, thus supporting σ as a Nash equilibrium.",
                "Fix some player i ∈ I.",
                "Each of is information sets in some round j corresponds to filtered signals Fj ˜α∗j , ˜β∗j i , history in the first j − 1 rounds (z1, . . . , zj−1) ∈ j−1 k=1 ωk cont, and history so far in round j, v ∈ V j \\ Zj .",
                "Let ˜z = (z1, . . . , zj−1, v) represent all of the player actions leading to this information set.",
                "Thus, we can uniquely specify this information set using the information Fj ˜α∗j , ˜β∗j i , ˜z .",
                "Each node in an information set corresponds to the possible private signals the other players have received.",
                "Denote by ˜β some legal (Fj (˜αj , ˜βj 1), . . . , Fj (˜αj , ˜βj i−1), Fj (˜αj , ˜βj i+1), . . . , Fj (˜αj , ˜βj n)).",
                "In other words, there exists (˜αj , ˜βj 1, . . . , ˜βj n) such that (˜αj , ˜βj i ) ∈ Fj (˜α∗j , ˜β∗j i ), (˜αj , ˜βj k) ∈ Fj (˜αj , ˜βj k) for k = i, and no signals are repeated.",
                "Using such a set of signals (˜αj , ˜βj 1, . . . , ˜βj n), let ˆβ denote (F j (˜αj , ˜βj 1), . . . , F j (˜αj , ˜βj i−1), F j (˜αj , ˜βj i+1), . . . , F j (˜αj , ˜βj n). (We will abuse notation and write F j −i ˆβ = ˆβ .)",
                "We can now compute μ directly from μ : μ ˆβ | Fj ˜αj , ˜βj i , ˜z = 8 >>>>>>< >>>>>>: μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i or ˆβ = ˆβ p∗ μ ˆβ | F j ˜αj , ˜βj i , ˜z if Fj ˜αj , ˜βj i = F j ˜αj , ˜βj i and ˆβ = ˆβ 164 J1 J2 J2 K1 K1 K2 K2 c b C B F B f b c b C B F B f b c b C f b B BF c b C f b B BF c b C B F B f b c b C BF B f b c b C f b B BF c b C f b B BF c b C f b B BF c b C f b B BF c b C B F B f b c b C B F B f b 0 0 0-1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -1 -1 -1 -1 -1-1 -1 -1 -1 -1 -10 0 0 0 0 0 0 0 0 -1 -2 -2 -1 -2 -2 -1 -2 -2 -1 -2 -2 1 2 2 1 2 2 1 2 2 1 2 2 J1 K1 K2 J1 J2 K2 J1 J2 K1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 {{J1}, {J2}, {K1}, {K2}} {{J1,J2}, {K1}, {K2}} c b C BF B f b c b C f b B BF c b C B F B f b J1,J2 K1 K2 1 1 c b C f b B BF c b C BF B f b c b C BF B f b c b C B F B f b J1,J2 K1 K2 1 1 1 1 J1,J2 K2 J1,J2 K1 0 0 0-1 -1 -1 -1 -1 -1 -1 -2 -2 -1 -2 -2 2 2 2 2 2 2 -1 -1-1 -1 0 0 0 1 2 2 -1 -1-1 -1 0 0 0 1 2 2 c b C B F B f b -1 -10 0 0 c b B F B f b -1 -1-1 -2 -2 c b C BF B f b 0 0 0-1 -1 c b C BF B f b J1,J2 J1,J2 J1,J2K1,K2 K1,K2 K1,K2 -1 -1 1 2 2 2 2 2 2 {{J1,J2}, {K1,K2}} 1 1 1 1 1/4 1/4 1/4 1/4 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/3 1/4 1/41/2 1/3 1/3 1/3 1/32/3 1/32/3 1/2 1/2 1/3 2/3 2/3 1/3 Figure 1: GameShrink applied to a tiny two-person four-card (two Jacks and two Kings) poker game.",
                "Next to each game tree is the range of the information filter F. Dotted lines denote information sets, which are labeled by the controlling player.",
                "Open circles are chance nodes with the indicated transition probabilities.",
                "The root node is the chance node for player 1s card, and the next level is for player 2s card.",
                "The payment from player 2 to player 1 is given below each leaf.",
                "In this example, the algorithm reduces the game tree from 53 nodes to 19 nodes. where p∗ = Pr(ˆβ | F j (˜αj , ˜β j i )) Pr(ˆβ | F j (˜αj , ˜β j i )) .",
                "The following three claims show that μ as calculated above supports σ as a Nash equilibrium.",
                "Claim 1. μ is a valid belief system for ΓF .",
                "Claim 2.",
                "For all information sets h with Pr(h | σ) > 0, μ(x) = Pr(x | σ) Pr(h | σ) for all x ∈ h. Claim 3.",
                "For all information sets h with Pr(h | σ) > 0, σ is sequentially rational at h given μ.",
                "The proofs of Claims 1-3 are in an extended version of this paper [13].",
                "By Claims 1 and 2, we know that condition C2 holds.",
                "By Claim 3, we know that condition C1 holds.",
                "Thus, σ is a Nash equilibrium. 3.1 Nontriviality of generalizing beyond this model Our model does not capture general sequential games of imperfect information because it is restricted in two ways (as discussed above): 1) there is a special structure connecting the player actions and the chance actions (for one, the players are assumed to observe each others actions, but natures actions might not be publicly observable), and 2) there is a common ordering of signals.",
                "In this subsection we show that removing either of these conditions can make our technique invalid.",
                "First, we demonstrate a failure when removing the first assumption.",
                "Consider the game in Figure 2.6 Nodes a and b are in the same information set, have the same parent (chance) node, have isomorphic subtrees with the same payoffs, and nodes c and d also have similar structural properties.",
                "By merging the subtrees beginning at a and b, we get the game on the right in Figure 2.",
                "In this game, player 1s only Nash equilibrium strategy is to play left.",
                "But in the original game, player 1 knows that node c will never be reached, and so should play right in that information set. 1/4 1/4 1/4 1/4 2 2 2 1 1 1 2 1 2 3 0 3 0 -10 10 1/2 1/4 1/4 2 2 2 1 1 2 3 0 3 0 a b 2 2 2 10-10 c d Figure 2: Example illustrating difficulty in developing a theory of equilibrium-preserving abstractions for general extensive form games.",
                "Removing the second assumption (that the utility functions are based on a common ordering of signals) can also cause failure.",
                "Consider a simple three-card game with a deck containing two Jacks (J1 and J2) and a King (K), where player 1s utility function is based on the ordering 6 We thank Albert Xin Jiang for providing this example. 165 K J1 ∼ J2 but player 2s utility function is based on the ordering J2 K J1.",
                "It is easy to check that in the abstracted game (where Player 1 treats J1 and J2 as being equivalent) the Nash equilibrium does not correspond to a Nash equilibrium in the original game.7 4.",
                "GAMESHRINK: AN EFFICIENT ALGORITHM FOR COMPUTING ORDERED GAME ISOMORPHIC ABSTRACTION TRANSFORMATIONS This section presents an algorithm, GameShrink, for conducting the abstractions.",
                "It only needs to analyze the signal tree discussed above, rather than the entire game tree.",
                "We first present a subroutine that GameShrink uses.",
                "It is a dynamic program for computing the ordered game isomorphic relation.",
                "Again, it operates on the signal tree.",
                "Algorithm 1.",
                "OrderedGameIsomorphic? (Γ, ϑ, ϑ ) 1.",
                "If ϑ and ϑ have different parents, then return false. 2.",
                "If ϑ and ϑ are both leaves of the signal tree: (a) If ur (ϑ | ˜z) = ur (ϑ | ˜z) for all ˜z ∈ r−1 j=1 ωj cont × ωr over, then return true. (b) Otherwise, return false. 3.",
                "Create a bipartite graph Gϑ,ϑ = (V1, V2, E) with V1 = N(ϑ) and V2 = N(ϑ ). 4.",
                "For each v1 ∈ V1 and v2 ∈ V2: If OrderedGameIsomorphic? (Γ, v1, v2) Create edge (v1, v2) 5.",
                "Return true if Gϑ,ϑ has a perfect matching; otherwise, return false.",
                "By evaluating this dynamic program from bottom to top, Algorithm 1 determines, in time polynomial in the size of the signal tree, whether or not any pair of equal depth nodes x and y are ordered game isomorphic.",
                "We can further speed up this computation by only examining nodes with the same parent, since we know (from step 1) that no nodes with different parents are ordered game isomorphic.",
                "The test in step 2(a) can be computed in O(1) time by consulting the relation from the specification of the game.",
                "Each call to OrderedGameIsomorphic? performs at most one perfect matching computation on a bipartite graph with O(|Θ|) nodes and O(|Θ|2 ) edges (recall that Θ is the set of signals).",
                "Using the Ford-Fulkerson algorithm [12] for finding a maximal matching, this takes O(|Θ|3 ) time.",
                "Let S be the maximum number of signals possibly revealed in the game (e.g., in Rhode Island Holdem, S = 4 because each of the two players has one card in the hand plus there are two cards on the table).",
                "The number of nodes, n, in the signal tree is O(|Θ|S ).",
                "The dynamic program visits each node in the signal tree, with each visit requiring O(|Θ|2 ) calls to the OrderedGameIsomorphic? routine.",
                "So, it takes O(|Θ|S |Θ|3 |Θ|2 ) = O(|Θ|S+5 ) time to compute the entire ordered game isomorphic relation.",
                "While this is exponential in the number of revealed signals, we now show that it is polynomial in the size of the signal tree-and thus polynomial in the size of the game tree 7 We thank an anonymous person for this example. because the signal tree is smaller than the game tree.",
                "The number of nodes in the signal tree is n = 1 + SX i=1 iY j=1 (|Θ| − j + 1) (Each term in the summation corresponds to the number of nodes at a specific depth of the tree.)",
                "The number of leaves is SY j=1 (|Θ| − j + 1) = |Θ| S !",
                "S! which is a lower bound on the number of nodes.",
                "For large |Θ| we can use the relation `n k ´ ∼ nk k! to get |Θ| S !",
                "S! ∼ „ |Θ|S S! « S! = |Θ|S and thus the number of leaves in the signal tree is Ω(|Θ|S ).",
                "Thus, O(|Θ|S+5 ) = O(n|Θ|5 ), which proves that we can indeed compute the ordered game isomorphic relation in time polynomial in the number of nodes, n, of the signal tree.",
                "The algorithm often runs in sublinear time (and space) in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games. (Note that the input to the algorithm is not an explicit game tree, but a specification of the rules, so the algorithm does not need to read in the game tree.)",
                "See Figure 1.",
                "In general, if an ordered game has r rounds, and each rounds stage game has at least b nonterminal leaves, then the size of the signal tree is at most 1 br of the size of the game tree.",
                "For example, in Rhode Island Holdem, the game tree has 3.1 billion nodes while the signal tree only has 6,632,705.",
                "Given the OrderedGameIsomorphic? routine for determining ordered game isomorphisms in an ordered game, we are ready to present the main algorithm, GameShrink.",
                "Algorithm 2.",
                "GameShrink (Γ) 1.",
                "Initialize F to be the identity filter for Γ. 2.",
                "For j from 1 to r: For each pair of sibling nodes ϑ, ϑ at either levelPj−1 k=1 ` κk + nγk ´ or Pj k=1 κk + Pj−1 k=1 nγk in the filtered (according to F) signal tree: If OrderedGameIsomorphic? (Γ, ϑ, ϑ ), then Fj (ϑ) ← Fj (ϑ ) ← Fj (ϑ) ∪ Fj (ϑ ). 3.",
                "Output F. Given as input an ordered game Γ, GameShrink applies the shrinking ideas presented above as aggressively as possible.",
                "Once it finishes, there are no contractible nodes (since it compares every pair of nodes at each level of the signal tree), and it outputs the corresponding information filter F. The correctness of GameShrink follows by a repeated application of Theorem 2.",
                "Thus, we have the following result: Theorem 3.",
                "GameShrink finds all ordered game isomorphisms and applies the associated ordered game isomorphic abstraction transformations.",
                "Furthermore, for any Nash equilibrium, σ , of the abstracted game, the strategy profile constructed for the original game from σ is a Nash equilibrium.",
                "The dominating factor in the run time of GameShrink is in the rth iteration of the main for-loop.",
                "There are at most 166 `|Θ| S ´ S! nodes at this level, where we again take S to be the maximum number of signals possibly revealed in the game.",
                "Thus, the inner for-loop executes O „`|Θ| S ´ S! 2 « times.",
                "As discussed in the next subsection, we use a union-find data structure to represent the information filter F. Each iteration of the inner for-loop possibly performs a union operation on the data structure; performing M operations on a union-find data structure containing N elements takes O(α(M, N)) amortized time per operation, where α(M, N) is the inverse Ackermanns function [1, 49] (which grows extremely slowly).",
                "Thus, the total time for GameShrink is O „`|Θ| S ´ S! 2 α „`|Θ| S ´ S! 2 , |Θ|S «« .",
                "By the inequality `n k ´ ≤ nk k! , this is O ` (|Θ|S )2 α ` (|Θ|S )2 , |Θ|S ´´ .",
                "Again, although this is exponential in S, it is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "Furthermore, GameShrink tends to actually run in sublinear time and space in the size of the game tree because the signal tree is significantly smaller than the game tree in most nontrivial games, as discussed above. 4.1 Efficiency enhancements We designed several speed enhancement techniques for GameShrink, and all of them are incorporated into our implementation.",
                "One technique is the use of the union-find data structure for storing the information filter F. This data structure uses time almost linear in the number of operations [49].",
                "Initially each node in the signalling tree is its own set (this corresponds to the identity information filter); when two nodes are contracted they are joined into a new set.",
                "Upon termination, the filtered signals for the abstracted game correspond exactly to the disjoint sets in the data structure.",
                "This is an efficient method of recording contractions within the game tree, and the memory requirements are only linear in the size of the signal tree.",
                "Determining whether two nodes are ordered game isomorphic requires us to determine if a bipartite graph has a perfect matching.",
                "We can eliminate some of these computations by using easy-to-check necessary conditions for the ordered game isomorphic relation to hold.",
                "One such condition is to check that the nodes have the same number of chances as being ranked (according to ) higher than, lower than, and the same as the opponents.",
                "We can precompute these frequencies for every game tree node.",
                "This substantially speeds up GameShrink, and we can leverage this database across multiple runs of the algorithm (for example, when trying different abstraction levels; see next section).",
                "The indices for this database depend on the private and public signals, but not the order in which they were revealed, and thus two nodes may have the same corresponding database entry.",
                "This makes the database significantly more compact. (For example in Texas Holdem, the database is reduced by a factor `50 3 ´`47 1 ´`46 1 ´ / `50 5 ´ = 20.)",
                "We store the histograms in a 2-dimensional database.",
                "The first dimension is indexed by the private signals, the second by the public signals.",
                "The problem of computing the index in (either) one of the dimensions is exactly the problem of computing a bijection between all subsets of size r from a set of size n and integers in ˆ 0, . . . , `n r ´ − 1 ˜ .",
                "We efficiently compute this using the subsets colexicographical ordering [6].",
                "Let {c1, . . . , cr}, ci ∈ {0, . . . , n − 1}, denote the r signals and assume that ci < ci+1.",
                "We compute a unique index for this set of signals as follows: index(c1, . . . , cr) = Pr i=1 `ci i ´ . 5.",
                "APPROXIMATION METHODS Some games are too large to compute an exact equilibrium, even after using the presented abstraction technique.",
                "This section discusses general techniques for computing approximately optimal strategy profiles.",
                "For a two-player game, we can always evaluate the worst-case performance of a strategy, thus providing some objective evaluation of the strength of the strategy.",
                "To illustrate this, suppose we know player 2s planned strategy for some game.",
                "We can then fix the probabilities of player 2s actions in the game tree as if they were chance moves.",
                "Then player 1 is faced with a single-agent decision problem, which can be solved bottomup, maximizing expected payoff at every node.",
                "Thus, we can objectively determine the expected worst-case performance of player 2s strategy.",
                "This will be most useful when we want to evaluate how well a given strategy performs when we know that it is not an equilibrium strategy. (A variation of this technique may also be applied in n-person games where only one players strategies are held fixed.)",
                "This technique provides ex post guarantees about the worst-case performance of a strategy, and can be used independently of the method that is used to compute the strategies. 5.1 State-space approximations By slightly modifying GameShrink, we can obtain an algorithm that yields even smaller game trees, at the expense of losing the equilibrium guarantees of Theorem 2.",
                "Instead of requiring the payoffs at terminal nodes to match exactly, we can instead compute a penalty that increases as the difference in utility between two nodes increases.",
                "There are many ways in which the penalty function could be defined and implemented.",
                "One possibility is to create edge weights in the bipartite graphs used in Algorithm 1, and then instead of requiring perfect matchings in the unweighted graph we would instead require perfect matchings with low cost (i.e., only consider two nodes to be ordered game isomorphic if the corresponding bipartite graph has a perfect matching with cost below some threshold).",
                "Thus, with this threshold as a parameter, we have a knob to turn that in one extreme (threshold = 0) yields an optimal abstraction and in the other extreme (threshold = ∞) yields a highly abstracted game (this would in effect restrict players to ignoring all signals, but still observing actions).",
                "This knob also begets an anytime algorithm.",
                "One can solve increasingly less abstracted versions of the game, and evaluate the quality of the solution at every iteration using the ex post method discussed above. 5.2 Algorithmic approximations In the case of two-player zero-sum games, the equilibrium computation can be modeled as a linear program (LP), which can in turn be solved using the simplex method.",
                "This approach has inherent features which we can leverage into desirable properties in the context of solving games.",
                "In the LP, primal solutions correspond to strategies of player 2, and dual solutions correspond to strategies of player 1.",
                "There are two versions of the simplex method: the primal simplex and the dual simplex.",
                "The primal simplex maintains primal feasibility and proceeds by finding better and better primal solutions until the dual solution vector is feasible, 167 at which point optimality has been reached.",
                "Analogously, the dual simplex maintains dual feasibility and proceeds by finding increasingly better dual solutions until the primal solution vector is feasible. (The dual simplex method can be thought of as running the primal simplex method on the dual problem.)",
                "Thus, the primal and dual simplex methods serve as anytime algorithms (for a given abstraction) for players 2 and 1, respectively.",
                "At any point in time, they can output the best strategies found so far.",
                "Also, for any feasible solution to the LP, we can get bounds on the quality of the strategies by examining the primal and dual solutions. (When using the primal simplex method, dual solutions may be read off of the LP tableau.)",
                "Every feasible solution of the dual yields an upper bound on the optimal value of the primal, and vice versa [9, p. 57].",
                "Thus, without requiring further computation, we get lower bounds on the expected utility of each agents strategy against that agents worst-case opponent.",
                "One problem with the simplex method is that it is not a primal-dual algorithm, that is, it does not maintain both primal and dual feasibility throughout its execution. (In fact, it only obtains primal and dual feasibility at the very end of execution.)",
                "In contrast, there are interior-point methods for linear programming that maintain primal and dual feasibility throughout the execution.",
                "For example, many interiorpoint path-following algorithms have this property [55, Ch. 5].",
                "We observe that running such a linear programming method yields a method for finding -equilibria (i.e., strategy profiles in which no agent can increase her expected utility by more than by deviating).",
                "A threshold on can also be used as a termination criterion for using the method as an anytime algorithm.",
                "Furthermore, interior-point methods in this class have polynomial-time worst-case run time, as opposed to the simplex algorithm, which takes exponentially many steps in the worst case. 6.",
                "RELATED RESEARCH Functions that transform extensive form games have been introduced [50, 11].",
                "In contrast to our work, those approaches were not for making the game smaller and easier to solve.",
                "The main result is that a game can be derived from another by a sequence of those transformations if and only if the games have the same pure reduced normal form.",
                "The pure reduced normal form is the extensive form game represented as a game in normal form where duplicates of pure strategies (i.e., ones with identical payoffs) are removed and players essentially select equivalence classes of strategies [27].",
                "An extension to that work shows a similar result, but for slightly different transformations and mixed reduced normal form games [21].",
                "Modern treatments of this prior work on game transformations exist [38, Ch. 6], [10].",
                "The recent notion of weak isomorphism in extensive form games [7] is related to our notion of restricted game isomorphism.",
                "The motivation of that work was to justify solution concepts by arguing that they are invariant with respect to isomorphic transformations.",
                "Indeed, the author shows, among other things, that many solution concepts, including Nash, perfect, subgame perfect, and sequential equilibrium, are invariant with respect to weak isomorphisms.",
                "However, that definition requires that the games to be tested for weak isomorphism are of the same size.",
                "Our focus is totally different: we find strategically equivalent smaller games.",
                "Also, their paper does not provide algorithms.",
                "Abstraction techniques have been used in artificial intelligence research before.",
                "In contrast to our work, most (but not all) research involving abstraction has been for singleagent problems (e.g. [20, 32]).",
                "Furthermore, the use of abstraction typically leads to sub-optimal solutions, unlike the techniques presented in this paper, which yield optimal solutions.",
                "A notable exception is the use of abstraction to compute optimal strategies for the game of Sprouts [2].",
                "However, a significant difference to our work is that Sprouts is a game of perfect information.",
                "One of the first pieces of research to use abstraction in multi-agent settings was the development of partition search, which is the algorithm behind GIB, the worlds first expertlevel computer bridge player [17, 18].",
                "In contrast to other game tree search algorithms which store a particular game position at each node of the search tree, partition search stores groups of positions that are similar. (Typically, the similarity of two game positions is computed by ignoring the less important components of each game position and then checking whether the abstracted positions are similar-in some domain-specific expert-defined sense-to each other.)",
                "Partition search can lead to substantial speed improvements over α-β-search.",
                "However, it is not game theory-based (it does not consider information sets in the game tree), and thus does not solve for the equilibrium of a game of imperfect information, such as poker.8 Another difference is that the abstraction is defined by an expert human while our abstractions are determined automatically.",
                "There has been some research on the use of abstraction for imperfect information games.",
                "Most notably, Billings et al [4] describe a manually constructed abstraction for Texas Holdem poker, and include promising results against expert players.",
                "However, this approach has significant drawbacks.",
                "First, it is highly specialized for Texas Holdem.",
                "Second, a large amount of expert knowledge and effort was used in constructing the abstraction.",
                "Third, the abstraction does not preserve equilibrium: even if applied to a smaller game, it might not yield a game-theoretic equilibrium.",
                "Promising ideas for abstraction in the context of general extensive form games have been described in an extended abstract [39], but to our knowledge, have not been fully developed. 7.",
                "CONCLUSIONS AND DISCUSSION We introduced the ordered game isomorphic abstraction transformation and gave an algorithm, GameShrink, for abstracting the game using the isomorphism exhaustively.",
                "We proved that in games with ordered signals, any Nash equilibrium in the smaller abstracted game maps directly to a Nash equilibrium in the original game.",
                "The complexity of GameShrink is ˜O(n2 ), where n is the number of nodes in the signal tree.",
                "It is no larger than the game tree, and on nontrivial games it is drastically smaller, so GameShrink has time and space complexity sublinear in 8 Bridge is also a game of imperfect information, and partition search does not find the equilibrium for that game either.",
                "Instead, partition search is used in conjunction with statistical sampling to simulate the uncertainty in bridge.",
                "There are also other bridge programs that use search techniques for perfect information games in conjunction with statistical sampling and expert-defined abstraction [48].",
                "Such (non-game-theoretic) techniques are unlikely to be competitive in poker because of the greater importance of information hiding and bluffing. 168 the size of the game tree.",
                "Using GameShrink, we found a minimax equilibrium to Rhode Island Holdem, a poker game with 3.1 billion nodes in the game tree-over four orders of magnitude more than in the largest poker game solved previously.",
                "To further improve scalability, we introduced an approximation variant of GameShrink, which can be used as an anytime algorithm by varying a parameter that controls the coarseness of abstraction.",
                "We also discussed how (in a two-player zero-sum game), linear programming can be used in an anytime manner to generate approximately optimal strategies of increasing quality.",
                "The method also yields bounds on the suboptimality of the resulting strategies.",
                "We are currently working on using these techniques for full-scale 2-player limit Texas Holdem poker, a highly popular card game whose game tree has about 1018 nodes.",
                "That game tree size has required us to use the approximation version of GameShrink (as well as round-based abstraction) [16, 15]. 8.",
                "REFERENCES [1] W. Ackermann.",
                "Zum Hilbertschen Aufbau der reellen Zahlen.",
                "Math.",
                "Annalen, 99:118-133, 1928. [2] D. Applegate, G. Jacobson, and D. Sleator.",
                "Computer analysis of sprouts.",
                "Technical Report CMU-CS-91-144, 1991. [3] R. Bellman and D. Blackwell.",
                "Some two-person games involving bluffing.",
                "PNAS, 35:600-605, 1949. [4] D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron.",
                "Approximating game-theoretic optimal strategies for full-scale poker.",
                "In IJCAI, 2003. [5] D. Billings, A. Davidson, J. Schaeffer, and D. Szafron.",
                "The challenge of poker.",
                "Artificial Intelligence, 134:201-240, 2002. [6] B. Bollob´as.",
                "Combinatorics.",
                "Cambridge University Press, 1986. [7] A. Casajus.",
                "Weak isomorphism of extensive games.",
                "Mathematical Social Sciences, 46:267-290, 2003. [8] X. Chen and X. Deng.",
                "Settling the complexity of 2-player Nash equilibrium.",
                "ECCC, Report No. 150, 2005. [9] V. Chv´atal.",
                "Linear Programming.",
                "W. H. Freeman & Co., 1983. [10] B. P. de Bruin.",
                "Game transformations and game equivalence.",
                "Technical note x-1999-01, University of Amsterdam, Institute for Logic, Language, and Computation, 1999. [11] S. Elmes and P. J. Reny.",
                "On the strategic equivalence of extensive form games.",
                "J. of Economic Theory, 62:1-23, 1994. [12] L. R. Ford, Jr. and D. R. Fulkerson.",
                "Flows in Networks.",
                "Princeton University Press, 1962. [13] A. Gilpin and T. Sandholm.",
                "Finding equilibria in large sequential games of imperfect information.",
                "Technical Report CMU-CS-05-158, Carnegie Mellon University, 2005. [14] A. Gilpin and T. Sandholm.",
                "Optimal Rhode Island Holdem poker.",
                "In AAAI, pages 1684-1685, Pittsburgh, PA, USA, 2005. [15] A. Gilpin and T. Sandholm.",
                "A competitive Texas Holdem poker player via automated abstraction and real-time equilibrium computation.",
                "Mimeo, 2006. [16] A. Gilpin and T. Sandholm.",
                "A Texas Holdem poker player based on automated abstraction and real-time equilibrium computation.",
                "In AAMAS, Hakodate, Japan, 2006. [17] M. L. Ginsberg.",
                "Partition search.",
                "In AAAI, pages 228-233, Portland, OR, 1996. [18] M. L. Ginsberg.",
                "GIB: Steps toward an expert-level bridge-playing program.",
                "In IJCAI, Stockholm, Sweden, 1999. [19] S. Govindan and R. Wilson.",
                "A global Newton method to compute Nash equilibria.",
                "J. of Econ.",
                "Theory, 110:65-86, 2003. [20] C. A. Knoblock.",
                "Automatically generating abstractions for planning.",
                "Artificial Intelligence, 68(2):243-302, 1994. [21] E. Kohlberg and J.-F. Mertens.",
                "On the strategic stability of equilibria.",
                "Econometrica, 54:1003-1037, 1986. [22] D. Koller and N. Megiddo.",
                "The complexity of two-person zero-sum games in extensive form.",
                "Games and Economic Behavior, 4(4):528-552, Oct. 1992. [23] D. Koller and N. Megiddo.",
                "Finding mixed strategies with small supports in extensive form games.",
                "International Journal of Game Theory, 25:73-92, 1996. [24] D. Koller, N. Megiddo, and B. von Stengel.",
                "Efficient computation of equilibria for extensive two-person games.",
                "Games and Economic Behavior, 14(2):247-259, 1996. [25] D. Koller and A. Pfeffer.",
                "Representations and solutions for game-theoretic problems.",
                "Artificial Intelligence, 94(1):167-215, July 1997. [26] D. M. Kreps and R. Wilson.",
                "Sequential equilibria.",
                "Econometrica, 50(4):863-894, 1982. [27] H. W. Kuhn.",
                "Extensive games.",
                "PNAS, 36:570-576, 1950. [28] H. W. Kuhn.",
                "A simplified two-person poker.",
                "In Contributions to the Theory of Games, volume 1 of Annals of Mathematics Studies, 24, pages 97-103.",
                "Princeton University Press, 1950. [29] H. W. Kuhn.",
                "Extensive games and the problem of information.",
                "In Contributions to the Theory of Games, volume 2 of Annals of Mathematics Studies, 28, pages 193-216.",
                "Princeton University Press, 1953. [30] C. Lemke and J. Howson.",
                "Equilibrium points of bimatrix games.",
                "Journal of the Society for Industrial and Applied Mathematics, 12:413-423, 1964. [31] R. Lipton, E. Markakis, and A. Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [32] C.-L. Liu and M. Wellman.",
                "On state-space abstraction for anytime evaluation of Bayesian networks.",
                "SIGART Bulletin, 7(2):50-57, 1996. [33] A. Mas-Colell, M. Whinston, and J. R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [34] R. D. McKelvey and A. McLennan.",
                "Computation of equilibria in finite games.",
                "In Handbook of Computational Economics, volume 1, pages 87-142.",
                "Elsevier, 1996. [35] P. B. Miltersen and T. B. Sørensen.",
                "Computing sequential equilibria for two-player games.",
                "In SODA, pages 107-116, 2006. [36] J. Nash.",
                "Equilibrium points in n-person games.",
                "Proc. of the National Academy of Sciences, 36:48-49, 1950. [37] J. F. Nash and L. S. Shapley.",
                "A simple three-person poker game.",
                "In Contributions to the Theory of Games, volume 1, pages 105-116.",
                "Princeton University Press, 1950. [38] A. Perea.",
                "Rationality in extensive form games.",
                "Kluwer Academic Publishers, 2001. [39] A. Pfeffer, D. Koller, and K. Takusagawa.",
                "State-space approximations for extensive form games, July 2000.",
                "Talk given at the First International Congress of the Game Theory Society, Bilbao, Spain. [40] R. Porter, E. Nudelman, and Y. Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, San Jose, CA, USA, 2004. [41] I. Romanovskii.",
                "Reduction of a game with complete memory to a matrix game.",
                "Soviet Mathematics, 3:678-681, 1962. [42] T. Sandholm and A. Gilpin.",
                "Sequences of take-it-or-leave-it offers: Near-optimal auctions without full valuation revelation.",
                "In AAMAS, Hakodate, Japan, 2006. [43] T. Sandholm, A. Gilpin, and V. Conitzer.",
                "Mixed-integer programming methods for finding Nash equilibria.",
                "In AAAI, pages 495-501, Pittsburgh, PA, USA, 2005. [44] R. Savani and B. von Stengel.",
                "Exponentially many steps for finding a Nash equilibrium in a bimatrix game.",
                "In FOCS, pages 258-267, 2004. [45] R. Selten.",
                "Spieltheoretische behandlung eines oligopolmodells mit nachfragetr¨agheit.",
                "Zeitschrift f¨ur die gesamte Staatswissenschaft, 12:301-324, 1965. [46] R. Selten.",
                "Evolutionary stability in extensive two-person games - correction and further development.",
                "Mathematical Social Sciences, 16:223-266, 1988. [47] J. Shi and M. Littman.",
                "Abstraction methods for game theoretic poker.",
                "In Computers and Games, pages 333-345.",
                "Springer-Verlag, 2001. [48] S. J. J. Smith, D. S. Nau, and T. Throop.",
                "Computer bridge: A big win for AI planning.",
                "AI Magazine, 19(2):93-105, 1998. [49] R. E. Tarjan.",
                "Efficiency of a good but not linear set union algorithm.",
                "Journal of the ACM, 22(2):215-225, 1975. [50] F. Thompson.",
                "Equivalence of games in extensive form.",
                "RAND Memo RM-759, The RAND Corporation, Jan. 1952. [51] J. von Neumann and O. Morgenstern.",
                "Theory of games and economic behavior.",
                "Princeton University Press, 1947. [52] B. von Stengel.",
                "Efficient computation of behavior strategies.",
                "Games and Economic Behavior, 14(2):220-246, 1996. [53] B. von Stengel.",
                "Computing equilibria for two-person games.",
                "In Handbook of Game Theory, volume 3.",
                "North Holland, Amsterdam, 2002. [54] R. Wilson.",
                "Computing equilibria of two-person games from the extensive form.",
                "Management Science, 18(7):448-460, 1972. [55] S. J. Wright.",
                "Primal-Dual Interior-Point Methods.",
                "SIAM, 1997. 169"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}