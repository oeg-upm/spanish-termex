{
    "id": "C-56",
    "original_text": "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost. Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion. In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment. Their advantages are automatic and structured distribution of activities and easy process monitoring and steering. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1. INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains. This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8]. Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution. Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12]. This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery. There are few proposed middleware infrastructures that support process execution over the grid. In general, they model processes by interconnecting their activities through control and data dependencies. Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks. However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13]. In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure. The programming model employs structured control flow to promote controlled and contextualized activity execution. Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication. The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way. Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model. Section 4 demonstrates how the support infrastructure executes processes and distributes activities. Related works are presented and compared to the proposed model in Section 5. The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2. PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2]. Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control. The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes. In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem. In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1). Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses. Like structured languages, controllers can be nested and then determine the execution order of other controllers. Data are exchanged among process elements through parameters. They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process. External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes. There are sequential and parallel controllers. The sequential controller types are: block, switch, for and while. The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs. Similarly, the parallel types are: par, parswitch, parfor and parwhile. They extend the respective sequential counterparts to allow parallel execution of process elements. All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish. Indeed, they contain a fork and a join of execution. Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end. The parfor and parwhile are the iterative versions of the parallel controller types. Both fork executions while the iteration condition is true. This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously. When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range. The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers. The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined. It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work. At the end, the found prime numbers are returned as a collection through its output parameter. This process contains a PARFOR controller aiming to execute a determined number of parallel activities. It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration. In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange. These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached. Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange. It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers. Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime. Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true. The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead. Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3. SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments. It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy. Generally, localized machines and repositories, such as in local networks or clusters, form a group. Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM). This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2). In a group there are one or more group managers, but only one acts as primary and the others, as replicas. They are responsible to maintain availability information of group machines. Moreover, group managers maintain references to data resources of the group. They use group repositories to persist and recover the location of nodes and their availability. To control process execution, there are one or more process coordinators per group. They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers. In order to persist and recover process execution and data, and also load process specification, they use group repositories. Finally, in several group nodes there is an activity manager. It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers. They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does. Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3). Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability. Additionally, group managers communicate to group managers of other groups. Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information. In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4. PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow. After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types. At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group. Also, the initial parameters must be passed to it, and then it can be started. The process coordinator carries out the process by executing the process elements included in its body sequentially. If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available. Else, if the element is an activity, it passes to an activity manager of an available machine. Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element. Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid. It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group. Obeying this rule, group managers try to find process servers in the same group of the available workers. Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process. Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources. The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups. Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers. In order to solve this problem, it creates a number of activities using the parfor controller. Each activity, then, finds primes in a determined part of the range of numbers. Figure 4 shows an instance of this process type executing over the proposed infrastructure. A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller. In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity. If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution. Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created. In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller. Then, the controller waits until all activities that have been started are finished, and it ends. At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5. RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks. Among them, Globus [6], Condor-G [9] and Legion [10] are widely known. Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined. The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones. However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order. They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms. Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment. Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution. The previously referred architectures and others that enact processes over the grid have a centralized coordination. In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment. In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable. It uses a two-level scheduling: global and local. In the local level, it has services that predict computing resource utilization and activity duration. Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources. The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant. But, like the latter, it is designed to support execution recovery. Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next. This makes easier to monitor and control processes. Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one. This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups. This can limit the overall performance of processes, and make the system less scalable. 6. CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing. There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks. In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner. This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller. These features contribute to better scalability, fault-tolerance and control for processes execution over the grid. Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes. The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution. After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance. Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7. ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8. REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt. WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing. In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera. Specification: Business Process Execution Language for W eb Services V ersion 1.1. IBM DeveloperWorks, 2003. Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch. O PERA -G :A M icrokernelfor Com putationalG rids. PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli. Extensible M arkup Language (X M L) 1.0. XML Core WG, W3C, 2004. Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd. GridFlow: Workflow Management for Grid Computing. In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I. Foster and C. Kesselman. Globus: A Metacomputing Infrastructure Toolkit. Intl.J. Supercom puter A pplications, 11(2):115-128, 1997. [7] I. Foster, C. Kesselman, J. M. Nick, and S. Tuecke. The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I. Foster, C. Kesselman, and S. Tuecke. The Anatomy of the Grid: Enabling Scalable Virtual Organization. The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I. Foster, and S. Tuecke. Condor-G: A Computational Management Agent for Multi-institutional Grids. In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10). IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf. Legion - A View from 50,000 Feet. In Proceedings ofthe Fifth Intl. Sym posium on H igh Perform ance D istributed Com puting. IEEE, 1996. [11] T. Lindholm and F. Yellin. The Java V irtualM achine Specification. Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira. Grid Computing with Active Services. Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia. Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support. In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003. Middleware for Grid Computing 92",
    "original_translation": "Un soporte de ejecuciÃ³n de procesos jerÃ¡rquicos para la computaciÃ³n de la red FÃ¡bio R. L. Cicerre Instituto de ComputaciÃ³n de la Universidad Estatal de Campinas Campinas, Brasil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Instituto de ComputaciÃ³n de la ComputaciÃ³n de la Universidad Estatal de Campinas, Brasil edmundo@ic.unicamp.br Luiz E E. Buzato Institute of Computing State University of Campinas Campinas, Brasil Buzato@ic.unicamp.Br Abstract Grid es una infraestructura emergente utilizada para compartir recursos entre las organizaciones virtuales de una manera perfecta y proporcionar un poder informÃ¡tico innovador a bajo costo. Hoy en dÃ­a hay docenas de productos acadÃ©micos y comerciales que permiten la ejecuciÃ³n de tareas aisladas en las redes, pero pocos productos respaldan la promulgaciÃ³n de procesos de larga duraciÃ³n de manera distribuida. Para abordar dicho tema, este documento presenta un modelo de programaciÃ³n y una infraestructura que programa jerÃ¡rquicamente las actividades de procesos utilizando nodos disponibles en un entorno de cuadrÃ­cula amplio. Sus ventajas son la distribuciÃ³n automÃ¡tica y estructurada de las actividades y el fÃ¡cil monitoreo y direcciÃ³n de procesos. CategorÃ­as y descriptores de sujetos C.2.4 [Redes de comunicaciÃ³n por computadora]: aplicaciones distribuidas distribuidas TÃ©rminos generales DiseÃ±o, rendimiento, gestiÃ³n, algoritmos 1. IntroducciÃ³n La computaciÃ³n de la cuadrÃ­cula es un modelo para la computaciÃ³n distribuida y paralela de Ã¡rea amplia a travÃ©s de redes heterogÃ©neas en mÃºltiples dominios administrativos. Este campo de investigaciÃ³n tiene como objetivo promover el intercambio de recursos y proporciona poder informÃ¡tico innovador sobre esta amplia red de organizaciones virtuales de manera perfecta [8]. Tradicionalmente, como en Globus [6], Condor-G [9] y Legion [10], existe una infraestructura mÃ­nima que proporciona intercambio de recursos de datos, gestiÃ³n de utilizaciÃ³n de recursos computacionales y ejecuciÃ³n distribuida. EspecÃ­ficamente, considerando la ejecuciÃ³n distribuida, la mayorÃ­a de las infraestructuras de cuadrÃ­cula existentes admiten la ejecuciÃ³n de tareas aisladas, pero no consideran las interdependencias de sus tareas como en los procesos (flujos de trabajo) [12]. Esta deficiencia restringe mejores algoritmos de programaciÃ³n, coordinaciÃ³n de ejecuciÃ³n distribuida y recuperaciÃ³n de ejecuciÃ³n automÃ¡tica. Hay pocas infraestructuras de middleware propuestas que admiten la ejecuciÃ³n del proceso a travÃ©s de la cuadrÃ­cula. En general, modelan procesos interconectando sus actividades a travÃ©s de control y dependencias de datos. Entre ellos, Webflow [1] enfatiza una arquitectura para construir procesos distribuidos;Opera-G [3] proporciona recuperaciÃ³n de ejecuciÃ³n y direcciÃ³n, Gridflow [5] se centra en los algoritmos de programaciÃ³n mejorados que aprovechan las dependencias de actividades, y Swindew [13] admite la ejecuciÃ³n totalmente distribuida en redes entre pares. Sin embargo, tales infraestructuras contienen algoritmos de programaciÃ³n que estÃ¡n centralizados por el proceso [1, 3, 5] o completamente distribuidas, pero difÃ­ciles de monitorear y controlar [13]. Para abordar tales restricciones, este documento propone un modelo de programaciÃ³n estructurado para la descripciÃ³n del proceso y una infraestructura jerÃ¡rquica de ejecuciÃ³n del proceso. El modelo de programaciÃ³n emplea un flujo de control estructurado para promover la ejecuciÃ³n de la actividad controlada y contextualizada. Complementaria, la infraestructura de soporte, que ejecuta una especificaciÃ³n de proceso, aprovecha la estructura jerÃ¡rquica de un proceso especÃ­fico para distribuir y programar actividades dependientes fuertes como una unidad, lo que permite un mejor rendimiento de ejecuciÃ³n y tolerancia a fallas y proporcionar comunicaciÃ³n localizada. El modelo de programaciÃ³n y la infraestructura de soporte, llamada X Avantes, estÃ¡n en implementaciÃ³n para mostrar la viabilidad del modelo propuesto y demostrar sus dos ventajas principales: promover la ejecuciÃ³n y programaciÃ³n de procesos ampliamente distribuidas, pero en una programaciÃ³n controlada, estructurada y localizada.forma. La siguiente secciÃ³n describe el modelo de programaciÃ³n y la SecciÃ³n 3, la infraestructura de soporte para el modelo de computaciÃ³n de la cuadrÃ­cula propuesto. La SecciÃ³n 4 demuestra cÃ³mo la infraestructura de soporte ejecuta procesos y distribuye actividades. Los trabajos relacionados se presentan y se comparan con el modelo propuesto en la SecciÃ³n 5. La Ãºltima secciÃ³n concluye este documento que abarca las ventajas del soporte de ejecuciÃ³n de procesos jerÃ¡rquicos propuesto para el Ã¡rea informÃ¡tica de la red y enumera algunos trabajos futuros.87 Middleware 2004 Controlador de actividades de procesamiento de procesamiento complementario 1 * 1 * Figura 1: Marco de alto nivel del modelo de programaciÃ³n 2. Modelo de programaciÃ³n El modelo de programaciÃ³n diseÃ±ado para la arquitectura informÃ¡tica de la cuadrÃ­cula es muy similar al especificado al lenguaje de ejecuciÃ³n de procesos de negocios (BPEL) [2]. Ambos describen procesos en documentos XML [4], pero el primero especifica procesos estrictamente sincrÃ³nicos y estructurados, y tiene mÃ¡s construcciones para el control paralelo estructurado. La razÃ³n detrÃ¡s de su diseÃ±o es la posibilidad de distribuir jerÃ¡rquicamente el control y la coordinaciÃ³n del proceso basado en construcciones estructuradas, de manera diferente a BPEL, que no permite la composiciÃ³n jerÃ¡rquica de los procesos. En el modelo de programaciÃ³n propuesto, un proceso es un conjunto de actividades interdependientes organizadas para resolver un cierto problema. En detalle, un proceso estÃ¡ compuesto por actividades, subprocesos y controladores (ver Figura 1). Las actividades representan tareas simples que se ejecutan en nombre de un proceso;Los subprocesos son procesos ejecutados en el contexto de un proceso principal;y los controladores son elementos de control utilizados para especificar la orden de ejecuciÃ³n de estas actividades y subprocesos. Al igual que los lenguajes estructurados, los controladores pueden anidarse y luego determinar la orden de ejecuciÃ³n de otros controladores. Los datos se intercambian entre los elementos de proceso a travÃ©s de los parÃ¡metros. Se pasan por valor, en caso de objetos simples, o por referencia, si son objetos remotos compartidos entre elementos del mismo controlador o proceso. Se puede acceder a datos externos a travÃ©s de fuentes de datos, como bases de datos relacionales o objetos distribuidos.2.1 Controladores Los controladores son construcciones de control estructuradas utilizadas para definir el flujo de control de los procesos. Hay controladores secuenciales y paralelos. Los tipos de controlador secuencial son: bloque, interruptor, para y mientras. El controlador de bloque es una construcciÃ³n secuencial simple, y los otros imitan construcciones de lenguaje de programaciÃ³n estructurado equivalente. Del mismo modo, los tipos paralelos son: PAR, Parswitch, Parfor y Parver. Extienden las contrapartes secuenciales respectivas para permitir la ejecuciÃ³n paralela de elementos de proceso. Todos los tipos de controlador paralelo desembolsan la ejecuciÃ³n de uno o mÃ¡s elementos de proceso, y luego, espere a que finalice cada ejecuciÃ³n. De hecho, contienen un tenedor y una uniÃ³n de ejecuciÃ³n. Con el objetivo de implementar una uniÃ³n condicional, todos los tipos de controlador paralelo contienen una condiciÃ³n de salida, evaluada todo el tiempo que termina una ejecuciÃ³n de elementos, para determinar cuÃ¡ndo debe terminar el controlador. El Parfor y Parwhile son las versiones iterativas de los tipos de controlador paralelo. Ambas ejecuciones de bifurcaciÃ³n, mientras que la condiciÃ³n de iteraciÃ³n es verdadera. Esto proporciona flexibilidad para determinar, en tiempo de ejecuciÃ³n, el nÃºmero de elementos de proceso para ejecutar simultÃ¡neamente. En comparaciÃ³n con los idiomas de flujo de trabajo, los tipos de controlador paralelo representan versiones estructuradas de los constructores de control del flujo de trabajo, ya que pueden anidar otros controladores y tambiÃ©n pueden expresar horquillas y uniones fijas y condicionales, presentes en tales idiomas.2.2 Ejemplo del proceso Esta secciÃ³n presenta un ejemplo de una aplicaciÃ³n de bÃºsqueda de nÃºmeros primos que recibe una cierta gama de enteros y devuelve un conjunto de primos contenidos en este rango. Todo el cÃ¡lculo se realiza mediante un proceso, que utiliza un controlador paralelo para comenzar y enviar varias actividades concurrentes del mismo tipo, para encontrar nÃºmeros primos. La parte del documento XML que describe el proceso y los tipos de actividad se muestra a continuaciÃ³n.<Process_type name = findPrimes> <in_parameter type = int name = min/> <in_parameter type = int name = max/> <in_parameter type = int name = numPrimes/> <in_parameter type = int name = numacts/> <body> <body> <body>Pre_code> setPrimes (new RemoteHashSet ());parfor.setmin (getmin ());parfor.setMax (getMax ());parfor.setNumPrimes (getNumPrimes ());parfor.setNumacts (getNumacts ());parfor.setPrimes (getPrimes ());parfor.setCounterbegin (0);parfor.setCounterend (getNumacts ()-1);</Pre_code> <parfor name = parfor> <in_parameter type = int name = min/> <in_parameter type = int name = max/> <in_parameter type = int name = numPrimes/> <in_parameter type = int name = numacts/><In_parameter type = remotecollection name = primes/> <iterate> <pre_code> int range = (getMax ()-getmin ()+1)/getNumacts ();int minnum = range*getCounter ()+getmin ();int maxnum = minnum+range-1;if (getCounter () == getNumacts ()-1) maxnum = getmax ();findpimes.setmin (minnum);findpimes.setMax (maxnum);findprimes.setNumPrimes (getNumPrimes ());findpimes.setPrimes (getPrimes ());</Pre_code> <Activity type = findPrimes name = findPrimes/> </terate> </pfor> </body> <ut_parameter type = remotecollection name = primes/> </oCESS_TYPE> Middleware para la reducciÃ³n de la red 88 <Activity_Type name = findPrimes> <In_parameter type = int name = min/> <in_parameter type = int name = max/> <in_parameter type = int name = numPrimes/> <in_parameter type = remotecollection name = primes/> <code> for (int num = getmins(); num <= getMax (); num ++) {// detener, el nÃºmero de primos requerido se encontrÃ³ si (primos.size ()> = getNumPrimes ()) break;boolean prime = verdadero;for (int i = 2; i <num; i ++) {if (num % i == 0) {prime = false;romper;}} if (prime) {primes.add (nuevo entero (num));}} </code> </activity_type> En primer lugar, se define un tipo de proceso que encuentra nÃºmeros primos, llamado FindPrimes. Recibe, a travÃ©s de sus parÃ¡metros de entrada, una gama de enteros en los que se deben encontrar nÃºmeros primos, el nÃºmero de primos que se devolverÃ¡n y el nÃºmero de actividades que se ejecutarÃ¡n para realizar este trabajo. Al final, los nÃºmeros primos encontrados se devuelven como una colecciÃ³n a travÃ©s de su parÃ¡metro de salida. Este proceso contiene un controlador PARFOR con el objetivo de ejecutar un nÃºmero determinado de actividades paralelas. Se itera de 0 a getNumacts () - 1, que determina el nÃºmero de actividades, comenzando una actividad paralela en cada iteraciÃ³n. En tal caso, el controlador divide todo el rango de nÃºmeros en subranges del mismo tamaÃ±o y, en cada iteraciÃ³n, comienza una actividad paralela que encuentra nÃºmeros primos en un subrangule especÃ­fico. Estas actividades reciben un objeto compartido por referencia para almacenar los nÃºmeros primos que se acaba de encontrar y controlar si se ha alcanzado el nÃºmero de nÃºmeros primos requeridos. Finalmente, se define el tipo de actividad, FindPrimes, utilizado para encontrar nÃºmeros primos en cada subrangule. Recibe, a travÃ©s de sus parÃ¡metros de entrada, el rango de nÃºmeros en los que tiene que encontrar nÃºmeros primos, el nÃºmero total de nÃºmeros primos que se encuentran por todo el proceso y, aprobado por referencia, un objeto de colecciÃ³n para almacenar los nÃºmeros primos encontrados.. Entre sus marcadores de cÃ³digo, hay un cÃ³digo simple para encontrar nÃºmeros primos, que itera sobre el rango especificado y verifica si el entero actual es un primo. AdemÃ¡s, en cada iteraciÃ³n, el cÃ³digo verifica si el nÃºmero requerido de primos, insertado en la colecciÃ³n de primos por todas las actividades concurrentes, se ha alcanzado y sale si es cierto. La ventaja de usar controladores es la posibilidad de que la infraestructura de soporte determine el punto de ejecuciÃ³n en el que se encuentra el proceso, permitiendo la recuperaciÃ³n y el monitoreo automÃ¡ticos, y tambiÃ©n la capacidad de instanciar y enviar elementos del proceso solo cuando hay suficientes recursos informÃ¡ticos disponibles, reduciendo la sobrecarga innecesaria. AdemÃ¡s, debido a su naturaleza estructurada, se pueden componer fÃ¡cilmente y la infraestructura de soporte puede aprovechar esto para distribuir jerÃ¡rquicamente los controladores anidados al grupo Group Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine Virtual Machine RMI JDBC Process CoordinatorWorker Java Virtual Machine RMI Activity Manager Repositorio Figura 2: Arquitectura de infraestructura Diferentes mÃ¡quinas sobre la red, lo que permite una mayor escalabilidad y tolerancia a fallas.3. Infraestructura de soporte La infraestructura de soporte comprende herramientas para especificaciones y servicios para la ejecuciÃ³n y monitoreo de procesos estructurados en entornos de cuadrÃ­cula altamente distribuidos, heterogÃ©neos y autÃ³nomos. Tiene servicios para monitorear la disponibilidad de recursos en la red, interpretar procesos y actividades y controladores de programaciÃ³n, y para ejecutar actividades.3.1 Arquitectura de infraestructura La arquitectura de infraestructura de soporte estÃ¡ compuesta por grupos de mÃ¡quinas y repositorios de datos, lo que preserva su autonomÃ­a administrativa. En general, las mÃ¡quinas y repositorios localizados, como en las redes o grupos locales, forman un grupo. Cada mÃ¡quina en un grupo debe tener una mÃ¡quina virtual Java (JVM) [11], y una biblioteca de tiempo de ejecuciÃ³n de Java, ademÃ¡s de una combinaciÃ³n de los siguientes servicios de soporte de cuadrÃ­cula: gerente de grupo (GM), coordinador de procesos (PC) y gerente de actividades (AM AM). Esta combinaciÃ³n determina quÃ© tipo de nodo de grupo representa: un servidor de grupo, un servidor de procesos o simplemente un trabajador (ver Figura 2). En un grupo hay uno o mÃ¡s gerentes grupales, pero solo uno actÃºa como primario y los demÃ¡s, como rÃ©plicas. Son responsables de mantener la informaciÃ³n de disponibilidad de las mÃ¡quinas grupales. AdemÃ¡s, los gerentes grupales mantienen referencias a los recursos de datos del grupo. Utilizan repositorios grupales para persistir y recuperar la ubicaciÃ³n de los nodos y su disponibilidad. Para controlar la ejecuciÃ³n del proceso, hay uno o mÃ¡s coordinadores de procesos por grupo. Son responsables de instanciar y ejecutar procesos y controladores, seleccionar recursos y programar y enviar actividades a los trabajadores. Para persistir y recuperar la ejecuciÃ³n y los datos del proceso, y tambiÃ©n cargar la especificaciÃ³n del proceso, utilizan repositorios de grupos. Finalmente, en varios nodos grupales hay un gerente de actividades. Es responsable de ejecutar actividades en la mÃ¡quina alojada en nombre de los coordinadores de procesos grupales e informar la disponibilidad actual de la mÃ¡quina asociada a los gerentes de grupo. TambiÃ©n tienen colas de actividad colgantes, que contienen actividades que se ejecutarÃ¡n.3.2 Relaciones entre grupos Para modelar la arquitectura de la red real, la infraestructura debe comprender varias redes locales, potencialmente todas, como lo hacen Internet. Con el objetivo de satisfacer esta intenciÃ³n, los grupos locales son 89 Middleware 2004 Companion GM GM GM GM GM Figura 3: Relaciones entre grupos conectadas a otros, directa o indirectamente, a travÃ©s de sus gerentes grupales (ver Figura 3). Cada gerente de grupo se ocupa de las solicitudes de su grupo (representado por elipses discontinuos), para registrar mÃ¡quinas locales y mantener la disponibilidad de corresponsales. AdemÃ¡s, los gerentes grupales se comunican con los gerentes grupales de otros grupos. Cada gerente de grupo exporta informaciÃ³n de disponibilidad gruesa a gerentes grupales de grupos adyacentes y tambiÃ©n recibe solicitudes de otros servicios externos para proporcionar informaciÃ³n detallada de disponibilidad. De esta manera, si hay recursos disponibles en grupos externos, es posible enviar procesos, controladores y actividades a estos grupos para ejecutarlos en coordinadores de procesos externos y gerentes de actividades, respectivamente.4. EjecuciÃ³n del proceso En la arquitectura de la red propuesta, se especifica un proceso en XML, utilizando controladores para determinar el flujo de control;hacer referencia a otros procesos y actividades;y pasar objetos a sus parÃ¡metros para definir el flujo de datos. DespuÃ©s de especificado, el proceso se compila en un conjunto de clases, que representan tipos de proceso, actividad y controlador especÃ­ficos. En este momento, puede ser instanciado y ejecutado por un coordinador de proceso.4.1 Modelo dinÃ¡mico Para ejecutar un proceso especificado, debe instanciarse haciendo referencia a su tipo en un servicio de coordinador de proceso de un grupo especÃ­fico. AdemÃ¡s, los parÃ¡metros iniciales deben pasarse a Ã©l, y luego se puede iniciar. El coordinador del proceso lleva a cabo el proceso ejecutando los elementos del proceso incluidos en su cuerpo secuencialmente. Si el elemento es un proceso o un controlador, el coordinador del proceso puede optar por ejecutarlo en la misma mÃ¡quina o pasarlo a otro coordinador de proceso en una mÃ¡quina remota, si estÃ¡ disponible. De lo contrario, si el elemento es una actividad, pasa a un administrador de actividades de una mÃ¡quina disponible. Los coordinadores de procesos solicitan al gerente de grupo local que encuentre mÃ¡quinas disponibles que contengan el servicio requerido, el coordinador de procesos o el administrador de actividades, para ejecutar un elemento de proceso. Luego, puede devolver una mÃ¡quina local, una mÃ¡quina en otro grupo o ninguno, dependiendo de la disponibilidad de dicho recurso en la red. Devuelve un trabajador externo (mÃ¡quina del gerente de actividades) si no hay trabajadores disponibles en el grupo local;Y devuelve un servidor de procesos externo (mÃ¡quina coordinadora de procesos), si no hay servidores de procesos disponibles o trabajadores en el grupo local. Obedeciendo esta regla, los gerentes de grupos intentan encontrar servidores de procesos en el mismo grupo de los trabajadores disponibles. Dicho procedimiento es seguido de manera recursiva por todos los procesos COGM Find -Primes Activity Am Find Primes Activity Am FindPrimes Activity Am FindPrimes Process PC Figura 4: Find Primess Process Execution Ordinators que ejecutan subprocesos o controladores de un proceso. Por lo tanto, debido a que los procesos estÃ¡n estructurados por elementos del proceso de anidaciÃ³n, la ejecuciÃ³n del proceso se distribuye automÃ¡ticamente jerÃ¡rquicamente a travÃ©s de uno o mÃ¡s grupos de cuadrÃ­cula de acuerdo con la disponibilidad y localidad de los recursos informÃ¡ticos. La ventaja de este modelo de distribuciÃ³n es la amplia ejecuciÃ³n del Ã¡rea, lo que aprovecha potencialmente todos los recursos de la cuadrÃ­cula;y la comunicaciÃ³n localizada de los elementos del proceso, porque los elementos dependientes fuertes, que estÃ¡n bajo el mismo controlador, se colocan en los mismos grupos o cercanos. AdemÃ¡s, admite un fÃ¡cil monitoreo y direcciÃ³n, debido a sus controladores estructurados, que mantienen el estado y el control sobre sus elementos internos.4.2 Ejemplo de ejecuciÃ³n del proceso revisando el ejemplo que se muestra en la SecciÃ³n 2.2, se especifica un tipo de proceso para encontrar nÃºmeros primos en un cierto rango de nÃºmeros. Para resolver este problema, crea una serie de actividades utilizando el controlador PARFOR. Cada actividad, entonces, encuentra primos en una parte determinada del rango de nÃºmeros. La Figura 4 muestra una instancia de este tipo de proceso que se ejecuta sobre la infraestructura propuesta. Se crea una instancia de proceso FindPrimes en un coordinador de proceso disponible (PC), que comienza a ejecutar el controlador PARFOR. En cada iteraciÃ³n de este controlador, el coordinador del proceso solicita al gerente del grupo (GM) un administrador de actividades disponible (AM) para ejecutar una nueva instancia de la actividad de FindPrimes. Si hay algÃºn AM disponible en este grupo o en uno externo, el Coordinador del proceso envÃ­a la clase de actividad y los parÃ¡metros iniciales a este administrador de actividades y solicita su ejecuciÃ³n. De lo contrario, si no hay administrador de actividades disponible, el controlador ingresa en un estado de espera hasta que se ponga a disposiciÃ³n un administrador de actividades o se cree. Paralelamente, cada vez que termina una actividad, su resultado se envÃ­a de regreso al Coordinador del proceso, que lo registra en el controlador PARFOR. Luego, el controlador espera hasta que todas las actividades que se hayan iniciado se terminen, y termina. En este punto, el coordinador del proceso verifica que no hay otro elemento de proceso para ejecutar y finalizar el proceso.5. Trabajo relacionado Hay varios productos acadÃ©micos y comerciales que prometen admitir la informÃ¡tica de la red, con el objetivo de proporcionar interfaces, protocolos y servicios para aprovechar el uso de un ampliamente middleware para la computaciÃ³n de la red 90 recursos distribuidos en redes heterogÃ©neas y autÃ³nomas. Entre ellos, Globus [6], Condor-G [9] y Legion [10] son ampliamente conocidos. Con el objetivo de estandarizar las interfaces y servicios a la red, se ha definido la arquitectura de servicios de cuadrÃ­cula abierta (OGSA) [7]. Las arquitecturas de la red generalmente tienen servicios que administran recursos informÃ¡ticos y distribuyen la ejecuciÃ³n de tareas independientes en las disponibles. Sin embargo, las arquitecturas emergentes mantienen dependencias de tareas y ejecutan automÃ¡ticamente las tareas en un orden correcto. Aprovechan estas dependencias para proporcionar una recuperaciÃ³n automÃ¡tica y una mejor distribuciÃ³n y algoritmos de programaciÃ³n. Siguiendo dicho modelo, WebFlow [1] es una herramienta de especificaciÃ³n de proceso y un entorno de ejecuciÃ³n construido sobre CORBA que permite la composiciÃ³n grÃ¡fica de las actividades y su ejecuciÃ³n distribuida en un entorno de cuadrÃ­cula. Opera-G [3], como WebFlow, utiliza un lenguaje de especificaciÃ³n de proceso similar al diagrama de flujo de datos y los idiomas de flujo de trabajo, pero proporciona la recuperaciÃ³n de ejecuciÃ³n automÃ¡tica y la direcciÃ³n limitada de la ejecuciÃ³n del proceso. Las arquitecturas previamente referidas y otros que promulgan procesos sobre la red tienen una coordinaciÃ³n centralizada. Para superar esta limitaciÃ³n, sistemas como Swindew [13] propusieron una ejecuciÃ³n de procesos ampliamente distribuida, en la que cada nodo sabe dÃ³nde ejecutar la prÃ³xima actividad o unir actividades en un entorno entre pares. En el Ã¡rea especÃ­fica de distribuciÃ³n y programaciÃ³n de la actividad, enfatizado en este trabajo, el flujo de grid [5] es notable. Utiliza una programaciÃ³n de dos niveles: global y local. En el nivel local, tiene servicios que predicen la utilizaciÃ³n de recursos informÃ¡ticos y la duraciÃ³n de la actividad. SegÃºn esta informaciÃ³n, GridFlow emplea una tÃ©cnica pertinente que intenta pronosticar la hora y duraciÃ³n de la ejecuciÃ³n de la actividad para programarlos mejor los recursos disponibles. La arquitectura propuesta en este documento, que abarca un modelo de programaciÃ³n y una infraestructura de soporte de ejecuciÃ³n, estÃ¡ ampliamente descentralizada, de manera diferente al flujo web y la Ã³pera-G, es mÃ¡s escalable y tolerante a fallas. Pero, como este Ãºltimo, estÃ¡ diseÃ±ado para admitir la recuperaciÃ³n de la ejecuciÃ³n. En comparaciÃ³n con Swindew, la arquitectura propuesta contiene coordinadores de procesos ampliamente distribuidos, que coordinan los procesos o partes de ellos, de manera diferente a Swindew donde cada nodo tiene una visiÃ³n limitada del proceso: solo la actividad que comienza a continuaciÃ³n. Esto hace que sea mÃ¡s fÃ¡cil monitorear y controlar procesos. Finalmente, la infraestructura de soporte rompe el proceso y sus subprocesos para la ejecuciÃ³n de la red, lo que permite que un grupo requiera otro grupo para la coordinaciÃ³n y ejecuciÃ³n de los elementos del proceso en nombre del primero. Esto es diferente de GridFlow, que puede ejecutar un proceso en la mayorÃ­a de los dos niveles, con el nivel global como el Ãºnico responsable de programar subprocesos en otros grupos. Esto puede limitar el rendimiento general de los procesos y hacer que el sistema sea menos escalable.6. La conclusiÃ³n y la computaciÃ³n de la red de trabajo futura es un campo de investigaciÃ³n emergente que tiene la intenciÃ³n de promover la computaciÃ³n distribuida y paralela a travÃ©s de la amplia red de dominios administrativos heterogÃ©neos y autÃ³nomos de una manera perfecta, similar a lo que Internet hace al intercambio de datos. Existen varios productos que admiten la ejecuciÃ³n de tareas independientes sobre la red, pero solo unos pocos admiten la ejecuciÃ³n de procesos con tareas interdependientes. Para abordar dicho tema, este documento propone un modelo de programaciÃ³n y una infraestructura de soporte que permita la ejecuciÃ³n de procesos estructurados de una manera ampliamente distribuida y jerÃ¡rquica. Esta infraestructura de soporte proporciona una distribuciÃ³n automÃ¡tica, estructurada y recursiva de los elementos de proceso sobre grupos de mÃ¡quinas disponibles;mejor uso de recursos, debido a su creaciÃ³n a demanda de elementos de proceso;Monitoreo y direcciÃ³n de proceso fÃ¡cil, debido a su naturaleza estructurada;y comunicaciÃ³n localizada entre los elementos de proceso dependientes fuertes, que se colocan bajo el mismo controlador. Estas caracterÃ­sticas contribuyen a una mejor escalabilidad, tolerancia a fallas y control para la ejecuciÃ³n de los procesos a travÃ©s de la red. AdemÃ¡s, abre puertas para mejores algoritmos de programaciÃ³n, mecanismos de recuperaciÃ³n y tambiÃ©n esquemas de modificaciÃ³n dinÃ¡mica. El prÃ³ximo trabajo serÃ¡ la implementaciÃ³n de un mecanismo de recuperaciÃ³n que utiliza el estado de ejecuciÃ³n y datos de los procesos y controladores para recuperar la ejecuciÃ³n del proceso. DespuÃ©s de eso, es deseable avanzar en el algoritmo de programaciÃ³n para pronosticar el uso de la mÃ¡quina en el mismo u otros grupos y prever la hora de inicio de los elementos del proceso, a fin de usar esta informaciÃ³n para asignar recursos y, luego, obtener una mejor ejecuciÃ³n del procesoactuaciÃ³n. Finalmente, es interesante investigar esquemas de modificaciÃ³n dinÃ¡mica de procesos a travÃ©s de la red, para evolucionar y adaptar procesos a largo plazo al entorno de la red cambiante continuamente.7. Agradecimientos Nos gustarÃ­a agradecer a Paulo C. Oliveira, del Departamento del Tesoro del Estado de Sao Paulo, por su profundamente revisiÃ³n y sus comentarios perspicaces.8. Referencias [1] E. Akarsu, G. C. Fox, W. Furmanski y T. Haupt. Flujo web: entorno de programaciÃ³n de alto nivel y kit de herramientas de autorÃ­a visual para computaciÃ³n distribuida de alto rendimiento. En Actas de Supercom Puting (SC98), 1998. [2] T. Andrews y F. Curbera. EspecificaciÃ³n: lenguaje de ejecuciÃ³n de procesos comerciales para WB EB Services V ersion 1.1. IBM Developerworks, 2003. Disponible en http://www-106.ibm.com/developerworks/library/wsbpel.[3] W. Bausch. O Pera -G: A M icrokernelfor com putationalg rids. Tesis doctoral, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray y J. Paoli. Lenguaje M Arkup (x m l) 1.0. XML Core WG, W3C, 2004. Disponible en http://www.w3.org/tr/2004/rec-xml-20040204.[5] J. Cao, S. A. Jarvis, S. Saini y G. R. Nudd. GRIDFLOW: GestiÃ³n de flujo de trabajo para la computaciÃ³n de la red. En Actas del Simposio Internacional sobre ComputaciÃ³n de ClÃºster y GRid (CCG Rid 2003), 2003. [6] I. Foster y C. Kesselman. Globus: un kit de herramientas de infraestructura metacomputaciÃ³n. Intl.J. Aplicaciones de supercomputador, 11 (2): 115-128, 1997. [7] I. Foster, C. Kesselman, J. M. Nick y S. Tuecke. La fisiologÃ­a de la grida: y los servicios de Pen G Rid una rchitectura para la integraciÃ³n del Sistema Distribuido.91 Middleware 2004 Companion Open Grid Service Infraestructura WG, Global Grid Forum, 2002. [8] I. Foster, C. Kesselman y S. Tuecke. La anatomÃ­a de la cuadrÃ­cula: habilitaciÃ³n de organizaciÃ³n virtual escalable. The Intl.Journalofh iGh actÃºa Ance Com Puting a Pplications, 15 (3): 200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I. Foster y S. Tuecke. Condor-G: un agente de gestiÃ³n computacional para cuadrÃ­culas multiinstitucionales. En los procedimientos del dÃ©cimo intl.sym POSIUM sobre la realizaciÃ³n de la presunciÃ³n de coma de ejecuciÃ³n (H PD C-10). IEEE, 2001. [10] A. S. Grimshaw y W. A. Wulf. LegiÃ³n: una vista desde 50,000 pies. En Actas del Quinto INTL. Simposio sobre la presunciÃ³n distribuida de alto rendimiento. IEEE, 1996. [11] T. Lindholm y F. Yellin. La especificaciÃ³n Java v irtualm achine. Sun Microsystems, Segunda ediciÃ³n, 1999. [12] B. R. Schulze y E. R. M. Madeira. ComputaciÃ³n de cuadrÃ­cula con servicios activos. Concurrencia y comociÃ³n: Practice and Experience Journal, 5 (16): 535-542, 2004. [13] J. Yan, Y. Yang y G. K. Raikundalia. Promulgar procesos comerciales en un entorno descentralizado con soporte de flujo de trabajo basado en P2P. En Actas del Cuarto Intl.Conferencia sobre la informaciÃ³n de la InformaciÃ³n de W Eb (W AM 2003), 2003. Middleware para la computaciÃ³n de la cuadrÃ­cula 92",
    "original_sentences": [
        "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
        "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
        "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
        "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
        "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
        "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
        "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
        "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
        "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
        "There are few proposed middleware infrastructures that support process execution over the grid.",
        "In general, they model processes by interconnecting their activities through control and data dependencies.",
        "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
        "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
        "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
        "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
        "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
        "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
        "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
        "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
        "Related works are presented and compared to the proposed model in Section 5.",
        "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
        "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
        "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
        "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
        "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
        "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
        "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
        "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
        "Data are exchanged among process elements through parameters.",
        "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
        "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
        "There are sequential and parallel controllers.",
        "The sequential controller types are: block, switch, for and while.",
        "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
        "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
        "They extend the respective sequential counterparts to allow parallel execution of process elements.",
        "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
        "Indeed, they contain a fork and a join of execution.",
        "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
        "The parfor and parwhile are the iterative versions of the parallel controller types.",
        "Both fork executions while the iteration condition is true.",
        "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
        "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
        "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
        "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
        "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
        "At the end, the found prime numbers are returned as a collection through its output parameter.",
        "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
        "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
        "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
        "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
        "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
        "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
        "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
        "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
        "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
        "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
        "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
        "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
        "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
        "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
        "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
        "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
        "They are responsible to maintain availability information of group machines.",
        "Moreover, group managers maintain references to data resources of the group.",
        "They use group repositories to persist and recover the location of nodes and their availability.",
        "To control process execution, there are one or more process coordinators per group.",
        "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
        "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
        "Finally, in several group nodes there is an activity manager.",
        "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
        "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
        "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
        "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
        "Additionally, group managers communicate to group managers of other groups.",
        "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
        "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
        "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
        "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
        "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
        "Also, the initial parameters must be passed to it, and then it can be started.",
        "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
        "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
        "Else, if the element is an activity, it passes to an activity manager of an available machine.",
        "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
        "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
        "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
        "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
        "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
        "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
        "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
        "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
        "In order to solve this problem, it creates a number of activities using the parfor controller.",
        "Each activity, then, finds primes in a determined part of the range of numbers.",
        "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
        "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
        "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
        "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
        "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
        "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
        "Then, the controller waits until all activities that have been started are finished, and it ends.",
        "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
        "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
        "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
        "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
        "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
        "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
        "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
        "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
        "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
        "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
        "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
        "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
        "It uses a two-level scheduling: global and local.",
        "In the local level, it has services that predict computing resource utilization and activity duration.",
        "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
        "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
        "But, like the latter, it is designed to support execution recovery.",
        "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
        "This makes easier to monitor and control processes.",
        "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
        "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
        "This can limit the overall performance of processes, and make the system less scalable. 6.",
        "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
        "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
        "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
        "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
        "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
        "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
        "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
        "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
        "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
        "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
        "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
        "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
        "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
        "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
        "IBM DeveloperWorks, 2003.",
        "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
        "O PERA -G :A M icrokernelfor Com putationalG rids.",
        "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
        "Extensible M arkup Language (X M L) 1.0.",
        "XML Core WG, W3C, 2004.",
        "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
        "GridFlow: Workflow Management for Grid Computing.",
        "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
        "Foster and C. Kesselman.",
        "Globus: A Metacomputing Infrastructure Toolkit.",
        "Intl.J.",
        "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
        "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
        "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
        "Foster, C. Kesselman, and S. Tuecke.",
        "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
        "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
        "Foster, and S. Tuecke.",
        "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
        "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
        "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
        "Legion - A View from 50,000 Feet.",
        "In Proceedings ofthe Fifth Intl.",
        "Sym posium on H igh Perform ance D istributed Com puting.",
        "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
        "The Java V irtualM achine Specification.",
        "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
        "Grid Computing with Active Services.",
        "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
        "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
        "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
        "Middleware for Grid Computing 92"
    ],
    "error_count": 0,
    "keys": {
        "process execution": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical <br>process execution</br> Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support <br>process execution</br> over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical <br>process execution</br> infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed <br>process execution</br> and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical <br>process execution</br> support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business <br>process execution</br> Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control <br>process execution</br>, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover <br>process execution</br> and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "<br>process execution</br> In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes <br>process execution</br> ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the <br>process execution</br> is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 <br>process execution</br> Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of <br>process execution</br>.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed <br>process execution</br>, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover <br>process execution</br>.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better <br>process execution</br> performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business <br>process execution</br> Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un soporte jerÃ¡rquico de \"ejecuciÃ³n de procesos\" para la computaciÃ³n de la red FÃ¡bio R. L. Instituto Cicerre de ComputaciÃ³n de la Universidad Estatal de Campinas Campinas, Brasil fcicerre@ic.unicamp.br Edmundo R. M. Instituto de Madeira de la Universidad Estatal de la ComputaciÃ³n de Campinas, Brasil Edmundo@ic.unicamp.BR.BR.Luiz E. Buzato Instituto de ComputaciÃ³n de la Universidad Estatal de Campinas Campinas, Brasil Buzato@ic.unicamp.Br Abstract Grid es una infraestructura emergente utilizada para compartir recursos entre las organizaciones virtuales de una manera perfecta y para proporcionar un poder informÃ¡tico innovador a bajo costo.",
                "Hay pocas infraestructuras de middleware propuestas que admiten \"ejecuciÃ³n del proceso\" a travÃ©s de la cuadrÃ­cula.",
                "Para abordar tales restricciones, este documento propone un modelo de programaciÃ³n estructurado para la descripciÃ³n del proceso y una infraestructura jerÃ¡rquica de \"ejecuciÃ³n de procesos\".",
                "El modelo de programaciÃ³n y la infraestructura de soporte, llamada X Avantes, estÃ¡n en implementaciÃ³n para mostrar la viabilidad del modelo propuesto y demostrar sus dos ventajas principales: promover la \"ejecuciÃ³n de procesos\" ampliamente distribuida y la programaciÃ³n, pero en una estructura controlada y controlada.y forma localizada.",
                "La Ãºltima secciÃ³n concluye este documento que abarca las ventajas del soporte jerÃ¡rquico de \"ejecuciÃ³n de procesos\" jerÃ¡rquico propuesto para el Ã¡rea informÃ¡tica de la red y enumera algunos trabajos futuros.87 Middleware 2004 Controlador de actividad de procesos de procesamiento complementario 1 * 1 * Figura 1: Marco de alto nivel del modelo de programaciÃ³n 2.",
                "Modelo de programaciÃ³n El modelo de programaciÃ³n diseÃ±ado para la arquitectura de computaciÃ³n de la cuadrÃ­cula es muy similar al especificado al lenguaje de \"ejecuciÃ³n de procesos\" de negocios (BPEL) [2].",
                "Para controlar la \"ejecuciÃ³n del proceso\", hay uno o mÃ¡s coordinadores de procesos por grupo.",
                "Para persistir y recuperar la \"ejecuciÃ³n del proceso\" y los datos, y tambiÃ©n cargar la especificaciÃ³n del proceso, utilizan repositorios de grupos.",
                "\"EjecuciÃ³n del proceso\" En la arquitectura de la red propuesta, se especifica un proceso en XML, utilizando controladores para determinar el flujo de control;hacer referencia a otros procesos y actividades;y pasar objetos a sus parÃ¡metros para definir el flujo de datos.",
                "Dicho procedimiento es seguido recursivamente por todos los procesos COGM Find -Primess Activity Am Find Primes Activity Am FindPrimes Activity Am FindPrimes Process PC Figura 4: Find Primes \"EjecuciÃ³n de procesos\" Ordinadores que ejecutan subprocesos o controladores de un proceso."
            ],
            "translated_text": "",
            "candidates": [
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n del proceso",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "EjecuciÃ³n del proceso",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n del proceso",
                "ejecuciÃ³n de procesos",
                "ejecuciÃ³n del proceso",
                "ejecuciÃ³n de procesos",
                "EjecuciÃ³n del proceso",
                "ejecuciÃ³n de procesos",
                "EjecuciÃ³n de procesos"
            ],
            "error": []
        },
        "grid computing": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for <br>grid computing</br> FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION <br>grid computing</br> is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed <br>grid computing</br> model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the <br>grid computing</br> area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the <br>grid computing</br> architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for <br>grid computing</br> 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support <br>grid computing</br>, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for <br>grid computing</br> 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK <br>grid computing</br> is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for <br>grid computing</br>.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "<br>grid computing</br> with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for <br>grid computing</br> 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un soporte de ejecuciÃ³n de procesos jerÃ¡rquicos para \"ComputaciÃ³n de cuadrÃ­cula\" FÃ¡bio R. L. Cicerre Instituto de ComputaciÃ³n de la Universidad Estatal de Campinas de Campinas, Brasil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Instituto de Madeira of Computing State University of Campinas Campinas, Brasil Edmundo@ic.unicamp.Br.Br.Luiz E. Buzato Instituto de ComputaciÃ³n de la Universidad Estatal de Campinas Campinas, Brasil Buzato@ic.unicamp.Br Abstract Grid es una infraestructura emergente utilizada para compartir recursos entre las organizaciones virtuales de una manera perfecta y para proporcionar un poder informÃ¡tico innovador a bajo costo.",
                "IntroducciÃ³n \"ComputaciÃ³n de la cuadrÃ­cula\" es un modelo para la computaciÃ³n distribuida y paralela de Ã¡rea amplia a travÃ©s de redes heterogÃ©neas en mÃºltiples dominios administrativos.",
                "La siguiente secciÃ³n describe el modelo de programaciÃ³n y la SecciÃ³n 3, la infraestructura de soporte para el modelo de \"computaciÃ³n de la cuadrÃ­cula\" propuesto.",
                "La Ãºltima secciÃ³n concluye este documento que abarca las ventajas del soporte de ejecuciÃ³n de procesos jerÃ¡rquicos propuesto para el Ã¡rea de \"computaciÃ³n de la cuadrÃ­cula\" y enumera algunos trabajos futuros.87 Middleware 2004 Controlador de actividad de procesos de procesamiento de procesos acompaÃ±antes 1 * 1 * Figura 1: Marco de alto nivel del modelo de programaciÃ³n 2.",
                "Modelo de programaciÃ³n El modelo de programaciÃ³n diseÃ±ado para la arquitectura de \"computaciÃ³n de la cuadrÃ­cula\" es muy similar al especificado al lenguaje de ejecuciÃ³n de procesos de negocios (BPEL) [2].",
                "La parte del documento XML que describe el proceso y los tipos de actividad se muestra a continuaciÃ³n.<Process_type name = findPrimes> <in_parameter type = int name = min/> <in_parameter type = int name = max/> <in_parameter type = int name = numPrimes/> <in_parameter type = int name = numacts/> <body> <body> <body>Pre_code> setPrimes (new RemoteHashSet ());parfor.setmin (getmin ());parfor.setMax (getMax ());parfor.setNumPrimes (getNumPrimes ());parfor.setNumacts (getNumacts ());parfor.setPrimes (getPrimes ());parfor.setCounterbegin (0);parfor.setCounterend (getNumacts ()-1);</Pre_code> <parfor name = parfor> <in_parameter type = int name = min/> <in_parameter type = int name = max/> <in_parameter type = int name = numPrimes/> <in_parameter type = int name = numacts/><In_parameter type = remotecollection name = primes/> <iterate> <pre_code> int range = (getMax ()-getmin ()+1)/getNumacts ();int minnum = range*getCounter ()+getmin ();int maxnum = minnum+range-1;if (getCounter () == getNumacts ()-1) maxnum = getmax ();findpimes.setmin (minnum);findpimes.setMax (maxnum);findprimes.setNumPrimes (getNumPrimes ());findpimes.setPrimes (getPrimes ());</Pre_code> <actividades type = findPrimes name = findPrimes/> </tiate> </pfor> </body> <out_parameter type = remotecollection name = primes/> </oCcess_type> middleware para \"cuadrÃ­cula computaciÃ³n\" 88 <activity_type name= Findprimes> <in_parameter type = int name = min/> <in_parameter type = int name = max/> <in_parameter type = int name = numPrimes/> <in_parameter type = remotecollection name = primtimes/> <code> for (int num= getmin (); num <= getmax (); num ++) {// detener, el nÃºmero requerido de primos se encontrÃ³ si (primos.size ()> = getNumPrimes ()) break;boolean prime = verdadero;for (int i = 2; i <num; i ++) {if (num % i == 0) {prime = false;romper;}} if (prime) {primes.add (nuevo entero (num));}} </code> </activity_type> En primer lugar, se define un tipo de proceso que encuentra nÃºmeros primos, llamado FindPrimes.",
                "Trabajo relacionado Hay varios productos acadÃ©micos y comerciales que prometen admitir la \"computaciÃ³n de la red\", con el objetivo de proporcionar interfaces, protocolos y servicios para aprovechar el uso ampliamente de middleware para la \"computaciÃ³n de la cuadrÃ­cula\" 90 recursos distribuidos en redes heterogÃ©neas y autÃ³nomas.",
                "La conclusiÃ³n y el trabajo futuro \"ComputaciÃ³n de la cuadrÃ­cula\" es un campo de investigaciÃ³n emergente que tiene la intenciÃ³n de promover la computaciÃ³n distribuida y paralela a travÃ©s de la red amplia de la red de dominios administrativos heterogÃ©neos y autÃ³nomos de una manera perfecta, similar a lo que Internet hace al intercambio de datos.",
                "Gridflow: GestiÃ³n de flujo de trabajo para \"ComputaciÃ³n de cuadrÃ­cula\".",
                "\"ComputaciÃ³n de cuadrÃ­cula\" con servicios activos."
            ],
            "translated_text": "",
            "candidates": [
                "computaciÃ³n de la cuadrÃ­cula",
                "ComputaciÃ³n de cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "ComputaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "ComputaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "cuadrÃ­cula computaciÃ³n",
                "computaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la red",
                "computaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "ComputaciÃ³n de la cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "ComputaciÃ³n de cuadrÃ­cula",
                "computaciÃ³n de la cuadrÃ­cula",
                "ComputaciÃ³n de cuadrÃ­cula"
            ],
            "error": []
        },
        "distributed system": {
            "translated_key": "Sistema distribuido",
            "is_in_text": false,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distributed application": {
            "translated_key": "AplicaciÃ³n distribuida",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-<br>distributed application</br>s General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "CategorÃ­as y descriptores de sujetos C.2.4 [Redes de comunicaciÃ³n por computadora]: Sistemas distribuidos: \"AplicaciÃ³n distribuida\" S TÃ©rminos generales DiseÃ±o, rendimiento, gestiÃ³n, algoritmos 1."
            ],
            "translated_text": "",
            "candidates": [
                "AplicaciÃ³n distribuida",
                "AplicaciÃ³n distribuida"
            ],
            "error": []
        },
        "distributed process": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely <br>distributed process</br> execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely <br>distributed process</br> execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely <br>distributed process</br> coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El modelo de programaciÃ³n y la infraestructura de soporte, llamada X Avantes, estÃ¡n en implementaciÃ³n para mostrar la viabilidad del modelo propuesto y demostrar sus dos ventajas principales: promover la ejecuciÃ³n y la programaciÃ³n ampliamente \"de proceso distribuido\", pero en una programaciÃ³n controlada y estructurada.y forma localizada.",
                "Para superar esta limitaciÃ³n, sistemas como Swindew [13] propusieron una ejecuciÃ³n ampliamente de \"proceso distribuido\", en el que cada nodo sabe dÃ³nde ejecutar la prÃ³xima actividad o unir actividades en un entorno de igual a igual.",
                "En comparaciÃ³n con Swindew, la arquitectura propuesta contiene coordinadores ampliamente \"de proceso distribuido\", que coordinan los procesos o partes de ellos, de manera diferente a Swindew donde cada nodo tiene una visiÃ³n limitada del proceso: solo la actividad que comienza a continuaciÃ³n."
            ],
            "translated_text": "",
            "candidates": [
                "proceso distribuido",
                "de proceso distribuido",
                "proceso distribuido",
                "proceso distribuido",
                "proceso distribuido",
                "de proceso distribuido"
            ],
            "error": []
        },
        "distributed scheduling": {
            "translated_key": "ProgramaciÃ³n distribuida",
            "is_in_text": false,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distributed execution": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and <br>distributed execution</br>.",
                "Specifically, considering <br>distributed execution</br>, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, <br>distributed execution</br> coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally <br>distributed execution</br> on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their <br>distributed execution</br> in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Tradicionalmente, como en Globus [6], Condor-G [9] y Legion [10], existe una infraestructura mÃ­nima que proporciona intercambio de recursos de datos, gestiÃ³n de utilizaciÃ³n de recursos computacionales y \"ejecuciÃ³n distribuida\".",
                "EspecÃ­ficamente, considerando la \"ejecuciÃ³n distribuida\", la mayorÃ­a de las infraestructuras de cuadrÃ­cula existentes admiten la ejecuciÃ³n de tareas aisladas, pero no consideran las interdependencias de sus tareas como en los procesos (flujos de trabajo) [12].",
                "Esta deficiencia restringe mejores algoritmos de programaciÃ³n, coordinaciÃ³n de \"ejecuciÃ³n distribuida\" y recuperaciÃ³n de ejecuciÃ³n automÃ¡tica.",
                "Entre ellos, Webflow [1] enfatiza una arquitectura para construir procesos distribuidos;Opera-G [3] proporciona la recuperaciÃ³n y la direcciÃ³n de la ejecuciÃ³n, Gridflow [5] se centra en los algoritmos de programaciÃ³n mejorados que aprovechan las dependencias de actividades, y Swindew [13] admite la ejecuciÃ³n totalmente \"distribuida\" en las redes entre pares.",
                "Siguiendo dicho modelo, WebFlow [1] es una herramienta de especificaciÃ³n de proceso y un entorno de ejecuciÃ³n construido sobre CORBA que permite la composiciÃ³n grÃ¡fica de actividades y su \"ejecuciÃ³n distribuida\" en un entorno de cuadrÃ­cula."
            ],
            "translated_text": "",
            "candidates": [
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida",
                "distribuida",
                "ejecuciÃ³n distribuida",
                "ejecuciÃ³n distribuida"
            ],
            "error": []
        },
        "distributed computing": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance <br>distributed computing</br>.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Flujo web: entorno de programaciÃ³n de alto nivel y kit de herramientas de autorÃ­a visual para \"computaciÃ³n distribuida\" de alto rendimiento."
            ],
            "translated_text": "",
            "candidates": [
                "ComputaciÃ³n distribuÃ­da",
                "computaciÃ³n distribuida"
            ],
            "error": []
        },
        "parallel computing": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and <br>parallel computing</br> across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and <br>parallel computing</br> over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "IntroducciÃ³n La computaciÃ³n de la cuadrÃ­cula es un modelo para el Ã¡rea amplia distribuida y \"computaciÃ³n paralela\" a travÃ©s de redes heterogÃ©neas en mÃºltiples dominios administrativos.",
                "La conclusiÃ³n y la computaciÃ³n de la red de trabajo futura es un campo de investigaciÃ³n emergente que tiene la intenciÃ³n de promover los dominios administrativos distribuidos y \"paralelos\" en la amplia Ã¡rea de dominios administrativos heterogÃ©neos y autÃ³nomos de una manera perfecta, similar a lo que Internet hace al intercambio de datos."
            ],
            "translated_text": "",
            "candidates": [
                "computaciÃ³n paralela",
                "computaciÃ³n paralela",
                "computaciÃ³n paralela",
                "paralelos"
            ],
            "error": []
        },
        "parallel execution": {
            "translated_key": "ejecuciÃ³n paralela",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow <br>parallel execution</br> of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Extienden las contrapartes secuenciales respectivas para permitir la \"ejecuciÃ³n paralela\" de los elementos de proceso."
            ],
            "translated_text": "",
            "candidates": [
                "ejecuciÃ³n paralela",
                "ejecuciÃ³n paralela"
            ],
            "error": []
        },
        "process description": {
            "translated_key": "descripciÃ³n del proceso",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for <br>process description</br> and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para abordar tales restricciones, este documento propone un modelo de programaciÃ³n estructurado para la \"descripciÃ³n del proceso\" y una infraestructura jerÃ¡rquica de ejecuciÃ³n del proceso."
            ],
            "translated_text": "",
            "candidates": [
                "descripciÃ³n del proceso",
                "descripciÃ³n del proceso"
            ],
            "error": []
        },
        "hierarchical process execution": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A <br>hierarchical process execution</br> Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a <br>hierarchical process execution</br> infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed <br>hierarchical process execution</br> support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un soporte de \"ejecuciÃ³n de procesos jerÃ¡rquicos\" para la computaciÃ³n de la red FÃ¡bio R. L. Cicerre Instituto de ComputaciÃ³n de la Universidad Estatal de Campinas de Campinas, Brasil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Instituto de Madeira de la Universidad Estatal de Campinas de Campinas, Brasil Edmundo@ic.unicamp.BR.BR.Luiz E. Buzato Instituto de ComputaciÃ³n de la Universidad Estatal de Campinas Campinas, Brasil Buzato@ic.unicamp.Br Abstract Grid es una infraestructura emergente utilizada para compartir recursos entre las organizaciones virtuales de una manera perfecta y para proporcionar un poder informÃ¡tico innovador a bajo costo.",
                "Para abordar tales restricciones, este documento propone un modelo de programaciÃ³n estructurado para la descripciÃ³n del proceso y una infraestructura de \"ejecuciÃ³n de procesos jerÃ¡rquicos\".",
                "La Ãºltima secciÃ³n concluye este documento que abarca las ventajas del soporte propuesto de \"ejecuciÃ³n de procesos jerÃ¡rquicos\" para el Ã¡rea informÃ¡tica de la red y enumera algunos trabajos futuros.87 Middleware 2004 Controlador de actividad de procesos de procesamiento de procesamiento 1 * 1 * Figura 1: Marco de alto nivel del modelo de programaciÃ³n 2."
            ],
            "translated_text": "",
            "candidates": [
                "ejecuciÃ³n del proceso jerÃ¡rquico",
                "ejecuciÃ³n de procesos jerÃ¡rquicos",
                "ejecuciÃ³n del proceso jerÃ¡rquico",
                "ejecuciÃ³n de procesos jerÃ¡rquicos",
                "EjecuciÃ³n del proceso jerÃ¡rquico",
                "ejecuciÃ³n de procesos jerÃ¡rquicos"
            ],
            "error": []
        },
        "grid architecture": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real <br>grid architecture</br>, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed <br>grid architecture</br>, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "TambiÃ©n tienen colas de actividad colgantes, que contienen actividades que se ejecutarÃ¡n.3.2 Relaciones entre grupos Para modelar la \"arquitectura de la cuadrÃ­cula\" real, la infraestructura debe comprender varias redes locales, potencialmente todas, como lo hacen Internet.",
                "EjecuciÃ³n del proceso En la \"arquitectura de cuadrÃ­cula\" propuesta, se especifica un proceso en XML, utilizando controladores para determinar el flujo de control;hacer referencia a otros procesos y actividades;y pasar objetos a sus parÃ¡metros para definir el flujo de datos."
            ],
            "translated_text": "",
            "candidates": [
                "arquitectura de cuadrÃ­cula",
                "arquitectura de la cuadrÃ­cula",
                "arquitectura de cuadrÃ­cula",
                "arquitectura de cuadrÃ­cula"
            ],
            "error": []
        },
        "scheduling algorithm": {
            "translated_key": "algoritmo de programaciÃ³n",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the <br>scheduling algorithm</br> to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "DespuÃ©s de eso, es deseable avanzar en el \"Algoritmo de programaciÃ³n\" para pronosticar el uso de la mÃ¡quina en los mismos o otros grupos y prever la hora de inicio de los elementos del proceso, para usar esta informaciÃ³n para pre-asignar recursos y, luego, obtener un mejorrendimiento de ejecuciÃ³n del proceso."
            ],
            "translated_text": "",
            "candidates": [
                "algoritmo de programaciÃ³n",
                "Algoritmo de programaciÃ³n"
            ],
            "error": []
        },
        "process support": {
            "translated_key": "soporte de procesos",
            "is_in_text": false,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distribute middleware": {
            "translated_key": "Distribuir el middleware",
            "is_in_text": false,
            "original_annotated_sentences": [
                "A Hierarchical Process Execution Support for Grid Computing FÃ¡bio R. L. Cicerre Institute of Computing State University of Campinas Campinas, Brazil fcicerre@ic.unicamp.br Edmundo R. M. Madeira Institute of Computing State University of Campinas Campinas, Brazil edmundo@ic.unicamp.br Luiz E. Buzato Institute of Computing State University of Campinas Campinas, Brazil buzato@ic.unicamp.br ABSTRACT Grid is an emerging infrastructure used to share resources among virtual organizations in a seamless manner and to provide breakthrough computing power at low cost.",
                "Nowadays there are dozens of academic and commercial products that allow execution of isolated tasks on grids, but few products support the enactment of long-running processes in a distributed fashion.",
                "In order to address such subject, this paper presents a programming model and an infrastructure that hierarchically schedules process activities using available nodes in a wide grid environment.",
                "Their advantages are automatic and structured distribution of activities and easy process monitoring and steering.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-distributed applications General Terms Design, Performance, Management, Algorithms 1.",
                "INTRODUCTION Grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in multiple administrative domains.",
                "This research field aims to promote sharing of resources and provides breakthrough computing power over this wide network of virtual organizations in a seamless manner [8].",
                "Traditionally, as in Globus [6], Condor-G [9] and Legion [10], there is a minimal infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.",
                "Specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].",
                "This deficiency restricts better scheduling algorithms, distributed execution coordination and automatic execution recovery.",
                "There are few proposed middleware infrastructures that support process execution over the grid.",
                "In general, they model processes by interconnecting their activities through control and data dependencies.",
                "Among them, WebFlow [1] emphasizes an architecture to construct distributed processes; Opera-G [3] provides execution recovering and steering, GridFlow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and SwinDew [13] supports totally distributed execution on peer-to-peer networks.",
                "However, such infrastructures contain scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].",
                "In order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.",
                "The programming model employs structured control flow to promote controlled and contextualized activity execution.",
                "Complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better execution performance and fault-tolerance and providing localized communication.",
                "The programming model and the support infrastructure, named X avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed process execution and scheduling, but in a controlled, structured and localized way.",
                "Next Section describes the programming model, and Section 3, the support infrastructure for the proposed grid computing model.",
                "Section 4 demonstrates how the support infrastructure executes processes and distributes activities.",
                "Related works are presented and compared to the proposed model in Section 5.",
                "The last Section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works. 87 Middleware 2004 Companion ProcessElement Process Activity Controller 1 * 1 * Figure 1: High-level framework of the programming model 2.",
                "PROGRAMMING MODEL The programming model designed for the grid computing architecture is very similar to the specified to the Business Process Execution Language (BPEL) [2].",
                "Both describe processes in XML [4] documents, but the former specifies processes strictly synchronous and structured, and has more constructs for structured parallel control.",
                "The rationale behind of its design is the possibility of hierarchically distribute the process control and coordination based on structured constructs, differently from BPEL, which does not allow hierarchical composition of processes.",
                "In the proposed programming model, a process is a set of interdependent activities arranged to solve a certain problem.",
                "In detail, a process is composed of activities, subprocesses, and controllers (see Figure 1).",
                "Activities represent simple tasks that are executed on behalf of a process; subprocesses are processes executed in the context of a parent process; and controllers are control elements used to specify the execution order of these activities and subprocesses.",
                "Like structured languages, controllers can be nested and then determine the execution order of other controllers.",
                "Data are exchanged among process elements through parameters.",
                "They are passed by value, in case of simple objects, or by reference, if they are remote objects shared among elements of the same controller or process.",
                "External data can be accessed through data sources, such as relational databases or distributed objects. 2.1 Controllers Controllers are structured control constructs used to define the control flow of processes.",
                "There are sequential and parallel controllers.",
                "The sequential controller types are: block, switch, for and while.",
                "The block controller is a simple sequential construct, and the others mimic equivalent structured programming language constructs.",
                "Similarly, the parallel types are: par, parswitch, parfor and parwhile.",
                "They extend the respective sequential counterparts to allow parallel execution of process elements.",
                "All parallel controller types fork the execution of one or more process elements, and then, wait for each execution to finish.",
                "Indeed, they contain a fork and a join of execution.",
                "Aiming to implement a conditional join, all parallel controller types contain an exit condition, evaluated all time that an element execution finishes, in order to determine when the controller must end.",
                "The parfor and parwhile are the iterative versions of the parallel controller types.",
                "Both fork executions while the iteration condition is true.",
                "This provides flexibility to determine, at run-time, the number of process elements to execute simultaneously.",
                "When compared to workflow languages, the parallel controller types represent structured versions of the workflow control constructors, because they can nest other controllers and also can express fixed and conditional forks and joins, present in such languages. 2.2 Process Example This section presents an example of a prime number search application that receives a certain range of integers and returns a set of primes contained in this range.",
                "The whole computation is made by a process, which uses a parallel controller to start and dispatch several concurrent activities of the same type, in order to find prime numbers.",
                "The portion of the XML document that describes the process and activity types is shown below. <PROCESS_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <BODY> <PRE_CODE> setPrimes(new RemoteHashSet()); parfor.setMin(getMin()); parfor.setMax(getMax()); parfor.setNumPrimes(getNumPrimes()); parfor.setNumActs(getNumActs()); parfor.setPrimes(getPrimes()); parfor.setCounterBegin(0); parfor.setCounterEnd(getNumActs()-1); </PRE_CODE> <PARFOR NAME=parfor> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=int NAME=numActs/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <ITERATE> <PRE_CODE> int range= (getMax()-getMin()+1)/getNumActs(); int minNum = range*getCounter()+getMin(); int maxNum = minNum+range-1; if (getCounter() == getNumActs()-1) maxNum = getMax(); findPrimes.setMin(minNum); findPrimes.setMax(maxNum); findPrimes.setNumPrimes(getNumPrimes()); findPrimes.setPrimes(getPrimes()); </PRE_CODE> <ACTIVITY TYPE=FindPrimes NAME=findPrimes/> </ITERATE> </PARFOR> </BODY> <OUT_PARAMETER TYPE=RemoteCollection NAME=primes/> </PROCESS_TYPE> Middleware for Grid Computing 88 <ACTIVITY_TYPE NAME=FindPrimes> <IN_PARAMETER TYPE=int NAME=min/> <IN_PARAMETER TYPE=int NAME=max/> <IN_PARAMETER TYPE=int NAME=numPrimes/> <IN_PARAMETER TYPE=RemoteCollection NAME=primes/> <CODE> for (int num=getMin(); num<=getMax(); num++) { // stop, required number of primes was found if (primes.size() >= getNumPrimes()) break; boolean prime = true; for (int i=2; i<num; i++) { if (num % i == 0) { prime = false; break; } } if (prime) { primes.add(new Integer(num)); } } </CODE> </ACTIVITY_TYPE> Firstly, a process type that finds prime numbers, named FindPrimes, is defined.",
                "It receives, through its input parameters, a range of integers in which prime numbers have to be found, the number of primes to be returned, and the number of activities to be executed in order to perform this work.",
                "At the end, the found prime numbers are returned as a collection through its output parameter.",
                "This process contains a PARFOR controller aiming to execute a determined number of parallel activities.",
                "It iterates from 0 to getNumActs() - 1, which determines the number of activities, starting a parallel activity in each iteration.",
                "In such case, the controller divides the whole range of numbers in subranges of the same size, and, in each iteration, starts a parallel activity that finds prime numbers in a specific subrange.",
                "These activities receive a shared object by reference in order to store the prime numbers just found and control if the required number of primes has been reached.",
                "Finally, it is defined the activity type, FindPrimes, used to find prime numbers in each subrange.",
                "It receives, through its input parameters, the range of numbers in which it has to find prime numbers, the total number of prime numbers to be found by the whole process, and, passed by reference, a collection object to store the found prime numbers.",
                "Between its CODE markers, there is a simple code to find prime numbers, which iterates over the specified range and verifies if the current integer is a prime.",
                "Additionally, in each iteration, the code verifies if the required number of primes, inserted in the primes collection by all concurrent activities, has been reached, and exits if true.",
                "The advantage of using controllers is the possibility of the support infrastructure determines the point of execution the process is in, allowing automatic recovery and monitoring, and also the capability of instantiating and dispatching process elements only when there are enough computing resources available, reducing unnecessary overhead.",
                "Besides, due to its structured nature, they can be easily composed and the support infrastructure can take advantage of this in order to distribute hierarchically the nested controllers to Group Server Group Java Virtual Machine RMI JDBC Group Manager Process Server Java Virtual Machine RMI JDBC Process Coordinator Worker Java Virtual Machine RMI Activity Manager Repository Figure 2: Infrastructure architecture different machines over the grid, allowing enhanced scalability and fault-tolerance. 3.",
                "SUPPORT INFRASTRUCTURE The support infrastructure comprises tools for specification, and services for execution and monitoring of structured processes in highly distributed, heterogeneous and autonomous grid environments.",
                "It has services to monitor availability of resources in the grid, to interpret processes and schedule activities and controllers, and to execute activities. 3.1 Infrastructure Architecture The support infrastructure architecture is composed of groups of machines and data repositories, which preserves its administrative autonomy.",
                "Generally, localized machines and repositories, such as in local networks or clusters, form a group.",
                "Each machine in a group must have a Java Virtual Machine (JVM) [11], and a Java Runtime Library, besides a combination of the following grid support services: group manager (GM), process coordinator (PC) and activity manager (AM).",
                "This combination determines what kind of group node it represents: a group server, a process server, or simply a worker (see Figure 2).",
                "In a group there are one or more group managers, but only one acts as primary and the others, as replicas.",
                "They are responsible to maintain availability information of group machines.",
                "Moreover, group managers maintain references to data resources of the group.",
                "They use group repositories to persist and recover the location of nodes and their availability.",
                "To control process execution, there are one or more process coordinators per group.",
                "They are responsible to instantiate and execute processes and controllers, select resources, and schedule and dispatch activities to workers.",
                "In order to persist and recover process execution and data, and also load process specification, they use group repositories.",
                "Finally, in several group nodes there is an activity manager.",
                "It is responsible to execute activities in the hosted machine on behalf of the group process coordinators, and to inform the current availability of the associated machine to group managers.",
                "They also have pendent activity queues, containing activities to be executed. 3.2 Inter-group Relationships In order to model real grid architecture, the infrastructure must comprise several, potentially all, local networks, like Internet does.",
                "Aiming to satisfy this intent, local groups are 89 Middleware 2004 Companion GM GM GM GM Figure 3: Inter-group relationships connected to others, directly or indirectly, through its group managers (see Figure 3).",
                "Each group manager deals with requests of its group (represented by dashed ellipses), in order to register local machines and maintain correspondent availability.",
                "Additionally, group managers communicate to group managers of other groups.",
                "Each group manager exports coarse availability information to group managers of adjacent groups and also receives requests from other external services to furnish detailed availability information.",
                "In this way, if there are resources available in external groups, it is possible to send processes, controllers and activities to these groups in order to execute them in external process coordinators and activity managers, respectively. 4.",
                "PROCESS EXECUTION In the proposed grid architecture, a process is specified in XML, using controllers to determine control flow; referencing other processes and activities; and passing objects to their parameters in order to define data flow.",
                "After specified, the process is compiled in a set of classes, which represent specific process, activity and controller types.",
                "At this time, it can be instantiated and executed by a process coordinator. 4.1 Dynamic Model To execute a specified process, it must be instantiated by referencing its type on a process coordinator service of a specific group.",
                "Also, the initial parameters must be passed to it, and then it can be started.",
                "The process coordinator carries out the process by executing the process elements included in its body sequentially.",
                "If the element is a process or a controller, the process coordinator can choose to execute it in the same machine or to pass it to another process coordinator in a remote machine, if available.",
                "Else, if the element is an activity, it passes to an activity manager of an available machine.",
                "Process coordinators request the local group manager to find available machines that contain the required service, process coordinator or activity manager, in order to execute a process element.",
                "Then, it can return a local machine, a machine in another group or none, depending on the availability of such resource in the grid.",
                "It returns an external worker (activity manager machine) if there are no available workers in the local group; and, it returns an external process server (process coordinator machine), if there are no available process servers or workers in the local group.",
                "Obeying this rule, group managers try to find process servers in the same group of the available workers.",
                "Such procedure is followed recursively by all process coGM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Activity AM FindPrimes Process PC Figure 4: FindPrimes process execution ordinators that execute subprocesses or controllers of a process.",
                "Therefore, because processes are structured by nesting process elements, the process execution is automatically distributed hierarchically through one or more grid groups according to the availability and locality of computing resources.",
                "The advantage of this distribution model is wide area execution, which takes advantage of potentially all grid resources; and localized communication of process elements, because strong dependent elements, which are under the same controller, are placed in the same or near groups.",
                "Besides, it supports easy monitoring and steering, due to its structured controllers, which maintain state and control over its inner elements. 4.2 Process Execution Example Revisiting the example shown in Section 2.2, a process type is specified to find prime numbers in a certain range of numbers.",
                "In order to solve this problem, it creates a number of activities using the parfor controller.",
                "Each activity, then, finds primes in a determined part of the range of numbers.",
                "Figure 4 shows an instance of this process type executing over the proposed infrastructure.",
                "A FindPrimes process instance is created in an available process coordinator (PC), which begins executing the parfor controller.",
                "In each iteration of this controller, the process coordinator requests to the group manager (GM) an available activity manager (AM) in order to execute a new instance of the FindPrimes activity.",
                "If there is any AM available in this group or in an external one, the process coordinator sends the activity class and initial parameters to this activity manager and requests its execution.",
                "Else, if no activity manager is available, then the controller enters in a wait state until an activity manager is made available, or is created.",
                "In parallel, whenever an activity finishes, its result is sent back to the process coordinator, which records it in the parfor controller.",
                "Then, the controller waits until all activities that have been started are finished, and it ends.",
                "At this point, the process coordinator verifies that there is no other process element to execute and finishes the process. 5.",
                "RELATED WORK There are several academic and commercial products that promise to support grid computing, aiming to provide interfaces, protocols and services to leverage the use of widely Middleware for Grid Computing 90 distributed resources in heterogeneous and autonomous networks.",
                "Among them, Globus [6], Condor-G [9] and Legion [10] are widely known.",
                "Aiming to standardize interfaces and services to grid, the Open Grid Services Architecture (OGSA) [7] has been defined.",
                "The grid architectures generally have services that manage computing resources and distribute the execution of independent tasks on available ones.",
                "However, emerging architectures maintain task dependencies and automatically execute tasks in a correct order.",
                "They take advantage of these dependencies to provide automatic recovery, and better distribution and scheduling algorithms.",
                "Following such model, WebFlow [1] is a process specification tool and execution environment constructed over CORBA that allows graphical composition of activities and their distributed execution in a grid environment.",
                "Opera-G [3], like WebFlow, uses a process specification language similar to the data flow diagram and workflow languages, but furnishes automatic execution recovery and limited steering of process execution.",
                "The previously referred architectures and others that enact processes over the grid have a centralized coordination.",
                "In order to surpass this limitation, systems like SwinDew [13] proposed a widely distributed process execution, in which each node knows where to execute the next activity or join activities in a peer-to-peer environment.",
                "In the specific area of activity distribution and scheduling, emphasized in this work, GridFlow [5] is remarkable.",
                "It uses a two-level scheduling: global and local.",
                "In the local level, it has services that predict computing resource utilization and activity duration.",
                "Based on this information, GridFlow employs a PERT-like technique that tries to forecast the activity execution start time and duration in order to better schedule them to the available resources.",
                "The architecture proposed in this paper, which encompasses a programming model and an execution support infrastructure, is widely decentralized, differently from WebFlow and Opera-G, being more scalable and fault-tolerant.",
                "But, like the latter, it is designed to support execution recovery.",
                "Comparing to SwinDew, the proposed architecture contains widely distributed process coordinators, which coordinate processes or parts of them, differently from SwinDew where each node has a limited view of the process: only the activity that starts next.",
                "This makes easier to monitor and control processes.",
                "Finally, the support infrastructure breaks the process and its subprocesses for grid execution, allowing a group to require another group for the coordination and execution of process elements on behalf of the first one.",
                "This is different from GridFlow, which can execute a process in at most two levels, having the global level as the only responsible to schedule subprocesses in other groups.",
                "This can limit the overall performance of processes, and make the system less scalable. 6.",
                "CONCLUSION AND FUTURE WORK Grid computing is an emerging research field that intends to promote distributed and parallel computing over the wide area network of heterogeneous and autonomous administrative domains in a seamless way, similar to what Internet does to the data sharing.",
                "There are several products that support execution of independent tasks over grid, but only a few supports the execution of processes with interdependent tasks.",
                "In order to address such subject, this paper proposes a programming model and a support infrastructure that allow the execution of structured processes in a widely distributed and hierarchical manner.",
                "This support infrastructure provides automatic, structured and recursive distribution of process elements over groups of available machines; better resource use, due to its on demand creation of process elements; easy process monitoring and steering, due to its structured nature; and localized communication among strong dependent process elements, which are placed under the same controller.",
                "These features contribute to better scalability, fault-tolerance and control for processes execution over the grid.",
                "Moreover, it opens doors for better scheduling algorithms, recovery mechanisms, and also, dynamic modification schemes.",
                "The next work will be the implementation of a recovery mechanism that uses the execution and data state of processes and controllers to recover process execution.",
                "After that, it is desirable to advance the scheduling algorithm to forecast machine use in the same or other groups and to foresee start time of process elements, in order to use this information to pre-allocate resources and, then, obtain a better process execution performance.",
                "Finally, it is interesting to investigate schemes of dynamic modification of processes over the grid, in order to evolve and adapt long-term processes to the continuously changing grid environment. 7.",
                "ACKNOWLEDGMENTS We would like to thank Paulo C. Oliveira, from the State Treasury Department of Sao Paulo, for its deeply revision and insightful comments. 8.",
                "REFERENCES [1] E. Akarsu, G. C. Fox, W. Furmanski, and T. Haupt.",
                "WebFlow: High-Level Programming Environment and Visual Authoring Toolkit for High Performance Distributed Computing.",
                "In Proceedings of Supercom puting (SC98), 1998. [2] T. Andrews and F. Curbera.",
                "Specification: Business Process Execution Language for W eb Services V ersion 1.1.",
                "IBM DeveloperWorks, 2003.",
                "Available at http://www-106.ibm.com/developerworks/library/wsbpel. [3] W. Bausch.",
                "O PERA -G :A M icrokernelfor Com putationalG rids.",
                "PhD thesis, Swiss Federal Institute of Technology, Zurich, 2004. [4] T. Bray and J. Paoli.",
                "Extensible M arkup Language (X M L) 1.0.",
                "XML Core WG, W3C, 2004.",
                "Available at http://www.w3.org/TR/2004/REC-xml-20040204. [5] J. Cao, S. A. Jarvis, S. Saini, and G. R. Nudd.",
                "GridFlow: Workflow Management for Grid Computing.",
                "In Proceedings ofthe International Sym posium on Cluster Com puting and the G rid (CCG rid 2003), 2003. [6] I.",
                "Foster and C. Kesselman.",
                "Globus: A Metacomputing Infrastructure Toolkit.",
                "Intl.J.",
                "Supercom puter A pplications, 11(2):115-128, 1997. [7] I.",
                "Foster, C. Kesselman, J. M. Nick, and S. Tuecke.",
                "The Physiology ofthe G rid: A n O pen G rid Services A rchitecture for D istributed System s Integration. 91 Middleware 2004 Companion Open Grid Service Infrastructure WG, Global Grid Forum, 2002. [8] I.",
                "Foster, C. Kesselman, and S. Tuecke.",
                "The Anatomy of the Grid: Enabling Scalable Virtual Organization.",
                "The Intl.JournalofH igh Perform ance Com puting A pplications, 15(3):200-222, 2001. [9] J. Frey, T. Tannenbaum, M. Livny, I.",
                "Foster, and S. Tuecke.",
                "Condor-G: A Computational Management Agent for Multi-institutional Grids.",
                "In Proceedings of the Tenth Intl.Sym posium on H igh Perform ance D istributed Com puting (H PD C-10).",
                "IEEE, 2001. [10] A. S. Grimshaw and W. A. Wulf.",
                "Legion - A View from 50,000 Feet.",
                "In Proceedings ofthe Fifth Intl.",
                "Sym posium on H igh Perform ance D istributed Com puting.",
                "IEEE, 1996. [11] T. Lindholm and F. Yellin.",
                "The Java V irtualM achine Specification.",
                "Sun Microsystems, Second Edition edition, 1999. [12] B. R. Schulze and E. R. M. Madeira.",
                "Grid Computing with Active Services.",
                "Concurrency and Com putation: Practice and Experience Journal, 5(16):535-542, 2004. [13] J. Yan, Y. Yang, and G. K. Raikundalia.",
                "Enacting Business Processes in a Decentralised Environment with P2P-Based Workflow Support.",
                "In Proceedings of the Fourth Intl.Conference on W eb-Age Inform ation M anagem ent(W A IM 2003), 2003.",
                "Middleware for Grid Computing 92"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}