{
    "id": "J-14",
    "original_text": "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games. Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game. In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path. In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants. Another attractive solution concept is a Nash equilibrium that maximizes the social welfare. We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size. These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria. Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected. However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community. This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players. In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph. If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers. In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games). The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree. They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium. For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy. While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks. First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable. This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone. Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria. Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium. This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic. For these reasons, in this paper we focus on the problem of computing exact Nash equilibria. Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles). By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth. A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many. Moreover, some Nash equilibria are more desirable than others. Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly. A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game. If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties. In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium. The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n). We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties. In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players. Graphical games on bounded-degree trees have a simple algebraic structure. One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number. Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare. We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex. In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium. It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium. As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation. However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria. In Section 4, we describe an algorithm that satisfies this requirement. Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal. It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path). More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to . We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal. In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti. Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem. The running time of the algorithm is bounded by a polynomial in n, Pmax, and . If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − . In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria. In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold. In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff. Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable. For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard. In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6]. Moreover, it is likely to be intractable even to approximate such equilibria. In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete. Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them. Note that these algorithms are not polynomial-time in general. The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree. A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action. Any Nash equilibrium is a CE but the converse does not hold in general. In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17]. But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18]. However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees. From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2. PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children. Each vertex has two actions, which are denoted by 0 and 1. A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1. For the purposes of the algorithm, the tree is rooted arbitrarily. For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child. This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0. Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1. Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W . We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}. The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent. With the above assumptions about the root, the downstream pass is straightforward. The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W . It instructs each child V to play v. The remainder of the downward pass is recursive. When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u. The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point. In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows. For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly. For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}. In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles. The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ). Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively. Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors. In what follows, we will frequently use the following simple observation. CLAIM 1. For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D . Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well. PROOF. We will give the proof for P0 (V ); the proof for P1 (V ) is similar. For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j. We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw. We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player. We assume that all elements of these matrices are integer. Let Pmax be the greatest absolute value of any element of any payoff matrix. Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3. NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs. Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q. In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n). THEOREM 1. There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q. PROOF. The payoffs to the players in G are specified as follows. The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0. Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively. It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 . Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1]. The payoff to W is 0 if it selects the same action as V and 1 otherwise. CLAIM 2. All Nash equilibria of the game G are of the form (u, 1/2, f(u)). That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u). Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium. PROOF. It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium. Indeed, U is content to play 164 any mixed strategy u no matter what V and W do. Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2. Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u). Conversely, suppose that v > 1/2. Then W strictly prefers to play 0, i.e., w = 0. Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction. Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1. Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction. Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2. This completes the proof of Claim 2. By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u. More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2. Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 . To find extrema of g(u), we compute h(u) = − d du g(u). We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 . Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}. Note that −2 + √ 5 ∈ [0, 1]. The function g(u) changes sign at −2, −1, and 3. We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum. We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5). The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5. This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff. In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1]. THEOREM 2. For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α. PROOF. Our proof consists of two steps. First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ]. Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u. It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α. The details follow. LEMMA 1. Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ]. PROOF. Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0. Let A = {α1, . . . , αn} be the set of all roots of P(x). Consider the polynomial Q1(x) = −P2 (x). It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0. Hence, A is the set of all maxima of Q1(x). Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) . Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0. Hence, the set A is also the set of all maxima of R(x) on [0, 1]. Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}. Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ]. Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1. As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ]. As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers. Consider a graphical game on the path U−1V−1U0V0U1V1 . . . Uk−1Vk−1Uk, where k = 2n + 2. Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection. More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise. We will now characterize the Nash equilibria of this game using a sequence of claims. CLAIM 3. In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x . Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF. The proof is similar to that of Claim 2. Let f(u−1) = (x − x )u−1 + x . Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1). Suppose that v−1 < 1/2. Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x . As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction. Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x . As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction. Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2. Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1]. Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ]. CLAIM 4. In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0. PROOF. The proof of this claim is also similar to that of Claim 2. We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0. For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1). Let v0 be the strategy of V0. First, suppose that v0 > 1/2. Then U1 strictly prefers to play 0, i.e., u1 = 0. Then for V0 we have P1 (V0) = P0 (V0) − u0. As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction. Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1. Hence, P1 (V0) = P0 (V0) + 1. It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction. Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2. Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1. The argument for the inductive step is similar. Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1). Let vi be the strategy of Vi. First, suppose that vi > 1/2. Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0. Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction. Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1. Hence, P1 (Vi) = P0 (Vi) + 1 − ui. By inductive hypothesis, we have ui < 1. Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction. Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2. Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1. CLAIM 5. Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium. PROOF. First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1]. As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1. Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1. In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1]. To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5. The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2. The expected payoffs to V−1 and V0 are 0. Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1. It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1. We would like to express Pk−1 i=1 Ti as a function of u0. To simplify notation, set u = u0. LEMMA 2. For i = 1, . . . , k, we have ui = u+i−1 u+i . PROOF. The proof is by induction on i. For i = 1, we have u1 = u/(u + 1). Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1). We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i). It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 . Observe that as u−1 varies from 0 to 1, u varies from x to x . Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u). By construction, the only maximum of R(u) on [x , x ] is α. It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α. Finally, note that the payoffs in our game are rational rather than integer. However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy. In the resulting game, all payoffs are integer. This concludes the proof of Theorem 2. 4. APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q. Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective. We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal. The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix). While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios. Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles. Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2. Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.) Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path. We then state our result for the general case; the proof can be found in the full version of this paper [10]. Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s). Let M(G) = max{EP(s) | s is a Nash equilibrium for G}. THEOREM 3. Suppose that G is a graphical game on an nvertex path. Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− . The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF. Let {V1, . . . , Vn} be the set of all players. We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1. As shown in [9], this can be done in time O(n3 ). Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}. We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi). For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}. It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points. As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N. Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i . We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile. We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough. Let s be a strategy profile that maximizes social welfare. That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G). For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}. First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1). As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3. For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF. Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m . We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma. Indeed, fix k, l, m ∈ {0, 1}. Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m . Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ. A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ. Also, we have x, x , y, y , z, z ∈ [0, 1]. Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ. Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal. We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming. As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i . If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞. The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows. We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1). If this is not the case, we have ml,k i = −∞. Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1. The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1. By construction of the set Xi−2, this implies that Y is not empty. For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i . Clearly, pjlk can be computed in constant time. Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }. Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn. Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1. This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques. It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ). Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal. We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ). This completes the proof of Theorem 3. To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation. If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy. That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points. We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4. Let G be an n-player graphical game on a tree in which each node has at most Δ children. Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points. For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − . The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ . For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix. If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial. First, note that we cannot expect a multiplicative approximation for all inputs. That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G). If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution. To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity. However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded. Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix. In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin. Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G). Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ. It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5. BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold. These thresholds do not have to be the same for all players. In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists. It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section. THEOREM 5. Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF. The proof is similar to that of Theorem 3. First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3. Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i . Otherwise, let zl,k i = 0. We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows. We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1). If this 168 is not the case, clearly, zk,l i = 0. Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1. It has been shown in the proof of Theorem 3 that Y = ∅. For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i . Clearly, pjlk can be computed in constant time. If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1. Otherwise, set zl,k i = 0. Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ). If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }). REMARK 1. Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players. Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti. The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}. It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium. As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty. Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T). The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players. However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates. CLAIM 6. There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates. PROOF. We define the payoffs to the players in G as follows. The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0. Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively. It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1]. It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}. The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0. Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8. Suppose w ∈ [0, 1]. The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8. The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20. Note that we have .1 < (1 + √ 41)/20 < .9. For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff. There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1]. We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1]. On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q. This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates. Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6. OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players. For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter. Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s). If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5. Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3). Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ . Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i . If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞. The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5. Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints. Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players. This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player. The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal. To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds. Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax. For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2. We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ . If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop. We repeat this process until |T − T | ≤ . It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 . The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either. We will now show that Nash equilibria in this category can be approximated in polynomial time as well. Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds. Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player. More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0. Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }). This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0. Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5. If it fails to find a solution, we increment all Ti, Ti by and loop. We continue until the algorithm finds a solution, or Ti ≥ Pmax. Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k . During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + . That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 . We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }). Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax]. This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount. Finally, note that all results in this section can be extended to bounded-degree trees. 7. CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees. We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc. First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem. Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria. This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers. We then provided approximation algorithms for selecting Nash equilibria with special properties. While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties. Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement. As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium. Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size. Under mild restrictions on the inputs, they can be modified to be truly polynomial. This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here. While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles. In the full version of the paper we describe our algorithms for the general case. Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc. At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here. It is natural to ask if our results or those of [9] can be generalized to games with three or more actions. However, it seems that this will make the analysis significantly more difficult. In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player. Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does. Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas. Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE. The ratio between these values is called the mediation value in [1]. It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite. Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8. REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H. Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H. Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171",
    "original_translation": "Computación de buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Hebrew University of Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K.K.K.K.K.K.K.K.K.K.K.Este documento aborda el problema de la selección de equilibrio justo en los juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada la mejor política de respuesta, que fue propuesta por Kearns et al.[13] Como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la mejor política de respuesta tiene un tamaño polinómico siempre que el gráfico subyacente sea una ruta. En este artículo, mostramos que si el gráfico subyacente es un árbol de grado limitado y la mejor política de respuesta tiene un tamaño polinomial, entonces hay un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractiva es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente este último es inviable (demostramos que resolver este problema puede implicar un número algebraico de un grado arbitrariamente alto), existe un FPTA para encontrar tal equilibrio siempre que la mejor política de respuesta tenga un tamaño polinómico. Estos dos algoritmos se pueden combinar para producir equilibrios de Nash que satisfagan varios criterios de equidad. Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales-economía Algoritmos de términos generales, Economía, Teoría 1. Introducción En una gran comunidad de agentes, es probable que el comportamiento de los agentes no tenga un efecto directo en la mayoría de los otros agentes: más bien, son solo los agentes que están lo suficientemente cerca de él los que se verán afectados. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y, finalmente, las elecciones tomadas por un solo agente se propagarán en toda la comunidad. Esta es la intuición detrás de los juegos gráficos, que fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacta para juegos con muchos jugadores. En un juego gráfico N-jugador, cada jugador está asociado con un vértice de un gráfico G subyacente, y los pagos de cada jugador dependen de su acción y de las acciones de sus vecinos en el gráfico. Si el grado máximo de G es δ, y cada jugador tiene dos acciones disponibles para él, entonces el juego puede representarse usando números N2Δ+1. Por el contrario, necesitamos números N2N para representar un juego general de 2-acción del jugador N, que solo es práctico para valores pequeños de n.Para juegos gráficos con δ constante, el tamaño del juego es lineal en n.Uno de los problemas más naturales para un juego gráfico es encontrar un equilibrio de Nash, cuya existencia se deduce del teorema de Nashs (ya que los juegos gráficos son solo un caso especial de juegos N-jugador). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en las que el gráfico subyacente es un árbol de grano limitado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que se puedan especializar de dos maneras: un algoritmo exponencial de tiempo para encontrar un equilibrio (exacto) Nash y un esquema de aproximación de tiempo totalmente polinómico (FPTA) para encontrar una aproximación a un equilibrio NASH. Para cualquiera> 0, este algoritmo genera un equilibrio -nash, que es un perfil de estrategia en el que ningún jugador puede mejorar su recompensa en más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de noh a menudo son más fáciles de calcular que los equilibrios de NASH exactos, este concepto de solución tiene varios inconvenientes. Primero, los jugadores pueden ser sensibles a una pequeña pérdida en los pagos, por lo que el perfil de estrategia que es un equilibrio de las notas no será estable. Este será el caso, incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor de que satisfaga a todos. En segundo lugar, los perfiles de estrategia que están cerca de ser equilibrios NASH pueden ser mucho mejores con respecto a las propiedades bajo consideración que los equilibrios exactos de Nash. Por lo tanto, el valor (aproximación al) de la mejor solución que corresponde a un equilibrio de -nash puede no ser indicativo de lo que se puede lograr bajo un equilibrio exacto de Nash. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de noh puede ser poco realista. Por estas razones, en este documento nos centramos en el problema de calcular los equilibrios exactos de Nash. Sobre la base de ideas de [14], Elkind et al.[9] mostró cómo encontrar un equilibrio (exacto) Nash en el tiempo polinomial cuando el gráfico subyacente 162 tiene grado 2 (es decir, cuando el gráfico es una colección de rutas y ciclos). Por el contrario, encontrar un equilibrio NASH en un gráfico general unido a grado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) para que se complete para la clase PPAD de complejidad.[9] extiende este resultado de la dureza al caso en el que el gráfico subyacente ha limitado el ancho de ruta. Un juego gráfico puede no tener un equilibrio NASH único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentra un equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con varias propiedades socialmente deseables, como maximizar el pago general o distribuir ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios Nash del juego subyacente. Si esta representación tiene un tamaño polinomial (como es el caso de las rutas, como se muestra en [9]), uno puede esperar extraer de él un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio (aproximado) -nash. El objetivo de este documento es extender esto a los equilibrios de NASH exactos.1.1 Nuestros resultados en este documento, estudiamos juegos gráficos de 2-acción del jugador N en árboles de grado limitado para los cuales la estructura de datos de [13] tiene poli (n) de tamaño. Nos centramos en el problema de encontrar equilibrios exactos de NASH con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que (casi) maximice el bienestar social, es decir, la suma de los pagos de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que (casi) satisfaga los límites de pago prescritos para todos los jugadores. Los juegos gráficos en los árboles de grado limitado tienen una estructura algebraica simple. Una característica atractiva, que se deduce de [13], es que cada juego tiene un equilibrio de Nash en el que la estrategia de cada jugador es un número racional. La Sección 3 estudia la estructura algebraica de los equilibrios de Nash que maximizan el bienestar social. Mostramos (teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con un grado como máximo n, exhibimos un juego gráfico en una ruta de longitud o (n) de tal manera que, en el equilibrio NASH que maximiza el bienestar social único de este juego,Uno de los jugadores juega la estrategia mixta α.1 Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del entorno que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación en la que es fácil encontrar y representar un equilibrio de Nash. Como el equilibrio NASH que maximiza el bienestar social puede ser difícil de representar de manera eficiente, tenemos que conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y la de los documentos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo genere un equilibrio exacto de NASH, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que satisface este requisito. A saber, proponemos un algoritmo que para cualquier> 0 encuentra un equilibrio de Nash cuyo pago total está dentro de la óptima. Se ejecuta en tiempo polinomial (Teorema 3,4) para cualquier juego gráfico en un árbol de grado limitado para el cual la estructura de datos propuesta por [13] (la llamada política de respuesta mejor, definida a continuación) es de tamaño poli (n)(Tenga en cuenta que, como se muestra en [9], este es siempre el caso cuando el gráfico subyacente es una ruta). Datta [8] obtuvo más pre1 en un contexto relacionado en un contexto diferente, quien muestra que los juegos de 2-acción de N-jugador son universales en el sentido de que cualquier variedad algebraica real puede representarse como el conjunto de equilibrios de NASH totalmente mixtos de tales talesjuegos.Cisely, el tiempo de ejecución de nuestro algoritmo es polinomial en N, PMAX y 1/, donde PMAX es el valor absoluto máximo de una entrada de una matriz de pago, es decir, es un algoritmo pseudopolinomial, aunque es completamente polinómico con respecto a. Mostramos (Sección 4.1) que, bajo algunas restricciones en las matrices de pago, el algoritmo puede transformarse en un algoritmo de tiempo polinomial (verdaderamente) que genera un equilibrio NASH cuyo pago total está dentro de un factor 1 de lo óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la recompensa esperada de cada jugador VI excede un umbral prescrito TI. Usando la idea de la Sección 4 damos (Teorema 5) un esquema de aproximación de tiempo totalmente polinomial para este problema. El tiempo de ejecución del algoritmo está limitado por un polinomio en N, PMAX y. Si la instancia tiene un equilibrio de Nash que satisface los umbrales prescritos, entonces el algoritmo construye un equilibrio NASH en el que el pago esperado de cada jugador VI es al menos Ti -. En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden usarse como bloques de construcción para encontrar equilibrios de Nash que satisfagan estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que se aproxime al bienestar social máximo, al tiempo que garantizamos que cada recompensa individual esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que (casi) maximice el pago mínimo individual. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que los pagos individuales de los jugadores estén cerca el uno del otro.1.2 Trabajo relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos N-Action de dos jugadores, para los cuales los problemas correspondientes son intratables. Para los juegos N-Action de dos jugadores, el problema de encontrar equilibrios Nash con propiedades especiales es típicamente NP-HARD. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximar tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe un polinomio inverso en N, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es complete PPAD. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos de eliminación del cuantificador estándar se pueden usar para resolverlos. Tenga en cuenta que estos algoritmos no tienen tiempo polinomial en general. Los juegos que estudiamos en este documento tienen equilibrios NASH computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de NASH óptimo puede incluir necesariamente estrategias mixtas con alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre los vectores de los jugadores acciones con la propiedad de que si se le dice a algún jugador su propia acción (el valor de su propio componente) a partir de un vector generado por esa distribución,Entonces no puede aumentar su recompensa esperada cambiando su acción. Cualquier equilibrio de Nash es un CE, pero el Converse no se mantiene en general. En contraste con los equilibrios de NASH, se pueden encontrar equilibrios correlacionados para juegos gráficos de bajo grado (así como otras clases de juegos multijugador concisados) en el tiempo polinomial [17]. Pero, para los juegos gráficos es NP-Hard encontrar un equilibrio correlacionado que maximice el pago total [18]. Sin embargo, los resultados de NP-Hardness se aplican a juegos más generales que el que consideramos aquí, en particular los gráficos no son árboles. De [2] también se sabe que existen 2 juegos de jugadores y 2-acción para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es más alto que el mejor equilibrio de Nash, y discutimos este problema más en la Sección 7. 2. Preliminares y notación consideramos juegos gráficos en los que el gráfico subyacente G es un árbol N-Vértice, en el que cada vértice tiene como máximo niños Δ. Cada vértice tiene dos acciones, que se denotan por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número V ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol se enraize arbitrariamente. Por conveniencia, suponemos sin pérdida de generalidad que la raíz tiene un solo hijo, y que su recompensa es independiente de la acción elegida por el niño. Esto se puede lograr eligiendo primero una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, dando al nuevo padre una función de pago constante, por ejemplo, 0. Dado un borde (v, w) del árbol g, y una estrategia mixta w para w, deje que g (v, w), w = w sea la instancia obtenida de g al (1) eliminar todos los nodos z que están separados deV Por W (es decir, todos los nodos z de tal manera que la ruta de Z a V pasa a través de W), y (2) restringiendo la instancia para que W esté obligado a jugar estrategia mixta W.Definición 1. Supongamos que (V, W) es un borde del árbol, que V es una estrategia mixta para V y que W es una estrategia mixta para w. Decimos que V es una mejor respuesta potencial a W (denotada por V ∈ PBRV (W)) si hay un equilibrio en la instancia G (V, W), W = W en la que V tiene una estrategia mixta v. Definimos elLa mejor política de respuesta para V, dada W, como B (W, V) = {(W, V) |v ∈ PBRV (W), W ∈ [0, 1]}. El pase aguas arriba del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la mejor política de respuesta para V dada su padre. Con los supuestos anteriores sobre la raíz, el pase aguas abajo es sencillo. La raíz selecciona una estrategia mixta W para la raíz W y una estrategia mixta v ∈ B (W, V) para cada niño v de w. Instruye a cada niño que tocara v. El resto del pase descendente es recursivo. Cuando su padre le instruye a un nodo V para que adopte la estrategia mixta V, hace lo siguiente para cada niño u, encuentra un par (v, u) ∈ B (v, u) (con el mismo valor V que se le diopor su padre) y te indica que te toces. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo se define por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU;Puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B (V, U), y para unir el número de rectángulos, [9] usó la noción de un punto de evento, que se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1] 2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto uevent de A si u =0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y U es un punto final de IU;Los puntos de eventos V se definen de manera similar. Para muchos juegos considerados en este documento, el gráfico subyacente es una ruta N-Vértice, es decir, un gráfico G = (V, E) con V = {V1 ,..., Vn} y e = {(v1, v2) ,..., (Vn - 1, vn)}. En [9], se demostró que para tales juegos, la mejor política de respuesta solo tiene rectángulos polinómicos. La prueba de que el número de rectángulos en B (VJ+1, VJ) es Polynomial procede al mostrar primero que el número de puntos de evento en B (VJ+1, VJ) no puede exceder el número de puntos de evento en B (VJ, VJ, VJ−1) por más de 2, y usando este hecho para unir el número de rectángulos en B (VJ+1, VJ). Deje que P0 (v) y P1 (v) sean los pagos esperados a V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V S. En lo que sigue, con frecuencia usaremos la siguiente observación simple. Reclamación 1. Para un vértice V con un solo niño U y un padre w, dado cualquier A, B, C, D ∈ Q, A, B, C, D ∈ Q, se puede seleccionar los pagos a V para que P0 (V) = Auw+ Bu + cw + d, p1 (v) = a uw + b u + c w + d. Además, si todos los A, B, C, D, A, B, C, D son enteros, los pagos a V también son enteros. PRUEBA. Daremos la prueba de P0 (v);La prueba de P1 (v) es similar. Para i, j = 0, 1, que PIJ sea la recompensa de V cuando tocas i, V juega 0 y W juega j. Tenemos p0 (v) = p00 (1 - u) (1 - w) + p10u (1 - w) + p01 (1 - u) w + p11uw. Tenemos que seleccionar los valores de PIJ para que p00 - p10 - p01 + p11 = a, −p00 + p10 = b, −p00 + p01 = c, p00 = D. Es fácil ver que la solución única está dada porP00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Deje que PMAX sea el mayor valor absoluto de cualquier elemento de cualquier matriz de pago. Luego, la entrada consta de en la mayoría de los números N2Δ+1, cada uno de los cuales puede representarse utilizando bits de PMAX log.3. Equilibrios de Nash que maximizan el bienestar social: soluciones en R \\ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es la que maximiza la suma de los pagos esperados de los jugadores. Desafortunadamente, resulta que calcular este perfil de estrategia exactamente no es posible: en esta sección, mostramos que incluso si todos los jugadores de pago son enteros, el perfil de estrategia que maximiza el pago total puede tener coordenadas irracionales;Además, puede involucrar un número algebraico de un grado arbitrario.3.1 Calentamiento: irracionalidades cuadráticas Comenzamos proporcionando un ejemplo de un juego gráfico en una ruta de longitud 3 con pagos enteros de tal manera que en el equilibrio de Nash que maximiza el pago total, uno de los jugadores tiene una estrategia en R \\ Q. En la próxima subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n;Para hacerlo, tenemos que considerar caminos de longitud o (n). Teorema 1. Existe un juego gráfico G-Game G en una ruta de 3 vértices UV W de tal manera que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia, U, del jugador U y el total de recompensa, P, Satisfy U,p ∈ R \\ Q. PRUEBA. Los pagos a los jugadores en G se especifican de la siguiente manera. La recompensa a U es idénticamente 0, es decir, P0 (u) = P1 (u) = 0. Usando la reclamación 1, seleccionamos los pagos a V para que P0 (v) = −uw + 3W y P1 (v) = p0 (v) + w (u + 2) - (u + 1), donde u y w estánLas estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f (u) = u+1 u+2. Observe que para cualquier u ∈ [0, 1] tenemos f (u) ∈ [0, 1]. El pago a W es 0 si selecciona la misma acción que V y 1 de lo contrario. Reclamación 2. Todos los equilibrios Nash del Juego G son de la forma (U, 1/2, F (U)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f (u). Además, para cualquier valor de U, el vector de estrategias (U, 1/2, F (u)) constituye un equilibrio NASH. PRUEBA. Es fácil verificar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f (u)) es un equilibrio NASH. De hecho, U está contento de jugar 164 cualquier estrategia mixta u no importa lo que V y W hagan. Además, V es indiferente entre 0 y 1 siempre que W = F (U), por lo que puede jugar 1/2. Finalmente, si V juega 0 y 1 con igual probabilidad, W es indiferente entre 0 y 1, por lo que puede jugar F (U). Por el contrario, suponga que v> 1/2. Entonces w estrictamente prefiere jugar 0, es decir, w = 0. Luego, para V tenemos p1 (v) = p0 (v) - (u + 1), es decir, p1 (v) <p0 (v), lo que implica v = 0, una contradicción. Del mismo modo, si v <1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, p1 (v) = p0 (v) + (u + 2) - (u + 1), es decir, p1 (v)> p0 (v), lo que implica v = 1, una contradicción. Finalmente, si V = 1/2, pero w = f (u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de reclamo 2. Por reclamo 2, el recompensa total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la recompensa a U es 0, la recompensa a V es −Uf (u) + 3f (u), y la recompensa a W es 1/2. Por lo tanto, el equilibrio NASH con el pago total máximo corresponde al valor de u que maximiza g (u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = - (u - 3) (u+ 1) U + 2. Para encontrar extremos de G (u), calculamos h (u) = - d du g (u). Tenemos h (u) = (2u - 2) (u + 2) - (u - 3) (u + 1) (u + 2) 2 = u2 + 4u - 1 (u + 2) 2. Por lo tanto, h (u) = 0 si y solo si u ∈ {−2 + √ 5, −2 - √ 5}. Tenga en cuenta que −2 + √ 5 ∈ [0, 1]. La función G (U) cambia de signo en −2, −1 y 3. Tenemos g (u) <0 para g> 3, g (u)> 0 para u <−2, por lo que el extremo de g (u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5,es un máximo local. Concluimos que el Vector de las Estrategias (−2+√ 5, 1/2, (5-√ 5)/5) dio que el vector de estrategias (−2+√ 5, 1/2, (5-√ 5)/5). El pago total respectivo es 0 - (√ 5 - 5) (√ 5 - 1) √ 5 + 1 2 = 13/2 - 2 √ 5. Esto concluye la prueba del teorema 1. 3.2 Estrategias de grado arbitrario Hemos demostrado que en el equilibrio de NASH que maximizan el bienestar social, las estrategias de algunos jugadores pueden ser irracionalidades cuadráticas, y también la recompensa total. En esta subsección, ampliaremos este resultado para mostrar que podemos construir un juego gráfico de Cogoff Integer en un camino cuyo equilibrio NASH que maximiza el bienestar social implica números algebraicos arbitrarios en [0, 1]. Teorema 2. Para cualquier número algebraico de grado-n α ∈ [0, 1], existe un juego gráfico de pago entero en una ruta de longitud o (n) de modo que, en todos los equilibrios de NASH que maximizan el bienestar social de este juego, uno de los jugadores, uno de los jugadoresJuega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional r (x) y un segmento [x, x] tal que x, x ∈ Q y α es el único máximo de r (x) en [x, x]. En segundo lugar, construimos un juego gráfico cuyo equilibrio NASH puede ser parametrizado por u ∈ [x, x], de modo que en el equilibrio que corresponde a usted el pago total es r (u) y, además, la estrategia de algunos jugadores es u. Se deduce que para lograr el equilibrio de NASH que maximiza el pago, este jugador tiene que jugar α. Los detalles siguen. Lema 1. Dado un número algebraico α ∈ [0, 1], deg (α) = n, existen k2 ,..., K2n + 2 ∈ Q y x, x ∈ (0, 1) ∩ Q tal que α es el único máximo de r (x) = k2 x + 2 + · · · + k2n + 2 x + 2n + 2 en [x, x]. PRUEBA. Sea p (x) el polinomio mínimo de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que p (α) = 0. Sea a = {α1 ,..., αn} ser el conjunto de todas las raíces de P (x). Considere el polinomio Q1 (x) = −p2 (x). Tiene las mismas raíces que p (x), y además, para cualquier x ∈ A tenemos Q1 (x) <0. Por lo tanto, A es el conjunto de todos los máximos de Q1 (x). Ahora, establezca r (x) = Q1 (x) (x+2) ... (x+2n+1) (x+2n+2). Observe que r (x) ≤ 0 para todos x ∈ [0, 1] y r (x) = 0 si y solo si q1 (x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R (x) en [0, 1]. Sea d = min {| αi - α ||αi ∈ A, αi = α} y establecer α = max {α - d/2, 0}, α = min {α + d/2, 1}. Claramente, α es el único cero (y, por lo tanto, el único máximo) de R (x) en [α, α]. Sea X y X algunos números racionales en (α, α) y (α, α), respectivamente;Tenga en cuenta que al excluir los puntos finales de los intervalos nos aseguramos de que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de r (x) en [x, x]. Como r (x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición de la fracción parcial, R (x) se puede representar como r (x) = k2 x + 2 + · · · + k2n + 2x + 2n + 2, donde k2 ,..., K2N+2 son números racionales. Considere un juego gráfico en la ruta U - 1V - 1U0V0U1V1... Uk - 1vk - 1uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (UI - 1, VI - 1, UI) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos los pagos a los jugadores de la siguiente manera.• La recompensa a U - 1 es 0, no importa lo que todos los demás hagan.• La recompensa esperada a V - 1 es 0 si juega 0 y U0 - (x - x) U - 1 −x Si juega 1, donde U0 y U - 1 son las estrategias de U0 y U - 1, respectivamente.• La recompensa esperada a V0 es 0 si se juega 0 y U1 (U0 + 1) - U0 si juega 1, donde U0 y U1 son las estrategias de U0 y U1, respectivamente.• Para cada i = 1 ,..., k - 1, la recompensa esperada a VI cuando se juega 0 es p0 (vi) = aiuiui+1 - aiui+1, y la recompensa esperada a vi cuando se juega 1 es p1 (vi) = p0 (vi)+ui+1 (2 - ui) - 1, donde ai = −ki+1 y ui+1 y ui son las estrategias de ui+1 y ui, respectivamente.• Para cada i = 0 ,..., k, la recompensa a la interfaz de usuario no depende de VI y es 1 si UI y VI - 1 seleccionan diferentes acciones y 0 de lo contrario. Ahora caracterizaremos los equilibrios Nash de este juego utilizando una secuencia de reclamos. Reclamación 3. En todos los equilibrios Nash de este juego V - 1 juega 1/2, y las estrategias de U - 1 y U0 satisfacen U0 = (x - x) U - 1 + x. En consecuencia, en todos los equilibrios de Nash tenemos u0 ∈ [x, x].165 Prueba. La prueba es similar a la de la reclamación 2. Sea f (u - 1) = (x - x) u - 1 + x. Claramente, el jugador V - 1 es indiferente entre jugar 0 y 1 si y solo si U0 = f (u - 1). Supongamos que V - 1 <1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos p1 (v - 1) = p0 (v - 1) + 1 - (x - x) u - 1 - x. Como 1 - x ≤ 1 - (x - x) u - 1 - x ≤ 1 - x para u - 1 ∈ [0, 1] y x <1, tenemos p1 (v - 1)> p0 (v - 1), entonces V - 1 prefiere jugar 1, una contradicción. Del mismo modo, si v - 1> 1/2, el jugador U0 prefiere jugar estrictamente a jugar 0, es decir, u0 = 0, por lo que tenemos p1 (v - 1) = p0 (v - 1) - (x - x) u−1 - x. Como x <x, x> 0, tenemos p1 (v - 1) <p0 (v - 1), así v - 1 prefiere jugar 0, una contradicción. Finalmente, si V - 1 juega 1/2, pero U0 = F (U - 1), el jugador V - 1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, tenga en cuenta que f (0) = x, f (1) = x y, además, f (u - 1) ∈ [x, x] si y solo si u - 1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x, x]. Reclamación 4. En todos los equilibrios de Nash de este juego para cada i = 0 ,..., k - 1, tenemos vi = 1/2, y las estrategias de los jugadores ui y ui+1 satisfacen ui+1 = fi (ui), donde f0 (u) = u/(u+1) y fi (Fi (u) = 1/(2 - u) para i> 0. PRUEBA. La prueba de esta afirmación también es similar a la de la reclamación 2. Usamos inducción en i para demostrar que la declaración de la afirmación es verdadera y, además, ui = 1 para i> 0. Para el caso base i = 0, tenga en cuenta que U0 = 0 por la afirmación anterior (recuerde que x, x se seleccionan para que x, x = 0, 1) y considere el triple (U0, V0, U1). Sea V0 la estrategia de V0. Primero, suponga que v0> 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, U1 = 0. Luego, para V0 tenemos P1 (V0) = P0 (V0) - U0. Como U0 = 0, tenemos p1 (v0) <p0 (v0), lo que implica v1 = 0, una contradicción. Del mismo modo, si V0 <1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se deduce que P1 (V0)> P0 (V0), lo que implica V0 = 1, una contradicción. Finalmente, si V0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos u1 = 1. El argumento para el paso inductivo es similar. A saber, supongamos que la declaración se ha demostrado para todos los i <i y considere el triple (ui, vi, ui+1). Sea VI la estrategia de VI. Primero, suponga que VI> 1/2. Entonces UI+1 prefiere jugar estrictamente 0, es decir, UI+1 = 0. Luego, para vi tenemos p1 (vi) = p0 (vi) −1, es decir, p1 (vi) <p0 (vi), lo que implica vi = 0, una contradicción. Del mismo modo, si Vi <1/2, el jugador UI+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, p1 (vi) = p0 (vi) + 1 - ui. Por hipótesis inductiva, tenemos UI <1. En consecuencia, p1 (vi)> p0 (vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero UI+1 = 1/(2 - UI), el jugador VI no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 - ui) y ui <1, tenemos ui+1 <1. Reclamación 5. Cualquier perfil de estrategia de la forma (U - 1, 1/2, U0, 1/2, U1, 1/2, ..., Reino Unido - 1, 1/2, Reino Unido), donde u - 1 ∈ [0,1], u0 = (x - x) u - 1 + x, u1 = u0/(u0 + 1), y ui + 1 = 1/(2 - ui) para i ≥ 1 constituye un equilibrio de Nash. PRUEBA. Primero, los pagos del jugador U - 1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Mientras U0 = (x −x) U - 1 +x, el jugador V - 1 es indiferente entre 0 y 1, por lo que se contenta con jugar 1/2;Un argumento similar se aplica a los jugadores v0 ,..., VK - 1. Finalmente, para cada i = 0 ,..., K, los pagos de la interfaz de usuario del jugador solo dependen de la estrategia del jugador VI - 1. En particular, siempre que VI - 1 = 1/2, la interfaz de usuario del jugador es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, tenga en cuenta que (x - x) u - 1 + x ∈ [0, 1] para todos u - 1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todosu0 ∈ [0, 1], y 1/(2 - ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todos i = 0 ,..., k.Ahora, calculemos el pago total bajo un perfil de estrategia del formulario dado en la reclamación 5. La recompensa a U - 1 es 0, y la recompensa esperada a cada uno de los UI, i = 0 ,..., K, es 1/2. Los pagos esperados a V - 1 y V0 son 0. Finalmente, para cualquier i = 1 ,..., k - 1, la recompensa esperada a vi es ti = aiuiui+1 - aiui+1. Se deduce que para encontrar un equilibrio de Nash con el pago total más alto, tenemos que maximizar PK - 1 i = 1 Ti sujeto a condiciones u - 1 ∈ [0, 1], u0 = (x −x) u - 1+x, u1 = u0/(u0+1), y ui+1 = 1/(2 - ui) para i = 1 ,..., k - 1. Nos gustaría expresar pk - 1 i = 1 ti en función de U0. Para simplificar la notación, establezca u = u0. Lema 2. Para i = 1 ,..., k, tenemos ui = u+i - 1 u+i. PRUEBA. La prueba es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, porque i ≥ 2 suponga que ui - 1 = (u + i - 2)/(u + i - 1). Tenemos ui = 1/(2 - ui - 1) = (u + i - 1)/(2u + 2i - 2 - u - i + 2) = (u + i - 1)/(u + i). Se deduce que para i = 1 ,..., k - 1 Tenemos ti = ai u + i - 1 u + i u + i u + i + 1 - ai u + i u + i + 1 = −ai 1 u + i + 1 = ki + 1 u + i + 1 1. Observe que, como U - 1 varía de 0 a 1, U varía de x a x. Por lo tanto, para maximizar el pago total, tenemos que elegir u ∈ [x, x] para maximizar k2 u + 2 + · · · + kk u + k = r (u). Por construcción, el único máximo de R (u) en [x, x] es α. Se deduce que en el equilibrio de Nash de maximización de pago de nuestro juego U0 juega α. Finalmente, tenga en cuenta que los pagos en nuestro juego son racionales en lugar de enteros. Sin embargo, es fácil ver que podemos multiplicar todos los pagos a un jugador por su mayor denominador común sin afectar su estrategia. En el juego resultante, todos los pagos son enteros. Esto concluye la prueba del teorema 2. 4. Aproximando el equilibrio de Nash socialmente óptimo hemos visto que el equilibrio de Nash que maximiza el bienestar social puede involucrar estrategias que no están en Q. Por lo tanto, en esta sección nos centramos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que para cualquier> 0 encuentra un equilibrio de Nash cuyo pago total está dentro de Optimal. El tiempo de ejecución de este algoritmo es polinomio en 1/, n y | PMAX |(Recuerde que PMAX es el valor absoluto máximo de una entrada de una matriz de pago). Si bien el resultado negativo de la sección anterior es para juegos gráficos en rutas, nuestro algoritmo se aplica a una gama más amplia de escenarios. A saber, se ejecuta en el tiempo polinomial en los árboles de grado limitado 166 siempre que la mejor política de respuesta de cada vértice, dado su padre, puede representarse como una unión de un número polinomial de rectángulos. Tenga en cuenta que los gráficos de ruta siempre satisfacen esta condición: en [9] mostramos cómo calcular dicha representación, dada un gráfico con el máximo grado 2. En consecuencia, para los gráficos de ruta, se garantiza que el tiempo de ejecución de nuestro algoritmo es polinomio.(Tenga en cuenta que [9] exhibe una familia de juegos gráficos en árboles de grado limitado para los cuales las mejores políticas de respuesta de algunos de los vértices, dados sus padres, tienen un tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del documento presentamos el algoritmo para el caso donde el gráfico subyacente al juego gráfico es una ruta. Luego declaramos nuestro resultado para el caso general;La prueba se puede encontrar en la versión completa de este documento [10]. Suponga que S es un perfil de estrategia para un juego gráfico G. es decir, S asigna una estrategia mixta a cada vértice de G. Sea EPV (S) el recompensa esperado del jugador V bajo S y Sea EP (S) = P V Epv(s). Sea m (g) = max {ep (s) |S es un equilibrio de Nash para G}. Teorema 3. Supongamos que G es un juego gráfico en una ruta nvertex. Luego, para cualquier> 0, hay un algoritmo que construye un equilibrio NASH para G que satisface EP (S) ≥ M (G) -. El tiempo de ejecución del algoritmo es la prueba O (N4 P3 MAX/ 3). Sea {v1 ,..., Vn} ser el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos VI, i = 1 ,..., n - 1. Como se muestra en [9], esto se puede hacer en el tiempo O (N3). Sea n> 5n un parámetro a seleccionar más tarde, establecer δ = 1/n y defina x = {jδ |j = 0 ,..., N}. Decimos que VJ es un punto de evento para un jugador VI si es un punto de evento VI para B (VI, VI-1) o B (VI+1, VI). Para cada jugador VI, considere un conjunto finito de estrategias xi dada por xi = x ∪ {vj | vj es un punto de evento para vi}. Se ha demostrado en [9] que para cualquier i = 2 ,..., n, la mejor política de respuesta B (VI, VI-1) tiene como máximo 2n + 4 puntos de eventos VI. Como requerimos n> 5n, tenemos | xi |≤ 2n;Suponga sin pérdida de generalidad que | xi |= 2n. Ordene los elementos de Xi en orden creciente como x1 i = 0 <x2 i <· · · · <x2n i. Nos referiremos a las estrategias en XI como estrategias discretas del Jugador VI;Un perfil de estrategia en el que cada jugador tiene una estrategia discreta se denominará un perfil de estrategia discreta. Ahora mostraremos que incluso restringimos a cada jugador VI a estrategias de XI, los jugadores aún pueden lograr un equilibrio de Nash y, además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene una recompensa total al menos M (G)- Mientras N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, Sea S = (S1, ..., Sn) donde Si es la estrategia mixta del jugador VI y EP (S) = M (G). Para i = 1 ,..., n, dejar ti = max {xj i |XJ I ≤ Si}. Primero, mostraremos que el perfil de estrategia t = (t1, ..., tn) es un equilibrio de Nash para G. corrige cualquier i, 1 <i ≤ n, y deje r = [v1, v2] × [u1,U2] Sea el rectángulo en B (VI, VI - 1) que contiene (Si, Si - 1). Como V1 es un punto de evento Vi-Vi-evento de B (VI, VI-1), tenemos V1 ≤ Ti, así que el punto (Ti, Si-1) está dentro de R. De manera similar, el punto U1 es un EVENT VI-1punto de B (vi, vi - 1), por lo que tenemos u1 ≤ ti - 1, y por lo tanto el punto (ti, ti - 1 está dentro de R. Esto significa que para cualquier i, 1 <i ≤ n, tenemosti - 1 ∈ PBRVI - 1 (Ti), lo que implica que t = (t1, ..., tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar T en lugar de S.Lema 3. Para cualquier par de perfiles de estrategia t, s tal que | ti - si |≤ δ tenemos | EPVI (S) - EPVI (T) |≤ 24pmaxδ para cualquier i = 1 ,..., n.PRUEBA. Deje que Pi KLM sea la recompensa del jugador VI, cuando juega K, VI - 1 juega L, y VI+1 juega m.Arreglar i = 1 ,..., n y para k, l, m ∈ {0, 1}, establecer tklm = tk i - 1 (1 - ti - 1) 1 - k tl i (1 - ti) 1 - l tm i+1 (1 -Ti+1) 1 - M SKLM = SK I - 1 (1 - Si - 1) 1 - K SL I (1 - Si) 1 - L SM I+1 (1 - Si+1) 1 - M. Tenemos | EPVI (S) - EPVI (t) |≤ x k, l, m = 0,1 | pi klm (tklm - sklm) |≤ 8pmax max klm | tklm - sklm |Ahora mostraremos que para cualquier k, l, m ∈ {0, 1} tenemos | tklm - sklm |≤ 3δ;Claramente, esto implica el lema. De hecho, Fix K, L, M ∈ {0, 1}. Establecer x = tk i - 1 (1 - ti - 1) 1 - k, x = sk i - 1 (1 - si - 1) 1 - k, y = tl i (1 - ti) 1 - l, y =SL I (1 - Si) 1 - L, Z = TM I+1 (1 - Ti+1) 1 - M, Z = SM I+1 (1 - Si+1) 1 - M. Observe que si k = 0 entonces x - x = (1 - ti - 1) - (1 - si - 1), y si k = 1 entonces x - x = ti - 1 - si - 1, entonces | x - x|≤ δ. Un argumento similar muestra | y - y |≤ δ, | z - z |≤ δ. Además, tenemos x, x, y, z, z ∈ [0, 1]. Por lo tanto, | tklm −sklm |= | xyz - x y z |= | xyz - x yz + x yz - x y z + x y z - x y z |≤ | x - x | yz + | y - y | x z + | z - z | x y ≤ 3Δ. Lemma 3 implica pn i = 1 | epvi (s) - epvi (t) |≤ 24npmaxΔ, por lo que al elegir Δ < / (24npmax), o, de manera equivalente, establecer n> 24npmax /, podemos asegurarnos de que el pago total esperado para el perfil de estrategia t esté dentro de Optimal. Ahora demostraremos que podemos encontrar el mejor equilibrio discreto de Nash (con respecto al bienestar social) utilizando la programación dinámica. Como T es un perfil de estrategia discreto, esto significa que el perfil de estrategia que se encuentra por nuestro algoritmo será al menos tan bueno como t.Definir ml, k i para ser el pago total máximo que v1 ,..., VI - 1 puede lograr si cada VJ, J ≤ I, elige una estrategia de XJ, para cada J <I La estrategia de VJ es una mejor respuesta potencial a la estrategia de VJ+1 y, además, VI - 1 PlaysXL I - 1, VI juega xk i. Si no hay forma de elegir las estrategias para V1 ,..., VI - 1 Para satisfacer estas condiciones, establecemos ml, k i = −∞. Los valores ml, k i, i = 1 ,..., n;k, l = 1 ,..., N, se puede calcular inductivamente, como sigue. Tenemos ml, k 1 = 0 para k, l = 1 ,..., N. Ahora, supongamos que ya hemos calculado ML, K J para todos J <i;k, l = 1 ,..., N. para calcular mk, l i, primero verificamos si (xk i, xl i - 1) ∈ B (vi, vi - 1). Si este no es el caso, tenemos ml, k i = −∞. De lo contrario, considere el conjunto y = xi - 2 ∩ pBRVI - 2 (xl i - 1), es decir, el conjunto de todas las estrategias discretas de VI - 2 que son las mejores respuestas potenciales a XL I - 1. La prueba del teorema 1 en [9] implica que el conjunto PBRVI-2 (XL I-1) no es vacía: el jugador VI-2 tiene una mejor respuesta potencial a cualquier estrategia de VI-1, en particular, XL I−1. Mediante la construcción del conjunto Xi - 2, esto implica que Y no está vacío. Para cada xj i - 2 ∈ Y, deje que Pjlk sea la recompensa que VI - 1 recibe cuando VI - 2 juega XJ I - 2, VI - 1 juega XL I - 1, y VI juega XK I. Claramente, PJLK se puede calcular en un tiempo constante. Luego tenemos ml, k i = max {mj, l i - 1 + pjlk |xj i - 2 ∈ Y}. Finalmente, supongamos que hemos calculado ML, K N para L, K = 1 ,..., N. Todavía tenemos que tener en cuenta la recompensa del jugador VN. Por lo tanto, 167 consideramos todos los pares (xk n, xl n - 1) que satisfacen xl n - 1 ∈ PBRVN - 1 (xk n), y elige el que maximiza la suma de mk, l n y el pago de VN cuando élJuega XK N y VN - 1 juega XL N - 1. Esto da como resultado el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas;El perfil de estrategia real que produce este pago puede reconstruirse utilizando técnicas de programación dinámica estándar. Es fácil ver que cada ml, k i se puede calcular en el tiempo o (n), es decir, todos se pueden calcular en el tiempo o (nn3). Recuerde que tenemos que seleccionar n ≥ (24npmax)/ para garantizar que el perfil de estrategia que generamos tiene un pago total que está dentro de Optimal. Llegamos a la conclusión de que podemos calcular una acroximación al mejor equilibrio de Nash en el tiempo O (N4 P3 MAX/ 3). Esto completa la prueba del Teorema 3. Para establecer nuestro resultado para el caso general (es decir, cuando el gráfico subyacente es un árbol de grado limitado en lugar de una ruta), necesitamos notación adicional. Si G tiene N jugadores, deje que Q (N) sea un límite superior en el número de puntos de eventos en la representación de cualquier política de mejor respuesta. Es decir, suponemos que para cualquier vértice u con el padre V, B (V, U) tiene como máximo los puntos de eventos Q (n). Estaremos interesados en la situación en la que Q (n) es polinomio en n.Teorema 4. Deje que G sea un juego gráfico N-jugador en un árbol en el que cada nodo tiene en la mayoría de los niños Δ. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en las que cada política de mejor respuesta B (V, U) está representada por un conjunto de rectángulos con los puntos de evento Q (n). Para cualquier> 0, hay un algoritmo que construye un equilibrio NASH para G que satisface EP (S) ≥ M (G) -. El tiempo de ejecución del algoritmo es polinomio en N, PMAX y −1 siempre que el árbol tenga un grado limitado (es decir, δ = O (1)) y Q (n) es un polinomio en n.En particular, si n = max ((Δ + 1) q (n) + 1, n2Δ + 2 (Δ + 2) pMax −1) y δ> 1, entonces el tiempo de ejecución es o (nΔ (2n) δ. Para la prueba de este teorema, ver [10].4.1 Un algoritmo de tiempo polinómico para la aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es pseudopolinomio en lugar de polinomio, porque incluye un factor que es polinomio en PMAX, la entrada máxima (en valor absoluto) en cualquier matriz de pago. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar al polinomio. Primero, tenga en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de NASH con el pago total al menos (1 -) m (g). Si tuviéramos tal algoritmo, entonces para los juegos gráficos G con m (g) = 0, se requeriría el algoritmo para generar la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de IntegerCoeficiente en rutas de longitud o (n) de modo que para algunos x ∈ R el pago total máximo en el primer juego es X, el X, el X, elEl pago total máximo en el segundo juego es −x, y para ambos juegos, los perfiles de estrategia que logran los pagos totales máximos implican números algebraicos de grado n.Al combinar los dos juegos para que el primer vértice del segundo juego se conecte al último vértice del primer juego, pero los pagos de todos los jugadores no cambian, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total 0, sin embargo, las estrategias que conducen a esta recompensa tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre dos entradas está limitada polinomialmente. Recuerde que suponemos que todos los pagos son enteros, y dejemos que PMIN> 0 sea la entrada más pequeña de cualquier matriz de pago. En este caso, para cualquier perfil de estrategia, la recompensa al Jugador I es al menos PMIN, por lo que la recompensa total en el bienestar social Maximizando el equilibrio Nash S satisface m (g) ≥ NPmin. Además, Lemma 3 implica que al elegir Δ < /(24pmax /pmin), podemos asegurar que el equilibrio de Nash T producido por nuestro algoritmo satisface nx i = 1 epvi (s) - nx i = 1 epvi (t) ≤ 24pmaxΔN ≤npmin ≤ m (g), es decir, para este valor de δ tenemos pn i = 1 epvi (t) ≥ (1 -) m (g). Recuerde que el tiempo de ejecución de nuestro algoritmo es O (nn3), donde n debe seleccionarse para satisfacer n> 5n, n = 1/δ. Se deduce que si PMIN> 0, PMAX/ PMIN = POLY (N), podemos elegir N para que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinomio en n y 1/.5. Pageo limitado Equilibrios Nash Otra forma natural de definir qué es un buen equilibrio de Nash es requerir que cada jugador esperado de pago exceda un cierto umbral. Estos umbrales no tienen que ser los mismos para todos los jugadores. En este caso, además de las matrices de pago de los N jugadores, se nos dan N Números T1 ,..., TN, y nuestro objetivo es encontrar un equilibrio de Nash en el que la recompensa del Jugador I es al menos TI, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. Teorema 5. Dado un juego gráfico G en una ruta N-Vértice y N. Racionales T1 ,..., TN, supongamos que existe un perfil de estrategia S tal que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Luego, para cualquier> 0, podemos encontrar en el tiempo o (max {np3 max / 3, n4 / 3}) Un perfil de estrategia s tal que s es un equilibrio NASH para g y epvi (s) ≥ ti - para i = 1,..., n.PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las mejores políticas de respuesta para todos los jugadores, elegimos n> 5n y construimos los conjuntos xi, i = 1 ,..., n, como se describe en la prueba del teorema 3. Considere un perfil de estrategia S tal que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Construimos un perfil de estrategia ti = max {xj i |XJ I ≤ Si} y use el mismo argumento que en la prueba del teorema 3 para mostrar que t es un equilibrio de Nash para G. por Lemma 3, tenemos | epvi (s) - epvi (t) |≤ 24pmaxΔ, por lo que eligiendo Δ < / (24pmax), o, de manera equivalente, n> max {5n, 24pmax /}, podemos asegurar EPVI (t) ≥ ti - para i = 1 ,..., n.Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que satisfaga EPVI (t) ≥ ti - para i = 1 ,..., n.Como T es un perfil de estrategia discreta, nuestro algoritmo tendrá éxito cuando haya un perfil de estrategia con EPVI (s) ≥ ti- para i = 1 ,..., n.Sea ZL, K I = 1 Si hay un perfil de estrategia discreto de tal manera que para cualquier estrategia del jugador VJ es una mejor respuesta potencial a la estrategia de VJ+1, el pago esperado de VJ es al menos tj -,,Y, además, VI - 1 juega XL I - 1, VI juega xk i. De lo contrario, deje zl, k i = 0. Podemos calcular ZL, K I, I = 1 ,..., n;k, l = 1 ,..., N inductivamente, como sigue. Tenemos ZL, K 1 = 1 para K, L = 1 ,..., N. Ahora, supongamos que ya hemos calculado Zl, K J para todos J <i;k, l = 1 ,..., N. para calcular Zk, L I, primero verificamos si (xk i, xl i - 1) ∈ B (vi, vi - 1). Si este 168 no es el caso, claramente, zk, l i = 0. De lo contrario, considere el conjunto y = xi - 2 ∩pBrvi - 2 (xl i - 1), es decir, el conjunto de todas las estrategias discretas de VI - 2 que son las mejores respuestas potenciales a XL I - 1. Se ha demostrado en la prueba del teorema 3 que y = ∅. Para cada xj i - 2 ∈ Y, deje que Pjlk sea la recompensa que VI - 1 recibe cuando VI - 2 juega XJ I - 2, VI - 1 juega XL I - 1, y VI juega XK I. Claramente, PJLK se puede calcular en un tiempo constante. Si existe un xj i - 2 ∈ Y tal que ZJ, L I - 1 = 1 y Pjlk ≥ ti - 2 -, establece Zl, k i = 1. De lo contrario, establezca Zl, k i = 0. Habiendo calculado Zl, K N, L, K = 1 ,..., N, verificamos si Zl, K n = 1 para algún par (L, K).Si existe dicho par de índices, instruimos a VN que reproduzca XK n y use técnicas de programación dinámica (o, de manera equivalente, el pase posterior del algoritmo de [13]) para encontrar un equilibrio NASH que satisfaga los EPVI ≥ Ti- para i = 1 ,..., n (recuerde que VN es un reproductor ficticio, es decir, suponemos que TN = 0, EPN (S) = 0 para cualquier opción de S). Si zl, k n = 0 para todos l, k = 1 ,..., N, no hay un equilibrio NASH discreto que satisfaga EPVI (s) ≥ ti - para i = 1 ,..., n y, por lo tanto, no hay equilibrio de Nash (no necesariamente discretos) tal que EPVI (S) ≥ Ti para i = 1 ,..., n.El análisis del tiempo de ejecución es similar al del Teorema 3;Concluimos que el tiempo de ejecución de nuestro algoritmo es o (nn3) = o (max {np3 max / 3, n4 / 3}). Observación 1. El teorema 5 se puede extender a árboles de grado limitado de la misma manera que el teorema 4. 5.1 Computación exacta Otro enfoque para encontrar equilibrios de Nash con pagos limitados se basa en calcular inductivamente los subconjuntos de las mejores políticas de respuesta de todospuntos que no proporcionan suficientes pagos a algunos de los jugadores. Formalmente, decimos que una estrategia V del jugador V es una mejor respuesta potencial a una estrategia W de su padre W con respecto a un vector umbral t = (t1, ..., tn), (denotado por v ∈ PBRV (w, t)) Si hay un equilibrio en la instancia g (v, w), w = w en el que V juega la estrategia mixta V y la recompensa a cualquier jugador VI aguas abajo de V (incluida V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B (W, V, T) = {(W, V) |v ∈ PBRV (W, T), W ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B (VJ, VJ - 1, T), J = 1 ,..., n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, uno puede aplicar el pase aguas abajo del algoritmo original de [13] para encontrar un equilibrio de Nash. Como suponemos que VN es un vértice ficticio cuyo pago es idénticamente 0, el equilibrio Nash con estos pagos existe siempre que TN ≤ 0 y B (VN, VN - 1, t) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1 ,..., n, el conjunto B (VJ, VJ - 1, T) consiste en un número finito de rectángulos, y uno puede calcular B (VJ+1, VJ, T) dado B (VJ, VJ - 1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B (VJ, VJ - 1, T) pueden tener coordenadas irracionales. Reclamación 6. Existe un juego gráfico G en una ruta de 3 vértice UV W y un vector t = (T1, T2, T3) de modo que B (V, W, T) no se puede representar como una unión de un número finito de rectángulos con racionalcoordenadas. PRUEBA. Definimos los pagos a los jugadores en G de la siguiente manera. La recompensa a U es idénticamente 0, es decir, P0 (u) = P1 (u) = 0. Usando la reclamación 1, seleccionamos los pagos a V para que P0 (v) = UW, P1 (V) = P0 (V) + W - .8u - .1, donde U y W son las estrategias (mixtas) de U yW, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f (u) = .8u + .1;Observe que para cualquier u ∈ [0, 1] tenemos f (u) ∈ [0, 1]. No es difícil ver que tenemos B (W, V) = [0, .1] × {0} ∪ [.1, .9] × [0, 1] ∪ [.9, 1] × {1}. Los pagos a W no son importantes para nuestra construcción;Por ejemplo, establezca p0 (w) = p0 (w) = 0. Ahora, establezca t = (0, 1/8, 0), es decir, estamos interesados en los equilibrios de Nash en el que V S de pago esperado es al menos 1/8. Supongamos w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta V cuando W está jugando w siempre que t juega u = f - 1 (w) = 5W/4 - 1/8 (para asegurarse de que V sea indiferente entre 0 y 1) y P0 (V) = p1 (v) = UW = W (5W/4 - 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 - √ 41)/20 <0 o W ≥ (1 + √ 41)/20. Tenga en cuenta que tenemos .1 <(1 + √ 41)/20 <.9. Para cualquier otro valor de W, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona una recompensa esperada suficiente. También hay algunos valores de W para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizar una recompensa esperada de al menos 1/8;Se puede demostrar que estos valores de W forman un número finito de segmentos en [0, 1]. Llegamos a la conclusión de que cualquier representación de B (W, V, T) como unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, W] × [V, V] para algunosW, V, V ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriculación de pago entero y vectores de umbral y cualquier j = 1 ,..., n - 1, los conjuntos B (VJ+1, Vj, T) no contienen rectángulos de la forma [U, U] × {V} o {V} × [W, W], donde v ∈ R \\ Q. Esto significa que si B (vn, vn-1, t) no está vacío, es decir, hay un equilibrio Nash con pagos prescritos por t, entonces el pase posterior del algoritmo de [13] siempre puede elegir un perfil de estrategia queForma un equilibrio de Nash, proporciona una recompensa de al menos TI al Jugador VI y no tiene coordenadas irracionales. Por lo tanto, a diferencia del caso del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección debe verse como un argumento en contra de usar este enfoque.6. Otros criterios para seleccionar un equilibrio de Nash en esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash.6.1 Combinación de la maximización del bienestar con límites en los pagos en muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a jugadores individuales. Por ejemplo, es posible que deseemos asegurarnos de que ningún jugador obtenga una recompensa negativa esperada, o que la recompensa esperada al Jugador I sea al menos Pi Max - ξ, donde Pi Max es la entrada máxima de la matriz de pago IS y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1 ,..., TN, Sea s el conjunto de todos los equilibrios Nash de G que satisfacen Ti ≤ epvi (s) para i = 1 ,..., n, y deje ˆS = argmaxs∈S ep (s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que se cierre para satisfacer los límites de pago y está dentro de ˆs con respecto al pago total combinando los algoritmos de la Sección 4 y la Sección 5. A saber, para un dado> 0, elija δ como en la prueba del teorema 3, y sea Xi el conjunto de todas las estrategias discretas del jugador VI (para una definición formal 169, consulte la prueba del teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max {xj i |XJ I ≤ ˆSi} satisface EPVI (ˆT) ≥ ti -, | EP (ˆs) - EP (ˆT) |≤. Definir ˆml, k i para ser el pago total máximo que v1 ,..., VI - 1 puede lograr si cada VJ, J ≤ I, elige una estrategia de XJ, para cada J <I La estrategia de VJ es una mejor respuesta potencial a la estrategia de VJ+1 y la recompensa al jugador VJ es al menosTJ - y, además, VI - 1 juega xl I - 1, VI juega xk i. Si no hay forma de elegir las estrategias para V1 ,..., VI - 1 Para satisfacer estas condiciones, establecemos ml, k i = −∞. El ˆML, K I se puede calcular mediante programación dinámica de manera similar a la ML, K I y ZL, K I en las pruebas de los teoremas 3 y 5. Finalmente, como en la prueba del Teorema 3, usamos ML, K N para seleccionar el mejor equilibrio discreto de Nash sujeto a las limitaciones de pago. Incluso en general, es posible que deseemos maximizar el pago total a un subconjunto de jugadores (que se supone que pueden redistribuir las ganancias de manera justa entre ellos) mientras garantizan ciertos pagos esperados a (un subconjunto de) los otros jugadores. Este problema se puede manejar de manera similar.6.2 Un enfoque Minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es la recompensa mínima esperada para un jugador. La solución óptima con respecto a esta medida es un equilibrio de NASH en el que el pago mínimo esperado a un jugador es máximo. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con búsqueda binaria en el espacio de los límites inferiores potenciales. Tenga en cuenta que la recompensa esperada a cualquier jugador VI dada una estrategia S siempre satisface −pmax ≤ EPVI (S) ≤ PMAX. Para un fijo> 0, comenzamos configurando t = −pmax, t = pMax, t ∗ = (t + t)/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = tn = t ∗. Si el algoritmo logra encontrar un equilibrio de Nash que satisfaga los EPVI (s) ≥ t ∗ - para todos i = 1 ,..., n, establecemos t = t ∗, t ∗ = (t + t)/2;De lo contrario, establecemos t = t ∗, t ∗ = (t + t)/2 y bucle. Repetimos este proceso hasta que | t - t |≤. No es difícil verificar que para cualquier p ∈ R, si hay un equilibrio de Nash s tal que mini = 1, ..., n epvi (s) ≥ p, entonces nuestro algoritmo genera un equilibrio Nash que satisface mini = =1, ..., n epvi (s) ≥ p - 2. El tiempo de ejecución de nuestro algoritmo es O (max {np3 max log −1 / 3, n4 log −1 / 3}).6.3 Al igualar los pagos cuando las matrices de pago de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados a los jugadores tampoco difieran mucho. Ahora mostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en el tiempo polinomial. De hecho, observe que el algoritmo de la Sección 5 puede modificarse fácilmente para tratar con los límites superiores en los pagos individuales en lugar de los límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que satisface tanto el límite superior como el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n Números racionales T1 ,..., TN, T1 ,..., TN y> 0. Entonces, si existe un perfil de estrategia, que S es un equilibrio de Nash para G y Ti ≤ Epvi (S) ≤ Ti para i = 1 ,..., n, podemos encontrar un perfil de estrategia S tal que S es un equilibrio NASH para G y ti - ≤ Epvi (S) ≤ Ti + para i = 1 ,..., n.El algoritmo modificado también se ejecuta en el tiempo o (max {np3 max / 3, [4] n4 / 3}). Esta observación nos permite aproximar los equilibrios de NASH en el que todos los jugadores esperados de los pagos difieren como máximo ξ para cualquier ξ> 0 fijo. Dado un> 0, establecemos t1 = · · · = tn = −pmax, t1 = · · · = tn = −pmax + ξ +, y ejecutamos la versión modificada del algoritmo de la sección 5. Si no encuentra una solución, incrementamos todo Ti, Ti por y Loop. Continuamos hasta que el algoritmo encuentre una solución, o TI ≥ PMAX. Supongamos que existe un equilibrio de Nash que satisface | EPVI (S) - EPVJ (S) |≤ ξ para todo i, j = 1 ,..., n.Establecer r = mini = 1, ..., n epvi (s);Tenemos r ≤ epvi (s) ≤ r + ξ para todos i = 1 ,..., n.Existe un k ≥ 0 tal que −pmax + (k - 1) ≤ r ≤ −pmax + k. Durante el paso KTH del algoritmo, establecemos T1 = · · · = tn = −pmax + (k - 1), es decir, tenemos r− ≤ ti ≤ r, r + ξ ≤ ti ≤ r + ξ +. Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ epvi (s) ≤ r + ξ ≤ ti, lo que significa que cuando Ti se establece en −pmax + (k - 1), nuestro algoritmo está garantizado para emitir un equilibrio de Nashque satisface r - 2 ≤ ti - ≤ epvi (t) ≤ ti +≤ r +ξ +2. Concluimos que cada vez que existe un equilibrio de Nash, nuestro algoritmo genera un equilibrio Nash que satisface | Epvi (t) - Epvj (t) |≤ ξ + 4 para todos i, j = 1 ,..., n.El tiempo de ejecución de este algoritmo es O (max {np3 max / 4, n4 / 4}). Tenga en cuenta también que podemos encontrar el ξ más pequeño para el cual existe dicho equilibrio de Nash combinando este algoritmo con búsqueda binaria sobre el espacio ξ = [0, 2pmax]. Esto identifica una aproximación al equilibrio más justo de Nash, es decir, uno en el que los jugadores esperaban los pagos difieren por la cantidad más pequeña posible. Finalmente, tenga en cuenta que todos los resultados en esta sección se pueden extender a árboles de grado limitado.7. Conclusiones Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado limitado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, asegurar un límite más bajo en el recompensa esperado de cada jugador, etc. Primero, nos centramos en la complejidad algebraica de un equilibrio NASH que maximiza el bienestar social, y demostramos ser fuertes resultados negativos para ese problema. Es decir, demostramos que incluso para los juegos gráficos en rutas, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todos los equilibrios de NASH social de bienestar. Esto contrasta con el hecho de que los juegos gráficos en los árboles siempre poseen un equilibrio NASH en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de NASH aproximados para varias clases de juegos ha recibido mucha atención en los últimos años, la mayor parte del trabajo existente tiene como objetivo encontrar equilibrios de nash que satisfagan (o sean cerrados para satisfacer) ciertas propiedades. Nuestro enfoque es diferente en el sentido de que insistimos en generar un equilibrio exacto de NASH, que es cerrado para satisfacer un requisito dado. Como se argumentó en la introducción, hay varias razones para preferir una solución que constituya un equilibrio exacto de Nash. Nuestros algoritmos son esquemas de aproximación de tiempo totalmente polinómicos, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser pseudopolinomiales con respecto al tamaño de entrada. Bajo restricciones leves en las entradas, pueden modificarse para que sean verdaderamente polinomiales. Este es el resultado positivo más fuerte que uno puede derivar para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Si bien probamos nuestros resultados para los juegos en un camino, pueden generalizarse a cualquier árbol para el cual las mejores políticas de respuesta tienen representaciones compactos como uniones de rectángulos. En la versión completa del documento describimos nuestros algoritmos para el caso general. El trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores reciben pagos significativamente más altos que sus compañeros, etc. Sin embargo, en este momento, es más importante Inves170 tigat si los equilibrios NASH de los juegos gráficos se pueden calcular de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntar si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará que el análisis sea significativamente más difícil. En particular, tenga en cuenta que uno puede ver los juegos de pago limitados como un caso especial muy limitado de juegos con tres acciones por jugador. A saber, dado un juego de dos acciones con límites de pago, considere un juego en el que cada jugador VI tiene una tercera acción que le garantiza una recompensa de TI, sin importar lo que todos los demás hagan. Entonces, verificar si hay un equilibrio de Nash en el que ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a verificar si existe un equilibrio de Nash que satisfaga los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una búsqueda exactaLa solución a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente porque el mejor CE puede tener un valor más alto (pago total esperado) que el mejor NE. La relación entre estos valores se denomina valor de mediación en [1]. Se sabe a partir de [1] que el valor de mediación de los juegos de 2 jugadores, 2-acción con pagos no negativos es como máximo 4 3, y exhiben un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3accion de [1] también tiene un valor de mediación infinito.8. Referencias [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el valor de la correlación, Actas del Seminario Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y correlación en estrategias aleatorias, Journal of Mathematical Economics 1 PPPPP67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un método de continuación para los equilibrios de Nash en juegos estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng,Calculación de calibrios de NASH: aproximación y complejidad suavizada, procedimientos de FOCS06 [5] X. Chen, X. Deng, Liquidación de la complejidad de los 2 jugadores Nash-equilibrio, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de complejidad, complejidad de resultadosAcerca de los equilibrios de Nash, Actas de Ijcai03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La complejidad de calcular un equilibrio de Nash, Actas de Stoc06 [8] R. S. Datta, Universalidad de la equilibrio de Nash, matemática de la investigación de operaciones 28: 3, 3, 3, 3,2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Nash Equilibria en juegos gráficos en árboles revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, calculando buenos equilibrios de Nash en juegos gráficos,http://arxiv.org/abs/cs.gt/0703133 [11] I. Gilboa y E. Zemel, Nash y equilibrios correlacionados: algunas consideraciones de complejidad, juegos y comportamiento económico, 1 págs. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre problemas de equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos gráficos para la teoría de juegos, Actas de UAI01 [14] M. Littman, M.Kearns y S. Singh, un algoritmo exacto eficiente para juegos gráficos conectados individualmente, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de ecuaciones polinomiales, Actas de Latin04 [16] L. Ortiz y M. Kearns, Propagación de Nash para juegos gráficos Loopy, Actas de NIPS03 [17] C.H. Papadimitriou, Computing Equilibrios correlacionados en juegos de múltiples jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, calculadora de equilibrio en juegos de jugadores múltiples, Actas de SODA05 [19] D. Vickrey y D. Koller, algoritmos de múltiples agentes para resolver juegos gráficos, Actas de AAAAI02 171",
    "original_sentences": [
        "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
        "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
        "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
        "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
        "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
        "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
        "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
        "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
        "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
        "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
        "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
        "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
        "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
        "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
        "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
        "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
        "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
        "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
        "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
        "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
        "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
        "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
        "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
        "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
        "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
        "Moreover, some Nash equilibria are more desirable than others.",
        "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
        "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
        "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
        "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
        "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
        "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
        "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
        "Graphical games on bounded-degree trees have a simple algebraic structure.",
        "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
        "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
        "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
        "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
        "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
        "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
        "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
        "In Section 4, we describe an algorithm that satisfies this requirement.",
        "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
        "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
        "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
        "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
        "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
        "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
        "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
        "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
        "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
        "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
        "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
        "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
        "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
        "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
        "Moreover, it is likely to be intractable even to approximate such equilibria.",
        "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
        "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
        "Note that these algorithms are not polynomial-time in general.",
        "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
        "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
        "Any Nash equilibrium is a CE but the converse does not hold in general.",
        "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
        "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
        "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
        "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
        "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
        "Each vertex has two actions, which are denoted by 0 and 1.",
        "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
        "For the purposes of the algorithm, the tree is rooted arbitrarily.",
        "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
        "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
        "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
        "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
        "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
        "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
        "With the above assumptions about the root, the downstream pass is straightforward.",
        "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
        "It instructs each child V to play v. The remainder of the downward pass is recursive.",
        "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
        "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
        "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
        "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
        "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
        "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
        "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
        "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
        "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
        "In what follows, we will frequently use the following simple observation.",
        "CLAIM 1.",
        "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
        "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
        "PROOF.",
        "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
        "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
        "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
        "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
        "We assume that all elements of these matrices are integer.",
        "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
        "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
        "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
        "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
        "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
        "THEOREM 1.",
        "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
        "PROOF.",
        "The payoffs to the players in G are specified as follows.",
        "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
        "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
        "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
        "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
        "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
        "CLAIM 2.",
        "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
        "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
        "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
        "PROOF.",
        "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
        "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
        "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
        "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
        "Conversely, suppose that v > 1/2.",
        "Then W strictly prefers to play 0, i.e., w = 0.",
        "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
        "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
        "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
        "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "This completes the proof of Claim 2.",
        "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
        "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
        "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
        "To find extrema of g(u), we compute h(u) = − d du g(u).",
        "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
        "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
        "Note that −2 + √ 5 ∈ [0, 1].",
        "The function g(u) changes sign at −2, −1, and 3.",
        "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
        "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
        "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
        "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
        "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
        "THEOREM 2.",
        "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
        "PROOF.",
        "Our proof consists of two steps.",
        "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
        "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
        "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
        "The details follow.",
        "LEMMA 1.",
        "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
        "PROOF.",
        "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
        "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
        "Consider the polynomial Q1(x) = −P2 (x).",
        "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
        "Hence, A is the set of all maxima of Q1(x).",
        "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
        "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
        "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
        "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
        "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
        "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
        "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
        "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
        "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
        "Uk−1Vk−1Uk, where k = 2n + 2.",
        "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
        "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
        "We will now characterize the Nash equilibria of this game using a sequence of claims.",
        "CLAIM 3.",
        "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
        "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
        "The proof is similar to that of Claim 2.",
        "Let f(u−1) = (x − x )u−1 + x .",
        "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
        "Suppose that v−1 < 1/2.",
        "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
        "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
        "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
        "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
        "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
        "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
        "CLAIM 4.",
        "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
        "PROOF.",
        "The proof of this claim is also similar to that of Claim 2.",
        "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
        "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
        "Let v0 be the strategy of V0.",
        "First, suppose that v0 > 1/2.",
        "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
        "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
        "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
        "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
        "Hence, P1 (V0) = P0 (V0) + 1.",
        "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
        "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
        "The argument for the inductive step is similar.",
        "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
        "Let vi be the strategy of Vi.",
        "First, suppose that vi > 1/2.",
        "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
        "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
        "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
        "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
        "By inductive hypothesis, we have ui < 1.",
        "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
        "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
        "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
        "CLAIM 5.",
        "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
        "PROOF.",
        "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
        "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
        "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
        "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
        "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
        "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
        "The expected payoffs to V−1 and V0 are 0.",
        "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
        "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
        "We would like to express Pk−1 i=1 Ti as a function of u0.",
        "To simplify notation, set u = u0.",
        "LEMMA 2.",
        "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
        "PROOF.",
        "The proof is by induction on i.",
        "For i = 1, we have u1 = u/(u + 1).",
        "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
        "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
        "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
        "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
        "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
        "By construction, the only maximum of R(u) on [x , x ] is α.",
        "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
        "Finally, note that the payoffs in our game are rational rather than integer.",
        "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
        "In the resulting game, all payoffs are integer.",
        "This concludes the proof of Theorem 2. 4.",
        "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
        "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
        "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
        "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
        "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
        "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
        "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
        "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
        "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
        "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
        "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
        "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
        "THEOREM 3.",
        "Suppose that G is a graphical game on an nvertex path.",
        "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
        "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
        "Let {V1, . . . , Vn} be the set of all players.",
        "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
        "As shown in [9], this can be done in time O(n3 ).",
        "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
        "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
        "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
        "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
        "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
        "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
        "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
        "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
        "Let s be a strategy profile that maximizes social welfare.",
        "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
        "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
        "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
        "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
        "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
        "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
        "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
        "Indeed, fix k, l, m ∈ {0, 1}.",
        "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
        "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
        "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
        "Also, we have x, x , y, y , z, z ∈ [0, 1].",
        "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
        "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
        "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
        "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
        "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
        "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
        "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
        "If this is not the case, we have ml,k i = −∞.",
        "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
        "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
        "By construction of the set Xi−2, this implies that Y is not empty.",
        "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
        "Clearly, pjlk can be computed in constant time.",
        "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
        "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
        "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
        "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
        "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
        "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
        "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
        "This completes the proof of Theorem 3.",
        "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
        "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
        "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
        "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
        "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
        "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
        "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
        "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
        "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
        "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
        "First, note that we cannot expect a multiplicative approximation for all inputs.",
        "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
        "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
        "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
        "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
        "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
        "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
        "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
        "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
        "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
        "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
        "These thresholds do not have to be the same for all players.",
        "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
        "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
        "THEOREM 5.",
        "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
        "The proof is similar to that of Theorem 3.",
        "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
        "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
        "Otherwise, let zl,k i = 0.",
        "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
        "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
        "If this 168 is not the case, clearly, zk,l i = 0.",
        "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
        "It has been shown in the proof of Theorem 3 that Y = ∅.",
        "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
        "Clearly, pjlk can be computed in constant time.",
        "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
        "Otherwise, set zl,k i = 0.",
        "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
        "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
        "REMARK 1.",
        "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
        "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
        "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
        "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
        "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
        "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
        "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
        "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
        "CLAIM 6.",
        "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
        "PROOF.",
        "We define the payoffs to the players in G as follows.",
        "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
        "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
        "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
        "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
        "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
        "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
        "Suppose w ∈ [0, 1].",
        "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
        "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
        "Note that we have .1 < (1 + √ 41)/20 < .9.",
        "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
        "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
        "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
        "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
        "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
        "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
        "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
        "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
        "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
        "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
        "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
        "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
        "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
        "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
        "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
        "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
        "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
        "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
        "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
        "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
        "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
        "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
        "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
        "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
        "We repeat this process until |T − T | ≤ .",
        "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
        "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
        "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
        "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
        "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
        "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
        "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
        "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
        "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
        "If it fails to find a solution, we increment all Ti, Ti by and loop.",
        "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
        "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
        "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
        "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
        "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
        "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
        "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
        "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
        "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
        "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
        "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
        "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
        "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
        "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
        "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
        "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
        "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
        "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
        "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
        "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
        "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
        "In the full version of the paper we describe our algorithms for the general case.",
        "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
        "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
        "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
        "However, it seems that this will make the analysis significantly more difficult.",
        "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
        "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
        "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
        "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
        "The ratio between these values is called the mediation value in [1].",
        "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
        "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
        "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
        "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
        "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
    ],
    "error_count": 0,
    "keys": {
        "graphical game": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a <br>graphical game</br>.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player <br>graphical game</br>, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a <br>graphical game</br> is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A <br>graphical game</br> may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a <br>graphical game</br> on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any <br>graphical game</br> on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a <br>graphical game</br> on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff <br>graphical game</br> G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff <br>graphical game</br> on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff <br>graphical game</br> on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a <br>graphical game</br> whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a <br>graphical game</br> on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the <br>graphical game</br> is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a <br>graphical game</br> G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a <br>graphical game</br> on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player <br>graphical game</br> on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a <br>graphical game</br> in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a <br>graphical game</br> G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a <br>graphical game</br> G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a <br>graphical game</br> G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a <br>graphical game</br> G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Nuestro enfoque se basa en la estructura de datos llamada la mejor política de respuesta, que fue propuesta por Kearns et al.[13] Como una forma de representar todos los equilibrios Nash de un \"juego gráfico\".juego gráfico",
                "En un \"juego gráfico\" de N-jugador, cada jugador está asociado con un vértice de un gráfico G subyacente, y los pagos de cada jugador dependen de su acción, así como de las acciones de sus vecinos en el gráfico.juego gráfico",
                "Por el contrario, necesitamos números N2N para representar un juego general de 2-acción del jugador N, que solo es práctico para valores pequeños de n.Para juegos gráficos con δ constante, el tamaño del juego es lineal en n.Uno de los problemas más naturales para un \"juego gráfico\" es encontrar un equilibrio de Nash, cuya existencia se deduce del teorema de Nashs (ya que los juegos gráficos son solo un caso especial de juegos N-jugador).juego gráfico",
                "Un \"juego gráfico\" puede no tener un equilibrio NASH único, de hecho, puede tener exponencialmente muchos.juego gráfico",
                "De hecho, para cualquier número algebraico α ∈ [0, 1] con un grado como máximo n, exhibimos un \"juego gráfico\" en una ruta de longitud o (n) de tal manera que, en el equilibrio de nash que maximiza el bienestar social único de esto, de estoJuego, uno de los jugadores juega la estrategia mixta α.1 Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo.juego gráfico",
                "Se ejecuta en tiempo polinomial (Teorema 3,4) para cualquier \"juego gráfico\" en un árbol de grado acotado para el cual la estructura de datos propuesta por [13] (la llamada política de respuesta mejor, definida a continuación) es de tamaño poli (n) (Tenga en cuenta que, como se muestra en [9], este es siempre el caso cuando el gráfico subyacente es una ruta).juego gráfico",
                "Desafortunadamente, resulta que calcular este perfil de estrategia exactamente no es posible: en esta sección, mostramos que incluso si todos los jugadores de pago son enteros, el perfil de estrategia que maximiza el pago total puede tener coordenadas irracionales;Además, puede involucrar un número algebraico de un grado arbitrario.3.1 Calentamiento: irracionalidades cuadráticas Comenzamos proporcionando un ejemplo de un \"juego gráfico\" en un camino de longitud 3 con pagos enteros de tal manera que en el equilibrio de Nash que maximiza el recompensa total, uno de los jugadores tiene una estrategia en r \\P. Juego gráfico",
                "Existe un \"juego gráfico\" de pagos enteros en una ruta de 3 vértices UV w de tal manera que, en cualquier equilibrio de Nash de G que maximiceu, p ∈ R \\ Q. Juego gráfico",
                "En esta subsección, ampliaremos este resultado para mostrar que podemos construir un \"juego gráfico\" de Coayoff entero en un camino cuyo equilibrio de NASH que maximiza el bienestar social implica números algebraicos arbitrarios en [0, 1].juego gráfico",
                "Para cualquier número algebraico de grado-n α ∈ [0, 1], existe un \"juego gráfico\" de pago entero en una ruta de longitud o (n) de tal manera que, en todos los equilibrios de NASH de este juego, en todo el bienestar, uno de este juego, uno deLos jugadores juegan α.juego gráfico",
                "En segundo lugar, construimos un \"juego gráfico\" cuyo equilibrio de Nash puede ser parametrizado mediante u ∈ [x, x], de modo que en el equilibrio que corresponde a usted el pago total es r (u) y, además, la estrategia de algunos jugadores es u.juego gráfico",
                "Considere un \"juego gráfico\" en la ruta U - 1V - 1U0V0U1V1...juego gráfico",
                "Debido a restricciones de espacio, en esta versión del documento presentamos el algoritmo para el caso donde el gráfico subyacente al \"juego gráfico\" es una ruta.juego gráfico",
                "Supongamos que S es un perfil de estrategia para un \"juego gráfico\" G. es decir, S asigna una estrategia mixta a cada vértice de G. Sea EPV (S) el recompensa esperado del jugador V bajo S y LET EP (S) = =P V EPV (S).juego gráfico",
                "Supongamos que G es un \"juego gráfico\" en una ruta nvertex.juego gráfico",
                "Deje que G sea un \"juego gráfico\" de N-jugador en un árbol en el que cada nodo tiene en la mayoría de los niños δ.juego gráfico",
                "Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de IntegerCoeficiente en rutas de longitud o (n) de modo que para algunos x ∈ R el pago total máximo en el primer juego es X, el X, el X, elEl pago total máximo en el segundo juego es −x, y para ambos juegos, los perfiles de estrategia que logran los pagos totales máximos implican números algebraicos de grado n.Al combinar los dos juegos para que el primer vértice del segundo juego se conecte al último vértice del primer juego, pero los pagos de todos los jugadores no cambian, obtenemos un \"juego gráfico\" en el que el mejor equilibrio de Nash tiene totalPago 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica.juego gráfico",
                "Dado un \"juego gráfico\" g en una ruta N-Vértice y N. Racional T1 ,..., TN, supongamos que existe un perfil de estrategia S tal que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Luego, para cualquier> 0, podemos encontrar en el tiempo o (max {np3 max / 3, n4 / 3}) Un perfil de estrategia s tal que s es un equilibrio NASH para g y epvi (s) ≥ ti - para i = 1,..., n.PRUEBA.juego gráfico",
                "Existe un \"juego gráfico\" G en una ruta de 3 vértice UV W y un vector t = (T1, T2, T3) de modo que B (V, W, T) no se puede representar como una unión de un número finito de rectánguloscon coordenadas racionales.juego gráfico",
                "Formalmente, dado un \"juego gráfico\" G y un vector T1 ,..., TN, Sea s el conjunto de todos los equilibrios Nash de G que satisfacen Ti ≤ epvi (s) para i = 1 ,..., n, y deje ˆS = argmaxs∈S ep (s).juego gráfico",
                "Más precisamente, supongamos que se nos da un \"juego gráfico\" G, 2n Números racionales T1 ,..., TN, T1 ,..., TN y> 0. Juego gráfico"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "nash equilibrium": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a <br>nash equilibrium</br> that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a <br>nash equilibrium</br> that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a <br>nash equilibrium</br>, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) <br>nash equilibrium</br>, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a <br>nash equilibrium</br>.",
                "For any > 0 this algorithm outputs an -<br>nash equilibrium</br>, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -<br>nash equilibrium</br> will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -<br>nash equilibrium</br> may not be indicative of what can be achieved under an exact <br>nash equilibrium</br>.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -<br>nash equilibrium</br> may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) <br>nash equilibrium</br> in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a <br>nash equilibrium</br> in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique <br>nash equilibrium</br>, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some <br>nash equilibrium</br>, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a <br>nash equilibrium</br> with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -<br>nash equilibrium</br>.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a <br>nash equilibrium</br> that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a <br>nash equilibrium</br> that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a <br>nash equilibrium</br> in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing <br>nash equilibrium</br> of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal <br>nash equilibrium</br>.",
                "It seems to be a novel feature of the setting we consider here, that an optimal <br>nash equilibrium</br> is hard to represent, in a situation where it is easy to find and represent a <br>nash equilibrium</br>.",
                "As the social welfare-maximizing <br>nash equilibrium</br> may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact <br>nash equilibrium</br>, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a <br>nash equilibrium</br> whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a <br>nash equilibrium</br> whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a <br>nash equilibrium</br> in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a <br>nash equilibrium</br> satisfying the prescribed thresholds then the algorithm constructs a <br>nash equilibrium</br> in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good <br>nash equilibrium</br> and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a <br>nash equilibrium</br> that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a <br>nash equilibrium</br> that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a <br>nash equilibrium</br> in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -<br>nash equilibrium</br> in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal <br>nash equilibrium</br> may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any <br>nash equilibrium</br> is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best <br>nash equilibrium</br>, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best <br>nash equilibrium</br> is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the <br>nash equilibrium</br> that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any <br>nash equilibrium</br> of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any <br>nash equilibrium</br>, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a <br>nash equilibrium</br>.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a <br>nash equilibrium</br>.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any <br>nash equilibrium</br> of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the <br>nash equilibrium</br> with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing <br>nash equilibrium</br> for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing <br>nash equilibrium</br>, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing <br>nash equilibrium</br> involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing <br>nash equilibrium</br>, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a <br>nash equilibrium</br>.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a <br>nash equilibrium</br> with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing <br>nash equilibrium</br> of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL <br>nash equilibrium</br> We have seen that the <br>nash equilibrium</br> that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a <br>nash equilibrium</br> that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a <br>nash equilibrium</br> whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a <br>nash equilibrium</br> for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a <br>nash equilibrium</br> s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a <br>nash equilibrium</br>, and moreover, the best such <br>nash equilibrium</br> (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a <br>nash equilibrium</br> for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a <br>nash equilibrium</br> for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete <br>nash equilibrium</br> (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a <br>nash equilibrium</br> using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best <br>nash equilibrium</br> in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a <br>nash equilibrium</br> s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a <br>nash equilibrium</br> with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best <br>nash equilibrium</br> has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing <br>nash equilibrium</br> s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the <br>nash equilibrium</br> t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good <br>nash equilibrium</br> is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a <br>nash equilibrium</br> in which the payoff of player i is at least Ti, or report that no such <br>nash equilibrium</br> exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a <br>nash equilibrium</br> for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a <br>nash equilibrium</br> for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a <br>nash equilibrium</br> for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a <br>nash equilibrium</br> for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a <br>nash equilibrium</br> s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete <br>nash equilibrium</br> s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no <br>nash equilibrium</br> s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a <br>nash equilibrium</br>.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the <br>nash equilibrium</br> with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a <br>nash equilibrium</br> with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a <br>nash equilibrium</br>, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the <br>nash equilibrium</br> that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A <br>nash equilibrium</br> In this section, we consider several other criteria that can be useful in selecting a <br>nash equilibrium</br>. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a <br>nash equilibrium</br> ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete <br>nash equilibrium</br> subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a <br>nash equilibrium</br> is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a <br>nash equilibrium</br> in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a <br>nash equilibrium</br>, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a <br>nash equilibrium</br> s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a <br>nash equilibrium</br> s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a <br>nash equilibrium</br> s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a <br>nash equilibrium</br> that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a <br>nash equilibrium</br> for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a <br>nash equilibrium</br> for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a <br>nash equilibrium</br> s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the <br>nash equilibrium</br> s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a <br>nash equilibrium</br> t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a <br>nash equilibrium</br> s exists, our algorithm outputs a <br>nash equilibrium</br> t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a <br>nash equilibrium</br> exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest <br>nash equilibrium</br>, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a <br>nash equilibrium</br>, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing <br>nash equilibrium</br>, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a <br>nash equilibrium</br> in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact <br>nash equilibrium</br>, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact <br>nash equilibrium</br>.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a <br>nash equilibrium</br> in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a <br>nash equilibrium</br> that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a <br>nash equilibrium</br>, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En este artículo, mostramos que si el gráfico subyacente es un árbol de grado limitado y la mejor política de respuesta tiene un tamaño polinómico, entonces hay un algoritmo eficiente que construye un \"equilibrio NASH\" que garantiza ciertos pagos a todos los participantes.equilibrio de Nash",
                "Otro concepto de solución atractiva es un \"equilibrio de Nash\" que maximiza el bienestar social.equilibrio de Nash",
                "Por el contrario, necesitamos números N2N para representar un juego general de 2-acción del jugador N, que solo es práctico para valores pequeños de n.Para juegos gráficos con δ constante, el tamaño del juego es lineal en n.Uno de los problemas más naturales para un juego gráfico es encontrar un \"equilibrio de Nash\", cuya existencia se deduce del teorema de Nashs (ya que los juegos gráficos son solo un caso especial de juegos N-jugador).equilibrio de Nash",
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que se puedan especializar de dos maneras: un algoritmo exponencial de tiempo para encontrar un \"equilibrio de Nash\" exacto \"y un esquema de aproximación de tiempo de tiempo totalmente polinómico (FPTA) para encontrar una aproximación a A\" \"equilibrio de Nash\".equilibrio de Nash",
                "Para cualquiera> 0, este algoritmo genera un \"equilibrio Nash\", que es un perfil de estrategia en el que ningún jugador puede mejorar su recompensa en más que al cambiar unilateralmente su estrategia.equilibrio de Nash",
                "Primero, los jugadores pueden ser sensibles a una pequeña pérdida en los pagos, por lo que el perfil de estrategia que es un \"equilibrio NASH\" no será estable.equilibrio de Nash",
                "Por lo tanto, el valor (aproximación al) de la mejor solución que corresponde a un \"equilibrio NASH\" puede no ser indicativo de lo que se puede lograr bajo un \"equilibrio NASH\" exacto.equilibrio de Nash",
                "Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implicada por un \"equilibrio NASH\" puede ser poco realista.equilibrio de Nash",
                "Sobre la base de ideas de [14], Elkind et al.[9] mostró cómo encontrar un (equilibrio de Nash \"(exacto) en el tiempo polinomial cuando el gráfico subyacente 162 tiene grado 2 (es decir, cuando el gráfico es una colección de rutas y ciclos).equilibrio de Nash",
                "Por el contrario, encontrar un \"equilibrio NASH\" en un gráfico general unido a un grado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) para que se complete para la clase PPAD de complejidad.[9] extiende este resultado de la dureza al caso en el que el gráfico subyacente ha limitado el ancho de ruta.equilibrio de Nash",
                "Un juego gráfico puede no tener un \"equilibrio NASH\" único, de hecho, puede tener exponencialmente muchos.equilibrio de Nash",
                "En lugar de tener un algoritmo que simplemente encuentra un \"equilibrio de Nash\", nos gustaría tener algoritmos para encontrar equilibrios de Nash con varias propiedades socialmente deseables, como maximizar el pago general o distribuir ganancias de manera justa.equilibrio de Nash",
                "Si esta representación tiene un tamaño polinomial (como es el caso de las rutas, como se muestra en [9]), uno puede esperar extraer de él un \"equilibrio NASH\" con las propiedades deseadas.equilibrio de Nash",
                "De hecho, en [13] los autores mencionan que esto es realmente posible si uno está interesado en encontrar un (aproximado) -\"equilibrio Nash\".equilibrio de Nash",
                "En particular, mostramos cómo encontrar un \"equilibrio de Nash\" que (casi) maximice el bienestar social, es decir, la suma de los pagos de los jugadores, y mostramos cómo encontrar un \"equilibrio de Nash\" que (casi) satisface límites de pago prescritospara todos los jugadores.equilibrio de Nash",
                "Una característica atractiva, que se deduce de [13], es que cada juego tiene un \"equilibrio NASH\" en el que la estrategia de cada jugador es un número racional.equilibrio de Nash",
                "De hecho, para cualquier número algebraico α ∈ [0, 1] con un grado como máximo n, exhibimos un juego gráfico en una ruta de longitud o (n) de tal manera que, en el \"equilibrio NASH\" que maximiza el bienestar social único de esto.Juego, uno de los jugadores juega la estrategia mixta α.1 Este resultado muestra que puede ser difícil representar un \"equilibrio NASH\" óptimo.equilibrio de Nash",
                "Parece ser una característica novedosa del entorno que consideramos aquí, que un \"equilibrio NASH\" óptimo es difícil de representar, en una situación en la que es fácil encontrar y representar un \"equilibrio de Nash\".equilibrio de Nash",
                "Como el \"equilibrio NASH\" que maximiza el bienestar social puede ser difícil de representar de manera eficiente, tenemos que conformarnos con una aproximación.equilibrio de Nash",
                "Sin embargo, la diferencia crucial entre nuestro enfoque y la de los documentos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo genere un \"equilibrio NASH\" exacto, aunque no necesariamente el óptimo con respecto a nuestros criterios.equilibrio de Nash",
                "A saber, proponemos un algoritmo que para cualquier> 0 encuentra un \"equilibrio de Nash\" cuyo pago total está dentro de óptimo.equilibrio de Nash",
                "Mostramos (Sección 4.1) que, bajo algunas restricciones en las matrices de pago, el algoritmo puede transformarse en un algoritmo de tiempo polinomial (verdaderamente) que genera un \"equilibrio NASH\" cuyo pago total está dentro de un factor 1 de lo óptimo.equilibrio de Nash",
                "En la Sección 5, consideramos el problema de encontrar un \"equilibrio de Nash\" en el que la recompensa esperada de cada jugador VI excede un umbral prescrito TI.equilibrio de Nash",
                "Si la instancia tiene un \"equilibrio de Nash\" que satisface los umbrales prescritos, entonces el algoritmo construye un \"equilibrio NASH\" en el que el pago esperado de cada jugador VI es al menos Ti -.equilibrio de Nash",
                "En la Sección 6, presentamos otros criterios naturales para seleccionar un buen \"equilibrio de Nash\" y mostramos que los algoritmos descritos en las dos secciones anteriores se pueden usar como bloques de construcción para encontrar equilibrios de Nash que satisfagan estos criterios.equilibrio de Nash",
                "En particular, en la Sección 6.1 mostramos cómo encontrar un \"equilibrio de Nash\" que se aproxime al máximo bienestar social, al tiempo que garantizamos que cada recompensa individual esté cerca de un umbral prescrito.equilibrio de Nash",
                "En la Sección 6.2 mostramos cómo encontrar un \"equilibrio de Nash\" que (casi) maximice el pago mínimo individual.equilibrio de Nash",
                "Finalmente, en la Sección 6.3 mostramos cómo encontrar un \"equilibrio de Nash\" en el que los pagos individuales de los jugadores están cerca uno del otro.1.2 Trabajo relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos N-Action de dos jugadores, para los cuales los problemas correspondientes son intratables.equilibrio de Nash",
                "En particular, Chen, Deng y Teng [4] muestran que existe un polinomio inverso en n, para el cual calcular un \"equilibrio NASH\" en juegos de 2 jugadores con n acciones por jugador es complete PPAD.equilibrio de Nash",
                "Los juegos que estudiamos en este documento tienen equilibrios NASH computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un \"equilibrio NASH\" óptimo puede incluir necesariamente estrategias mixtas con alto grado de álgebraico.equilibrio de Nash",
                "Cualquier \"equilibrio de Nash\" es un CE, pero lo contrario no se mantiene en general.equilibrio de Nash",
                "De [2] también se sabe que existen 2 jugadores de 2 jugadores para los que el pago total esperado 163 del mejor equilibrio correlacionado es más alto que el mejor \"equilibrio de Nash\", y discutimos este problema aún más en la sección 7. 2. Equilibrio de Nash",
                "Equilibrios de Nash que maximizan el bienestar social: soluciones en R \\ Q Desde el punto de vista del bienestar social, el mejor \"equilibrio de Nash\" es la que maximiza la suma de los pagos esperados de los jugadores.equilibrio de Nash",
                "Desafortunadamente, resulta que calcular este perfil de estrategia exactamente no es posible: en esta sección, mostramos que incluso si todos los jugadores de pago son enteros, el perfil de estrategia que maximiza el pago total puede tener coordenadas irracionales;Además, puede involucrar un número algebraico de un grado arbitrario.3.1 Calentamiento: irracionalidades cuadráticas Comenzamos proporcionando un ejemplo de un juego gráfico en una ruta de longitud 3 con pagos enteros de tal manera que en el \"equilibrio de Nash\" que maximiza el recompensa total, uno de los jugadores tiene una estrategia en r \\P. Equilibrio de Nash",
                "Existe un juego gráfico G en una ruta de 3 vértices UV w de tal manera que, en cualquier \"equilibrio de Nash\" de g que maximiceu, p ∈ R \\ Q. Equilibrio de Nash",
                "Es decir, en cualquier \"equilibrio de Nash\", V juega v = 1/2 y w juega w = f (u).equilibrio de Nash",
                "Además, para cualquier valor de U, el vector de estrategias (U, 1/2, F (u)) constituye un \"equilibrio NASH\".equilibrio de Nash",
                "Es fácil verificar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f (u)) es un \"equilibrio de Nash\".equilibrio de Nash",
                "Por reclamo 2, el pago total en cualquier \"equilibrio de Nash\" de este juego es una función de u.equilibrio de Nash",
                "Por lo tanto, el \"equilibrio NASH\" con el pago total máximo corresponde al valor de u que maximiza g (u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = - (u - 3)(U + 1) U + 2.equilibrio de Nash",
                "Llegamos a la conclusión de que el \"equilibrio NASH\" que maximiza el bienestar social para este juego viene dado por el vector de estrategias (−2+√ 5, 1/2, (5-√ 5)/5).equilibrio de Nash",
                "Esto concluye la prueba del teorema 1. 3.2 Estrategias de grado arbitrario Hemos demostrado que en el bienestar social, maximizando el \"equilibrio NASH\", las estrategias de algunos jugadores pueden ser irracionalidades cuadráticas, y también la recompensa total.equilibrio de Nash",
                "En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de Integer-Paioff en un camino cuyo \"equilibrio NASH\" que maximiza el bienestar social implica números algebraicos arbitrarios en [0, 1].equilibrio de Nash",
                "Se deduce que para lograr el \"equilibrio NASH\" que maximiza el pago, este jugador tiene que jugar α.equilibrio de Nash",
                "Cualquier perfil de estrategia de la forma (U - 1, 1/2, U0, 1/2, U1, 1/2, ..., Reino Unido - 1, 1/2, Reino Unido), donde u - 1 ∈ [0,1], u0 = (x - x) u - 1 + x, u1 = u0/(u0 + 1), y ui + 1 = 1/(2 - ui) para i ≥ 1 constituye un \"equilibrio NASH\".equilibrio de Nash",
                "Se deduce que para encontrar un \"equilibrio de Nash\" con el pago total más alto, tenemos que maximizar PK - 1 i = 1 Ti sujeto a las condiciones u - 1 ∈ [0, 1], u0 = (x −x) U - 1+x, u1 = u0/(u0+1), y ui+1 = 1/(2 - ui) para i = 1 ,..., K - 1. Equilibrio de Nash",
                "Se deduce que en el \"equilibrio NASH\" que maximiza la recompensa de nuestro juego U0 juega α.equilibrio de Nash",
                "Aproximando el \"equilibrio NASH\" socialmente óptimo hemos visto que el \"equilibrio de Nash\" que maximiza el bienestar social puede involucrar estrategias que no están en Q. Nash Equilibrio",
                "Por lo tanto, en esta sección nos centramos en encontrar un \"equilibrio de Nash\" que sea casi óptimo desde la perspectiva del bienestar social.equilibrio de Nash",
                "Proponemos un algoritmo que para cualquier> 0 encuentra un \"equilibrio NASH\" cuyo pago total está dentro de Optimal.equilibrio de Nash",
                "Sea m (g) = max {ep (s) |S es un \"equilibrio de Nash\" para G}.equilibrio de Nash",
                "Luego, para cualquier> 0, hay un algoritmo que construye un \"equilibrio NASH\" s para g que satisface EP (S) ≥ m (g) -.equilibrio de Nash",
                "Ahora mostraremos que incluso restringimos a cada jugador VI a estrategias de XI, los jugadores aún pueden lograr un \"equilibrio de Nash\" y, además, el mejor \"equilibrio de Nash\" (con respecto al bienestar social) tiene al menos una recompensa totalM (G) - Mientras N sea lo suficientemente grande.equilibrio de Nash",
                "Primero, mostraremos que el perfil de estrategia t = (t1, ..., tn) es un \"equilibrio de nash\" para G. arreglar cualquier i, 1 <i ≤ n, y dejar r = [v1, v2] × [U1, U2] Sea el rectángulo en B (VI, VI - 1) que contiene (Si, Si - 1).equilibrio de Nash",
                "Como V1 es un punto de evento Vi-Vi-evento de B (VI, VI-1), tenemos V1 ≤ Ti, así que el punto (Ti, Si-1) está dentro de R. De manera similar, el punto U1 es un EVENT VI-1punto de B (vi, vi - 1), por lo que tenemos u1 ≤ ti - 1, y por lo tanto el punto (ti, ti - 1 está dentro de R. Esto significa que para cualquier i, 1 <i ≤ n, tenemosti - 1 ∈ PBRVI - 1 (Ti), lo que implica que t = (t1, ..., tn) es un \"equilibrio de Nash\" para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar T en su lugarde s.Lema 3. Equilibrio de Nash",
                "Ahora demostraremos que podemos encontrar el mejor \"equilibrio de Nash\" discreto (con respecto al bienestar social) utilizando programación dinámica.equilibrio de Nash",
                "Esto da como resultado el pago total máximo que los jugadores pueden lograr en un \"equilibrio de Nash\" utilizando estrategias discretas;El perfil de estrategia real que produce este pago puede reconstruirse utilizando técnicas de programación dinámica estándar.equilibrio de Nash",
                "Llegamos a la conclusión de que podemos calcular una acroximación al mejor \"equilibrio NASH\" en el tiempo O (N4 P3 MAX/ 3).equilibrio de Nash",
                "Para cualquier> 0, hay un algoritmo que construye un \"equilibrio NASH\" S para g que satisface EP (s) ≥ m (g) -.equilibrio de Nash",
                "Es decir, no podemos esperar tener un algoritmo que calcule un \"equilibrio NASH\" con el pago total al menos (1 -) m (g).equilibrio de Nash",
                "Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de IntegerCoeficiente en rutas de longitud o (n) de modo que para algunos x ∈ R el pago total máximo en el primer juego es X, el X, el X, elEl pago total máximo en el segundo juego es −x, y para ambos juegos, los perfiles de estrategia que logran los pagos totales máximos implican números algebraicos de grado n.Al combinar los dos juegos para que el primer vértice del segundo juego se conecte al último vértice del primer juego, pero los pagos de todos los jugadores no cambian, obtenemos un juego gráfico en el que el mejor \"equilibrio de Nash\" tiene un total dePago 0, sin embargo, las estrategias que conducen a este pago tienen una alta complejidad algebraica.equilibrio de Nash",
                "En este caso, para cualquier perfil de estrategia, la recompensa al Jugador I es al menos PMIN, por lo que la recompensa total en el bienestar social Maximizando el \"equilibrio NASH\" s satisface m (g) ≥ npmin.equilibrio de Nash",
                "Además, Lemma 3 implica que al elegir Δ < /(24pmax /pmin), podemos asegurar que el \"equilibrio de Nash\" producido por nuestro algoritmo satisface nx i = 1 epvi (s) - nx i = 1 epvi (t) ≤24pmaxΔn ≤ npmin ≤ m (g), es decir, para este valor de δ tenemos pn i = 1 epvi (t) ≥ (1 -) m (g).equilibrio de Nash",
                "Pageo limitado Equilibrios nash Otra forma natural de definir qué es un buen \"equilibrio de Nash\" es exigir que cada jugador esperado de pago exceda un cierto umbral.equilibrio de Nash",
                "En este caso, además de las matrices de pago de los N jugadores, se nos dan N Números T1 ,..., TN, y nuestro objetivo es encontrar un \"equilibrio de Nash\" en el que la recompensa del jugador I es al menos TI, o informar que no existe tal \"equilibrio de Nash\".equilibrio de Nash",
                "Dado un juego gráfico G en una ruta N-Vértice y N. Racionales T1 ,..., TN, supongamos que existe un perfil de estrategia S tal que S es un \"equilibrio NASH\" para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Luego, para cualquier> 0, podemos encontrar en el tiempo o (max {np3 max / 3, n4 / 3}) Un perfil de estrategia s tal que s es un \"equilibrio NASH\" para gy ePVI (s) ≥ ti - para i = =1 ,..., n.PRUEBA.equilibrio de Nash",
                "Considere un perfil de estrategia S tal que S es un \"equilibrio NASH\" para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Construimos un perfil de estrategia ti = max {xj i |XJ I ≤ Si} y use el mismo argumento que en la prueba del Teorema 3 para mostrar que t es un \"equilibrio de Nash\" para G. por Lemma 3, tenemos | Epvi (S) - Epvi (t) |≤ 24pmaxΔ, por lo que eligiendo Δ < / (24pmax), o, de manera equivalente, n> max {5n, 24pmax /}, podemos asegurar EPVI (t) ≥ ti - para i = 1 ,..., n.Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que satisfaga EPVI (t) ≥ ti - para i = 1 ,..., n.Como T es un perfil de estrategia discreta, nuestro algoritmo tendrá éxito cuando haya un perfil de estrategia con EPVI (s) ≥ ti- para i = 1 ,..., n.Sea ZL, K I = 1 Si hay un perfil de estrategia discreto de tal manera que para cualquier estrategia del jugador VJ es una mejor respuesta potencial a la estrategia de VJ+1, el pago esperado de VJ es al menos tj -,,Y, además, VI - 1 juega XL I - 1, VI juega xk i.equilibrio de Nash",
                "Habiendo calculado Zl, K N, L, K = 1 ,..., N, verificamos si Zl, K n = 1 para algún par (L, K).Si existe dicho par de índices, instruimos a VN que reproduzca XK n y use técnicas de programación dinámica (o, de manera equivalente, el pase posterior del algoritmo de [13]) para encontrar un \"equilibrio de nash\" que satisfaga EPVI (S)≥ ti - para i = 1 ,..., n (recuerde que VN es un reproductor ficticio, es decir, suponemos que TN = 0, EPN (S) = 0 para cualquier opción de S).equilibrio de Nash",
                "Si zl, k n = 0 para todos l, k = 1 ,..., N, no hay \"equilibrio de Nash\" discreto que satisfaga los EPVI (s) ≥ ti - para i = 1 ,..., N y, por lo tanto, no hay \"equilibrio de Nash\" s (no necesariamente discreto) tal que EPVI (S) ≥ Ti para i = 1 ,..., n.El análisis del tiempo de ejecución es similar al del Teorema 3;Concluimos que el tiempo de ejecución de nuestro algoritmo es o (nn3) = o (max {np3 max / 3, n4 / 3}).equilibrio de Nash",
                "Es fácil ver que si alguno de los conjuntos B (VJ, VJ - 1, T), J = 1 ,..., n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, uno puede aplicar el pase aguas abajo del algoritmo original de [13] para encontrar un \"equilibrio NASH\".equilibrio de Nash",
                "Como suponemos que VN es un vértice ficticio cuyo pago es idénticamente 0, el \"equilibrio Nash\" con estos pagos existe siempre que TN ≤ 0 y B (VN, VN - 1, t) no esté vacío.equilibrio de Nash",
                "Esto significa que si B (VN, VN-1, T) no está vacío, es decir, hay un \"equilibrio NASH\" con pagos prescritos por t, entonces el pase posterior del algoritmo de [13] siempre puede elegir una estrategiaPerfil que forma un \"equilibrio de Nash\", proporciona una recompensa de al menos TI al jugador VI y no tiene coordenadas irracionales.equilibrio de Nash",
                "Por lo tanto, a diferencia del caso del \"equilibrio de Nash\" que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección debe verlo como un argumento en contra de usar este enfoque.6. Equilibrio de Nash",
                "Otros criterios para seleccionar un \"equilibrio NASH\" en esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un \"equilibrio NASH\".6.1 Combinación de la maximización del bienestar con límites en los pagos en muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a jugadores individuales.equilibrio de Nash",
                "Si el conjunto S no está vacío, podemos encontrar un \"equilibrio de Nash\" ˆs que se cierre para satisfacer los límites de pago y está dentro de ˆs con respecto al pago total combinando los algoritmos de la Sección 4 y la Sección 5. Nashequilibrio",
                "Finalmente, como en la prueba del Teorema 3, usamos ML, K N para seleccionar el mejor \"equilibrio NASH\" discreto sujeto a las limitaciones de pago.equilibrio de Nash",
                "Este problema se puede manejar de manera similar.6.2 Un enfoque Minimax Una medida más igualitaria de la calidad de un \"equilibrio NASH\" es la recompensa mínima esperada para un jugador.equilibrio de Nash",
                "La solución óptima con respecto a esta medida es un \"equilibrio de Nash\" en el que la recompensa mínima esperada a un jugador es máxima.equilibrio de Nash",
                "Para encontrar una aproximación a tal \"equilibrio de Nash\", podemos combinar el algoritmo de la Sección 5 con búsqueda binaria en el espacio de los límites inferiores potenciales.equilibrio de Nash",
                "Si el algoritmo logra encontrar un \"equilibrio NASH\" s que satisface EPVI (s) ≥ t ∗ - para todos i = 1 ,..., n, establecemos t = t ∗, t ∗ = (t + t)/2;De lo contrario, establecemos t = t ∗, t ∗ = (t + t)/2 y bucle.equilibrio de Nash",
                "No es difícil verificar que para cualquier p ∈ R, si hay un \"equilibrio de Nash\" s tal que mini = 1, ..., n epvi (s) ≥ p, entonces nuestro algoritmo genera un \"equilibrio nash\" s \"s\" sEso satisface mini = 1, ..., n epvi (s) ≥ p - 2.equilibrio de Nash",
                "Además, podemos calcular eficientemente una aproximación a un \"equilibrio NASH\" que satisface tanto el límite superior como el límite inferior para cada jugador.equilibrio de Nash",
                "Entonces, si existe un perfil de estrategia, tal que S es un \"equilibrio de Nash\" para gy ti ≤ epvi (s) ≤ ti para i = 1 ,..., n, podemos encontrar un perfil de estrategia S tal que S es un \"equilibrio NASH\" para gy ti - ≤ epvi (s) ≤ ti + para i = 1 ,..., n.El algoritmo modificado también se ejecuta en el tiempo o (max {np3 max / 3, [4] n4 / 3}).equilibrio de Nash",
                "Supongamos que existe un \"equilibrio de Nash\" s que satisface | epvi (s) - epvj (s) |≤ ξ para todo i, j = 1 ,..., n.Establecer r = mini = 1, ..., n epvi (s);Tenemos r ≤ epvi (s) ≤ r + ξ para todos i = 1 ,..., n.Existe un k ≥ 0 tal que −pmax + (k - 1) ≤ r ≤ −pmax + k.equilibrio de Nash",
                "Es decir, el \"equilibrio de Nash\" s satisface ti ≤ r ≤ epvi (s) ≤ r + ξ ≤ ti, lo que significa que cuando Ti se establece en −pmax + (k - 1), nuestro algoritmo está garantizado para emitir A \".Equilibrio de Nash \"t que satisface r - 2 ≤ ti - ≤ epvi (t) ≤ ti +≤ r +ξ +2.equilibrio de Nash",
                "Concluimos que cada vez que existe un \"equilibrio de Nash\" s, nuestro algoritmo genera un \"equilibrio NASH\" t que satisface | epvi (t) - epvj (t) |≤ ξ + 4 para todos i, j = 1 ,..., n.El tiempo de ejecución de este algoritmo es O (max {np3 max / 4, n4 / 4}).equilibrio de Nash",
                "Tenga en cuenta también que podemos encontrar el más pequeño ξ para el cual existe dicho \"equilibrio de Nash\" combinando este algoritmo con la búsqueda binaria sobre el espacio ξ = [0, 2pmax].equilibrio de Nash",
                "Esto identifica una aproximación al \"equilibrio de Nash\" más justo, es decir, uno en el que los jugadores esperaban los pagos difieren por la cantidad más pequeña posible.equilibrio de Nash",
                "Consideramos varios criterios para seleccionar un \"equilibrio de Nash\", como maximizar el bienestar social, garantizar un límite más bajo en el recompensa esperado de cada jugador, etc. Equilibrio de Nash",
                "Primero, nos centramos en la complejidad algebraica de un \"equilibrio de NASH\" que maximiza el bienestar social, y demostramos ser fuertes resultados negativos para ese problema.equilibrio de Nash",
                "Esto contrasta con el hecho de que los juegos gráficos en los árboles siempre poseen un \"equilibrio Nash\" en el que todas las estrategias de los jugadores son números racionales.equilibrio de Nash",
                "Nuestro enfoque es diferente en el sentido de que insistimos en generar un \"equilibrio NASH\" exacto, que es cerrado para satisfacer un requisito dado.equilibrio de Nash",
                "Como se argumentó en la introducción, hay varias razones para preferir una solución que constituya un \"equilibrio NASH\" exacto.equilibrio de Nash",
                "Entonces, verificar si hay un \"equilibrio de Nash\" en el que ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a verificar si existe un \"equilibrio de Nash\" que satisfaga los límites de pago en el juego original, y la sección 5.1 muestraque encontrar una solución exacta a este problema requiere nuevas ideas.equilibrio de Nash",
                "Referencias [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el valor de la correlación, Actas del Seminario Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y correlación en estrategias aleatorias, Journal of Mathematical Economics 1 PPPPP67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un método de continuación para los equilibrios de Nash en juegos estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng,Calculación de calibrios de NASH: aproximación y complejidad suavizada, procedimientos de FOCS06 [5] X. Chen, X. Deng, Liquidación de la complejidad de los 2 jugadores Nash-equilibrio, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de complejidad, complejidad de resultadosAcerca de los equilibrios de Nash, Actas de Ijcai03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La complejidad de calcular un \"equilibrio NASH\", Actas de stoc06 [8] R. S. Datta, Universalidad de la equilibrio de Nash, matemática de la investigación de operaciones 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Nash Equilibria en juegos gráficos en árboles revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, calculando buenos equilibrios de Nash en gráficos gráficos en gráficosJuegos, http://arxiv.org/abs/cs.gt/0703133 [11] I. Gilboa y E. Zemel, Nash y equilibrios correlacionados: algunas consideraciones de complejidad, juegos y comportamiento económico, 1 pp. 80-93 (1989 (1989 (1989 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre problemas de equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos gráficos para la teoría de juegos, Actas de Uai01 [14] M. Littman,M. Kearns y S. Singh, un algoritmo exacto eficiente para juegos gráficos conectados individualmente, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de ecuaciones polinomiales, Actas de Latin04 [16] L. Ortiz y M. Kearns, Propagación de Nash para juegos gráficos Loopy, Actas de NIPS03 [17] C.H.equilibrio de Nash"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "approximation scheme": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time <br>approximation scheme</br> (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time <br>approximation scheme</br> for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our <br>approximation scheme</br> (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que se puedan especializar de dos maneras: un algoritmo de tiempo exponencial para encontrar un equilibrio (exacto) Nash y un \"esquema de aproximación\" de tiempo totalmente polinómico (FPTAS) para encontrar una aproximación a una NASH a una NASHequilibrio.esquema de aproximación",
                "Usando la idea de la Sección 4, damos (Teorema 5) un tiempo totalmente polinomial \"esquema de aproximación\" para este problema.esquema de aproximación",
                "Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que los pagos individuales de los jugadores estén cerca el uno del otro.1.2 Trabajo relacionado Nuestro \"Esquema de aproximación\" (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de N-Action de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables.esquema de aproximación"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "exponential-time algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an <br>exponential-time algorithm</br> for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que se puedan especializar de dos maneras: un \"algoritmo de tiempo exponencial\" para encontrar un equilibrio (exacto) Nash y un esquema de aproximación de tiempo totalmente polinómico (FPTA) para encontrar una aproximación a una NASH a una NASHequilibrio.algoritmo de tiempo exponencial"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "approximation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time <br>approximation</br> scheme (FPTAS) for finding an <br>approximation</br> to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (<br>approximation</br> to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an <br>approximation</br>.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time <br>approximation</br> scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our <br>approximation</br> scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -<br>approximation</br> to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative <br>approximation</br> The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative <br>approximation</br> rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative <br>approximation</br> for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative <br>approximation</br> when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative <br>approximation</br> guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an <br>approximation</br> to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an <br>approximation</br> to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an <br>approximation</br> to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided <br>approximation</br> algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time <br>approximation</br> schemes, i.e., their running time is polynomial in the inverse of the <br>approximation</br> parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: <br>approximation</br> and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Proponen un algoritmo genérico para encontrar equilibrios de Nash que se puedan especializar de dos maneras: un algoritmo exponencial de tiempo para encontrar un equilibrio (exacto) Nash y un esquema de \"aproximación\" totalmente polinómico (FPTA) para encontrar una \"aproximación\" para \".Un equilibrio de Nash.aproximación",
                "Por lo tanto, el valor (\"aproximación\" al) de la mejor solución que corresponde a un equilibrio -nash puede no ser indicativo de lo que se puede lograr bajo un equilibrio de Nash exacto.aproximación",
                "Como el equilibrio de NASH que maximiza el bienestar social puede ser difícil de representar de manera eficiente, tenemos que conformarnos con una \"aproximación\".aproximación",
                "Usando la idea de la Sección 4, damos (Teorema 5) un esquema de \"aproximación\" totalmente polinomial para este problema.aproximación",
                "Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que los pagos individuales de los jugadores estén cerca el uno del otro.1.2 Trabajo relacionado Nuestro esquema de \"aproximación\" (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos de N-Action de dos jugadores, para los cuales los problemas correspondientes suelen ser intratables.aproximación",
                "Llegamos a la conclusión de que podemos calcular una \"aproximación\" al mejor equilibrio NASH en el tiempo O (N4 P3 Máx/ 3).aproximación",
                "Para la prueba de este teorema, ver [10].4.1 Un algoritmo de tiempo polinomial para la \"aproximación\" multiplicativa El tiempo de ejecución de nuestro algoritmo es pseudopolinomio en lugar de polinomio, ya que incluye un factor que es polinomio en PMAX, la entrada máxima (en valor absoluto) en cualquier matriz de pagos.aproximación",
                "Si estamos interesados en una \"aproximación\" multiplicativa en lugar de una aditiva, esto se puede mejorar al polinomio.aproximación",
                "Primero, tenga en cuenta que no podemos esperar una \"aproximación\" multiplicativa para todas las entradas.aproximación",
                "Sin embargo, podemos lograr una \"aproximación\" multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre dos entradas está limitada polinómicamente.aproximación",
                "Se deduce que si PMIN> 0, PMAX/ PMIN = POLY (N), podemos elegir N para que nuestro algoritmo proporcione una garantía multiplicativa de \"aproximación\" y se ejecute en un polinomio de tiempo en n y 1/.5. Aproximación",
                "Para encontrar una \"aproximación\" a tal equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con búsqueda binaria en el espacio de los límites inferiores potenciales.aproximación",
                "Además, podemos calcular eficientemente una \"aproximación\" a un equilibrio de Nash que satisface tanto el límite superior como el límite inferior para cada jugador.aproximación",
                "Esto identifica una \"aproximación\" al equilibrio más justo de Nash, es decir, uno en el que los jugadores esperaban los pagos difieren por la cantidad más pequeña posible.aproximación",
                "Luego proporcionamos algoritmos de \"aproximación\" para seleccionar equilibrios NASH con propiedades especiales.aproximación",
                "Nuestros algoritmos son esquemas de \"aproximación\" totalmente polinómicos, es decir, su tiempo de ejecución es polinomio en el inverso del parámetro de \"aproximación\", aunque pueden ser pseudopolinomiales con respecto al tamaño de entrada.aproximación",
                "Referencias [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el valor de la correlación, Actas del Seminario Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y correlación en estrategias aleatorias, Journal of Mathematical Economics 1 PPPPP67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un método de continuación para los equilibrios de Nash en juegos estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng,Calibrios de NASH: \"Aproximación\" y complejidad suavizada, procedimientos de FOCS06 [5] X. Chen, X. Deng, Liquidando la complejidad del equilibrio Nash de 2 jugadores, Actas de FOCS06 [6] V. Conitzer y T. Sandholm,Resultados de la complejidad sobre los equilibrios de Nash, Actas de IJCAI03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La complejidad de calcular un equilibrio de Nash, Actas de STOC06 [8] R. S. Datta, Universalidad de la equilibrio de NASH, matemática de la investigación de operaciones 28:3, 2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Nash Equilibria en juegos gráficos en árboles revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, calculando buenos equilibrios de Nash en gráficos gráficos en gráficosJuegos, http://arxiv.org/abs/cs.gt/0703133 [11] I. Gilboa y E. Zemel, Nash y equilibrios correlacionados: algunas consideraciones de complejidad, juegos y comportamiento económico, 1 pp. 80-93 (1989 (1989 (1989 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre problemas de equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos gráficos para la teoría de juegos, Actas de Uai01 [14] M. Littman,M. Kearns y S. Singh, un algoritmo exacto eficiente para juegos gráficos conectados individualmente, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de ecuaciones polinomiales, Actas de Latin04 [16] L. Ortiz y M. Kearns, Propagación de Nash para juegos gráficos Loopy, Actas de NIPS03 [17] C.H.aproximación"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "various sociallydesirable properties": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with <br>various sociallydesirable properties</br>, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En lugar de tener un algoritmo que simplemente encuentra un equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con \"varias propiedades socialmente deseables\", como maximizar el pago general o distribuir ganancias de manera justa.Varias propiedades socialmente deseables"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "overall payoff": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing <br>overall payoff</br> or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En lugar de tener un algoritmo que simplemente encuentra un equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con varias propiedades socialmente deseables, como maximizar la \"recompensa general\" o distribuir ganancias de manera justa.recompensa general"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distributing profit": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or <br>distributing profit</br> fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "En lugar de tener un algoritmo que simplemente encuentra un equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con varias propiedades socialmente deseables, como maximizar el pago general o \"distribuir ganancias\" de manera justa.Distribuir ganancias"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "social welfare": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the <br>social welfare</br>.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the <br>social welfare</br>, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize <br>social welfare</br>.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize <br>social welfare</br> is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique <br>social welfare</br>-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the <br>social welfare</br>-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum <br>social welfare</br>, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the <br>social welfare</br> [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE <br>social welfare</br>: SOLUTIONS IN R \\ Q From the point of view of <br>social welfare</br>, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes <br>social welfare</br>, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the <br>social welfare</br>-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the <br>social welfare</br>-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose <br>social welfare</br>-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all <br>social welfare</br>-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the <br>social welfare</br> may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the <br>social welfare</br> perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the <br>social welfare</br>) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes <br>social welfare</br>.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in <br>social welfare</br> caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the <br>social welfare</br>) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the <br>social welfare</br>, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the <br>social welfare</br> subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the <br>social welfare</br>, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a <br>social welfare</br>-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Otro concepto de solución atractiva es un equilibrio de Nash que maximiza el \"bienestar social\".bienestar Social",
                "En particular, mostramos cómo encontrar un equilibrio de Nash que (casi) maximice el \"bienestar social\", es decir, la suma de los pagos de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que (casi) satisfaga los límites de pago prescritos para todosjugadores.bienestar Social",
                "La Sección 3 estudia la estructura algebraica de los equilibrios de Nash que maximizan el \"bienestar social\".bienestar Social",
                "Mostramos (teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el \"bienestar social\" es más complejo.bienestar Social",
                "De hecho, para cualquier número algebraico α ∈ [0, 1] con un grado como máximo n, exhibimos un juego gráfico en una ruta de longitud o (n) tal que, en el equilibrio de nash maximizante de \"bienestar social\".Juego, uno de los jugadores juega la estrategia mixta α.1 Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo.bienestar Social",
                "Como el equilibrio de NASH que maximiza el \"bienestar social\" puede ser difícil de representar de manera eficiente, tenemos que conformarnos con una aproximación.bienestar Social",
                "En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que se aproxime al \"bienestar social\" máximo, al tiempo que garantizamos que cada recompensa individual esté cerca de un umbral prescrito.bienestar Social",
                "En particular, este es el caso de los equilibrios de Nash que maximizan el \"bienestar social\" [11, 6].bienestar Social",
                "Equilibrios de NASH que maximizan el \"bienestar social\": soluciones en r \\ q Desde el punto de vista del \"bienestar social\", el mejor equilibrio de Nash es la que maximiza la suma de los jugadores que esperan los pagos.bienestar Social",
                "Existe un juego gráfico G en una ruta de 3 vértice UV w de tal manera que, en cualquier equilibrio de Nash de G que maximice el \"bienestar social\", la estrategia, u, del jugador U y el pago total, P, satisfaceu, p ∈ R \\ Q. Bienestar social",
                "Llegamos a la conclusión de que el Vector de las Estrategias (−2+√ 5, 1/2, (5-√ 5)/5).bienestar Social",
                "Esto concluye la prueba del teorema 1. 3.2 Estrategias de grado arbitrario Hemos demostrado que en el \"bienestar social\"-maximizando el equilibrio de Nash, algunos jugadores las estrategias pueden ser irracionalidades cuadráticas y también la recompensa total.bienestar Social",
                "En esta subsección, extenderemos este resultado para mostrar que podemos construir un juego gráfico de Cogoff Integer en un camino cuyo equilibrio de NASH que maximiza el \"bienestar social\" implica números algebraicos arbitrarios en [0, 1].bienestar Social",
                "Para cualquier número algebraico de grado-n α ∈ [0, 1], existe un juego gráfico de pago entero en una ruta de longitud o (n) de modo que, en todo el \"bienestar social\", maximizando los equilibrios de Nash de este juego, uno deLos jugadores juegan α.bienestar Social",
                "Aproximando el equilibrio de Nash socialmente óptimo hemos visto que el equilibrio de NASH que maximiza el \"bienestar social\" puede involucrar estrategias que no están en Q. Bienestar social",
                "Por lo tanto, en esta sección nos enfocamos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del \"bienestar social\".bienestar Social",
                "Ahora mostraremos que incluso restringimos a cada jugador VI a estrategias de XI, los jugadores aún pueden lograr un equilibrio de Nash y, además, el mejor equilibrio de Nash (con respecto al \"bienestar social\") tiene una recompensa total al menos m (G) - Mientras N sea lo suficientemente grande.bienestar Social",
                "Sea s un perfil de estrategia que maximiza el \"bienestar social\".bienestar Social",
                "Como V1 es un punto de evento Vi-Vi-evento de B (VI, VI-1), tenemos V1 ≤ Ti, así que el punto (Ti, Si-1) está dentro de R. De manera similar, el punto U1 es un EVENT VI-1punto de B (vi, vi - 1), por lo que tenemos u1 ≤ ti - 1, y por lo tanto el punto (ti, ti - 1 está dentro de R. Esto significa que para cualquier i, 1 <i ≤ n, tenemosti - 1 ∈ PBRVI - 1 (Ti), lo que implica que t = (t1, ..., tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el \"bienestar social\" causado por jugar T en su lugarde s.Lema 3. Bienestar social",
                "Ahora mostraremos que podemos encontrar el mejor equilibrio de Nash discreto (con respecto al \"bienestar social\") utilizando programación dinámica.bienestar Social",
                "Por lo tanto, a diferencia del caso del equilibrio de Nash que maximiza el \"bienestar social\", no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección debe verlo como un argumento en contra de usar este enfoque.6. Bienestar social",
                "Otros criterios para seleccionar un equilibrio de Nash en esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash.6.1 Combinación de la maximización del bienestar con límites en los pagos en muchos escenarios de la vida real, queremos maximizar el \"bienestar social\" sujeto a ciertas restricciones en los pagos a los jugadores individuales.bienestar Social",
                "Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el \"bienestar social\", asegurando un límite más bajo en el recompensa esperado de cada jugador, etc. Bienestar social",
                "Primero, nos centramos en la complejidad algebraica de un equilibrio de NASH que maximiza el \"bienestar social\", y demostramos ser fuertes resultados negativos para ese problema.bienestar Social"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "integer-payoff graphical game g": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an <br>integer-payoff graphical game g</br> on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Existe un \"Juego gráfico de Integer-Paioff G\" en una ruta de 3 vértice UV W de tal manera que, en cualquier equilibrio de Nash de G que maximiceu, p ∈ R \\ Q. Juego gráfico Integer-Paioff G"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "several drawback": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has <br>several drawback</br>s.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Si bien los equilibrios de noh a menudo son más fáciles de calcular que los equilibrios de NASH exactos, este concepto de solución tiene \"varios inconvenientes\".Varios inconvenientes"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "strategy profile": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a <br>strategy profile</br> in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the <br>strategy profile</br> that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general degree-bounded graph appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a <br>strategy profile</br> exactly is not possible: in this section, we show that even if all players payoffs are integers, the <br>strategy profile</br> that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any <br>strategy profile</br> of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a <br>strategy profile</br> of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a <br>strategy profile</br> for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a <br>strategy profile</br> in which each player has a discrete strategy will be referred to as a discrete <br>strategy profile</br>.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a <br>strategy profile</br> that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the <br>strategy profile</br> t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the <br>strategy profile</br> t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete <br>strategy profile</br>, this means that the <br>strategy profile</br> found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual <br>strategy profile</br> that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the <br>strategy profile</br> we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any <br>strategy profile</br> the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a <br>strategy profile</br> s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a <br>strategy profile</br> s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a <br>strategy profile</br> s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a <br>strategy profile</br> ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a <br>strategy profile</br> that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the <br>strategy profile</br> ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a <br>strategy profile</br> s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a <br>strategy profile</br> s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para cualquiera> 0, este algoritmo genera un equilibrio -nash, que es un \"perfil de estrategia\" en el que ningún jugador puede mejorar su recompensa en más que al cambiar unilateralmente su estrategia.perfil de estrategia",
                "Primero, los jugadores pueden ser sensibles a una pequeña pérdida en los pagos, por lo que el \"perfil de estrategia\" que es un equilibrio de las notas no será estable.perfil de estrategia",
                "Desafortunadamente, resulta que calcular este \"perfil de estrategia\" exactamente no es posible: en esta sección, mostramos que incluso si todos los pagos de jugadores son enteros, el \"perfil de estrategia\" que maximiza el pago total puede tener coordenadas irracionales;Además, puede involucrar un número algebraico de un grado arbitrario.3.1 Calentamiento: irracionalidades cuadráticas Comenzamos proporcionando un ejemplo de un juego gráfico en una ruta de longitud 3 con pagos enteros de tal manera que en el equilibrio de Nash que maximiza el pago total, uno de los jugadores tiene una estrategia en R \\ Q.perfil de estrategia",
                "Cualquier \"perfil de estrategia\" de la forma (U - 1, 1/2, U0, 1/2, U1, 1/2, ..., Reino Unido - 1, 1/2, Reino Unido), donde u - 1 ∈ [0, 1], u0 = (x - x) u - 1 + x, u1 = u0/(u0 + 1), y ui + 1 = 1/(2 - ui) para i ≥ 1 constituye un equilibrio de Nash.perfil de estrategia",
                "Para completar la prueba, tenga en cuenta que (x - x) u - 1 + x ∈ [0, 1] para todos u - 1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todosu0 ∈ [0, 1], y 1/(2 - ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todos i = 0 ,..., k.Ahora, calculemos el pago total bajo un \"perfil de estrategia\" del formulario dado en la reclamación 5. Perfil de estrategia",
                "Supongamos que S es un \"perfil de estrategia\" para un juego gráfico G. es decir, S asigna una estrategia mixta a cada vértice de G. Sea EPV (s) el recompensa esperado del jugador V bajo S y LET EP (S) = =P V EPV (S).perfil de estrategia",
                "Nos referiremos a las estrategias en XI como estrategias discretas del Jugador VI;Un \"perfil de estrategia\" en el que cada jugador tiene una estrategia discreta se denominará un \"perfil de estrategia\" discreto.perfil de estrategia",
                "Sea s un \"perfil de estrategia\" que maximiza el bienestar social.perfil de estrategia",
                "Primero, mostraremos que el \"perfil de estrategia\" t = (t1, ..., tn) es un equilibrio de Nash para G. arreglar cualquier i, 1 <i ≤ n, y dejar r = [v1, v2] × [U1, U2] Sea el rectángulo en B (VI, VI - 1) que contiene (Si, Si - 1).perfil de estrategia",
                "Lemma 3 implica pn i = 1 | epvi (s) - epvi (t) |≤ 24npmaxΔ, por lo que al elegir Δ < / (24npmax), o, de manera equivalente, establecer n> 24npmax /, podemos asegurarnos de que el pago total esperado para el \"perfil de estrategia\" esté dentro de Optimal.perfil de estrategia",
                "Como T es un \"perfil de estrategia\" discreto, esto significa que el \"perfil de estrategia\" encontrado por nuestro algoritmo será al menos tan bueno como t.Definir ml, k i para ser el pago total máximo que v1 ,..., VI - 1 puede lograr si cada VJ, J ≤ I, elige una estrategia de XJ, para cada J <I La estrategia de VJ es una mejor respuesta potencial a la estrategia de VJ+1 y, además, VI - 1 PlaysXL I - 1, VI juega xk i.perfil de estrategia",
                "Esto da como resultado el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas;El \"perfil de estrategia\" real que produce esta recompensa se puede reconstruir utilizando técnicas de programación dinámica estándar.perfil de estrategia",
                "Recuerde que tenemos que seleccionar n ≥ (24npmax)/ para garantizar que el \"perfil de estrategia\" que produzca tenga un pago total que esté dentro de Optimal.perfil de estrategia",
                "En este caso, para cualquier \"perfil de estrategia\", la recompensa al jugador I es al menos PMIN, por lo que el recompensa total en el bienestar social Maximización del equilibrio Nash S satisface m (g) ≥ NPmin.perfil de estrategia",
                "Dado un juego gráfico G en una ruta N-Vértice y N. Racionales T1 ,..., TN, supongamos que existe un \"perfil de estrategia\", que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Luego, para cualquier> 0, podemos encontrar en el tiempo o (max {np3 max / 3, n4 / 3}) Un \"perfil de estrategia\" s de tal manera que s es un equilibrio NASH para g y epvi (s) ≥ ti - para i = =1 ,..., n.PRUEBA.perfil de estrategia",
                "Considere un \"perfil de estrategia\" tal que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Construimos un \"perfil de estrategia\" ti = max {xj i |XJ I ≤ Si} y use el mismo argumento que en la prueba del teorema 3 para mostrar que t es un equilibrio de Nash para G. por Lemma 3, tenemos | epvi (s) - epvi (t) |≤ 24pmaxΔ, por lo que eligiendo Δ < / (24pmax), o, de manera equivalente, n> max {5n, 24pmax /}, podemos asegurar EPVI (t) ≥ ti - para i = 1 ,..., n.Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que satisfaga EPVI (t) ≥ ti - para i = 1 ,..., n.Como T es un perfil de estrategia discreta, nuestro algoritmo tendrá éxito cuando haya un perfil de estrategia con EPVI (s) ≥ ti- para i = 1 ,..., n.Sea ZL, K I = 1 Si hay un perfil de estrategia discreto de tal manera que para cualquier estrategia del jugador VJ es una mejor respuesta potencial a la estrategia de VJ+1, el pago esperado de VJ es al menos tj -,,Y, además, VI - 1 juega XL I - 1, VI juega xk i.perfil de estrategia",
                "Esto significa que si B (VN, VN-1, T) no está vacío, es decir, hay un equilibrio NASH con pagos prescritos por t, entonces el pase posterior del algoritmo de [13] siempre puede elegir un \"perfil de estrategia\"Eso forma un equilibrio de Nash, proporciona una recompensa de al menos TI al Jugador VI y no tiene coordenadas irracionales.perfil de estrategia",
                "Combinando las pruebas del teorema 3 y el teorema 5, podemos ver que el \"perfil de estrategia\" ˆt dado por ˆti = max {xj i |XJ I ≤ ˆSi} satisface EPVI (ˆT) ≥ ti -, | EP (ˆs) - EP (ˆT) |≤.perfil de estrategia",
                "Entonces, si existe un \"perfil de estrategia\", tal que S es un equilibrio NASH para gy ti ≤ epvi (s) ≤ ti para i = 1 ,..., n, podemos encontrar un \"perfil de estrategia\" de tal manera que S es un equilibrio NASH para gy ti - ≤ epvi (s) ≤ ti + para i = 1 ,..., n.El algoritmo modificado también se ejecuta en el tiempo o (max {np3 max / 3, [4] n4 / 3}).perfil de estrategia"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "degree-bounded graph": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Computing Good Nash Equilibria in Graphical Games ∗ Edith Elkind Hebrew University of Jerusalem, Israel, and University of Southampton, Southampton, SO17 1BJ, U.K. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K. ABSTRACT This paper addresses the problem of fair equilibrium selection in graphical games.",
                "Our approach is based on the data structure called the best response policy, which was proposed by Kearns et al. [13] as a way to represent all Nash equilibria of a graphical game.",
                "In [9], it was shown that the best response policy has polynomial size as long as the underlying graph is a path.",
                "In this paper, we show that if the underlying graph is a bounded-degree tree and the best response policy has polynomial size then there is an efficient algorithm which constructs a Nash equilibrium that guarantees certain payoffs to all participants.",
                "Another attractive solution concept is a Nash equilibrium that maximizes the social welfare.",
                "We show that, while exactly computing the latter is infeasible (we prove that solving this problem may involve algebraic numbers of an arbitrarily high degree), there exists an FPTAS for finding such an equilibrium as long as the best response policy has polynomial size.",
                "These two algorithms can be combined to produce Nash equilibria that satisfy various fairness criteria.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In a large community of agents, an agents behavior is not likely to have a direct effect on most other agents: rather, it is just the agents who are close enough to him that will be affected.",
                "However, as these agents respond by adapting their behavior, more agents will feel the consequences and eventually the choices made by a single agent will propagate throughout the entire community.",
                "This is the intuition behind graphical games, which were introduced by Kearns, Littman and Singh in [13] as a compact representation scheme for games with many players.",
                "In an n-player graphical game, each player is associated with a vertex of an underlying graph G, and the payoffs of each player depend on his action as well as on the actions of his neighbors in the graph.",
                "If the maximum degree of G is Δ, and each player has two actions available to him, then the game can be represented using n2Δ+1 numbers.",
                "In contrast, we need n2n numbers to represent a general n-player 2-action game, which is only practical for small values of n. For graphical games with constant Δ, the size of the game is linear in n. One of the most natural problems for a graphical game is that of finding a Nash equilibrium, the existence of which follows from Nashs celebrated theorem (as graphical games are just a special case of n-player games).",
                "The first attempt to tackle this problem was made in [13], where the authors consider graphical games with two actions per player in which the underlying graph is a boundeddegree tree.",
                "They propose a generic algorithm for finding Nash equilibria that can be specialized in two ways: an exponential-time algorithm for finding an (exact) Nash equilibrium, and a fully polynomial time approximation scheme (FPTAS) for finding an approximation to a Nash equilibrium.",
                "For any > 0 this algorithm outputs an -Nash equilibrium, which is a strategy profile in which no player can improve his payoff by more than by unilaterally changing his strategy.",
                "While -Nash equilibria are often easier to compute than exact Nash equilibria, this solution concept has several drawbacks.",
                "First, the players may be sensitive to a small loss in payoffs, so the strategy profile that is an -Nash equilibrium will not be stable.",
                "This will be the case even if there is only a small subset of players who are extremely price-sensitive, and for a large population of players it may be difficult to choose a value of that will satisfy everyone.",
                "Second, the strategy profiles that are close to being Nash equilibria may be much better with respect to the properties under consideration than exact Nash equilibria.",
                "Therefore, the (approximation to the) value of the best solution that corresponds to an -Nash equilibrium may not be indicative of what can be achieved under an exact Nash equilibrium.",
                "This is especially important if the purpose of the approximate solution is to provide a good benchmark for a system of selfish agents, as the benchmark implied by an -Nash equilibrium may be unrealistic.",
                "For these reasons, in this paper we focus on the problem of computing exact Nash equilibria.",
                "Building on ideas of [14], Elkind et al. [9] showed how to find an (exact) Nash equilibrium in polynomial time when the underlying 162 graph has degree 2 (that is, when the graph is a collection of paths and cycles).",
                "By contrast, finding a Nash equilibrium in a general <br>degree-bounded graph</br> appears to be computationally intractable: it has been shown (see [5, 12, 7]) to be complete for the complexity class PPAD. [9] extends this hardness result to the case in which the underlying graph has bounded pathwidth.",
                "A graphical game may not have a unique Nash equilibrium, indeed it may have exponentially many.",
                "Moreover, some Nash equilibria are more desirable than others.",
                "Rather than having an algorithm which merely finds some Nash equilibrium, we would like to have algorithms for finding Nash equilibria with various sociallydesirable properties, such as maximizing overall payoff or distributing profit fairly.",
                "A useful property of the data structure of [13] is that it simultaneously represents the set of all Nash equilibria of the underlying game.",
                "If this representation has polynomial size (as is the case for paths, as shown in [9]), one may hope to extract from it a Nash equilibrium with the desired properties.",
                "In fact, in [13] the authors mention that this is indeed possible if one is interested in finding an (approximate) -Nash equilibrium.",
                "The goal of this paper is to extend this to exact Nash equilibria. 1.1 Our Results In this paper, we study n-player 2-action graphical games on bounded-degree trees for which the data structure of [13] has size poly(n).",
                "We focus on the problem of finding exact Nash equilibria with certain socially-desirable properties.",
                "In particular, we show how to find a Nash equilibrium that (nearly) maximizes the social welfare, i.e., the sum of the players payoffs, and we show how to find a Nash equilibrium that (nearly) satisfies prescribed payoff bounds for all players.",
                "Graphical games on bounded-degree trees have a simple algebraic structure.",
                "One attractive feature, which follows from [13], is that every such game has a Nash equilibrium in which the strategy of every player is a rational number.",
                "Section 3 studies the algebraic structure of those Nash equilibria that maximize social welfare.",
                "We show (Theorems 1 and 2) that, surprisingly, the set of Nash equilibria that maximize social welfare is more complex.",
                "In fact, for any algebraic number α ∈ [0, 1] with degree at most n, we exhibit a graphical game on a path of length O(n) such that, in the unique social welfare-maximizing Nash equilibrium of this game, one of the players plays the mixed strategy α.1 This result shows that it may be difficult to represent an optimal Nash equilibrium.",
                "It seems to be a novel feature of the setting we consider here, that an optimal Nash equilibrium is hard to represent, in a situation where it is easy to find and represent a Nash equilibrium.",
                "As the social welfare-maximizing Nash equilibrium may be hard to represent efficiently, we have to settle for an approximation.",
                "However, the crucial difference between our approach and that of previous papers [13, 16, 19] is that we require our algorithm to output an exact Nash equilibrium, though not necessarily the optimal one with respect to our criteria.",
                "In Section 4, we describe an algorithm that satisfies this requirement.",
                "Namely, we propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within of optimal.",
                "It runs in polynomial time (Theorem 3,4) for any graphical game on a bounded-degree tree for which the data structure proposed by [13] (the so-called best response policy, defined below) is of size poly(n) (note that, as shown in [9], this is always the case when the underlying graph is a path).",
                "More pre1 A related result in a different context was obtained by Datta [8], who shows that n-player 2-action games are universal in the sense that any real algebraic variety can be represented as the set of totally mixed Nash equilibria of such games. cisely, the running time of our algorithm is polynomial in n, Pmax, and 1/ , where Pmax is the maximum absolute value of an entry of a payoff matrix, i.e., it is a pseudopolynomial algorithm, though it is fully polynomial with respect to .",
                "We show (Section 4.1) that under some restrictions on the payoff matrices, the algorithm can be transformed into a (truly) polynomial-time algorithm that outputs a Nash equilibrium whose total payoff is within a 1 − factor from the optimal.",
                "In Section 5, we consider the problem of finding a Nash equilibrium in which the expected payoff of each player Vi exceeds a prescribed threshold Ti.",
                "Using the idea from Section 4 we give (Theorem 5) a fully polynomial time approximation scheme for this problem.",
                "The running time of the algorithm is bounded by a polynomial in n, Pmax, and .",
                "If the instance has a Nash equilibrium satisfying the prescribed thresholds then the algorithm constructs a Nash equilibrium in which the expected payoff of each player Vi is at least Ti − .",
                "In Section 6, we introduce other natural criteria for selecting a good Nash equilibrium and we show that the algorithms described in the two previous sections can be used as building blocks in finding Nash equilibria that satisfy these criteria.",
                "In particular, in Section 6.1 we show how to find a Nash equilibrium that approximates the maximum social welfare, while guaranteeing that each individual payoff is close to a prescribed threshold.",
                "In Section 6.2 we show how to find a Nash equilibrium that (nearly) maximizes the minimum individual payoff.",
                "Finally, in Section 6.3 we show how to find a Nash equilibrium in which the individual payoffs of the players are close to each other. 1.2 Related Work Our approximation scheme (Theorem 3 and Theorem 4) shows a contrast between the games that we study and two-player n-action games, for which the corresponding problems are usually intractable.",
                "For two-player n-action games, the problem of finding Nash equilibria with special properties is typically NP-hard.",
                "In particular, this is the case for Nash equilibria that maximize the social welfare [11, 6].",
                "Moreover, it is likely to be intractable even to approximate such equilibria.",
                "In particular, Chen, Deng and Teng [4] show that there exists some , inverse polynomial in n, for which computing an -Nash equilibrium in 2-player games with n actions per player is PPAD-complete.",
                "Lipton and Markakis [15] study the algebraic properties of Nash equilibria, and point out that standard quantifier elimination algorithms can be used to solve them.",
                "Note that these algorithms are not polynomial-time in general.",
                "The games we study in this paper have polynomial-time computable Nash equilibria in which all mixed strategies are rational numbers, but an optimal Nash equilibrium may necessarily include mixed strategies with high algebraic degree.",
                "A correlated equilibrium (CE) (introduced by Aumann [2]) is a distribution over vectors of players actions with the property that if any player is told his own action (the value of his own component) from a vector generated by that distribution, then he cannot increase his expected payoff by changing his action.",
                "Any Nash equilibrium is a CE but the converse does not hold in general.",
                "In contrast with Nash equilibria, correlated equilibria can be found for low-degree graphical games (as well as other classes of conciselyrepresented multiplayer games) in polynomial time [17].",
                "But, for graphical games it is NP-hard to find a correlated equilibrium that maximizes total payoff [18].",
                "However, the NP-hardness results apply to more general games than the one we consider here, in particular the graphs are not trees.",
                "From [2] it is also known that there exist 2-player, 2-action games for which the expected total payoff 163 of the best correlated equilibrium is higher than the best Nash equilibrium, and we discuss this issue further in Section 7. 2.",
                "PRELIMINARIES AND NOTATION We consider graphical games in which the underlying graph G is an n-vertex tree, in which each vertex has at most Δ children.",
                "Each vertex has two actions, which are denoted by 0 and 1.",
                "A mixed strategy of a player V is represented as a single number v ∈ [0, 1], which denotes the probability that V selects action 1.",
                "For the purposes of the algorithm, the tree is rooted arbitrarily.",
                "For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.",
                "This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function, e.g., 0.",
                "Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed strategy w. Definition 1.",
                "Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .",
                "We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.",
                "The upstream pass of the generic algorithm of [13] considers every node V (other than the root) and computes the best response policy for V given its parent.",
                "With the above assumptions about the root, the downstream pass is straightforward.",
                "The root selects a mixed strategy w for the root W and a mixed strategy v ∈ B(W, V ) for each child V of W .",
                "It instructs each child V to play v. The remainder of the downward pass is recursive.",
                "When a node V is instructed by its parent to adopt mixed strategy v, it does the following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u.",
                "The best response policy for a vertex U given its parent V can be represented as a union of rectangles, where a rectangle is defined by a pair of closed intervals (IV , IU ) and consists of all points in IV × IU ; it may be the case that one or both of the intervals IV and IU consists of a single point.",
                "In order to perform computations on B(V, U), and to bound the number of rectangles, [9] used the notion of an event point, which is defined as follows.",
                "For any set A ⊆ [0, 1]2 that is represented as a union of a finite number of rectangles, we say that a point u ∈ [0, 1] on the U-axis is a Uevent point of A if u = 0 or u = 1 or the representation of A contains a rectangle of the form IV × IU and u is an endpoint of IU ; V -event points are defined similarly.",
                "For many games considered in this paper, the underlying graph is an n-vertex path, i.e., a graph G = (V, E) with V = {V1, . . . , Vn} and E = {(V1, V2), . . . , (Vn−1, Vn)}.",
                "In [9], it was shown that for such games, the best response policy has only polynomially-many rectangles.",
                "The proof that the number of rectangles in B(Vj+1, Vj) is polynomial proceeds by first showing that the number of event points in B(Vj+1, Vj ) cannot exceed the number of event points in B(Vj, Vj−1) by more than 2, and using this fact to bound the number of rectangles in B(Vj+1, Vj ).",
                "Let P0 (V ) and P1 (V ) be the expected payoffs to V when it plays 0 and 1, respectively.",
                "Both P0 (V ) and P1 (V ) are multilinear functions of the strategies of V s neighbors.",
                "In what follows, we will frequently use the following simple observation.",
                "CLAIM 1.",
                "For a vertex V with a single child U and parent W , given any A, B, C, D ∈ Q, A , B , C , D ∈ Q, one can select the payoffs to V so that P0 (V ) = Auw + Bu + Cw + D, P1 (V ) = A uw + B u + C w + D .",
                "Moreover, if all A, B, C, D, A , B , C , D are integer, the payoffs to V are integer as well.",
                "PROOF.",
                "We will give the proof for P0 (V ); the proof for P1 (V ) is similar.",
                "For i, j = 0, 1, let Pij be the payoff to V when U plays i, V plays 0 and W plays j.",
                "We have P0 (V ) = P00(1 − u)(1 − w) + P10u(1 − w) + P01(1 − u)w + P11uw.",
                "We have to select the values of Pij so that P00 − P10 − P01 + P11 = A, −P00 + P10 = B, −P00 + P01 = C, P00 = D. It is easy to see that the unique solution is given by P00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. The input to all algorithms considered in this paper includes the payoff matrices for each player.",
                "We assume that all elements of these matrices are integer.",
                "Let Pmax be the greatest absolute value of any element of any payoff matrix.",
                "Then the input consists of at most n2Δ+1 numbers, each of which can be represented using log Pmax bits. 3.",
                "NASH EQUILIBRIA THAT MAXIMIZE THE SOCIAL WELFARE: SOLUTIONS IN R \\ Q From the point of view of social welfare, the best Nash equilibrium is the one that maximizes the sum of the players expected payoffs.",
                "Unfortunately, it turns out that computing such a strategy profile exactly is not possible: in this section, we show that even if all players payoffs are integers, the strategy profile that maximizes the total payoff may have irrational coordinates; moreover, it may involve algebraic numbers of an arbitrary degree. 3.1 Warm-up: quadratic irrationalities We start by providing an example of a graphical game on a path of length 3 with integer payoffs such that in the Nash equilibrium that maximizes the total payoff, one of the players has a strategy in R \\ Q.",
                "In the next subsection, we will extend this example to algebraic numbers of arbitrary degree n; to do so, we have to consider paths of length O(n).",
                "THEOREM 1.",
                "There exists an integer-payoff graphical game G on a 3-vertex path UV W such that, in any Nash equilibrium of G that maximizes social welfare, the strategy, u, of the player U and the total payoff, p, satisfy u, p ∈ R \\ Q.",
                "PROOF.",
                "The payoffs to the players in G are specified as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = −uw + 3w and P1 (V ) = P0 (V ) + w(u + 2) − (u + 1), where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = u+1 u+2 .",
                "Observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "The payoff to W is 0 if it selects the same action as V and 1 otherwise.",
                "CLAIM 2.",
                "All Nash equilibria of the game G are of the form (u, 1/2, f(u)).",
                "That is, in any Nash equilibrium, V plays v = 1/2 and W plays w = f(u).",
                "Moreover, for any value of u, the vector of strategies (u, 1/2, f(u)) constitutes a Nash equilibrium.",
                "PROOF.",
                "It is easy to check that for any u ∈ [0, 1], the vector (u, 1/2, f(u)) is a Nash equilibrium.",
                "Indeed, U is content to play 164 any mixed strategy u no matter what V and W do.",
                "Furthermore, V is indifferent between 0 and 1 as long as w = f(u), so it can play 1/2.",
                "Finally, if V plays 0 and 1 with equal probability, W is indifferent between 0 and 1, so it can play f(u).",
                "Conversely, suppose that v > 1/2.",
                "Then W strictly prefers to play 0, i.e., w = 0.",
                "Then for V we have P1 (V ) = P0 (V ) − (u + 1), i.e., P1 (V ) < P0 (V ), which implies v = 0, a contradiction.",
                "Similarly, if v < 1/2, player W prefers to play 1, so we have w = 1.",
                "Hence, P1 (V ) = P0 (V ) + (u + 2) − (u + 1), i.e., P1 (V ) > P0 (V ), which implies v = 1, a contradiction.",
                "Finally, if v = 1/2, but w = f(u), player V is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "This completes the proof of Claim 2.",
                "By Claim 2, the total payoff in any Nash equilibrium of this game is a function of u.",
                "More specifically, the payoff to U is 0, the payoff to V is −uf(u) + 3f(u), and the payoff to W is 1/2.",
                "Therefore, the Nash equilibrium with the maximum total payoff corresponds to the value of u that maximizes g(u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = − (u − 3)(u + 1) u + 2 .",
                "To find extrema of g(u), we compute h(u) = − d du g(u).",
                "We have h(u) = (2u − 2)(u + 2) − (u − 3)(u + 1) (u + 2)2 = u2 + 4u − 1 (u + 2)2 .",
                "Hence, h(u) = 0 if and only if u ∈ {−2 + √ 5, −2 − √ 5}.",
                "Note that −2 + √ 5 ∈ [0, 1].",
                "The function g(u) changes sign at −2, −1, and 3.",
                "We have g(u) < 0 for g > 3, g(u) > 0 for u < −2, so the extremum of g(u) that lies between 1 and 3, i.e., u = −2 + √ 5, is a local maximum.",
                "We conclude that the social welfare-maximizing Nash equilibrium for this game is given by the vector of strategies (−2+√ 5, 1/2, (5 − √ 5)/5).",
                "The respective total payoff is 0 − ( √ 5 − 5)( √ 5 − 1) √ 5 + 1 2 = 13/2 − 2 √ 5.",
                "This concludes the proof of Theorem 1. 3.2 Strategies of arbitrary degree We have shown that in the social welfare-maximizing Nash equilibrium, some players strategies can be quadratic irrationalities, and so can the total payoff.",
                "In this subsection, we will extend this result to show that we can construct an integer-payoff graphical game on a path whose social welfare-maximizing Nash equilibrium involves arbitrary algebraic numbers in [0, 1].",
                "THEOREM 2.",
                "For any degree-n algebraic number α ∈ [0, 1], there exists an integer payoff graphical game on a path of length O(n) such that, in all social welfare-maximizing Nash equilibria of this game, one of the players plays α.",
                "PROOF.",
                "Our proof consists of two steps.",
                "First, we construct a rational expression R(x) and a segment [x , x ] such that x , x ∈ Q and α is the only maximum of R(x) on [x , x ].",
                "Second, we construct a graphical game whose Nash equilibria can be parameterized by u ∈ [x , x ], so that at the equilibrium that corresponds to u the total payoff is R(u) and, moreover, some players strategy is u.",
                "It follows that to achieve the payoff-maximizing Nash equilibrium, this player has to play α.",
                "The details follow.",
                "LEMMA 1.",
                "Given an algebraic number α ∈ [0, 1], deg(α) = n, there exist K2, . . . , K2n+2 ∈ Q and x , x ∈ (0, 1) ∩ Q such that α is the only maximum of R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 on [x , x ].",
                "PROOF.",
                "Let P(x) be the minimal polynomial of α, i.e., a polynomial of degree n with rational coefficients whose leading coefficient is 1 such that P(α) = 0.",
                "Let A = {α1, . . . , αn} be the set of all roots of P(x).",
                "Consider the polynomial Q1(x) = −P2 (x).",
                "It has the same roots as P(x), and moreover, for any x ∈ A we have Q1(x) < 0.",
                "Hence, A is the set of all maxima of Q1(x).",
                "Now, set R(x) = Q1(x) (x+2)...(x+2n+1)(x+2n+2) .",
                "Observe that R(x) ≤ 0 for all x ∈ [0, 1] and R(x) = 0 if and only if Q1(x) = 0.",
                "Hence, the set A is also the set of all maxima of R(x) on [0, 1].",
                "Let d = min{|αi − α| | αi ∈ A, αi = α}, and set α = max{α − d/2, 0}, α = min{α + d/2, 1}.",
                "Clearly, α is the only zero (and hence, the only maximum) of R(x) on [α , α ].",
                "Let x and x be some rational numbers in (α , α) and (α, α ), respectively; note that by excluding the endpoints of the intervals we ensure that x , x = 0, 1.",
                "As [x , x ] ⊂ [α , α ], we have that α is the only maximum of R(x) on [x , x ].",
                "As R(x) is a proper rational expression and all roots of its denominator are simple, by partial fraction decomposition theorem, R(x) can be represented as R(x) = K2 x + 2 + · · · + K2n+2 x + 2n + 2 , where K2, . . . , K2n+2 are rational numbers.",
                "Consider a graphical game on the path U−1V−1U0V0U1V1 . . .",
                "Uk−1Vk−1Uk, where k = 2n + 2.",
                "Intuitively, we want each triple (Ui−1, Vi−1, Ui) to behave similarly to the players U, V , and W from the game described in the previous subsection.",
                "More precisely, we define the payoffs to the players in the following way. • The payoff to U−1 is 0 no matter what everyone else does. • The expected payoff to V−1 is 0 if it plays 0 and u0 − (x − x )u−1 −x if it plays 1, where u0 and u−1 are the strategies of U0 and U−1, respectively. • The expected payoff to V0 is 0 if it plays 0 and u1(u0 + 1)− u0 if it plays 1, where u0 and u1 are the strategies of U0 and U1, respectively. • For each i = 1, . . . , k − 1, the expected payoff to Vi when it plays 0 is P0 (Vi) = Aiuiui+1 − Aiui+1, and the expected payoff to Vi when it plays 1 is P1 (Vi) = P0 (Vi) + ui+1(2 − ui) − 1, where Ai = −Ki+1 and ui+1 and ui are the strategies of Ui+1 and Ui, respectively. • For each i = 0, . . . , k, the payoff to Ui does not depend on Vi and is 1 if Ui and Vi−1 select different actions and 0 otherwise.",
                "We will now characterize the Nash equilibria of this game using a sequence of claims.",
                "CLAIM 3.",
                "In all Nash equilibria of this game V−1 plays 1/2, and the strategies of u−1 and u0 satisfy u0 = (x − x )u−1 + x .",
                "Consequently, in all Nash equilibria we have u0 ∈ [x , x ]. 165 PROOF.",
                "The proof is similar to that of Claim 2.",
                "Let f(u−1) = (x − x )u−1 + x .",
                "Clearly, the player V−1 is indifferent between playing 0 and 1 if and only if u0 = f(u−1).",
                "Suppose that v−1 < 1/2.",
                "Then U0 strictly prefers to play 1, i.e., u0 = 1, so we have P1 (V−1) = P0 (V−1) + 1 − (x − x )u−1 − x .",
                "As 1 − x ≤ 1 − (x − x )u−1 − x ≤ 1 − x for u−1 ∈ [0, 1] and x < 1, we have P1 (V−1) > P0 (V−1), so V−1 prefers to play 1, a contradiction.",
                "Similarly, if v−1 > 1/2, the player U0 strictly prefers to play 0, i.e., u0 = 0, so we have P1 (V−1) = P0 (V−1) − (x − x )u−1 − x .",
                "As x < x , x > 0, we have P1 (V−1) < P0 (V−1), so V−1 prefers to play 0, a contradiction.",
                "Finally, if V−1 plays 1/2, but u0 = f(u−1), player V−1 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Also, note that f(0) = x , f(1) = x , and, moreover, f(u−1) ∈ [x , x ] if and only if u−1 ∈ [0, 1].",
                "Hence, in all Nash equilibria of this game we have u0 ∈ [x , x ].",
                "CLAIM 4.",
                "In all Nash equilibria of this game for each i = 0, . . . , k − 1, we have vi = 1/2, and the strategies of the players Ui and Ui+1 satisfy ui+1 = fi(ui), where f0(u) = u/(u + 1) and fi(u) = 1/(2 − u) for i > 0.",
                "PROOF.",
                "The proof of this claim is also similar to that of Claim 2.",
                "We use induction on i to prove that the statement of the claim is true and, additionally, ui = 1 for i > 0.",
                "For the base case i = 0, note that u0 = 0 by the previous claim (recall that x , x are selected so that x , x = 0, 1) and consider the triple (U0, V0, U1).",
                "Let v0 be the strategy of V0.",
                "First, suppose that v0 > 1/2.",
                "Then U1 strictly prefers to play 0, i.e., u1 = 0.",
                "Then for V0 we have P1 (V0) = P0 (V0) − u0.",
                "As u0 = 0, we have P1 (V0) < P0 (V0), which implies v1 = 0, a contradiction.",
                "Similarly, if v0 < 1/2, player U1 prefers to play 1, so we have u1 = 1.",
                "Hence, P1 (V0) = P0 (V0) + 1.",
                "It follows that P1 (V0) > P0 (V0), which implies v0 = 1, a contradiction.",
                "Finally, if v0 = 1/2, but u1 = u0/(u0 + 1), player V0 is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as u1 = u0/(u0 + 1) and u0 ∈ [0, 1], we have u1 = 1.",
                "The argument for the inductive step is similar.",
                "Namely, suppose that the statement is proved for all i < i and consider the triple (Ui, Vi, Ui+1).",
                "Let vi be the strategy of Vi.",
                "First, suppose that vi > 1/2.",
                "Then Ui+1 strictly prefers to play 0, i.e., ui+1 = 0.",
                "Then for Vi we have P1 (Vi) = P0 (Vi)−1, i.e., P1 (Vi) < P0 (Vi), which implies vi = 0, a contradiction.",
                "Similarly, if vi < 1/2, player Ui+1 prefers to play 1, so we have ui+1 = 1.",
                "Hence, P1 (Vi) = P0 (Vi) + 1 − ui.",
                "By inductive hypothesis, we have ui < 1.",
                "Consequently, P1 (Vi) > P0 (Vi), which implies vi = 1, a contradiction.",
                "Finally, if vi = 1/2, but ui+1 = 1/(2 − ui), player Vi is not indifferent between 0 and 1, so he would deviate from playing 1/2.",
                "Moreover, as ui+1 = 1/(2 − ui) and ui < 1, we have ui+1 < 1.",
                "CLAIM 5.",
                "Any strategy profile of the form (u−1, 1/2, u0, 1/2, u1, 1/2, . . . , uk−1, 1/2, uk), where u−1 ∈ [0, 1], u0 = (x − x )u−1 + x , u1 = u0/(u0 + 1), and ui+1 = 1/(2 − ui) for i ≥ 1 constitutes a Nash equilibrium.",
                "PROOF.",
                "First, the player U−1s payoffs do not depend on other players actions, so he is free to play any strategy in [0, 1].",
                "As long as u0 = (x −x )u−1 +x , player V−1 is indifferent between 0 and 1, so he is content to play 1/2; a similar argument applies to players V0, . . . , Vk−1.",
                "Finally, for each i = 0, . . . , k, the payoffs of player Ui only depend on the strategy of player Vi−1.",
                "In particular, as long as vi−1 = 1/2, player Ui is indifferent between playing 0 and 1, so he can play any mixed strategy ui ∈ [0, 1].",
                "To complete the proof, note that (x − x )u−1 + x ∈ [0, 1] for all u−1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] for all u0 ∈ [0, 1], and 1/(2 − ui) ∈ [0, 1] for all ui ∈ [0, 1], so we have ui ∈ [0, 1] for all i = 0, . . . , k. Now, let us compute the total payoff under a strategy profile of the form given in Claim 5.",
                "The payoff to U−1 is 0, and the expected payoff to each of the Ui, i = 0, . . . , k, is 1/2.",
                "The expected payoffs to V−1 and V0 are 0.",
                "Finally, for any i = 1, . . . , k − 1, the expected payoff to Vi is Ti = Aiuiui+1 − Aiui+1.",
                "It follows that to find a Nash equilibrium with the highest total payoff, we have to maximize Pk−1 i=1 Ti subject to conditions u−1 ∈ [0, 1], u0 = (x −x )u−1+x , u1 = u0/(u0+1), and ui+1 = 1/(2−ui) for i = 1, . . . , k − 1.",
                "We would like to express Pk−1 i=1 Ti as a function of u0.",
                "To simplify notation, set u = u0.",
                "LEMMA 2.",
                "For i = 1, . . . , k, we have ui = u+i−1 u+i .",
                "PROOF.",
                "The proof is by induction on i.",
                "For i = 1, we have u1 = u/(u + 1).",
                "Now, for i ≥ 2 suppose that ui−1 = (u + i − 2)/(u + i − 1).",
                "We have ui = 1/(2 − ui−1) = (u + i − 1)/(2u + 2i − 2 − u − i + 2) = (u + i − 1)/(u + i).",
                "It follows that for i = 1, . . . , k − 1 we have Ti = Ai u + i − 1 u + i u + i u + i + 1 − Ai u + i u + i + 1 = −Ai 1 u + i + 1 = Ki+1 u + i + 1 .",
                "Observe that as u−1 varies from 0 to 1, u varies from x to x .",
                "Therefore, to maximize the total payoff, we have to choose u ∈ [x , x ] so as to maximize K2 u + 2 + · · · + Kk u + k = R(u).",
                "By construction, the only maximum of R(u) on [x , x ] is α.",
                "It follows that in the payoff-maximizing Nash equilibrium of our game U0 plays α.",
                "Finally, note that the payoffs in our game are rational rather than integer.",
                "However, it is easy to see that we can multiply all payoffs to a player by their greatest common denominator without affecting his strategy.",
                "In the resulting game, all payoffs are integer.",
                "This concludes the proof of Theorem 2. 4.",
                "APPROXIMATING THE SOCIALLY OPTIMAL NASH EQUILIBRIUM We have seen that the Nash equilibrium that maximizes the social welfare may involve strategies that are not in Q.",
                "Hence, in this section we focus on finding a Nash equilibrium that is almost optimal from the social welfare perspective.",
                "We propose an algorithm that for any > 0 finds a Nash equilibrium whose total payoff is within from optimal.",
                "The running time of this algorithm is polynomial in 1/ , n and |Pmax| (recall that Pmax is the maximum absolute value of an entry of a payoff matrix).",
                "While the negative result of the previous section is for graphical games on paths, our algorithm applies to a wider range of scenarios.",
                "Namely, it runs in polynomial time on bounded-degree trees 166 as long as the best response policy of each vertex, given its parent, can be represented as a union of a polynomial number of rectangles.",
                "Note that path graphs always satisfy this condition: in [9] we showed how to compute such a representation, given a graph with maximum degree 2.",
                "Consequently, for path graphs the running time of our algorithm is guaranteed to be polynomial. (Note that [9] exhibits a family of graphical games on bounded-degree trees for which the best response policies of some of the vertices, given their parents, have exponential size, when represented as unions of rectangles.)",
                "Due to space restrictions, in this version of the paper we present the algorithm for the case where the graph underlying the graphical game is a path.",
                "We then state our result for the general case; the proof can be found in the full version of this paper [10].",
                "Suppose that s is a strategy profile for a graphical game G. That is, s assigns a mixed strategy to each vertex of G. let EPV (s) be the expected payoff of player V under s and let EP(s) =P V EPV (s).",
                "Let M(G) = max{EP(s) | s is a Nash equilibrium for G}.",
                "THEOREM 3.",
                "Suppose that G is a graphical game on an nvertex path.",
                "Then for any > 0 there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G)− .",
                "The running time of the algorithm is O(n4 P3 max/ 3 ) PROOF.",
                "Let {V1, . . . , Vn} be the set of all players.",
                "We start by constructing the best response policies for all Vi, i = 1, . . . , n − 1.",
                "As shown in [9], this can be done in time O(n3 ).",
                "Let N > 5n be a parameter to be selected later, set δ = 1/N, and define X = {jδ | j = 0, . . . , N}.",
                "We say that vj is an event point for a player Vi if it is a Vi-event point for B(Vi, Vi−1) or B(Vi+1, Vi).",
                "For each player Vi, consider a finite set of strategies Xi given by Xi = X ∪ {vj |vj is an event point for Vi}.",
                "It has been shown in [9] that for any i = 2, . . . , n, the best response policy B(Vi, Vi−1) has at most 2n + 4 Vi-event points.",
                "As we require N > 5n, we have |Xi| ≤ 2N; assume without loss of generality that |Xi| = 2N.",
                "Order the elements of Xi in increasing order as x1 i = 0 < x2 i < · · · < x2N i .",
                "We will refer to the strategies in Xi as discrete strategies of player Vi; a strategy profile in which each player has a discrete strategy will be referred to as a discrete strategy profile.",
                "We will now show that even we restrict each player Vi to strategies from Xi, the players can still achieve a Nash equilibrium, and moreover, the best such Nash equilibrium (with respect to the social welfare) has total payoff at least M(G) − as long as N is large enough.",
                "Let s be a strategy profile that maximizes social welfare.",
                "That is, let s = (s1, . . . , sn) where si is the mixed strategy of player Vi and EP(s) = M(G).",
                "For i = 1, . . . , n, let ti = max{xj i | xj i ≤ si}.",
                "First, we will show that the strategy profile t = (t1, . . . , tn) is a Nash equilibrium for G. Fix any i, 1 < i ≤ n, and let R = [v1, v2]×[u1, u2] be the rectangle in B(Vi, Vi−1) that contains (si, si−1).",
                "As v1 is a Vi-event point of B(Vi, Vi−1), we have v1 ≤ ti, so the point (ti, si−1) is inside R. Similarly, the point u1 is a Vi−1-event point of B(Vi, Vi−1), so we have u1 ≤ ti−1, and therefore the point (ti, ti−1) is inside R. This means that for any i, 1 < i ≤ n, we have ti−1 ∈ pbrVi−1 (ti), which implies that t = (t1, . . . , tn) is a Nash equilibrium for G. Now, let us estimate the expected loss in social welfare caused by playing t instead of s. LEMMA 3.",
                "For any pair of strategy profiles t, s such that |ti − si| ≤ δ we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ for any i = 1, . . . , n. PROOF.",
                "Let Pi klm be the payoff of the player Vi, when he plays k, Vi−1 plays l, and Vi+1 plays m. Fix i = 1, . . . , n and for k, l, m ∈ {0, 1}, set tklm = tk i−1(1 − ti−1)1−k tl i(1 − ti)1−l tm i+1(1 − ti+1)1−m sklm = sk i−1(1 − si−1)1−k sl i(1 − si)1−l sm i+1(1 − si+1)1−m .",
                "We have |EPVi (s) − EPVi (t)| ≤ X k,l,m=0,1 |Pi klm(tklm − sklm )| ≤ 8Pmax max klm |tklm − sklm | We will now show that for any k, l, m ∈ {0, 1} we have |tklm − sklm | ≤ 3δ; clearly, this implies the lemma.",
                "Indeed, fix k, l, m ∈ {0, 1}.",
                "Set x = tk i−1(1 − ti−1)1−k , x = sk i−1(1 − si−1)1−k , y = tl i(1 − ti)1−l , y = sl i(1 − si)1−l , z = tm i+1(1 − ti+1)1−m , z = sm i+1(1 − si+1)1−m .",
                "Observe that if k = 0 then x − x = (1 − ti−1) − (1 − si−1), and if k = 1 then x − x = ti−1 − si−1, so |x − x | ≤ δ.",
                "A similar argument shows |y − y | ≤ δ, |z − z | ≤ δ.",
                "Also, we have x, x , y, y , z, z ∈ [0, 1].",
                "Hence, |tklm −sklm | = |xyz−x y z | = |xyz − x yz + x yz − x y z + x y z − x y z | ≤ |x − x |yz + |y − y |x z + |z − z |x y ≤ 3δ.",
                "Lemma 3 implies Pn i=1 |EPVi (s) − EPVi (t)| ≤ 24nPmaxδ, so by choosing δ < /(24nPmax), or, equivalently, setting N > 24nPmax/ , we can ensure that the total expected payoff for the strategy profile t is within from optimal.",
                "We will now show that we can find the best discrete Nash equilibrium (with respect to the social welfare) using dynamic programming.",
                "As t is a discrete strategy profile, this means that the strategy profile found by our algorithm will be at least as good as t. Define ml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj , j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1, and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The values ml,k i , i = 1, . . . , n; k, l = 1, . . . , N, can be computed inductively, as follows.",
                "We have ml,k 1 = 0 for k, l = 1, . . . , N. Now, suppose that we have already computed ml,k j for all j < i; k, l = 1, . . . , N. To compute mk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this is not the case, we have ml,k i = −∞.",
                "Otherwise, consider the set Y = Xi−2 ∩ pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "The proof of Theorem 1 in [9] implies that the set pbrVi−2 (xl i−1) is non-empty: the player Vi−2 has a potential best response to any strategy of Vi−1, in particular, xl i−1.",
                "By construction of the set Xi−2, this implies that Y is not empty.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "Then we have ml,k i = max{mj,l i−1 + pjlk | xj i−2 ∈ Y }.",
                "Finally, suppose that we have computed ml,k n for l, k = 1, . . . , N. We still need to take into account the payoff of player Vn.",
                "Hence, 167 we consider all pairs (xk n, xl n−1) that satisfy xl n−1 ∈ pbrVn−1 (xk n), and pick the one that maximizes the sum of mk,l n and the payoff of Vn when he plays xk n and Vn−1 plays xl n−1.",
                "This results in the maximum total payoff the players can achieve in a Nash equilibrium using discrete strategies; the actual strategy profile that produces this payoff can be reconstructed using standard dynamic programming techniques.",
                "It is easy to see that each ml,k i can be computed in time O(N), i.e., all of them can be computed in time O(nN3 ).",
                "Recall that we have to select N ≥ (24nPmax)/ to ensure that the strategy profile we output has total payoff that is within from optimal.",
                "We conclude that we can compute an -approximation to the best Nash equilibrium in time O(n4 P3 max/ 3 ).",
                "This completes the proof of Theorem 3.",
                "To state our result for the general case (i.e., when the underlying graph is a bounded-degree tree rather than a path), we need additional notation.",
                "If G has n players, let q(n) be an upper bound on the number of event points in the representation of any best response policy.",
                "That is, we assume that for any vertex U with parent V , B(V, U) has at most q(n) event points.",
                "We will be interested in the situation in which q(n) is polynomial in n. THEOREM 4.",
                "Let G be an n-player graphical game on a tree in which each node has at most Δ children.",
                "Suppose we are given a set of best-response policies for G in which each best-response policy B(V, U) is represented by a set of rectangles with at most q(n) event points.",
                "For any > 0, there is an algorithm that constructs a Nash equilibrium s for G that satisfies EP(s ) ≥ M(G) − .",
                "The running time of the algorithm is polynomial in n, Pmax and −1 provided that the tree has bounded degree (that is, Δ = O(1)) and q(n) is a polynomial in n. In particular, if N = max((Δ + 1)q(n) + 1, n2Δ+2 (Δ + 2)Pmax −1 ) and Δ > 1 then the running time is O(nΔ(2N)Δ .",
                "For the proof of this theorem, see [10]. 4.1 A polynomial-time algorithm for multiplicative approximation The running time of our algorithm is pseudopolynomial rather than polynomial, because it includes a factor which is polynomial in Pmax, the maximum (in absolute value) entry in any payoff matrix.",
                "If we are interested in multiplicative approximation rather than additive one, this can be improved to polynomial.",
                "First, note that we cannot expect a multiplicative approximation for all inputs.",
                "That is, we cannot hope to have an algorithm that computes a Nash equilibrium with total payoff at least (1 − )M(G).",
                "If we had such an algorithm, then for graphical games G with M(G) = 0, the algorithm would be required to output the optimal solution.",
                "To show that this is infeasible, observe that we can use the techniques of Section 3.2 to construct two integercoefficient graphical games on paths of length O(n) such that for some X ∈ R the maximal total payoff in the first game is X, the maximal total payoff in the second game is −X, and for both games, the strategy profiles that achieve the maximal total payoffs involve algebraic numbers of degree n. By combining the two games so that the first vertex of the second game becomes connected to the last vertex of the first game, but the payoffs of all players do not change, we obtain a graphical game in which the best Nash equilibrium has total payoff 0, yet the strategies that lead to this payoff have high algebraic complexity.",
                "However, we can achieve a multiplicative approximation when all entries of the payoff matrices are positive and the ratio between any two entries is polynomially bounded.",
                "Recall that we assume that all payoffs are integer, and let Pmin > 0 be the smallest entry of any payoff matrix.",
                "In this case, for any strategy profile the payoff to player i is at least Pmin, so the total payoff in the social-welfare maximizing Nash equilibrium s satisfies M(G) ≥ nPmin.",
                "Moreover, Lemma 3 implies that by choosing δ < /(24Pmax/Pmin), we can ensure that the Nash equilibrium t produced by our algorithm satisfies nX i=1 EPVi (s) − nX i=1 EPVi (t) ≤ 24Pmaxδn ≤ nPmin ≤ M(G), i.e., for this value of δ we have Pn i=1 EPVi (t) ≥ (1 − )M(G).",
                "Recall that the running time of our algorithm is O(nN3 ), where N has to be selected to satisfy N > 5n, N = 1/δ.",
                "It follows that if Pmin > 0, Pmax/Pmin = poly(n), we can choose N so that our algorithm provides a multiplicative approximation guarantee and runs in time polynomial in n and 1/ . 5.",
                "BOUNDED PAYOFF NASH EQUILIBRIA Another natural way to define what is a good Nash equilibrium is to require that each players expected payoff exceeds a certain threshold.",
                "These thresholds do not have to be the same for all players.",
                "In this case, in addition to the payoff matrices of the n players, we are given n numbers T1, . . . , Tn, and our goal is to find a Nash equilibrium in which the payoff of player i is at least Ti, or report that no such Nash equilibrium exists.",
                "It turns out that we can design an FPTAS for this problem using the same techniques as in the previous section.",
                "THEOREM 5.",
                "Given a graphical game G on an n-vertex path and n rational numbers T1, . . . , Tn, suppose that there exists a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. Then for any > 0 we can find in time O(max{nP3 max/ 3 , n4 / 3 }) a strategy profile s such that s is a Nash equilibrium for G and EPVi (s ) ≥ Ti − for i = 1, . . . , n. PROOF.",
                "The proof is similar to that of Theorem 3.",
                "First, we construct the best response policies for all players, choose N > 5n, and construct the sets Xi, i = 1, . . . , n, as described in the proof of Theorem 3.",
                "Consider a strategy profile s such that s is a Nash equilibrium for G and EPVi (s) ≥ Ti for i = 1, . . . , n. We construct a strategy profile ti = max{xj i | xj i ≤ si} and use the same argument as in the proof of Theorem 3 to show that t is a Nash equilibrium for G. By Lemma 3, we have |EPVi (s) − EPVi (t)| ≤ 24Pmaxδ, so choosing δ < /(24Pmax), or, equivalently, N > max{5n, 24Pmax/ }, we can ensure EPVi (t) ≥ Ti − for i = 1, . . . , n. Now, we will use dynamic programming to find a discrete Nash equilibrium that satisfies EPVi (t) ≥ Ti − for i = 1, . . . , n. As t is a discrete strategy profile, our algorithm will succeed whenever there is a strategy profile s with EPVi (s) ≥ Ti− for i = 1, . . . , n. Let zl,k i = 1 if there is a discrete strategy profile such that for any j < i the strategy of the player Vj is a potential best response to the strategy of Vj+1, the expected payoff of Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "Otherwise, let zl,k i = 0.",
                "We can compute zl,k i , i = 1, . . . , n; k, l = 1, . . . , N inductively, as follows.",
                "We have zl,k 1 = 1 for k, l = 1, . . . , N. Now, suppose that we have already computed zl,k j for all j < i; k, l = 1, . . . , N. To compute zk,l i , we first check if (xk i , xl i−1) ∈ B(Vi, Vi−1).",
                "If this 168 is not the case, clearly, zk,l i = 0.",
                "Otherwise, consider the set Y = Xi−2 ∩pbrVi−2 (xl i−1), i.e., the set of all discrete strategies of Vi−2 that are potential best responses to xl i−1.",
                "It has been shown in the proof of Theorem 3 that Y = ∅.",
                "For each xj i−2 ∈ Y , let pjlk be the payoff that Vi−1 receives when Vi−2 plays xj i−2, Vi−1 plays xl i−1, and Vi plays xk i .",
                "Clearly, pjlk can be computed in constant time.",
                "If there exists an xj i−2 ∈ Y such that zj,l i−1 = 1 and pjlk ≥ Ti−2 − , set zl,k i = 1.",
                "Otherwise, set zl,k i = 0.",
                "Having computed zl,k n , l, k = 1, . . . , N, we check if zl,k n = 1 for some pair (l, k). if such a pair of indices exists, we instruct Vn to play xk n and use dynamic programming techniques (or, equivalently, the downstream pass of the algorithm of [13]) to find a Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n (recall that Vn is a dummy player, i.e., we assume Tn = 0, EPn(s ) = 0 for any choice of s ).",
                "If zl,k n = 0 for all l, k = 1, . . . , N, there is no discrete Nash equilibrium s that satisfies EPVi (s ) ≥ Ti − for i = 1, . . . , n and hence no Nash equilibrium s (not necessarily discrete) such that EPVi (s) ≥ Ti for i = 1, . . . , n. The running time analysis is similar to that for Theorem 3; we conclude that the running time of our algorithm is O(nN3 ) = O(max{nP3 max/ 3 , n4 / 3 }).",
                "REMARK 1.",
                "Theorem 5 can be extended to trees of bounded degree in the same way as Theorem 4. 5.1 Exact Computation Another approach to finding Nash equilibria with bounded payoffs is based on inductively computing the subsets of the best response policies of all players so as to exclude the points that do not provide sufficient payoffs to some of the players.",
                "Formally, we say that a strategy v of the player V is a potential best response to a strategy w of its parent W with respect to a threshold vector T = (T1, . . . , Tn), (denoted by v ∈ pbrV (w, T)) if there is an equilibrium in the instance G(V,W ),W =w in which V plays mixed strategy v and the payoff to any player Vi downstream of V (including V ) is at least Ti.",
                "The best response policy for V with respect to a threshold vector T is defined as B(W, V, T) = {(w, v) | v ∈ pbrV (w, T), w ∈ [0, 1]}.",
                "It is easy to see that if any of the sets B(Vj, Vj−1, T), j = 1, . . . , n, is empty, it means that it is impossible to provide all players with expected payoffs prescribed by T. Otherwise, one can apply the downstream pass of the original algorithm of [13] to find a Nash equilibrium.",
                "As we assume that Vn is a dummy vertex whose payoff is identically 0, the Nash equilibrium with these payoffs exists as long as Tn ≤ 0 and B(Vn, Vn−1, T) is not empty.",
                "Using the techniques developed in [9], it is not hard to show that for any j = 1, . . . , n, the set B(Vj , Vj−1, T) consists of a finite number of rectangles, and one can compute B(Vj+1, Vj , T) given B(Vj , Vj−1, T).",
                "The advantage of this approach is that it allows us to represent all Nash equilibria that provide required payoffs to the players.",
                "However, it is not likely to be practical, since it turns out that the rectangles that appear in the representation of B(Vj , Vj−1, T) may have irrational coordinates.",
                "CLAIM 6.",
                "There exists a graphical game G on a 3-vertex path UV W and a vector T = (T1, T2, T3) such that B(V, W, T) cannot be represented as a union of a finite number of rectangles with rational coordinates.",
                "PROOF.",
                "We define the payoffs to the players in G as follows.",
                "The payoff to U is identically 0, i.e., P0 (U) = P1 (U) = 0.",
                "Using Claim 1, we select the payoffs to V so that P0 (V ) = uw, P1 (V ) = P0 (V ) + w − .8u − .1, where u and w are the (mixed) strategies of U and W , respectively.",
                "It follows that V is indifferent between playing 0 and 1 if and only if w = f(u) = .8u + .1; observe that for any u ∈ [0, 1] we have f(u) ∈ [0, 1].",
                "It is not hard to see that we have B(W, V ) = [0, .1]×{0} ∪ [.1, .9]×[0, 1] ∪ [.9, 1]×{1}.",
                "The payoffs to W are not important for our construction; for example, set P0(W ) = P0(W ) = 0.",
                "Now, set T = (0, 1/8, 0), i.e., we are interested in Nash equilibria in which V s expected payoff is at least 1/8.",
                "Suppose w ∈ [0, 1].",
                "The player V can play a mixed strategy v when W is playing w as long as U plays u = f−1 (w) = 5w/4 − 1/8 (to ensure that V is indifferent between 0 and 1) and P0 (V ) = P1 (V ) = uw = w(5w/4 − 1/8) ≥ 1/8.",
                "The latter condition is satisfied if w ≤ (1 − √ 41)/20 < 0 or w ≥ (1 + √ 41)/20.",
                "Note that we have .1 < (1 + √ 41)/20 < .9.",
                "For any other value of w, any strategy of U either makes V prefer one of the pure strategies or does not provide it with a sufficient expected payoff.",
                "There are also some values of w for which V can play a pure strategy (0 or 1) as a potential best response to W and guarantee itself an expected payoff of at least 1/8; it can be shown that these values of w form a finite number of segments in [0, 1].",
                "We conclude that any representation of B(W, V, T) as a union of a finite number of rectangles must contain a rectangle of the form [(1 + √ 41)/20, w ]×[v , v ] for some w , v , v ∈ [0, 1].",
                "On the other hand, it can be shown that for any integer payoff matrices and threshold vectors and any j = 1, . . . , n − 1, the sets B(Vj+1, Vj, T) contain no rectangles of the form [u , u ]×{v} or {v}×[w , w ], where v ∈ R\\Q.",
                "This means that if B(Vn, Vn−1, T) is non-empty, i.e., there is a Nash equilibrium with payoffs prescribed by T, then the downstream pass of the algorithm of [13] can always pick a strategy profile that forms a Nash equilibrium, provides a payoff of at least Ti to the player Vi, and has no irrational coordinates.",
                "Hence, unlike in the case of the Nash equilibrium that maximizes the social welfare, working with irrational numbers is not necessary, and the fact that the algorithm discussed in this section has to do so can be seen as an argument against using this approach. 6.",
                "OTHER CRITERIA FOR SELECTING A NASH EQUILIBRIUM In this section, we consider several other criteria that can be useful in selecting a Nash equilibrium. 6.1 Combining welfare maximization with bounds on payoffs In many real life scenarios, we want to maximize the social welfare subject to certain restrictions on the payoffs to individual players.",
                "For example, we may want to ensure that no player gets a negative expected payoff, or that the expected payoff to player i is at least Pi max − ξ, where Pi max is the maximum entry of is payoff matrix and ξ is a fixed parameter.",
                "Formally, given a graphical game G and a vector T1, . . . , Tn, let S be the set of all Nash equilibria s of G that satisfy Ti ≤ EPVi (s) for i = 1, . . . , n, and let ˆs = argmaxs∈S EP(s).",
                "If the set S is non-empty, we can find a Nash equilibrium ˆs that is -close to satisfying the payoff bounds and is within from ˆs with respect to the total payoff by combining the algorithms of Section 4 and Section 5.",
                "Namely, for a given > 0, choose δ as in the proof of Theorem 3, and let Xi be the set of all discrete strategies of player Vi (for a 169 formal definition, see the proof of Theorem 3).",
                "Combining the proofs of Theorem 3 and Theorem 5, we can see that the strategy profile ˆt given by ˆti = max{xj i | xj i ≤ ˆsi} satisfies EPVi (ˆt) ≥ Ti − , |EP(ˆs) − EP(ˆt)| ≤ .",
                "Define ˆml,k i to be the maximum total payoff that V1, . . . , Vi−1 can achieve if each Vj, j ≤ i, chooses a strategy from Xj , for each j < i the strategy of Vj is a potential best response to the strategy of Vj+1 and the payoff to player Vj is at least Tj − , and, moreover, Vi−1 plays xl i−1, Vi plays xk i .",
                "If there is no way to choose the strategies for V1, . . . , Vi−1 to satisfy these conditions, we set ml,k i = −∞.",
                "The ˆml,k i can be computed by dynamic programming similarly to the ml,k i and zl,k i in the proofs of Theorems 3 and 5.",
                "Finally, as in the proof of Theorem 3, we use ml,k n to select the best discrete Nash equilibrium subject to the payoff constraints.",
                "Even more generally, we may want to maximize the total payoff to a subset of players (who are assumed to be able to redistribute the profits fairly among themselves) while guaranteeing certain expected payoffs to (a subset of) the other players.",
                "This problem can be handled similarly. 6.2 A minimax approach A more egalitarian measure of the quality of a Nash equilibrium is the minimal expected payoff to a player.",
                "The optimal solution with respect to this measure is a Nash equilibrium in which the minimal expected payoff to a player is maximal.",
                "To find an approximation to such a Nash equilibrium, we can combine the algorithm of Section 5 with binary search on the space of potential lower bounds.",
                "Note that the expected payoff to any player Vi given a strategy s always satisfies −Pmax ≤ EPVi (s) ≤ Pmax.",
                "For a fixed > 0, we start by setting T = −Pmax, T = Pmax, T∗ = (T + T )/2.",
                "We then run the algorithm of Section 5 with T1 = · · · = Tn = T∗ .",
                "If the algorithm succeeds in finding a Nash equilibrium s that satisfies EPVi (s ) ≥ T∗ − for all i = 1, . . . , n, we set T = T∗ , T∗ = (T + T )/2; otherwise, we set T = T∗ , T∗ = (T + T )/2 and loop.",
                "We repeat this process until |T − T | ≤ .",
                "It is not hard to check that for any p ∈ R, if there is a Nash equilibrium s such that mini=1,...,n EPVi (s) ≥ p, then our algorithm outputs a Nash equilibrium s that satisfies mini=1,...,n EPVi (s) ≥ p−2 .",
                "The running time of our algorithm is O(max{nP3 max log −1 / 3 , n4 log −1 / 3 }). 6.3 Equalizing the payoffs When the players payoff matrices are not very different, it is reasonable to demand that the expected payoffs to the players do not differ by much either.",
                "We will now show that Nash equilibria in this category can be approximated in polynomial time as well.",
                "Indeed, observe that the algorithm of Section 5 can be easily modified to deal with upper bounds on individual payoffs rather than lower bounds.",
                "Moreover, we can efficiently compute an approximation to a Nash equilibrium that satisfies both the upper bound and the lower bound for each player.",
                "More precisely, suppose that we are given a graphical game G, 2n rational numbers T1, . . . , Tn, T1, . . . , Tn and > 0.",
                "Then if there exists a strategy profile s such that s is a Nash equilibrium for G and Ti ≤ EPVi (s) ≤ Ti for i = 1, . . . , n, we can find a strategy profile s such that s is a Nash equilibrium for G and Ti − ≤ EPVi (s ) ≤ Ti + for i = 1, . . . , n. The modified algorithm also runs in time O(max{nP3 max/ 3 , [4]n4 / 3 }).",
                "This observation allows us to approximate Nash equilibria in which all players expected payoffs differ by at most ξ for any fixed ξ > 0.",
                "Given an > 0, we set T1 = · · · = Tn = −Pmax, T1 = · · · = Tn = −Pmax + ξ + , and run the modified version of the algorithm of Section 5.",
                "If it fails to find a solution, we increment all Ti, Ti by and loop.",
                "We continue until the algorithm finds a solution, or Ti ≥ Pmax.",
                "Suppose that there exists a Nash equilibrium s that satisfies |EPVi (s) − EPVj (s)| ≤ ξ for all i, j = 1, . . . , n. Set r = mini=1,...,n EPVi (s); we have r ≤ EPVi (s) ≤ r + ξ for all i = 1, . . . , n. There exists a k ≥ 0 such that −Pmax + (k − 1) ≤ r ≤ −Pmax + k .",
                "During the kth step of the algorithm, we set T1 = · · · = Tn = −Pmax +(k−1) , i.e., we have r− ≤ Ti ≤ r, r + ξ ≤ Ti ≤ r + ξ + .",
                "That is, the Nash equilibrium s satisfies Ti ≤ r ≤ EPVi (s) ≤ r + ξ ≤ Ti , which means that when Ti is set to −Pmax + (k − 1) , our algorithm is guaranteed to output a Nash equilibrium t that satisfies r − 2 ≤ Ti − ≤ EPVi (t) ≤ Ti + ≤ r +ξ +2 .",
                "We conclude that whenever such a Nash equilibrium s exists, our algorithm outputs a Nash equilibrium t that satisfies |EPVi (t) − EPVj (t)| ≤ ξ + 4 for all i, j = 1, . . . , n. The running time of this algorithm is O(max{nP3 max/ 4 , n4 / 4 }).",
                "Note also that we can find the smallest ξ for which such a Nash equilibrium exists by combining this algorithm with binary search over the space ξ = [0, 2Pmax].",
                "This identifies an approximation to the fairest Nash equilibrium, i.e., one in which the players expected payoffs differ by the smallest possible amount.",
                "Finally, note that all results in this section can be extended to bounded-degree trees. 7.",
                "CONCLUSIONS We have studied the problem of equilibrium selection in graphical games on bounded-degree trees.",
                "We considered several criteria for selecting a Nash equilibrium, such as maximizing the social welfare, ensuring a lower bound on the expected payoff of each player, etc.",
                "First, we focused on the algebraic complexity of a social welfare-maximizing Nash equilibrium, and proved strong negative results for that problem.",
                "Namely, we showed that even for graphical games on paths, any algebraic number α ∈ [0, 1] may be the only strategy available to some player in all social welfaremaximizing Nash equilibria.",
                "This is in sharp contrast with the fact that graphical games on trees always possess a Nash equilibrium in which all players strategies are rational numbers.",
                "We then provided approximation algorithms for selecting Nash equilibria with special properties.",
                "While the problem of finding approximate Nash equilibria for various classes of games has received a lot of attention in recent years, most of the existing work aims to find -Nash equilibria that satisfy (or are -close to satisfying) certain properties.",
                "Our approach is different in that we insist on outputting an exact Nash equilibrium, which is -close to satisfying a given requirement.",
                "As argued in the introduction, there are several reasons to prefer a solution that constitutes an exact Nash equilibrium.",
                "Our algorithms are fully polynomial time approximation schemes, i.e., their running time is polynomial in the inverse of the approximation parameter , though they may be pseudopolynomial with respect to the input size.",
                "Under mild restrictions on the inputs, they can be modified to be truly polynomial.",
                "This is the strongest positive result one can derive for a problem whose exact solutions may be hard to represent, as is the case for many of the problems considered here.",
                "While we prove our results for games on a path, they can be generalized to any tree for which the best response policies have compact representations as unions of rectangles.",
                "In the full version of the paper we describe our algorithms for the general case.",
                "Further work in this vein could include extensions to the kinds of guarantees sought for Nash equilibria, such as guaranteeing total payoffs for subsets of players, selecting equilibria in which some players are receiving significantly higher payoffs than their peers, etc.",
                "At the moment however, it is perhaps more important to inves170 tigate whether Nash equilibria of graphical games can be computed in a decentralized manner, in contrast to the algorithms we have introduced here.",
                "It is natural to ask if our results or those of [9] can be generalized to games with three or more actions.",
                "However, it seems that this will make the analysis significantly more difficult.",
                "In particular, note that one can view the bounded payoff games as a very limited special case of games with three actions per player.",
                "Namely, given a two-action game with payoff bounds, consider a game in which each player Vi has a third action that guarantees him a payoff of Ti no matter what everyone else does.",
                "Then checking if there is a Nash equilibrium in which none of the players assigns a nonzero probability to his third action is equivalent to checking if there exists a Nash equilibrium that satisfies the payoff bounds in the original game, and Section 5.1 shows that finding an exact solution to this problem requires new ideas.",
                "Alternatively it may be interesting to look for similar results in the context of correlated equilibria (CE), especially since the best CE may have higher value (total expected payoff) than the best NE.",
                "The ratio between these values is called the mediation value in [1].",
                "It is known from [1] that the mediation value of 2-player, 2-action games with non-negative payoffs is at most 4 3 , and they exhibit a 3-player game for which it is infinite.",
                "Furthermore, a 2-player, 3action example from [1] also has infinite mediation value. 8.",
                "REFERENCES [1] I. Ashlagi, D. Monderer and M. Tenneholtz, On the Value of Correlation, Proceedings of Dagstuhl seminar 05011 (2005) [2] R. Aumann, Subjectivity and Correlation in Randomized Strategies, Journal of Mathematical Economics 1 pp. 67-96 (1974) [3] B. Blum, C. R. Shelton, and D. Koller, A Continuation Method for Nash Equilibria in Structured Games, Proceedings of IJCAI03 [4] X. Chen, X. Deng and S. Teng, Computing Nash Equilibria: Approximation and Smoothed Complexity, Proceedings of FOCS06 [5] X. Chen, X. Deng, Settling the Complexity of 2-Player Nash-Equilibrium, Proceedings of FOCS06 [6] V. Conitzer and T. Sandholm, Complexity Results about Nash Equilibria, Proceedings of IJCAI03 [7] C. Daskalakis, P. W. Goldberg and C. H. Papadimitriou, The Complexity of Computing a Nash Equilibrium, Proceedings of STOC06 [8] R. S. Datta, Universality of Nash Equilibria, Mathematics of Operations Research 28:3, 2003 [9] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Nash Equilibria in Graphical games on Trees Revisited, Proceedings of ACM EC06 [10] E. Elkind, L. A. Goldberg, and P. W. Goldberg, Computing Good Nash Equilibria in Graphical Games, http://arxiv.org/abs/cs.GT/0703133 [11] I. Gilboa and E. Zemel, Nash and Correlated Equilibria: Some Complexity Considerations, Games and Economic Behavior, 1 pp. 80-93 (1989) [12] P. W. Goldberg and C. H. Papadimitriou, Reducibility Among Equilibrium Problems, Proceedings of STOC06 [13] M. Kearns, M. Littman, and S. Singh, Graphical Models for Game Theory, Proceedings of UAI01 [14] M. Littman, M. Kearns, and S. Singh, An Efficient Exact Algorithm for Singly Connected Graphical Games, Proceedings of NIPS01 [15] R. Lipton and E. Markakis, Nash Equilibria via Polynomial Equations, Proceedings of LATIN04 [16] L. Ortiz and M. Kearns, Nash Propagation for Loopy Graphical Games, Proceedings of NIPS03 [17] C.H.",
                "Papadimitriou, Computing Correlated Equilibria in Multi-Player Games, Proceedings of STOC05 [18] C.H.",
                "Papadimitriou and T. Roughgarden, Computing Equilibria in Multi-Player Games, Proceedings of SODA05 [19] D. Vickrey and D. Koller, Multi-agent Algorithms for Solving Graphical Games, Proceedings of AAAI02 171"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Por el contrario, encontrar un equilibrio NASH en un \"gráfico ligado a grado\" general parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) para que se complete para la clase PPAD de la complejidad.[9] extiende este resultado de la dureza al caso en el que el gráfico subyacente ha limitado el ancho de ruta.gráfico limitado"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}