{
    "id": "C-36",
    "original_text": "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W. Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure. Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations. As the number of participants in the network increases, security becomes an increasing concern. This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types. Key refresh allows us to ensure forward and backward security when event brokers join and leave the network. We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions. We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1. INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications. Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them. In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area. However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two. While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations. As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far. Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface. In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems. The architecture provides a mechanism for authorising event clients to publish and subscribe to event types. The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system. The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly. Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers. This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure. We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys. With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter). We effectively move the enforcement of access control from the brokers to the encryption key managers. We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications. Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system. Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers. There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network. First, sharing brokers will create a physically larger network that will provide greater geographic reach. Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance. Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper. It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain. This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area. We have included Detective Smith as a subscriber in this domain. Congestion Charge Service Domain. The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain. The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain. The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper. PITO Domain. The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed. It is the event type owner in this particular scenario. Encryption protects the confidentiality of events should they be transported through unauthorised domains. However encrypting whole events means unauthorised brokers cannot make efficient routing decisions. Our approach is to apply encryption to the individual attributes of events. This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes. In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes. In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted. We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure. Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle. The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case. Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it. However this approach will often not be acceptable in Internet-scale systems. We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content. Publications will be encrypted with their event type specific encryption keys. By controlling access to the encryption keys, we can control access to the event types. The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys. We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2. In Section 3 we present our model for encrypting event content on both the event and the attribute level. Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems. We analytically evaluate the performance of our proposal in Section 5. Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2. BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems. We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service. Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event. The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes. Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers. Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client. In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively. A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client. A broker network can have a static topology (e.g. Siena [3] and Gryphon [14]) or a dynamic topology (e.g. Scribe [4] and Hermes [13]). Our proposed approach will work in both cases. A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology. On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure. Our work is based on the Hermes system. Hermes is a content-based publish/subscribe middleware that includes strong event type support. In other words, each publication is an instance of a particular predefined event type. Publications are type checked at the local broker of each publisher. Our attribute level encryption scheme assumes that events are typed. Hermes uses a structured overlay network as a transport and therefore has a dynamic topology. A Hermes publication consists of an event type identifier and a set of attribute value pairs. The type identifier is the SHA-1 hash of the name of the event type. It is used to route the publication through the event broker network. It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures. A useful side effect of secure event types are their globally unique event type and attribute names. These names can be referred to by access control policies. In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12]. The model treats event types as resources that publishers, subscribers, and event brokers want to access. The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type. For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate. We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates. That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type. We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system. In our case the first level of access control is applied when the participant tries to join the publish/subscribe network. Unauthorised event brokers are not allowed to join the broker network. Similarly unauthorised event clients are not allowed to connect to an event broker. All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer. The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system. Thus we assume that these clients are not a threat. The event client relies completely on the local event broker for access to the broker network. Therefore the event client is unable to access any events without the assistance of the local broker. The brokers on the other hand are able to analyse all events in the system that pass through them. A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption). There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern. Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary. While traffic analysis is an important concern we have not addressed it further in this paper. 3. ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys. Effectively we move the responsibility for access control from the broker network to the key managers. It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client. This allows us to implement the event content encryption within the broker network without involving the clients. By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 . The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used. This is discussed in Sect. 4.2 having to decrypt the same event. Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system. If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system. We can implement encryption either at the event level or the attribute level. Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster. Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty. In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype. Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext. The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network. The globally unique event type identifier specifies the encryption key used to encrypt the event content. Each event type in the system will have its own individual encryption key. Keys are refreshed, as discussed in Sect. 4.2. While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>. Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing. Event brokers that do not have access to the encryption key will be forced to route the event based only on its type. That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links. Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes. This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key. The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers. The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys. Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them. An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >. Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>. The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition. Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication. Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately. In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm. Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much. This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small. As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5. The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level. The event type owner can therefore allow clients to have different levels of access to the same event type. Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network. Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application. The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation. The publisher would then publish an instance of each of these types instead of publishing just a combined event. For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective. This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically. This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions. Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches. For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription. The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted. In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters. This would again reveal information about the event content to the unauthorised broker. In the case of encrypting complete events, we also encrypt the complete subscription filter. The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter. In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions. Each attribute filter is encrypted individually, much as when encrypting a publication. In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand. For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext. With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted. In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other. In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference. If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session. Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree. In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network). Therefore it is probable that the rendezvous node will reside outside the current domain. This situation is illustrated in the event dissemination tree in Fig. 2. So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node. To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events. A broker fills the cache with content that it has decrypted, for example, in order to filter on the content. The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event. The next broker can look the attribute up from the cache instead of having to decrypt it. If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent. Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing. In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains. We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters. EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection. The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data. The EAX mode is compatible with any block cipher. We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far. In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21]. A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext. Effectively CTR mode transforms a block cipher into a stream cipher. The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits). Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally. For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher. With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length. In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag. In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed. The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]). It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream. In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce. The broker is responsible for ensuring that the timestamps increase monotonically. The authentication tag is appended to the produced cipher text to create a two-tuple. With event encryption a single tag is created for the encrypted event. With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags. The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead. We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter. EAX also supports including unencrypted associated data in the tag calculation. The integrity of this data is protected, but it is still readable by everyone. This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing. The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters. We have included the event type identifier as associated data in order to protect its integrity. Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22]. Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX. Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use. The CCM mode is the predecessor of the EAX mode. It was developed in order to provide a free alternative to OCB. The EAX was developed later to address some issues with CCM [18]. Similarly to EAX, CCM is also a two-pass mode. 4. KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier). That identifier is used to determine the encryption key to use when encrypting or decrypting the content. Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key. By controlling access to the encryption key we effectively control access to the encrypted event content. In order to control access to the encryption keys we form a key group of brokers for each individual encryption key. The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group. The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so. Therefore the key group manager must be trusted by the type owner to enforce the access control policy. We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain. In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems. The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node. Authority to access a given event type is granted by the owner of that type issuing a capability to a node. The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access. For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events. The sequence of events required for a broker to successfully join a key group is shown in Fig. 4. Both the client hosting broker and the client must be authorised to make the clients request. That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events. This is because from the perspective of the broker network, the local broker acts as a proxy for the client. We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests. Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them. In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication. In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time. There are a number of scalable key management protocols for secure group communication [15]. We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept. We chose to implement OFT, because of its relatively simplicity and good performance. Our implementation uses the same structured overlay network used by the broker network as a transport. The OFT protocol is based on a binary tree where the participants are at the leaves of the tree. It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires. Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages. Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages. Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised. Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members. In our case key group membership is based on the broker holding a capability that authorises it to join the key group. The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer. In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member. In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided. Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire. These situations are both illustrated in Fig.5. It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future. More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers. When an encryption key is refreshed the new key is tagged with a timestamp. The encryption key to use for a given event is selected based on the events publication timestamp. The old keys will be kept for a reasonable amount of time in order to allow for some clock drift. Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network. It can be configured independently per key group if necessary. 5. EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware. The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system. We ran three performance tests in a discrete event simulator. The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory. We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system. The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption. We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one. The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber. The test measures the combined time it takes to publish and deliver 100,000 events. If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB. In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis). Each attribute is set to a 30 character string. For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput. The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown. The same tests were run with no content encryption, event encryption, and attribute encryption. As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption. The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext. When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance. Event encryption fares better, because of fewer encryption operations. The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does. The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value. A more efficient implementation would provide its own marshalling mechanism. Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness. Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content. This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead. In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials. The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription. The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput. The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements. The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker. In this scenario the middle broker does not need to decrypt nor encrypt the event content. As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25. The attribute values in each case are 30 character strings. Each test is repeated five times, and we use the average of all iterations in the graph. The same test was then repeated with no encryption, event encryption and attribute encryption turned on. The encrypted modes follow each other very closely. Predictably, the plaintext mode performs a little better for all attribute counts. The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test. The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes. We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation. The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption. The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption. In the test we form a broker network of 2000 brokers. We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers. Each subscriber simulates a group of subscribers that all have the same access rights to the published event. Each subscriber group has its own event type in the test. The outcome of this test is shown in Fig. 8. The number of subscriber groups is increased from 1 to 50 (the x-axis). For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group. We count the number of hops each publication makes through the broker network (y-axis). Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes. The subscriber groups used in this test represent disjoint permission sets over such event attributes. The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type. The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups. Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption. With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6. RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20]. The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions. Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems. Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented. Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10]. They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships. As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers. We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber. Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures. Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network. Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events. In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching. We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication. The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper. Finally, Fiege et al. address the related topic of event visibility in [6]. While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7. CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system. Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials. This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue. Attribute level encryption can be implemented in order to enforce fine-grained access control policies. In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them. Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection. In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness. Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments. Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation. David Eyers is supported by EPSRC (GR/S94919). 114 8. REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen. Securing publish/subscribe for multi-domain systems. In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner. Eax: A conventional authenticated-encryption mode. Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf. Design and evaluation of a wide-area event notification service. ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron. SCRIBE: A large-scale and decentralized application-level multicast infrastructure. IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen. The TLS protocol, version 1.0. RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann. Engineering event-based systems with scopes. In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002. Springer-Verlag. [7] T. Iwata and I. A. Iurosawa. OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman. Key establishment in large dynamic groups using one-way function trees. Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST). Advanced Encryption Standard (AES). Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash. Secure distribution of events in content-based publish subscribe systems. In Proc. of the 10th USENIX Security Symposium. USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon. Secure event types in content-based, multi-domain publish/subscribe systems. In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon. A capabilities-based access control architecture for multi-domain publish/subscribe systems. In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006. IEEE. [13] P. R. Pietzuch and J. M. Bacon. Hermes: A distributed event-based middleware architecture. In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002. IEEE. [14] P. R. Pietzuch and S. Bhola. Congestion control in a reliable scalable message-oriented middleware. In M. Endler and D. Schmidt, editors, Proc. of the 4th Int. Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003. Springer. [15] S. Rafaeli and D. Hutchison. A survey of key management for secure group communication. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum. Enabling confidentiality in content-based publish/subscribe infrastructures. In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J. Black, and T. Krovetz. OCB: a block-cipher mode of operation for efficient authenticated encryption. In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner. A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu. Securing publish-subscribe overlay services with eventguard. In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf. Security issues and requirements in internet-scale publish-subscribe systems. In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002. IEEE. [21] D. Whitfield and M. Hellman. Privacy and authentication: An introduction to cryptography. In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson. Counter with CBC-MAC (CCM). RFC 3610, Internet Engineering Task Force, Sept. 2003. 115",
    "original_translation": "Control de acceso aplicado en cifrado en redes dinámicas multidominio Publicar/suscribir redes Lauri I.W. Universidad de Pesonen de Cambridge, Laboratorio de Computator JJ Thomson Avenue, Cambridge, CB3 0FD, Reino Unido {first.lasththt.{first.lasththt.@cl.cam.ac.uk Jean Bacon Universidad de Cambridge, Laboratorio de Computator JJ Thomson Avenue, Cambridge, CB3 0FD, Reino Unido {first.lastththth.@cl.cam.ac.uk Abstract Publish/Sensegre SystemsUna infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplio área. Es probable que los sistemas de publicación/suscripción a gran escala empleen componentes de la red de transporte de eventos propiedad de organizaciones cooperantes pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación cada vez mayor. Este artículo extiende trabajos anteriores para presentar y evaluar una infraestructura segura de publicación de dominios multidominio que admite y aplica el control de acceso de grano fino sobre los atributos individuales de los tipos de eventos. La actualización clave nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los corredores de eventos se unen y abandonan la red. Demostramos que los gastos generales del tiempo y el espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de cifrado y mediante el uso del almacenamiento en caché para disminuir las descifraciones innecesarias. Mostramos que nuestro enfoque tiene una sobrecarga de comunicación general más pequeña que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en las redes de publicación/suscripción. Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: aplicaciones distribuidas de sistemas distribuidos Términos generales Seguridad, rendimiento 1. Introducción Publicar/Suscripción es muy adecuado como un mecanismo de comunicación para construir aplicaciones impulsadas por eventos distribuidas a escala de Internet. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asíncronos entre ellos. En los sistemas de publicación/suscripción verdaderamente a escala de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de corredores interconectados que abarcan un área geográfica (y, por lo tanto, la red). Sin embargo, la publicación/suscripción de sistemas que abarcan un área geográfica amplia probablemente también abarquen múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de los dos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcarse múltiples dominios administrativos requiera abordar las consideraciones de seguridad. Como la seguridad y el control de acceso son casi la antítesis del desacoplamiento, la investigación de publicación/suscripción relativamente pequeña se ha centrado en la seguridad hasta ahora. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallas y autocuración en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al.Proponga una arquitectura de control de acceso basada en la capacidad de múltiples dominios para los sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos para publicar y suscribirse a los tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que el cliente se conecta para acceder al sistema de publicación/ suscripción. El enfoque implementa el control de acceso en el borde de la red de corredores y supone que se puede confiar en todos los corredores para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado es libre de leer y escribir cualquier evento que lo pase a través de él desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno de múltiples dominios en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de corredores al encriptar el contenido del evento, y esa política dicta los controles sobre las claves de cifrado necesarias. Con el contenido de eventos cifrados, solo aquellos corredores que están autorizados para achicear las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Muevemos efectivamente la aplicación del control de acceso de los corredores a los administradores de claves de cifrado. Esperamos que el control de acceso deba aplicarse en un sistema de publicación/suscripción de múltiples dominios cuando múltiples organizaciones forman un sistema de publicación/suscripción compartida pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales sobre el sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de corredores compartido puede conducir a que los eventos se enruten a través de dominios no autorizados a lo largo de sus caminos desde editores hasta suscriptores. Hay dos beneficios particulares para compartir la infraestructura de publicación/ suscripción, los cuales se relacionan con la red de corredores. Primero, compartir corredores creará una red físicamente más grande que proporcionará un mayor alcance geográfico. En segundo lugar, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallas. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo en este documento. Se basa en las fuerzas policiales del Reino Unido, y mostramos tres subdominios particulares: el dominio de la policía metropolitana. Este dominio contiene un conjunto de cámaras de CCTV que publican información sobre los movimientos de vehículos alrededor del área de Londres. Hemos incluido el detective Smith como suscriptor en este dominio. Dominio del servicio de carga de congestión. Los cargos que se recaudan en los vehículos que han pasado por la zona de carga de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de la placa numérica de origen provienen de las cámaras en el dominio de la policía metropolitana. El hecho de que el CCS solo esté autorizado para leer un subconjunto de los datos del evento del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción exigible presentada en este documento. Dominio de Pito. La Organización de Tecnología de la Información de la Policía (PITO) es el centro del que se administran los estándares de datos policiales. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos si se transportan a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar el cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso multidominio funciona en una granularidad más fina: los editores y suscriptores pueden ser acceso autorizado a un subconjunto de los atributos disponibles. En los casos en que se usan eventos no cifrados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de los atributos sensibles. En nuestro escenario de ejemplo, el servicio de carga de congestión solo estaría autorizado para leer el campo de la placa de números de avistamientos de vehículos: el atributo de ubicación no se descifraría. Por lo tanto, preservamos la privacidad de los automovilistas al tiempo que permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un delito y está interesada en avistamientos de un vehículo específico. El detective recibe una orden judicial que la autoriza a suscribirse a los eventos de la placa de números de la placa numérica específica relacionada con su caso. Los sistemas de control de acceso actual de publicación actual imponen la seguridad en el borde de la red de corredores donde los clientes se conectan a ella. Sin embargo, este enfoque a menudo no será aceptable en los sistemas a escala de Internet. Proponemos hacer cumplir la seguridad dentro de la red de corredores, así como en los bordes a los que los clientes del evento se conectan, cifriendo el contenido del evento. Las publicaciones se encriptarán con las claves de cifrado específicas de tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los corredores de eventos enrutar eventos incluso cuando tienen acceso solo a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para encriptar contenido de eventos tanto en el evento como en el nivel de atributo. La Sección 4 discute la gestión de claves de cifrado en sistemas de publicación/suscripción multidominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 analiza el trabajo relacionado para asegurar los sistemas de publicación/suscripción y la Sección 7 proporciona comentarios finales.2. Antecedentes En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestros supuestos sobre los sistemas de publicación/suscripción de múltiples dominios, y describimos cómo estos supuestos influyen en los desarrollos que hemos hecho de nuestro trabajo publicado previamente.2.1 Sistemas de publicación/suscripción descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar eventos publicados a todos los suscriptores cuyos intereses coinciden con el evento dado. El servicio de eventos en un sistema descentralizado de publicación/suscripción se distribuye a través de varios nodos de corredores. Juntos, estos corredores forman una red responsable de mantener las rutas de enrutamiento necesarias de los editores a los suscriptores. Los clientes (editores y suscriptores) se conectan a un corredor local, en el que el cliente confía plenamente. En nuestra discusión, nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o 105 SHB SHB Sub Pub Sub IB PHB IB IB PHB IB IB IB IB IB IB IB IB IBIB SHB SHB IBIB IB IB IB IB IBIB IB IB IB IB IB IB Metropolitan Police Dominio Congestion Cargo Servicio Detective Pito Detective Smith Smith Camera 1 Cámara 2 Oficina de Billing Oficina Subsulta SHB Subscriber Hosting Publisher Publisher Phb Publisher Hosting Boker a Type IB IB IB IB IB IB IB IB IB IBClave intermedio Broker Figura 1: Una vista general de nuestro despliegue de publicación/suscripción de múltiples dominios, un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios confiable por el cliente. Una red de corredores puede tener una topología estática (p. Ej. Siena [3] y Gryphon [14]) o una topología dinámica (p. Escriba [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios confiables y, de esa manera, mejorar la eficiencia del enrutamiento evitando las encriptaciones innecesarias (ver Sect. 3.4), lo que es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se vuelva a equilibrar dinámicamente cuando los corredores se unen o dejan la red de manera controlada o como resultado de una falla de red o nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un fuerte soporte de tipo de evento. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones se verifican tipo en el corredor local de cada editor. Nuestro esquema de cifrado de nivel de atributo supone que se escriben los eventos. Hermes usa una red de superposición estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valor de atributo. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para enrutar la publicación a través de la Red de Broker de eventos. Oculta convenientemente el tipo de publicación, es decir, a los corredores se les impide ver qué eventos fluyen a través de ellos a menos que estén al tanto del nombre e identificador de tipo de evento específico.2.2 Tipos de eventos seguros Pesonen et al.introdujo tipos de eventos seguros en [11], que pueden confirmarse su integridad y autenticidad al verificar sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son su tipo de evento y nombres de atributos de evento globalmente único. Estos nombres pueden ser mencionados por las políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para cifrar el evento o el atributo.2.3 Control de acceso basado en la capacidad Pesonen et al.propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de múltiples dominios en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de administrar el control de acceso para un tipo de evento mediante la emisión de certificados de autorización de infraestructura de clave pública simple (SPKI) que otorgan el acceso del titular al tipo de evento especificado. Por ejemplo, los editores autorizados habrán recibido un certificado de autorización que especifica que el editor, identificado por Public Key, está autorizado para publicar instancias del tipo de evento especificado en el certificado. Aprovechamos el mecanismo de control de acceso mencionado anteriormente en este documento controlando el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor que está autorizado para publicar un tipo de evento dado, también está autorizado 106 para acceder a las claves de cifrado utilizadas para proteger los eventos de ese tipo. Discutimos esto con más detalle en la secta.4. 2.4 Modelo de amenaza El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no pueden unirse a la red de corredores. Del mismo modo, los clientes no autorizados no pueden conectarse a un corredor de eventos. Todas las conexiones en la red de corredores entre los corredores de eventos y los clientes de eventos utilizan la seguridad de la capa de transporte (TLS) [5] para evitar el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción significa que los clientes de eventos deben conectarse a los corredores de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, suponemos que estos clientes no son una amenaza. El cliente del evento se basa completamente en el corredor de eventos local para acceder a la red de corredores. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, pueden analizar todos los eventos en el sistema que los atraviesan. Un corredor puede analizar tanto el tráfico de eventos como el número y los nombres de los atributos que están poblados en un evento (en el caso del cifrado de nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico insertando eventos aleatorios en la corriente del evento para producir un patrón de tráfico uniforme. Del mismo modo, el contenido de atributos se puede acolchar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento.3. Contenido de eventos de cifrado Proponemos hacer cumplir el control de acceso en una red de corredores descentralizada al encriptar el contenido de los eventos publicados y controlar el acceso a las claves de cifrado. Efectivamente, movemos la responsabilidad del control de acceso desde la red de corredores a los administradores clave. Se supone que todos los clientes tienen acceso a un corredor en el que pueden confiar y que está autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado de contenido del evento dentro de la red de corredores sin involucrar a los clientes. Al delegar las tareas de cifrado a los corredores, bajamos el número de nodos necesarios para tener acceso a una clave de cifrado dada1. Los beneficios son tres veces: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay una posibilidad menor de divulgar la clave;ii) Las actualizaciones clave implican menos nodos, lo que significa que el algoritmo de gestión de clave incurrirá en gastos generales de comunicación y procesamiento más pequeños en el sistema de publicación/suscripción;y iii) el corredor local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de cada suscriptor 1, las claves de cifrado se cambian con el tiempo en respuesta a los corredores que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo cualquiera.Se utiliza la clave. Esto se discute en la secta.4.2 Tener que descifrar el mismo evento. Delegar las tareas de cifrado al corredor local es apropiado, porque el cifrado es una característica de middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones deben manejar datos cifrados en la capa de aplicación, son libres de publicar datos cifrados a través del sistema de publicación/suscripción. Podemos implementar el cifrado, ya sea a nivel de evento o en el nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, generalmente es más rápido. El cifrado de atributos permite el control de acceso en el nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, mientras que generalmente incurre en una penalización de rendimiento mayor. En esta sección discutimos el contenido de eventos de encriptación tanto a nivel de evento como en el nivel de atributo;evitando fugas de información a corredores no autorizados cifurando filtros de suscripción;evitando las encriptaciones innecesarias entre los corredores autorizados;Y finalmente, cómo se implementó el cifrado de contenido de eventos en nuestro prototipo. Tenga en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a claves de cifrado, cualquier cifrado realizado por los corredores es necesariamente completamente transparente para todos los clientes.3.1 Cifrado de eventos en cifrado de eventos Todos los atributos de eventos están encriptados como un solo bloque de texto sin formato. El identificador de tipo de evento se deja intacto (es decir, en texto sin formato) para facilitar el enrutamiento de eventos en la red de corredores. El identificador de tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de cifrado individual. Las claves se actualizan, como se discutió en la secta.4.2. Mientras que en tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, texto cifrado y una etiqueta de autenticación de mensajes: <ID de tipo, marca de tiempo, texto de cifrado, etiqueta de autenticación>. Los corredores de eventos que están autorizados para acceder al evento y, por lo tanto, tienen acceso a la clave de cifrado, pueden descifrar el evento e implementar el enrutamiento basado en el contenido. Los corredores de eventos que no tienen acceso a la clave de cifrado se verán obligados a enrutar el evento basado solo en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado de eventos da como resultado un cifrado en el corredor de alojamiento de editores y un descifrado en cada corredor intermedio de filtrado y corredor de alojamiento de suscriptores que pasa el evento, independientemente del número de atributos. Esto da como resultado una ventaja de rendimiento significativa en comparación con el cifrado de atributos.3.2 Cifrado de atributos en el cifrado de atributos Cada valor de atributo en un evento se cifran por separado con su propia clave de cifrado. La clave de cifrado se identifica mediante los atributos del identificador único globalmente único (el identificador de eventos único globalmente define un espacio de nombres dentro del cual el identificador de atributos es un nombre totalmente calificado).107 El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifraran los valores de atributo con las teclas correctas. Los corredores que están autorizados para acceder a algunos de los atributos en un evento pueden implementar el enrutamiento basado en el contenido sobre los atributos que son accesibles para ellos. Un evento cifrado de atributo en tránsito consiste en el identificador de tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <ID de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensajes: <ID de ATTR, CIPHERTEXT, Etiqueta de autenticación>. El identificador de atributos es el hash SHA-1 del nombre del atributo utilizado en la definición de tipo de evento. El uso del identificador de atributos en el evento publicado en lugar del nombre del atributo evita que las partes no autorizadas aprendan qué atributos se incluyen en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente da como resultado gastos generales de procesamiento más grandes, porque cada atributo está encriptado por separado. En el proceso de cifrado, la inicialización del algoritmo de cifrado toma una porción significativa del tiempo de ejecución total del algoritmo. Una vez que se inicializa el algoritmo, aumentar la cantidad de datos a encriptar no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde se debe inicializar un algoritmo de cifrado para cada atributo por separado, y la cantidad de datos encriptados es relativamente pequeño. Como resultado, el cifrado del atributo incurre en gastos generales de procesamiento más grandes en comparación con el cifrado de eventos que puede verse claramente a partir de los resultados de rendimiento en la SECT.5. La ventaja del cifrado de atributos es que el tipo de propietario puede controlar el acceso al tipo de evento en el nivel de atributo. Por lo tanto, el propietario del tipo de evento puede permitir a los clientes tener diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado de nivel de atributo permite el enrutamiento basado en el contenido en los casos en que un corredor intermedio tiene acceso solo a algunos de los atributos del evento, reduciendo así el impacto general de la entrega del evento en la red de corredores. Por lo tanto, la elección entre el cifrado de eventos y atributos es una compensación entre expresividad y desempeño, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos se puede emular mediante la introducción de un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. Luego, el editor publicaría una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría ser difícil de administrar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría una gran cantidad de tipos de eventos y las políticas y suscripciones pueden cambiar dinámicamente. Este enfoque crea una gran cantidad de eventos adicionales que deben enrutarse a través de la red, como se muestra en la secta.5.3.3.3 Cifrar suscripciones para proteger completamente la confidencialidad del contenido del evento también debemos cifrar suscripciones. Garantía de suscripciones cifradas: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido de eventos al monitorear qué suscripciones se coinciden con un evento dado. Por ejemplo, en el primer caso, un corredor no autorizado puede crear suscripciones con filtros elegidos adecuadamente, enrutarlos hacia la raíz del árbol de difusión del evento y monitorear qué eventos se les entregó como coincidir con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento, incluso si el evento aún estaba encriptado. En el segundo caso, incluso si un corredor no autorizado no pudo crear suscripciones en sí, aún podría analizar las suscripciones que fueron enrutadas a través de él, tomar nota de los filtros en esas suscripciones y monitorear qué eventos le entregan los corredores ascendentes comocoincidir con los filtros de suscripción. Esto nuevamente revelaría información sobre el contenido del evento al corredor no autorizado. En el caso de encriptar eventos completos, también cifre el filtro de suscripción completo. El identificador de tipo de evento en la suscripción debe dejarse intacto para permitir a los corredores enrutar eventos en función de su tema cuando no están autorizados para acceder al filtro. En tales casos, el corredor no autorizado debe asumir que los eventos de dicho tipo coinciden con todas las expresiones de filtro. Cada filtro de atributos se encripta individualmente, al igual que cuando cifra una publicación. Además del identificador de tipo de evento, los identificadores de atributos también están intactos para permitir a los corredores autorizados descifrar esos filtros a los que tienen acceso y enrutar el evento en función de su coincidencia de los filtros descifrados.3.4 Evitar las operaciones criptográficas innecesarias que encriptan el contenido del evento no es necesario si el corredor actual y el próximo corredor en el árbol de difusión del evento tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede suponer que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, mientras el próximo corredor sea miembro del mismo dominio, el evento se puede enrutar en texto sin formato. Con el cifrado de atributos, es posible que el corredor vecino esté autorizado a acceder a un subconjunto de los atributos descifrados, en cuyo caso esos atributos a los que el corredor no está autorizado para acceder se transmitirían en cifrado. Para saber cuándo es seguro pasar el evento en forma de texto sin formato, los corredores intercambian credenciales como parte de un apretón de manos cuando se conectan entre sí. En los casos en que los corredores pueden verificar las credenciales de los demás, las agregarán a la tabla de enrutamiento para referencia futura. Si un corredor adquiere nuevas credenciales después del apretón de manos inicial, presentará estas nuevas credenciales a sus vecinos mientras está en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, porque es más barato cifrar el evento una vez en la raíz del árbol de difusión del evento. En Hermes, el nodo Rendezvous para cada tipo de evento se selecciona de manera uniforme al azar (el nombre del tipo de evento se ha asado con el algoritmo de hash SHA-1 para producir el evento tipo 108 PHB IBIB IB SHB RN IB SHB Figura 2: la dirección del nodo se distribuye en todo elRed, por lo tanto, los nodos de cita pueden estar fuera del dominio que posee un tipo de evento IB IB SHBPHBP S cifra filtros de caché descifrados, ofrece descifrados, filtros texto en caché de texto sin formato (la mayoría de los datos) Texto de la leyación en caché (algunos datos) Diferentes dominios CypherText Key Figura 3: caché de almacenamiento en cachéDatos descifrados para aumentar la eficiencia al entregar a pares con identificador de privilegios de seguridad equivalentes, entonces el identificador se utiliza para seleccionar el nodo Rendezvous en la red superpuesta estructurada). Por lo tanto, es probable que el nodo Rendezvous reside fuera del dominio actual. Esta situación se ilustra en el árbol de difusión de eventos en la figura 2. Entonces, incluso con las aplicaciones internas de dominio, donde el evento se puede enrutar desde el editor a todos los suscriptores en forma de texto sin formato, el contenido del evento en la mayoría de los casos debe estar encriptado para que se enrute al nodo de cita. Para evitar descifraciones innecesarias, adjuntamos un caché de contenido de texto sin formato a eventos cifrados. Un corredor llena el caché con contenido que ha descifrado, por ejemplo, para filtrar el contenido. El corredor accede al caché cuando ofrece un evento a un suscriptor local después de ver si el evento coincide con el filtro de suscripción, pero el corredor también envía el caché al siguiente corredor con el evento cifrado. El siguiente corredor puede buscar el atributo del caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, el caché se descartará antes de que se envíe el evento. Obviamente, enviar el caché con el evento cifrado se sumará al costo de comunicación, pero esto se ve compensado por el ahorro en el procesamiento de cifrado/descifrado. En la Fig. 3 vemos dos corrientes de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre corredores en dos dominios diferentes. Mostramos en la secta.5.2 Que la sobrecarga de enviar mensajes cifrados con un caché completo de texto sin formato no se incurra casi sin sobrecarga en comparación con el envío de mensajes de texto sin formato.3.5 Implementación En nuestra implementación hemos utilizado el modo EAX [2] de operación al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para los cifrados de bloque, también llamado cifrado autenticado con el algoritmo de datos asociados (AAD) que proporciona simultáneamente la confidencialidad de los datos y la protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer pase se cifran el texto sin formato, y en el segundo pase se genera un código de autenticación de mensaje (Mac) para los datos cifrados. El modo EAX es compatible con cualquier cifrado de bloque. Decidimos utilizar el algoritmo estándar de cifrado avanzado (AES) [9] en nuestra implementación, debido a su estado estándar y al hecho de que el algoritmo ha pasado por criptoanálisis exhaustivo durante su existencia y hasta ahora no se han encontrado vulnerabilidades graves. Además de proporcionar protección de confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en el modo contraria (modo CTR) [21]. Se utiliza un cifrado de bloque en el modo contador para producir una corriente de bits de teclas que luego se xoren con el texto sin formato. El modo CTR efectivamente transforma un cifrado de bloque en un cifrado de flujo. La ventaja de los cifrados de la corriente es que el texto cifrado es la misma longitud que el texto sin formato, mientras que con los cifrados de bloques el texto sin formato debe acolcharse a un múltiplo de la longitud del bloque de los cifrados de bloque (por ejemplo, el tamaño del bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, porque el relleno podría aumentar el tamaño del atributo desproporcionado. Por ejemplo, un solo número entero podría tener 32 bits de longitud, lo que estaría acolchado a 128 bits si usáramos un cifrado de bloque. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno requerida para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud general del texto sin formato. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número utilizado una vez), una clave de cifrado y el texto sin formato, y devuelve el texto cifrado y una etiqueta de autenticación. En modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve el texto sin formato, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente pasando a través de una construcción OMAC (ver [7]). Es importante que no se reutilicen valores de nonce particulares, de lo contrario, el cifrado de bloque en el modo CTR produciría una secuencia clave idéntica. En nuestra implementación, utilizamos la marca de tiempo de eventos definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) adjunto por la identidad de PHBS (es decir, la clave pública) como el Nonce. El corredor es responsable de garantizar que las marcas de tiempo aumenten monotónicamente. La etiqueta de autenticación se adjunta al texto de cifrado producido para crear una dos tupla. Con el cifrado de eventos se crea una etiqueta única para el evento cifrado. Con el cifrado del atributo 109, cada atributo está encriptado y autenticado por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer una compensación entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación adicional. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero uno podría hacer que la longitud de la etiqueta sea un parámetro definido de editor/suscriptor para cada publicación/suscripción o incluirlo en la definición de tipo de evento para que sea un parámetro específico de tipo. EAX también es compatible con los datos asociados sin cifrar en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero aún es legible por todos. Esta característica podría usarse con el cifrado de eventos en los casos en que parte del contenido del evento es público y, por lo tanto, sería útil para el enrutamiento basado en el contenido. La integridad de los datos aún estaría protegida contra los cambios, pero los corredores no autorizados podrían aplicar filtros. Hemos incluido el identificador de tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AAD incluyen el modo de libro de códigos de compensación (OCB) [17] y el contador con el modo CBC-MAC (CCM) [22]. Por el contrario del modo EAX, el modo OCB requiere solo un pase sobre el texto sin formato, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en el lugar en los EE. UU., Lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado para proporcionar una alternativa gratuita a OCB. El EAX fue desarrollado más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasos.4. La gestión de claves en ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador de atributos). Ese identificador se usa para determinar la clave de cifrado para usar al cifrar o descifrar el contenido. Cada tipo de evento, en cifrado de eventos, y atributo, en cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo clave de corredores para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando es necesario y entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicite unirse al grupo clave está autorizado para hacerlo. Por lo tanto, el gerente de grupo clave debe ser confiado por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el gerente del grupo clave es un tercero de confianza o alternativamente un miembro del dominio de los propietarios de tipos. En [12] Pesonen et al.Propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de múltiples dominios. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo tiene un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento determinado es otorgada por el propietario de ese tipo que emite una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que tipo Gerente de clave del corredor ACS del propietario 1. Autorización de grant para la tecla de matrícula 2. Solicitudes de arranque para unir el grupo de clave de la placa de la matrícula 5. Si el corredor satisface todos los cheques, comenzarán a recibirclaves apropiadas.3. Key Manager puede verificar las credenciales de los corredores en el servicio de control de acceso 4.Key Manager puede verificar que el tipo de propietario permita el acceso Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo clave, el nodo está autorizado para acceder. Por ejemplo, una tuple <np, suscribirse, *> autorizaría al propietario a suscribirse a eventos de programación con acceso a todos los atributos en los eventos publicados. La secuencia de eventos requeridos para que un corredor se una con éxito a un grupo clave se muestra en la figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para hacer que la solicitud del cliente. Es decir, si el cliente solicita una solicitud de suscripción para eventos de programación de números, tanto el cliente como el corredor local deben estar autorizados para suscribirse a los eventos de NumblePlate. Esto se debe a que desde la perspectiva de la red de corredores, el corredor local actúa como un proxy para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utiliza para autorizar las solicitudes de publicación/suscripción. No hacerlo podría conducir a la situación inconsistente en la que un SHB está autorizado para hacer una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la placa de números anterior, el corredor local que contiene la capacidad anterior está autorizado para unir el grupo de clave NumblePlate, así como los grupos clave para todos los atributos en el tipo de evento NumblePlate.4.1 El cifrado de contenido de evento de comunicación de grupo seguro en un sistema descentralizado de publicación/publicación de dominios múltiples puede verse como una subcategoría de comunicación de grupo seguro. En ambos casos, el sistema de gestión clave debe escalar bien con el número de clientes, los clientes pueden distribuirse en grandes áreas geográficas, puede haber altas tasas de membresía en el grupo, y todos los miembros deben sincronizarse entre sí a tiempo paraUse la misma clave de cifrado al mismo tiempo. Hay una serie de protocolos de gestión de claves escalables para la comunicación de grupo seguro [15]. Hemos implementado el protocolo de árbol de funciones unidireccionales (a menudo) [8] como prueba de concepto. Elegimos implementar OFT, debido a su relativamente simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de corredores como transporte. El protocolo de OFT se basa en un árbol binario donde los participantes están en las hojas del árbol. Escala en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, que hemos verificado en nuestras simulaciones.4.2 Clave refrescante tradicionalmente en los esquemas de gestión de la clave del grupo La clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente de 110 sale del grupo o expira un temporizador. Refrescar la llave cuando un nuevo miembro se une proporciona un secreto hacia atrás, es decir, al nuevo miembro no puede acceder a mensajes antiguos. De manera similar, refrescante la clave cuando un miembro existente se hunde proporciona un secreto hacia adelante, es decir, al antiguo miembro no puede acceder a mensajes futuros. Las actualizaciones desencadenadas del temporizador se emiten periódicamente para limitar el daño causado por la clave actual comprometida. A pesar de que los protocolos de gestión clave de última generación son eficientes, actualizar la clave innecesariamente introduce tráfico y procesamiento adicionales entre los miembros clave del grupo. En nuestro caso, la membresía clave del grupo se basa en el corredor que tiene una capacidad que lo autoriza a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que en su forma más simple definen un período de tiempo en que el certificado es válido, y en casos más complejos implican cheques en línea hacia el emisor. Para evitar actualizaciones de la clave innecesaria, el administrador clave analiza las condiciones de validez del certificado del miembro de unión o salida. En el caso de un miembro de unión, si el gerente puede determinar que el certificado era válido en el momento de la actualización de la clave anterior, se puede evitar una nueva actualización clave. Del mismo modo, en lugar de actualizar la tecla inmediatamente cuando un miembro deja el grupo clave, el administrador clave puede almacenar en caché sus credenciales y actualizar la clave solo cuando expiran las credenciales. Estas situaciones se ilustran en la Fig.5. Se puede suponer que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio esté autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad para el futuro previsible. Se implementaría un control de acceso dinámico más de grano fino y de grano dinámico en el borde de la red de corredores entre los clientes y los corredores de alojamiento de clientes. Cuando se actualiza una clave de cifrado, la nueva clave se etiqueta con una marca de tiempo. La clave de cifrado para usar para un evento dado se selecciona en función de la marca de tiempo de publicación de eventos. Las llaves viejas se mantendrán durante una cantidad razonable de tiempo para permitir una deriva de reloj. Configurar este valor es parte del protocolo de gestión de clave, aunque exactamente cuánto tiempo debería durar este tiempo dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar independientemente por grupo clave si es necesario.5. Evaluación Para evaluar el desempeño del cifrado de contenido de eventos, hemos implementado ambos enfoques de cifrado que se ejecutan sobre nuestra implementación de Hermes Publish/ suscripción de middleware. La implementación admite tres modos: contenido de texto sin formato, cifrado de eventos y cifrado de atributos, en un solo sistema de publicación/suscripción. Ejecutamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 3.2GHz con 1 GB de memoria principal. Decidimos ejecutar las pruebas en un simulador de eventos en lugar de un sistema implementado real para poder medir para agregar el tiempo que se necesita para manejar todos los mensajes en el sistema. Las siguientes secciones describen las configuraciones de prueba específicas y los resultados con más detalle.5.1 Gastos generales de extremo a extremo La prueba de gastos generales de extremo a extremo muestra cuánto se vio afectado el rendimiento del mensaje general del simulador por el cifrado de contenido de eventos. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor suscrito al tipo de evento anunciado sin ningún filtros, es decir, cada publicación coincidió con la publicación de suscriptores y, por lo tanto, se entregó al suscriptor. La prueba mide el tiempo combinado que se necesita para publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye cifrar el contenido en el PHB y descifrarlo en el SHB. En la prueba, el número de atributos en el tipo de evento aumenta de 1 a 25 (el eje x). Cada atributo se establece en una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y el tiempo transcurrido se mide para obtener el rendimiento del mensaje. La prueba se repitió cinco veces para cada número de atributos y usamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que no se muestra la desviación estándar. Las mismas pruebas se ejecutaron sin cifrado de contenido, cifrado de eventos y cifrado de atributos. Como se puede ver en la Fig. 6, el cifrado de contenido de eventos introduce una sobrecarga grande en comparación con el no usar cifrado. El rendimiento al usar el cifrado de atributos con un tipo de evento con un atributo es el 46% del rendimiento alcanzado cuando los eventos se envían en texto sin formato. Cuando el número de atributos aumenta también la brecha de rendimiento: con diez atributos, el rendimiento con el cifrado de atributos ha disminuido al 11.7% del rendimiento del texto sin formato. El cifrado de eventos le va mejor, debido a menos operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta el rendimiento tanto como el número de operaciones de cifrado individuales. La diferencia en el rendimiento con el cifrado de eventos y el cifrado de atributos con solo un atributo es causada por el mecanismo de serialización del objeto Java: en el caso de cifrado de eventos, toda la estructura de atributos se está serializada, lo que da como resultado más objetos que serializar un solo valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de ensarceado. Tenga en cuenta que la implementación de EAX que utilizamos ejecuta el Nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no se requiere que el Nonce se mantenga en secreto (solo único), hay una posible compensación de tiempo/espacio que aún no hemos investigado al adjuntar atributos adicionales de Nonce que ya han tenido esta construcción OMAC aplicada a ellos.5.2 Eventos internos de dominio que explicamos en la Secta.3.4 El descifrado y el cifrado del contenido del evento se pueden evitar si ambos corredores están autorizados para acceder al contenido del evento. Esta prueba fue diseñada para mostrar que el uso del mecanismo de contenido de eventos cifrado entre dos corredores autorizados incurre solo en una pequeña sobrecarga de rendimiento. En esta prueba, nuevamente formamos una red de corredores con dos corredores.111 CLAVE REFRESH SHOLET BROKER 1 Unirse y dejar al grupo clave Broker 2 Unirse y dejar el grupo clave REFRESA CLAVE REAL REFRESH TIEMPO Un día Las credenciales de grupo clave del grupo son válidos Tiempo de unión real de suministro real de licencia Real Un día Figura 5: Cómo se actualiza la claveEl cronograma se ve afectado por los corredores que unen y dejan grupos clave 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 25 Mensajes Número de Atributos No Cifrado Cifrado Cifrado de contenido completo Cifrado 6: Rendimiento de eventos en un simulador Ambos corredores están configurados conlas mismas credenciales. El editor se adjunta a uno de los corredores y al suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtros en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para obtener el rendimiento del mensaje de los sistemas. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de cifrado no está incluido en las mediciones. El objetivo es modelar un entorno en el que un corredor haya recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el corredor medio no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió ya que el número de atributos en el evento publicado aumentó de 1 a 25. Los valores de atributo en cada caso son 30 cadenas de caracteres. Cada prueba se repite cinco veces y usamos el promedio de todas las iteraciones en el gráfico. Luego se repitió la misma prueba sin cifrado, cifrado de eventos y cifrado de atributos activados. Los modos encriptados se siguen muy de cerca. Como era de esperar, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente por los eventos encriptados que tienen mayor tamaño, ya que incluyen tanto el texto sin formato como el contenido encriptado en esta prueba. La diferencia en el rendimiento es 3.7% con un atributo y 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede explicarse por el recolector de basura Java que interfiere con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalden esta teoría.112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 15 20 25 Mensajes Número de Atributos de Atributos No Cifrado Cifrado de contenido completo Cifrado de contenido completo Figura 7: Desputamiento de eventos internos de dominio 5.3 Comunicación gastos exagerados a través de la definición de múltiples tipos de eventos, TITO TITes posible emular la expresividad del cifrado de atributos utilizando solo el cifrado de contenido de eventos. La última prueba que realizamos fue mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la figura 8. El número de grupos de suscriptores aumenta de 1 a 50 (el eje x). Para cada grupo de suscriptores de N, el editor publica un evento para representar el uso del cifrado de atributos y los eventos de N que representan los eventos para cada grupo de suscriptores. Cuentamos el número de lúpulos que cada publicación realiza a través de la red de corredores (eje Y). Tenga en cuenta que la figura 8 muestra cargas de trabajo más allá de lo que esperaríamos en el uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permiso disjunto sobre dichos atributos de eventos. El número de estos conjuntos se puede determinar a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado de atributos funciona mejor que el cifrado de eventos incluso para pequeños números de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso con los eventos de la placa de números), el recuento de lúpulo aumenta de 7.2 Hops para el cifrado de atributos a 16.6 Hops para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, un orden de diferencia de magnitud.6. Trabajo relacionado Wang et al.han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El documento es una descripción completa de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, trata de llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al.En [1] examine el uso del control de acceso basado en roles en los sistemas de publicación/suscripción de múltiples dominios, distribuidos. Su trabajo es complementario a este documento: el RBAC distribuido es un formalismo de política potencial que podría usar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad del evento en el último enlace entre el suscriptor y el SHB en [10]. Afirman correctamente que un enfoque de comunicación grupal seguro es inviable en un entorno como la publicación/suscripción que tiene membresías de grupos altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché y la agrupación de suscriptores clave para minimizar el número de encriptaciones requeridas al entregar una publicación de un SHB a un conjunto de suscriptores a juego. Suponemos en nuestro trabajo que el SHB es lo suficientemente potente como para Man113 1 10 100 1000 10000 0 5 15 15 20 25 30 35 40 45 Número de edad de los grupos de suscripción de suscripción Cifrado de contenido completo Cifrado de contenido completo 8: HOP cuenta al emular atributos de cifrado de atributo de atributoA TLS aseguró la conexión para cada suscriptor local. Ambos Srivatsa et al.[19] y Raiciu et al.[16] Mecanismos actuales para proteger la confidencialidad de los mensajes en infraestructuras de publicación/suscripción descentralizadas. En comparación con nuestro trabajo, ambos documentos tienen como objetivo proporcionar los medios para proteger la integridad y la confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red de corredores. Raiciu et al.Suponga en su trabajo que ninguno de los corredores de la red es confiable y, por lo tanto, todos los eventos están encriptados de editor a suscriptor y que toda la coincidencia se basa en eventos cifrados. Por el contrario, suponemos que algunos de los corredores en el camino de una publicación se confía en acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También suponemos que siempre se confía en la publicación de los corredores de alojamiento de suscriptores para acceder a la publicación. Las contribuciones de Srivatsa et al.y Raiciu et al.son complementarios a las contribuciones en este documento. Finalmente, Fiege et al.abordar el tema relacionado de la visibilidad del evento en [6]. Si bien el trabajo se concentró en usar ámbitos como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad del evento resuena con el control de acceso hasta cierto punto.7. Conclusiones El cifrado de contenido de eventos se puede utilizar para hacer cumplir una política de control de acceso, mientras que los eventos están en tránsito en la red de corredores de un sistema de publicación/suscripción de múltiples dominios. El cifrado causa una sobrecarga, pero i) puede no haber una alternativa cuando se requiere el control de acceso, y ii) la penalización de rendimiento puede disminuir con las optimizaciones de implementación, como el paso del contenido de texto sin formato en caché junto con el contenido encriptado entre corredores con credenciales de seguridad idénticas. Esto es particularmente apropiado si las conexiones de corredor a corredor están aseguradas de forma predeterminada, por lo que el cableado no es un problema. El cifrado de nivel de atributo se puede implementar para hacer cumplir las políticas de control de acceso de grano fino. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los corredores parcialmente autorizados implementar el enrutamiento basado en el contenido en función de los atributos a los que se les puede acceder. Nuestros experimentos muestran que i) al almacenar en caché el texto sin formato y el contenido de texto cifrado Cuando sea posible, podemos ofrecer un rendimiento comparable a los eventos de texto sin formato, y ii) que atribuye el cifrado dentro de un evento incurre mucho menos a la sobrecarga que la definición de tipos de eventos separados para los atributos que necesitan diferentesNiveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer una compensación entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo de EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919).114 8. Referencias [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurar/suscribirse para sistemas de dominios múltiples. En G. Alonso, editor, middleware, volumen 3790 de las notas de la conferencia en informática, páginas 1-20. Springer, 2005. [2] M. Billare, P. Rogaway y D. Wagner. EAX: un modo convencional de cifrado autenticado. Cryptology Eprint Archive, Informe 2003/069, 2003. http://eprint.iac.org/.[3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de área amplia. Transacciones ACM en sistemas informáticos, 19 (3): 332-383, agosto de 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. Escribo: una infraestructura de multidifusión de multidifusión a gran escala y descentralizada de nivel de aplicación. IEEE Journal en áreas seleccionadas en Comunicaciones (JSAC), 20 (8): 1489-1499, octubre de 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Internet Engineering Task Force, enero de 1999. [6] L. Fiege, M. Mezini, G. M Uhl y A. P. Buchmann. Ingeniería de sistemas basados en eventos con ámbitos. En Ecoop 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag.[7] T. Iwata y yo. A. Iurosawa. OMAC: CBC Mac, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento clave en grandes grupos dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, TIS Labs en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Normas y Tecnología (NIST). Estándar de cifrado avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de suscripción de publicación basados en contenido. En Proc.del décimo Simposio de Seguridad Usenix. Usenix, agosto de 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basada en contenido de dominios múltiples. En SEM 05: Actas del 5º Taller Internacional sobre Ingeniería de Software y Middleware, páginas 98-105, Nueva York, NY, EE. UU., Septiembre de 2005. ACM Press.[12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción de dominios múltiples. En Actas del Simposio sobre Aplicaciones e Internet (Saint 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE.[13] P. R. Pietzuch y J. M. Bacon. Hermes: una arquitectura de middleware basada en eventos distribuidos. En Proc.del primer taller internacional sobre sistemas distribuidos basados en eventos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE.[14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware confiable orientado a mensajes escalables. En M. Endler y D. Schmidt, editores, Proc.del 4to int. Conf.en el middleware (middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Saltador.[15] S. Rafaeli y D. Hutchison. Una encuesta de gestión clave para la comunicación de grupo seguro. ACM Computing Surveys, 35 (3): 309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en las infraestructuras de publicación/suscripción basada en contenido. En Securecomm 06: Actas de la segunda conferencia internacional IEEE/Creatnet sobre seguridad y privacidad en redes de comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Black y T. Krovetz. OCB: un modo de operación de bloque de bloque para un cifrado autenticado eficiente. En la Conferencia ACM sobre seguridad informática y comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando los servicios de superposición de subscribo de publicación con EventGuard. En CCS 05: Actas de la 12ª Conferencia de ACM sobre seguridad informática y comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press.[20] C. Wang, A. Carzaniga, D. Evans y A. L. Wolf. Problemas y requisitos de seguridad en los sistemas de subscribe a escala de Internet. En Proc.de la 35ª Conferencia Anual de la Conferencia Internacional de Hawái sobre Ciencias del Sistema (HICSS02), Big Island, HI, EE. UU., 2002. IEEE.[21] D. Whitfield y M. Hellman. Privacidad y autenticación: una introducción a la criptografía. En Actas del IEEE, Volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contador con CBC-MAC (CCM). RFC 3610, Fuerza de Tarea de Ingeniería de Internet, septiembre de 2003. 115",
    "original_sentences": [
        "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
        "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
        "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
        "As the number of participants in the network increases, security becomes an increasing concern.",
        "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
        "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
        "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
        "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
        "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
        "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
        "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
        "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
        "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
        "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
        "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
        "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
        "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
        "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
        "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
        "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
        "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
        "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
        "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
        "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
        "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
        "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
        "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
        "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
        "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
        "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
        "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
        "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
        "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
        "We have included Detective Smith as a subscriber in this domain.",
        "Congestion Charge Service Domain.",
        "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
        "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
        "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
        "PITO Domain.",
        "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
        "It is the event type owner in this particular scenario.",
        "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
        "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
        "Our approach is to apply encryption to the individual attributes of events.",
        "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
        "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
        "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
        "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
        "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
        "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
        "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
        "However this approach will often not be acceptable in Internet-scale systems.",
        "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
        "Publications will be encrypted with their event type specific encryption keys.",
        "By controlling access to the encryption keys, we can control access to the event types.",
        "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
        "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
        "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
        "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
        "We analytically evaluate the performance of our proposal in Section 5.",
        "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
        "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
        "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
        "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
        "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
        "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
        "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
        "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
        "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
        "A broker network can have a static topology (e.g.",
        "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
        "Scribe [4] and Hermes [13]).",
        "Our proposed approach will work in both cases.",
        "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
        "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
        "Our work is based on the Hermes system.",
        "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
        "In other words, each publication is an instance of a particular predefined event type.",
        "Publications are type checked at the local broker of each publisher.",
        "Our attribute level encryption scheme assumes that events are typed.",
        "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
        "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
        "The type identifier is the SHA-1 hash of the name of the event type.",
        "It is used to route the publication through the event broker network.",
        "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
        "A useful side effect of secure event types are their globally unique event type and attribute names.",
        "These names can be referred to by access control policies.",
        "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
        "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
        "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
        "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
        "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
        "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
        "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
        "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
        "Unauthorised event brokers are not allowed to join the broker network.",
        "Similarly unauthorised event clients are not allowed to connect to an event broker.",
        "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
        "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
        "Thus we assume that these clients are not a threat.",
        "The event client relies completely on the local event broker for access to the broker network.",
        "Therefore the event client is unable to access any events without the assistance of the local broker.",
        "The brokers on the other hand are able to analyse all events in the system that pass through them.",
        "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
        "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
        "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
        "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
        "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
        "Effectively we move the responsibility for access control from the broker network to the key managers.",
        "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
        "This allows us to implement the event content encryption within the broker network without involving the clients.",
        "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
        "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
        "This is discussed in Sect. 4.2 having to decrypt the same event.",
        "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
        "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
        "We can implement encryption either at the event level or the attribute level.",
        "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
        "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
        "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
        "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
        "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
        "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
        "Each event type in the system will have its own individual encryption key.",
        "Keys are refreshed, as discussed in Sect. 4.2.",
        "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
        "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
        "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
        "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
        "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
        "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
        "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
        "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
        "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
        "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
        "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
        "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
        "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
        "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
        "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
        "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
        "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
        "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
        "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
        "The event type owner can therefore allow clients to have different levels of access to the same event type.",
        "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
        "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
        "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
        "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
        "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
        "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
        "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
        "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
        "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
        "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
        "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
        "This would again reveal information about the event content to the unauthorised broker.",
        "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
        "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
        "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
        "Each attribute filter is encrypted individually, much as when encrypting a publication.",
        "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
        "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
        "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
        "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
        "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
        "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
        "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
        "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
        "Therefore it is probable that the rendezvous node will reside outside the current domain.",
        "This situation is illustrated in the event dissemination tree in Fig. 2.",
        "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
        "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
        "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
        "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
        "The next broker can look the attribute up from the cache instead of having to decrypt it.",
        "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
        "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
        "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
        "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
        "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
        "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
        "The EAX mode is compatible with any block cipher.",
        "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
        "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
        "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
        "Effectively CTR mode transforms a block cipher into a stream cipher.",
        "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
        "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
        "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
        "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
        "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
        "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
        "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
        "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
        "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
        "The broker is responsible for ensuring that the timestamps increase monotonically.",
        "The authentication tag is appended to the produced cipher text to create a two-tuple.",
        "With event encryption a single tag is created for the encrypted event.",
        "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
        "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
        "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
        "EAX also supports including unencrypted associated data in the tag calculation.",
        "The integrity of this data is protected, but it is still readable by everyone.",
        "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
        "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
        "We have included the event type identifier as associated data in order to protect its integrity.",
        "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
        "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
        "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
        "The CCM mode is the predecessor of the EAX mode.",
        "It was developed in order to provide a free alternative to OCB.",
        "The EAX was developed later to address some issues with CCM [18].",
        "Similarly to EAX, CCM is also a two-pass mode. 4.",
        "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
        "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
        "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
        "By controlling access to the encryption key we effectively control access to the encrypted event content.",
        "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
        "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
        "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
        "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
        "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
        "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
        "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
        "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
        "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
        "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
        "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
        "Both the client hosting broker and the client must be authorised to make the clients request.",
        "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
        "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
        "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
        "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
        "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
        "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
        "There are a number of scalable key management protocols for secure group communication [15].",
        "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
        "We chose to implement OFT, because of its relatively simplicity and good performance.",
        "Our implementation uses the same structured overlay network used by the broker network as a transport.",
        "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
        "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
        "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
        "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
        "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
        "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
        "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
        "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
        "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
        "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
        "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
        "These situations are both illustrated in Fig.5.",
        "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
        "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
        "When an encryption key is refreshed the new key is tagged with a timestamp.",
        "The encryption key to use for a given event is selected based on the events publication timestamp.",
        "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
        "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
        "It can be configured independently per key group if necessary. 5.",
        "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
        "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
        "We ran three performance tests in a discrete event simulator.",
        "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
        "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
        "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
        "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
        "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
        "The test measures the combined time it takes to publish and deliver 100,000 events.",
        "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
        "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
        "Each attribute is set to a 30 character string.",
        "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
        "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
        "The same tests were run with no content encryption, event encryption, and attribute encryption.",
        "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
        "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
        "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
        "Event encryption fares better, because of fewer encryption operations.",
        "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
        "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
        "A more efficient implementation would provide its own marshalling mechanism.",
        "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
        "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
        "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
        "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
        "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
        "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
        "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
        "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
        "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
        "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
        "The attribute values in each case are 30 character strings.",
        "Each test is repeated five times, and we use the average of all iterations in the graph.",
        "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
        "The encrypted modes follow each other very closely.",
        "Predictably, the plaintext mode performs a little better for all attribute counts.",
        "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
        "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
        "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
        "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
        "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
        "In the test we form a broker network of 2000 brokers.",
        "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
        "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
        "Each subscriber group has its own event type in the test.",
        "The outcome of this test is shown in Fig. 8.",
        "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
        "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
        "We count the number of hops each publication makes through the broker network (y-axis).",
        "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
        "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
        "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
        "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
        "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
        "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
        "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
        "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
        "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
        "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
        "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
        "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
        "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
        "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
        "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
        "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
        "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
        "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
        "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
        "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
        "Finally, Fiege et al. address the related topic of event visibility in [6].",
        "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
        "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
        "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
        "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
        "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
        "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
        "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
        "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
        "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
        "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
        "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
        "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
        "Securing publish/subscribe for multi-domain systems.",
        "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
        "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
        "Eax: A conventional authenticated-encryption mode.",
        "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
        "Design and evaluation of a wide-area event notification service.",
        "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
        "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
        "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
        "The TLS protocol, version 1.0.",
        "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
        "Engineering event-based systems with scopes.",
        "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
        "Springer-Verlag. [7] T. Iwata and I.",
        "A. Iurosawa.",
        "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
        "Key establishment in large dynamic groups using one-way function trees.",
        "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
        "Advanced Encryption Standard (AES).",
        "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
        "Secure distribution of events in content-based publish subscribe systems.",
        "In Proc. of the 10th USENIX Security Symposium.",
        "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
        "Secure event types in content-based, multi-domain publish/subscribe systems.",
        "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
        "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
        "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
        "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
        "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
        "Hermes: A distributed event-based middleware architecture.",
        "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
        "IEEE. [14] P. R. Pietzuch and S. Bhola.",
        "Congestion control in a reliable scalable message-oriented middleware.",
        "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
        "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
        "Springer. [15] S. Rafaeli and D. Hutchison.",
        "A survey of key management for secure group communication.",
        "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
        "Enabling confidentiality in content-based publish/subscribe infrastructures.",
        "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
        "Black, and T. Krovetz.",
        "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
        "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
        "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
        "Securing publish-subscribe overlay services with eventguard.",
        "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
        "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
        "Security issues and requirements in internet-scale publish-subscribe systems.",
        "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
        "IEEE. [21] D. Whitfield and M. Hellman.",
        "Privacy and authentication: An introduction to cryptography.",
        "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
        "Counter with CBC-MAC (CCM).",
        "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
    ],
    "error_count": 0,
    "keys": {
        "secure publish/subscribe system": {
            "translated_key": "",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distributed access control": {
            "translated_key": "",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "multiple administrative domain": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span <br>multiple administrative domain</br>s, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning <br>multiple administrative domain</br>s is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Sin embargo, la publicación/suscripción de sistemas que abarcan un área geográfica amplia probablemente también abarquen los \"dominios administrativos múltiples\", ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de los dos.dominio administrativo múltiple",
                "Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que el \"dominio administrativo múltiple\" s requiera que aborden las consideraciones de seguridad.dominio administrativo múltiple"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "attribute encryption": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "<br>attribute encryption</br> enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to <br>attribute encryption</br>. 3.2 <br>attribute encryption</br> In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, <br>attribute encryption</br> usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in <br>attribute encryption</br>, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result <br>attribute encryption</br> incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of <br>attribute encryption</br> is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and <br>attribute encryption</br> is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by <br>attribute encryption</br> can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With <br>attribute encryption</br> it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in <br>attribute encryption</br>, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in <br>attribute encryption</br>, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and <br>attribute encryption</br>, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and <br>attribute encryption</br>.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using <br>attribute encryption</br> with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with <br>attribute encryption</br> has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and <br>attribute encryption</br> with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption <br>attribute encryption</br> Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and <br>attribute encryption</br> turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption <br>attribute encryption</br> Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of <br>attribute encryption</br> using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real <br>attribute encryption</br>.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of <br>attribute encryption</br> and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that <br>attribute encryption</br> performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for <br>attribute encryption</br> to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups <br>attribute encryption</br> Whole-content Encryption Figure 8: Hop Counts When Emulating <br>attribute encryption</br> age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, <br>attribute encryption</br> enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that <br>attribute encryption</br> within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El \"cifrado de atributos\" permite el control de acceso en el nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, mientras que generalmente incurre en una penalización de rendimiento mayor.cifrado de atributos",
                "Esto da como resultado una ventaja de rendimiento significativa en comparación con el \"cifrado de atributos\".3.2 \"Cifrado de atributos\" en el cifrado de atributos Cada valor de atributo en un evento se encripta por separado con su propia clave de cifrado.cifrado de atributos",
                "En comparación con el cifrado de eventos, el \"cifrado de atributos\" generalmente resulta en mayores sobrecargas de procesamiento, porque cada atributo está encriptado por separado.cifrado de atributos",
                "Esta disparidad se enfatiza en el \"cifrado de atributos\", donde un algoritmo de cifrado debe inicializarse para cada atributo por separado, y la cantidad de datos encriptados es relativamente pequeño.cifrado de atributos",
                "Como resultado, el \"cifrado de atributos\" incurre en gastos generales de procesamiento más grandes en comparación con el cifrado de eventos que puede verse claramente a partir de los resultados de rendimiento en la sección.5. Cifrado de atributos",
                "La ventaja del \"cifrado de atributos\" es que el tipo de propietario puede controlar el acceso al tipo de evento en el nivel de atributo.cifrado de atributos",
                "Por lo tanto, la elección entre el evento y el \"cifrado de atributos\" es una compensación entre expresividad y desempeño, y depende de los requisitos de la aplicación distribuida.cifrado de atributos",
                "La expresividad proporcionada por el \"cifrado de atributos\" se puede emular mediante la introducción de un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización.cifrado de atributos",
                "Con el \"cifrado de atributos\" es posible que el corredor vecino esté autorizado a acceder a un subconjunto de los atributos descifrados, en cuyo caso esos atributos a los que el corredor no está autorizado para acceder se transmitirían en cifrado.cifrado de atributos",
                "Evitar el relleno es muy importante en el \"cifrado de atributos\", porque el relleno podría aumentar el tamaño del atributo desproporcionado.cifrado de atributos",
                "Cada tipo de evento, en cifrado de eventos, y atributo, en \"cifrado de atributos\", tiene su propia clave de cifrado individual.cifrado de atributos",
                "La implementación admite tres modos: contenido de texto sin formato, cifrado de eventos y \"cifrado de atributos\", en un solo sistema de publicación/suscripción.cifrado de atributos",
                "Las mismas pruebas se ejecutaron sin cifrado de contenido, cifrado de eventos y \"cifrado de atributos\".cifrado de atributos",
                "El rendimiento al usar \"cifrado de atributos\" con un tipo de evento con un atributo es el 46% del rendimiento alcanzado cuando los eventos se envían en texto sin formato.cifrado de atributos",
                "Cuando el número de atributos aumenta también la brecha de rendimiento aumenta: con diez atributos, el rendimiento con el \"cifrado de atributos\" ha disminuido al 11.7% del rendimiento del texto de la ley.cifrado de atributos",
                "La diferencia en el rendimiento con el cifrado de eventos y el \"cifrado de atributos\" con solo un atributo es causada por el mecanismo de serialización del objeto Java: en el caso de cifrado de eventos, toda la estructura de atributos se está serializada, lo que da como resultado más objetos que serializar un valor de atributo único.cifrado de atributos",
                "En esta prueba, nuevamente formamos una red de corredores con dos corredores.111 CLAVE REFRESH SHOLET BROKER 1 Unirse y dejar al grupo clave Broker 2 Unirse y dejar el grupo clave REFRESA CLAVE REAL REFRESH TIEMPO Un día Las credenciales de grupo clave del grupo son válidos Tiempo de unión real de suministro real de licencia Real Un día Figura 5: Cómo se actualiza la claveEl cronograma se ve afectado por los corredores que unen y dejan grupos clave 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 25 Mensajes Número de Atributos No Cifrado \"Cifrado de atributo\" Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores sonconfigurado con las mismas credenciales.cifrado de atributos",
                "Luego se repitió la misma prueba sin cifrado, cifrado de eventos y \"cifrado de atributos\".cifrado de atributos",
                "El hecho de que los tres gráficos muestren las mismas irregularidades respalden esta teoría.112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 15 20 25 Mensajes Número de Atributos de Atributos No Cifrado \"Cifrado de atributo\" Cifrado de contenido completo Figura 7: Desputamiento de eventos internos de dominio 5.3 Comunicación sobre la cabeza a través de la definición de múltiples tipos de eventos Tipos de eventos \", es posible emular la expresividad del \"cifrado de atributos\" utilizando solo el cifrado de contenido de eventos.cifrado de atributos",
                "La última prueba que realizamos fue mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de \"cifrado de atributos\" real.cifrado de atributos",
                "Para cada grupo de suscriptores de N, el editor publica un evento para representar el uso de \"cifrado de atributos\" y n eventos que representan los eventos para cada grupo de suscriptores.cifrado de atributos",
                "Los gráficos indican que el \"cifrado de atributos\" funciona mejor que el cifrado de eventos incluso para pequeños números de grupos de suscriptores.cifrado de atributos",
                "De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso con los eventos de la placa de números), el recuento de LOP aumenta de 7.2 Hops para \"cifrado de atributos\" a 16.6 lúpulos para el cifrado de eventos.cifrado de atributos",
                "Suponemos en nuestro trabajo que el SHB es lo suficientemente potente como para Man113 1 10 100 1000 10000 0 5 10 15 20 25 30 30 35 40 45 50 Número de ThopsIntotal de grupos de suscripción \"Cifrado de atributo\" Cifrado de contenido completo Figura 8: Hop cuenta al emular \"Cifrado de atributo \"Age A TLS Conexión asegurada para cada suscriptor local.cifrado de atributos",
                "Además de proporcionar control de acceso a nivel de atributo, \"Cifrado de atributos\" permite a los corredores parcialmente autorizados implementar el enrutamiento basado en el contenido en función de los atributos que se les accesan.cifrado de atributos",
                "Nuestros experimentos muestran que i) al almacenar en caché el texto sin formato y el contenido de texto cifrado cuando sea posible, podemos ofrecer un rendimiento comparable a los eventos de texto sin formato, y ii) que \"atribuye el cifrado\" dentro de un evento incurre mucho menos a la sobrecarga que la definición de tipos de eventos separados para los atributos queNecesita diferentes niveles de protección.cifrado de atributos"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "multi-domain": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic <br>multi-domain</br> Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure <br>multi-domain</br> publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a <br>multi-domain</br>, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a <br>multi-domain</br> environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a <br>multi-domain</br> publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the <br>multi-domain</br> publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our <br>multi-domain</br> access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in <br>multi-domain</br> publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about <br>multi-domain</br> publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our <br>multi-domain</br> publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for <br>multi-domain</br> publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for <br>multi-domain</br> publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised <br>multi-domain</br> publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in <br>multi-domain</br>, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a <br>multi-domain</br> publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for <br>multi-domain</br> systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, <br>multi-domain</br> publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for <br>multi-domain</br> publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Control de acceso aplicado en cifrado en redes dinámicas \"multidominio\" Publicar/suscribir redes LAURI I.W. Multi-dominio",
                "Este documento extiende trabajos anteriores para presentar y evaluar una infraestructura segura de \"dominio multidominio\" que admite y aplica el control de acceso de grano fino sobre los atributos individuales de los tipos de eventos.multicominio",
                "En [12] Pesonen et al.Proponga una arquitectura de control de acceso basada en la capacidad de \"dominio múltiple\" para sistemas de publicación/suscripción.multicominio",
                "Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno de \"dominio múltiple\" en el que las organizaciones comparten una infraestructura común.multicominio",
                "Esperamos que el control de acceso deba aplicarse en un sistema de publicación/suscripción de \"dominio múltiple\" cuando múltiples organizaciones forman un sistema de publicación/suscripción compartida pero ejecutan múltiples aplicaciones independientes.multicominio",
                "La Figura 1 muestra la red de publicación/suscripción de \"dominio múltiple\" que utilizamos como ejemplo en este documento.multicominio",
                "De esta manera, nuestra política de control de acceso de \"dominio múltiple\" funciona con una granularidad más fina: los editores y suscriptores pueden ser acceso autorizado a un subconjunto de los atributos disponibles.multicominio",
                "La Sección 4 discute la gestión de claves de cifrado en sistemas de publicación/suscripción de \"dominio múltiple\".multicominio",
                "Indicamos nuestros supuestos sobre los sistemas de publicación/suscripción de \"dominio múltiple\", y describimos cómo estos supuestos influyen en los desarrollos que hemos hecho de nuestro trabajo publicado previamente.2.1 Sistemas de publicación/suscripción descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos.multicominio",
                "En nuestra discusión, nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o 105 SHB SHB Sub Pub Sub IB PHB IB IB PHB IB IB IB IB IB IB IB IB IBIB SHB SHB IBIB IB IB IB IB IBIB IB IB IB IB IB IB Metropolitan Police Dominio Congestion Cargo Servicio Detective Pito Detective Smith Smith Camera 1 Cámara 2 Oficina de Billing Oficina Subsulta SHB Subscriber Hosting Publisher Publisher Phb Publisher Hosting Boker a Type IB IB IB IB IB IB IB IB IB IBClave intermedio Broker Figura 1: Una vista general de nuestro \"dominio multidominio\" publicar/suscribir el despliegue de un suscriptor, respectivamente.multicominio",
                "En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para cifrar el evento o el atributo.2.3 Control de acceso basado en la capacidad Pesonen et al.propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de \"dominio múltiple\" en [12].multicominio",
                "En [12] Pesonen et al.propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de \"dominio múltiple\".multicominio",
                "En el ejemplo de la placa de números anterior, el corredor local que contiene la capacidad anterior está autorizado para unir el grupo de clave NumblePlate, así como los grupos clave para todos los atributos en el tipo de evento NumblePlate.4.1 Cifrado de contenido de evento de comunicación de grupo seguro en un sistema de publicación/suscripción descentralizado de \"dominio múltiple\" puede verse como una subcategoría de comunicación de grupo seguro.multicominio",
                "Bacon et al.En [1] examine el uso del control de acceso basado en roles en los sistemas de publicación/publicación distribuida de \"dominio múltiple\".multicominio",
                "Conclusiones El cifrado de contenido de eventos se puede utilizar para hacer cumplir una política de control de acceso, mientras que los eventos están en tránsito en la red de corredores de un sistema de publicación/suscripción de \"dominio múltiple\".multicominio",
                "Asegurando la publicación/suscripción para los sistemas de \"dominio múltiple\".multicominio",
                "Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y suscripción de \"dominio múltiple\".multicominio",
                "Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción de \"dominio múltiple\".multicominio"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "overall communication overhead": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller <br>overall communication overhead</br> than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Mostramos que nuestro enfoque tiene una \"sobrecarga de comunicación general\" más pequeña que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en las redes de publicación/suscripción.sobrecarga de comunicación general"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distributed systems-distributed application": {
            "translated_key": "",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "performance": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, <br>performance</br> 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the <br>performance</br> of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger <br>performance</br> penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant <br>performance</br> advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the <br>performance</br> results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and <br>performance</br>, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good <br>performance</br>.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the <br>performance</br> of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three <br>performance</br> tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the <br>performance</br> gap increases as well: with ten attributes the <br>performance</br> with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the <br>performance</br> as much as the number of individual encryption operations does.",
                "The difference in <br>performance</br> with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small <br>performance</br> overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in <br>performance</br> is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the <br>performance</br> penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable <br>performance</br> to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between <br>performance</br> and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: aplicaciones distribuidas distribuidas de sistemas Términos generales Seguridad, \"rendimiento\" 1. rendimiento",
                "Evaluamos analíticamente el \"rendimiento\" de nuestra propuesta en la Sección 5. rendimiento",
                "El cifrado de atributos permite el control de acceso en el nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, al tiempo que incurre en una mayor penalización de \"rendimiento\".actuación",
                "Esto da como resultado una ventaja significativa de \"rendimiento\" en comparación con el cifrado de atributos.3.2 Cifrado de atributos en el cifrado de atributos Cada valor de atributo en un evento se cifran por separado con su propia clave de cifrado.actuación",
                "Como resultado, el cifrado del atributo incurre en gastos generales de procesamiento más grandes en comparación con el cifrado de eventos que se puede ver claramente a partir de los resultados de \"rendimiento\" en la SECT.5. rendimiento",
                "Por lo tanto, la elección entre el cifrado de eventos y atributos es una compensación entre expresividad y \"rendimiento\", y depende de los requisitos de la aplicación distribuida.actuación",
                "Elegimos implementar OFT, debido a su relativamente simplicidad y buen \"rendimiento\".actuación",
                "Evaluación Para evaluar el \"rendimiento\" del cifrado de contenido de eventos, hemos implementado ambos enfoques de cifrado que se ejecutan sobre nuestra implementación de Hermes Publish/ suscripción de middleware.actuación",
                "Ejecutamos tres pruebas de \"rendimiento\" en un simulador de eventos discretos.actuación",
                "Cuando el número de atributos aumenta también la brecha de \"rendimiento\": con diez atributos, el \"rendimiento\" con el cifrado de atributos ha disminuido al 11.7% del rendimiento del texto sin formato.actuación",
                "El aumento en la cantidad de datos encriptados no afecta el \"rendimiento\" tanto como el número de operaciones de cifrado individuales.actuación",
                "La diferencia en el \"rendimiento\" con el cifrado de eventos y el cifrado de atributos con solo un atributo es causada por el mecanismo de serialización del objeto Java: en el caso de cifrado de eventos, toda la estructura del atributo se está serializada, lo que da como resultado más objetos que serializar un valor de atributo único.actuación",
                "Esta prueba fue diseñada para mostrar que el uso del mecanismo de contenido de eventos cifrado entre dos corredores autorizados incurre solo en una pequeña sobrecarga de \"rendimiento\".actuación",
                "La diferencia en el \"rendimiento\" es del 3.7% con un atributo y 2.5% con 25 atributos.actuación",
                "El cifrado causa una sobrecarga, pero i) puede no haber una alternativa cuando se requiere el control de acceso, y ii) la penalización de \"rendimiento\" puede disminuir con las optimizaciones de implementación, como el paso del contenido de texto sin formato en caché junto con el contenido encriptado entre corredores con credenciales de seguridad idénticas.actuación",
                "Nuestros experimentos muestran que i) al almacenar en caché el texto sin formato y el contenido de texto cifrado cuando sea posible, podemos ofrecer \"rendimiento\" comparables a eventos de texto sin formato, y ii) que atribuye el cifrado dentro de un evento incurre mucho menos a la sobrecarga que la definición de tipos de eventos separados para los atributos queNecesita diferentes niveles de protección.actuación",
                "En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer una compensación entre \"rendimiento\" y expresividad.actuación"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "encryption": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>encryption</br>-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of <br>encryption</br> techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary <br>encryption</br> keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the <br>encryption</br> keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the <br>encryption</br> key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "<br>encryption</br> protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply <br>encryption</br> to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific <br>encryption</br> keys.",
                "By controlling access to the <br>encryption</br> keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential <br>encryption</br> keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing <br>encryption</br> keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level <br>encryption</br> scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the <br>encryption</br> key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to <br>encryption</br> keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the <br>encryption</br> keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level <br>encryption</br>).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the <br>encryption</br> keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content <br>encryption</br> within the broker network without involving the clients.",
                "By delegating the <br>encryption</br> tasks to the brokers, we lower the number of nodes required to have access to a given <br>encryption</br> key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential <br>encryption</br> key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The <br>encryption</br> keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating <br>encryption</br> tasks to the local broker is appropriate, because <br>encryption</br> is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement <br>encryption</br> either at the event level or the attribute level.",
                "Event <br>encryption</br> is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute <br>encryption</br> enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content <br>encryption</br> was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to <br>encryption</br> keys, any <br>encryption</br> performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the <br>encryption</br> key used to encrypt the event content.",
                "Each event type in the system will have its own individual <br>encryption</br> key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the <br>encryption</br> key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the <br>encryption</br> key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event <br>encryption</br> results in one <br>encryption</br> at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute <br>encryption</br>. 3.2 Attribute <br>encryption</br> In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The <br>encryption</br> key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event <br>encryption</br>, attribute <br>encryption</br> usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the <br>encryption</br> process the initialisation of the <br>encryption</br> algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute <br>encryption</br>, where an <br>encryption</br> algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute <br>encryption</br> incurs larger processing overheads when compared with event <br>encryption</br> which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute <br>encryption</br> is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level <br>encryption</br> enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute <br>encryption</br> is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute <br>encryption</br> can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute <br>encryption</br> it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in <br>encryption</br>/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated <br>encryption</br> with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced <br>encryption</br> Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute <br>encryption</br>, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event <br>encryption</br> the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In <br>encryption</br> mode the EAX algorithm takes as input a nonce (a number used once), an <br>encryption</br> key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the <br>encryption</br> key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event <br>encryption</br> a single tag is created for the encrypted event.",
                "With attribute 109 <br>encryption</br> each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event <br>encryption</br> in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both <br>encryption</br> approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the <br>encryption</br> key to use when encrypting or decrypting the content.",
                "Each event type, in event <br>encryption</br>, and attribute, in attribute <br>encryption</br>, has its own individual encryption key.",
                "By controlling access to the <br>encryption</br> key we effectively control access to the encrypted event content.",
                "In order to control access to the <br>encryption</br> keys we form a key group of brokers for each individual <br>encryption</br> key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content <br>encryption</br> in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same <br>encryption</br> key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the <br>encryption</br> key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an <br>encryption</br> key is refreshed the new key is tagged with a timestamp.",
                "The <br>encryption</br> key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content <br>encryption</br> we have implemented both <br>encryption</br> approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event <br>encryption</br>, and attribute <br>encryption</br>, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content <br>encryption</br>.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content <br>encryption</br>, event <br>encryption</br>, and attribute encryption.",
                "As can be seen in Fig. 6, event content <br>encryption</br> introduces a large overhead compared to not using <br>encryption</br>.",
                "The throughput when using attribute <br>encryption</br> with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute <br>encryption</br> has decreased to 11.7% of plaintext performance.",
                "Event <br>encryption</br> fares better, because of fewer <br>encryption</br> operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual <br>encryption</br> operations does.",
                "The difference in performance with event <br>encryption</br> and attribute <br>encryption</br> with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and <br>encryption</br> can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No <br>encryption</br> Attribute <br>encryption</br> Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the <br>encryption</br> cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no <br>encryption</br>, event <br>encryption</br> and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No <br>encryption</br> Attribute <br>encryption</br> Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute <br>encryption</br>.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute <br>encryption</br> and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute <br>encryption</br> performs better than event <br>encryption</br> even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute <br>encryption</br> to 16.6 hops for event <br>encryption</br>.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute <br>encryption</br> Whole-content <br>encryption</br> Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content <br>encryption</br> can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "<br>encryption</br> causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level <br>encryption</br> can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute <br>encryption</br> enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute <br>encryption</br> within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-<br>encryption</br> mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced <br>encryption</br> Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated <br>encryption</br>.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Cifrado\" controlado de acceso en el control dinámico de publicaciones multidominio de múltiples dominios LAURI I.W. Cifrado",
                "Demostramos que los gastos generales del tiempo y el espacio pueden minimizarse mediante la consideración cuidadosa de las técnicas de \"cifrado\" y mediante el uso del almacenamiento en caché para disminuir las descifraciones innecesarias.encriptación",
                "Proponemos hacer cumplir el control de acceso dentro de la red de corredores al encriptar el contenido del evento, y esa política dicta controles sobre las claves necesarias de \"cifrado\".encriptación",
                "Con el contenido de eventos cifrados, solo aquellos corredores que están autorizados para acosar las claves de \"cifrado\" pueden acceder al contenido del evento (es decir, publicar, suscribirse a o filtrar).encriptación",
                "Muevemos efectivamente la aplicación del control de acceso de los corredores a los administradores clave del \"cifrado\".encriptación",
                "El \"cifrado\" protege la confidencialidad de los eventos si se transportan a través de dominios no autorizados.encriptación",
                "Nuestro enfoque es aplicar el \"cifrado\" a los atributos individuales de los eventos.encriptación",
                "Las publicaciones se encriptarán con las claves específicas de \"cifrado\" de tipo de evento.encriptación",
                "Al controlar el acceso a las claves de \"cifrado\", podemos controlar el acceso a los tipos de eventos.encriptación",
                "El enfoque propuesto permite a los corredores de eventos enrutar eventos incluso cuando tienen acceso solo a un subconjunto de las potenciales claves de \"cifrado\".encriptación",
                "La Sección 4 discute la gestión de claves de \"cifrado\" en sistemas de publicación/suscripción de múltiples dominios.encriptación",
                "Nuestro esquema de \"cifrado\" de nivel de atributo supone que se escriben los eventos.encriptación",
                "En este documento usamos el nombre seguro del tipo de evento o atributo para referirnos a la clave \"Cifrado\" utilizada para cifrar el evento o el atributo.2.3 Control de acceso basado en la capacidad Pesonen et al.propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de múltiples dominios en [12].encriptación",
                "Aprovechamos el mecanismo de control de acceso mencionado anteriormente en este documento controlando el acceso a las claves de \"cifrado\" utilizando los mismos certificados de autorización.encriptación",
                "Es decir, un editor que está autorizado para publicar un tipo de evento dado, también está autorizado 106 para acceder a las claves de \"cifrado\" utilizadas para proteger los eventos de ese tipo.encriptación",
                "Un corredor puede analizar tanto el tráfico de eventos como el número y los nombres de los atributos que están poblados en un evento (en el caso del \"cifrado\" de nivel de atributo).encriptación",
                "Contenido de eventos de cifrado Proponemos hacer cumplir el control de acceso en una red de corredores descentralizada al encriptar el contenido de los eventos publicados y controlar el acceso a las claves de \"cifrado\".encriptación",
                "Esto nos permite implementar el \"cifrado\" del contenido del evento dentro de la red de corredores sin involucrar a los clientes.encriptación",
                "Al delegar las tareas de \"cifrado\" a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de \"cifrado\" dada.encriptación",
                "Los beneficios son tres veces: i) menos nodos manejan la clave confidencial de \"cifrado\", por lo que hay una menor posibilidad de que se revele la clave;ii) Las actualizaciones clave implican menos nodos, lo que significa que el algoritmo de gestión de clave incurrirá en gastos generales de comunicación y procesamiento más pequeños en el sistema de publicación/suscripción;y iii) el corredor local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de cada suscriptor 1, las claves de \"cifrado\" cambian con el tiempo en respuesta a los corredores que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempoSe utiliza cualquier clave única.encriptación",
                "Delegar tareas de \"cifrado\" al corredor local es apropiado, porque el \"cifrado\" es una característica de middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware.encriptación",
                "Podemos implementar el \"cifrado\" en el nivel de evento o en el nivel de atributo.encriptación",
                "El \"cifrado\" del evento es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, generalmente es más rápido.encriptación",
                "El \"cifrado\" del atributo permite el control de acceso en el nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, mientras que generalmente incurre en una penalización de rendimiento mayor.encriptación",
                "En esta sección discutimos el contenido de eventos de encriptación tanto a nivel de evento como en el nivel de atributo;evitando fugas de información a corredores no autorizados cifurando filtros de suscripción;evitando las encriptaciones innecesarias entre los corredores autorizados;Y finalmente, cómo se implementó el \"cifrado\" de contenido de eventos en nuestro prototipo.encriptación",
                "Tenga en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a claves de \"cifrado\", cualquier \"cifrado\" realizado por los corredores es necesariamente completamente transparente para todos los clientes.3.1 Cifrado de eventos en cifrado de eventos Todos los atributos de eventos están encriptados como un solo bloque de texto sin formato.encriptación",
                "El identificador de tipo de evento único a nivel mundial especifica la clave \"Cifrado\" utilizada para cifrar el contenido del evento.encriptación",
                "Cada tipo de evento en el sistema tendrá su propia clave de \"cifrado\" individual.encriptación",
                "Los corredores de eventos que están autorizados para acceder al evento y, por lo tanto, tienen acceso a la clave de \"cifrado\", pueden descifrar el evento e implementar el enrutamiento basado en el contenido.encriptación",
                "Los corredores de eventos que no tienen acceso a la clave \"Cifrado\" se verán obligados a enrutar el evento basado solo en su tipo.encriptación",
                "El \"cifrado\" del evento da como resultado un \"cifrado\" en el corredor de alojamiento del editor, y un descifrado en cada corredor intermedio de filtrado y corredor de alojamiento de suscriptores que pasa el evento, independientemente del número de atributos.encriptación",
                "Esto da como resultado una ventaja de rendimiento significativa en comparación con el \"cifrado\" del atributo.3.2 Atributo \"Cifrado\" en el cifrado de atributos Cada valor de atributo en un evento se encripta por separado con su propia clave de cifrado.encriptación",
                "La clave del \"cifrado\" se identifica mediante los atributos del identificador único globalmente (el identificador de eventos único globalmente define un espacio de nombres dentro del cual el identificador de atributos es un nombre totalmente calificado).107 El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados.encriptación",
                "En comparación con el \"cifrado\" del evento, el \"cifrado\" del atributo generalmente da como resultado gastos generales de procesamiento más grandes, porque cada atributo se encripta por separado.encriptación",
                "En el proceso de \"cifrado\", la inicialización del algoritmo de \"cifrado\" toma una porción significativa del tiempo de ejecución total del algoritmo.encriptación",
                "Esta disparidad se enfatiza en el \"cifrado\" del atributo, donde un algoritmo de \"cifrado\" debe inicializarse para cada atributo por separado, y la cantidad de datos encriptados es relativamente pequeño.encriptación",
                "Como resultado, el \"cifrado\" del atributo incurre en gastos generales de procesamiento más grandes en comparación con el \"cifrado\" del evento que puede verse claramente a partir de los resultados de rendimiento en la SECT.5. Cifrado",
                "La ventaja del \"cifrado\" del atributo es que el tipo de propietario puede controlar el acceso al tipo de evento en el nivel de atributo.encriptación",
                "Además, el \"cifrado\" de nivel de atributo permite el enrutamiento basado en el contenido en los casos en que un corredor intermedio tiene acceso solo a algunos de los atributos del evento, reduciendo así el impacto general de la entrega del evento en la red de corredores.encriptación",
                "Por lo tanto, la elección entre el evento y el \"cifrado\" de atributos es una compensación entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida.encriptación",
                "La expresividad proporcionada por el \"cifrado\" del atributo se puede emular mediante la introducción de un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización.encriptación",
                "Con el atributo \"cifrado\", es posible que el corredor vecino esté autorizado a acceder a un subconjunto de los atributos descifrados, en cuyo caso esos atributos a los que el corredor no está autorizado para acceder se transmitirían en cifrado.encriptación",
                "Obviamente, enviar el caché con el evento cifrado se sumará al costo de comunicación, pero esto se ve compensado por el ahorro en el procesamiento de \"cifrado\"/descifrado.encriptación",
                "EAX es un modo de operación para cifrados de bloque, también llamado un \"cifrado\" autenticado con el algoritmo de datos asociados (AAD) que proporciona simultáneamente la confidencialidad de los datos y la protección de integridad.encriptación",
                "Decidimos utilizar el algoritmo avanzado de \"cifrado\" (AES) [9] en nuestra implementación, debido a su estado estándar y al hecho de que el algoritmo ha pasado por criptoanálisis exhaustivo durante su existencia y no se han encontrado vulnerabilidades graves hasta ahora hasta ahora.encriptación",
                "Evitar el relleno es muy importante en el \"cifrado\" del atributo, porque el relleno podría aumentar el tamaño del atributo desproporcionalmente.encriptación",
                "Con el \"cifrado\" del evento, la expansión del mensaje no es tan relevante, ya que la longitud del relleno requerida para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud general del texto sin formato.encriptación",
                "En el modo \"Cifrado\", el algoritmo EAX toma como entrada un nonce (un número utilizado una vez), una tecla \"Cifrado\" y el texto sin formato, y devuelve el texto cifrado y una etiqueta de autenticación.encriptación",
                "En modo de descifrado, el algoritmo toma como entrada la tecla \"Cifrado\", el texto cifrado y la etiqueta de autenticación, y devuelve el texto de la luz o un error si la verificación de autenticación falló.encriptación",
                "Con el evento \"Cifrado\" se crea una sola etiqueta para el evento cifrado.encriptación",
                "Con el atributo 109 \"cifrado\", cada atributo está encriptado y autenticado por separado, y todos tienen sus etiquetas individuales.encriptación",
                "Esta característica podría usarse con el \"cifrado\" del evento en los casos en que parte del contenido del evento es público y, por lo tanto, sería útil para el enrutamiento basado en el contenido.encriptación",
                "La gestión de claves en ambos enfoques de \"cifrado\", el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador de atributos).encriptación",
                "Ese identificador se usa para determinar la clave de \"cifrado\" para usar al encriptar o descifrar el contenido.encriptación",
                "Cada tipo de evento, en eventos \"cifrado\" y atributo, en atributo \"cifrado\", tiene su propia clave de cifrado individual.encriptación",
                "Al controlar el acceso a la tecla \"Cifrado\", controlamos efectivamente el acceso al contenido del evento cifrado.encriptación",
                "Para controlar el acceso a las claves de \"cifrado\", formamos un grupo clave de corredores para cada clave de \"cifrado\" individual.encriptación",
                "En el ejemplo de la placa de números anterior, el corredor local que contiene la capacidad anterior está autorizado para unir el grupo de clave NumblePlate, así como los grupos clave para todos los atributos en el tipo de evento NumblePlate.4.1 Contenido de evento de comunicación de grupo seguro \"cifrado\" en un sistema descentralizado de publicación/suscripción de múltiples dominios puede verse como una subcategoría de comunicación de grupo seguro.encriptación",
                "En ambos casos, el sistema de gestión clave debe escalar bien con el número de clientes, los clientes pueden distribuirse en grandes áreas geográficas, puede haber altas tasas de membresía en el grupo, y todos los miembros deben sincronizarse entre sí a tiempo paraUse la misma clave de \"cifrado\" al mismo tiempo.encriptación",
                "Escala en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, que hemos verificado en nuestras simulaciones.4.2 Clave refrescante tradicionalmente en los esquemas de gestión de claves grupales La clave de \"cifrado\" se actualiza cuando un nuevo miembro se une al grupo, un miembro existente deja el grupo o expira un temporizador.encriptación",
                "Cuando se actualiza una tecla \"Cifrado\", la nueva clave se etiqueta con una marca de tiempo.encriptación",
                "La clave de \"cifrado\" para usar para un evento dado se selecciona en función de la marca de tiempo de publicación de eventos.encriptación",
                "Evaluación Para evaluar el desempeño del \"cifrado\" de contenido de eventos, hemos implementado enfoques de \"cifrado\" que se ejecutan sobre nuestra implementación del Hermes Publish/ suscripción de Middleware.encriptación",
                "La implementación admite tres modos: contenido de texto sin formato, \"cifrado\" de eventos y \"cifrado\" de atributo, en un solo sistema de publicación/suscripción.encriptación",
                "Las siguientes secciones describen las configuraciones de prueba específicas y los resultados con más detalle.5.1 Gastos generales de extremo a extremo La prueba de gastos generales de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por el \"cifrado\" del contenido de eventos.encriptación",
                "Las mismas pruebas se ejecutaron sin \"cifrado\" de contenido, \"cifrado\" de evento y cifrado de atributos.encriptación",
                "Como se puede ver en la Fig. 6, el \"cifrado\" del contenido del evento introduce una sobrecarga grande en comparación con el no usar \"cifrado\".encriptación",
                "El rendimiento al usar \"cifrado\" de atributo con un tipo de evento con un atributo es el 46% del rendimiento logrado cuando los eventos se envían en texto sin formato.encriptación",
                "Cuando el número de atributos aumenta también la brecha de rendimiento aumenta: con diez atributos, el rendimiento con el \"cifrado\" de atributo ha disminuido al 11.7% del rendimiento del texto de la ley.encriptación",
                "El evento \"Cifrado\" le va mejor, debido a menos operaciones de \"cifrado\".encriptación",
                "El aumento en la cantidad de datos encriptados no afecta el rendimiento tanto como el número de operaciones individuales de \"cifrado\".encriptación",
                "La diferencia en el rendimiento con el \"cifrado\" de eventos y el atributo \"cifrado\" con solo un atributo es causada por el mecanismo de serialización del objeto Java: en el caso de cifrado de eventos, toda la estructura del atributo se está serializada, lo que da como resultado más objetos que serializar un único valor de atributo de atributo.encriptación",
                "Dado que no se requiere que el Nonce se mantenga en secreto (solo único), hay una posible compensación de tiempo/espacio que aún no hemos investigado al adjuntar atributos adicionales de Nonce que ya han tenido esta construcción OMAC aplicada a ellos.5.2 Eventos internos de dominio que explicamos en la Secta.3.4 Ese descifrado de contenido del evento y \"cifrado\" se pueden evitar si ambos corredores están autorizados para acceder al contenido del evento.encriptación",
                "En esta prueba, nuevamente formamos una red de corredores con dos corredores.111 CLAVE REFRESH SHOLET BROKER 1 Unirse y dejar al grupo clave Broker 2 Unirse y dejar el grupo clave REFRESA CLAVE REAL REFRESH TIEMPO Un día Las credenciales de grupo clave del grupo son válidos Tiempo de unión real de suministro real de licencia Real Un día Figura 5: Cómo se actualiza la claveEl cronograma se ve afectado por los corredores que se unen y dejan grupos clave 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 25 Mensajes Número de Atributos No hay ningún Cifrado de contenido completo de \"Cifrado\" Cifrado \"Cifrado de contenido completo 6: rendimiento de eventos en un simulador AmbosLos corredores están configurados con las mismas credenciales.encriptación",
                "El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo del \"cifrado\" no está incluido en las mediciones.encriptación",
                "Luego se repitió la misma prueba sin \"cifrado\", evento \"cifrado\" y cifrado de atributos activado.encriptación",
                "El hecho de que los tres gráficos muestren las mismas irregularidades respalden esta teoría.112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 15 20 25 Mensajes Número de Atributos No hay Atributos No hay \"Cifrado\" Cifrado \"Cifrado de contenido completo Figura 7: Rendimiento de eventos internos de dominio 5.3 Comunicación sobre la definición de múltiples múltiplesTipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado de contenido de eventos.encriptación",
                "La última prueba que realizamos fue mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de \"cifrado\" del atributo real.encriptación",
                "Para cada grupo de suscriptores de N, el editor publica un evento para representar el uso del \"cifrado\" de atributo y los eventos que representan los eventos para cada grupo de suscriptores.encriptación",
                "Los gráficos indican que el \"cifrado\" del atributo funciona mejor que el \"cifrado\" del evento incluso para pequeños números de grupos de suscriptores.encriptación",
                "De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso con los eventos de la placa de números), el recuento de LOP aumenta de 7.2 lúpulos para el \"cifrado\" de atributo a 16.6 lúpulos para el \"cifrado\" de eventos.encriptación",
                "Suponemos en nuestro trabajo que el SHB es lo suficientemente potente como para Man113 1 10 100 1000 10000 0 5 15 15 20 25 30 35 40 45 50 Número de ChopsIntotal de grupos de suscripción Atributo \"Cifrado\" Cifrado de contenido completo \"Figura 8: HOP CUANDO CUANDOEmulación de la edad de cifrado de atributos A TLS aseguró la conexión para cada suscriptor local.encriptación",
                "Conclusiones El \"cifrado\" del contenido del evento se puede utilizar para hacer cumplir una política de control de acceso, mientras que los eventos están en tránsito en la red de corredores de un sistema de publicación/suscripción de múltiples dominios.encriptación",
                "El \"cifrado\" causa una sobrecarga, pero i) puede no haber una alternativa cuando se requiere el control de acceso, y ii) la penalización de rendimiento puede disminuir con las optimizaciones de implementación, como el paso del contenido de texto sin formato en caché junto con el contenido encriptado entre corredores con credenciales de seguridad idénticas.encriptación",
                "Se puede implementar el \"cifrado\" del nivel de atributo para hacer cumplir las políticas de control de acceso de grano fino.encriptación",
                "Además de proporcionar control de acceso a nivel de atributo, el \"cifrado\" del atributo permite a los corredores parcialmente autorizados implementar el enrutamiento basado en el contenido en función de los atributos a los que son accesibles para ellos.encriptación",
                "Nuestros experimentos muestran que i) al almacenar en caché el texto sin formato y el contenido de texto cifrado cuando sea posible, podemos ofrecer un rendimiento comparable a los eventos de texto sin formato, y ii) que atribuyen el \"cifrado\" dentro de un evento incurre mucho menos a la sobrecarga que la definición de tipos de eventos separados para los atributos queNecesita diferentes niveles de protección.encriptación",
                "EAX: un modo de \"cifrado\" autenticado convencional.encriptación",
                "Estándar avanzado de \"cifrado\" (AES).encriptación",
                "OCB: un modo de operación de bloque de bloque para \"cifrado\" autenticado eficiente.encriptación"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "congestion charge service": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "<br>congestion charge service</br> Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the <br>congestion charge service</br> would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain <br>congestion charge service</br> Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Dominio \"Servicio de carga de congestión\".servicio de carga de congestión",
                "En nuestro escenario de ejemplo, el \"servicio de carga de congestión\" solo estaría autorizado a leer el campo de la placa de números de avistamientos de vehículos: el atributo de ubicación no se descifraría.servicio de carga de congestión",
                "En nuestra discusión, nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o 105 SHB SHB Sub Pub Sub IB PHB IB IB PHB IB IB IB IB IB IB IB IB IBIB SHB SHB IBIB IB IB IB IB IBIB IB IB IB IB IB IB Metropolitan Police Dominio \"Servicio de carga de congestión\" Detective Detective Smith Smith Smith Camera 2 Oficina de estadísticas de facturación SubscripePropietario IB Intermediate Broker Clave Figura 1: Una vista general de nuestro despliegue de publicación/suscripción de múltiples dominios un suscriptor, respectivamente.servicio de carga de congestión"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distribute access control": {
            "translated_key": "",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "administrative domain": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple <br>administrative domain</br>s, be they independent <br>administrative domain</br>s inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple <br>administrative domain</br>s is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Sin embargo, la publicación/suscripción de sistemas que abarcan un área geográfica amplia es probable que también abarquen múltiples \"dominios administrativos\", ya sean \"dominios administrativos\" independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de los dos.dominio administrativo",
                "Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que el \"dominio administrativo\" s que abarque es probable que requiera que aborden las consideraciones de seguridad.dominio administrativo"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}