{
    "id": "I-48",
    "original_text": "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB. 2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model. In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system. A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system. We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy. Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not. We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1. INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1]. Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge. The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15]. However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not. This model of normative systems was further extended by attributing to each agent a single goal in [16]. However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law. In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate. In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority. We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy. Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not. We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4]. We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2. KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8]. A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens). We let S0 denote the set of possible initial states of the system. Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents. It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action. This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation. However, we find it convenient to include within our model the agents that cause transitions. We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A. Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state. Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state. In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure. A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on). A path π such that π[0] = s is an s-path. Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s). We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1. Our running example is of a system with a single non-sharable resource, which is desired by two agents. Consider the Kripke structure depicted in Figure 1. We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here. It is also worth noting that for some domains, other constraints may be more appropriate than simple totality. For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive. Think of pi as meaning agent i has currently control over the resource. Each agent has two possible actions, when in possession of the resource: either give it away, or keep it. Obviously there are infinitely many different s-paths and t-paths. Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8]. Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse. We will use CTL to express agents goals. The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ. We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it. The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language. The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t. K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t. K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner. The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8]. We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3. NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1]. More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not. Different normative systems may differ on whether or not a transition is legal. Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation. The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor. Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η. Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state. We denote the empty normative system by η∅, so η∅ = ∅. Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]). If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η. Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise. Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t). A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever. Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}. Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system. In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system. Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}. Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}. Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C). Note that we have η C = η (A\\C) and η C = η (A\\C). EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}. Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4. GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system. We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold. The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i. Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy. Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = . We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on. We denote the largest index of any element in γ by |γ|. A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy. Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1]. The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level. Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies. EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself. Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8). Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds. Goal ϕi 6 is a fairness constraint implied by it. Note that A♦pi says that every computation eventually reaches a pi state. This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state. The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi . Goal ϕi 3 says that pi should be true on some branch, from some moment on. It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi . This implies ϕi 1, which says that pi should at least not be impossible. If we even drop that demand, we have the trivial goal ϕi 0. We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi . However, this is not a proper CTL formula. It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent. However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like. Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]). We comment on the implications of alternative goal representations at the conclusion of the next section. A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system. Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent. The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure. We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example. Recall that we have defined S0 as {s, t}. Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not. To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true. Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0. Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale. The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j . Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting. However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied. There are other representations for goals, which would allow us to define cardinal utilities. The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R. We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility. We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}. The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity. Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems. Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K). Then the utility of η to agent i wrt K is δi (K, K † η). We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative. Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure. If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system. We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent. A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M . EXAMPLE 1. The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before. Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15]. Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system. Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2. Note that typically K † η K. Then we have (cf. [15]). THEOREM 1. Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1. Let K be a structure, and η a normative system. Let γi denote a goal hierarchy for agent i. 1. Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula). Then, for any normative system η, δi (K, η) ≥ 0. 2. Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε. Then, δi (K † η, K) ≥ 0. Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η. The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true). It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η. The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η. Hence, an agent with only existential goals might well fear any norm η. However, these observations implicitly assume that all agents in the system will comply with the norm. Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do. This motivates us to consider normative system games. 5. NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them. Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective). Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not? Note that this reasoning takes place before the agent is in the system - it is a design time consideration. We can understand the reasoning here as a game, as follows. A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents. Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn . Then we can associate a game - the normative system game - GΣ with Σ, as follows. The agents AG in GΣ are as in Σ. Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system. If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ. Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ. We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ). So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0. In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η). We can now start to investigate some properties of normative system games. EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2. For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows. U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K). The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only. This means that the transitions are R \\ {(s, s)}. In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1. This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0. Agent 2 of course benefits if agent 1 complies with η3 while 2 does not. His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise. This is a necessary, although not sufficient condition on a norm to expect that everybody respects it. Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows. Let Σ = M , η be a social system. Then the following are equivalent: The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ. The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M . Question: Does there exist an individually rational normative system for M ? THEOREM 2. IRNS is NP-complete, even in one-agent systems. PROOF. For membership of NP, guess a normative system η, and verify that it is individually rational. Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time. To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ. Hence verifying that ui (K † η) > ui (K) requires only polynomial time. For NP-hardness, we reduce SAT [12, p.77]. Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows. First, we define a single agent A = {1}. For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance. We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ. Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )). Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable. First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1]. For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both. So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true. The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ. For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state. The resulting normative system ensures γ1[1], and is thus individually rational. Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7]. Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off. In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient. This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η. If η makes every agent better off than η, then we say η Pareto dominates η. The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M . Question: Is η Pareto efficient for M ? THEOREM 3. PENS is co-NP-complete, even for one-agent systems. PROOF. Let M and η be as in the Theorem. We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete. In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η. For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time. Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time. For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2. Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system. Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M . Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example? Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}. The utilities for each system are given in Table 1. From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7. Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14]. A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs. Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play. Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2). In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ. The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply. If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.) NASH IMPLEMENTATION (NI) : Given: Multi-agent system M . Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation? Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})). This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time. THEOREM 4. The NI problem is NP-complete, even for twoagent systems. PROOF. For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time. For NP-hardness, we reduce SAT. Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk . Then we construct an instance of NI as follows. We create two agents, A = {1, 2}. For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state. For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi . Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ. Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true. We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true. No other arcs, apart from those so defined, as included in η. Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system. To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D). For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅. Then ϕ is satisfiable; for suppose not. Then the goals γi [2] are not achievable by any normative system, (by construction). Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η. But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium. This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9]. The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]). In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete. It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem. To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6. CONCLUSIONS Social norms are supposed to restrict our behaviour. Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour. The question then, for an agent is, how to be sure that others will comply with a norm. And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm. Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions. We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them. Of course, our approach is in many senses open for extension or enrichment. An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7. REFERENCES [1] T. Agotnes, W. van der Hoek, J. A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge. On the logic of normative systems. In Proc. IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman. Alternating-time temporal logic. Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore. Game Theory and the Social Contract Volume 1: Playing Fair. The MIT Press: Cambridge, MA, 1994. [4] K. Binmore. Game Theory and the Social Contract Volume 2: Just Playing. The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm. Complexity of mechanism design. In Proc. UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm. Complexity results about nash equilibria. In Proc. IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou. The complexity of computing a Nash equilibrium. In Proc. STOC, Seattle, WA, 2006. [8] E. A. Emerson. Temporal and modal logic. In Handbook of Theor. Comp. Sci. Vol. B, pages 996-1072. Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern. Sometimes and not never revisited: on branching time versus linear time temporal logic. Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz. Choosing social laws for multi-agent systems: Minimality and simplicity. Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein. A Course in Game Theory. The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou. Computational Complexity. Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz. On the synthesis of useful social laws for artificial agent societies. In Proc. AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz. On social laws for artificial agent societies: Off-line design. In Computational Theories of Interaction and Agency, pages 597-618. The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge. Social laws in alternating time: Effectiveness, feasibility, and synthesis. Synthese, 2007. [16] M. Wooldridge and W. van der Hoek. On obligations and normative ability. Jnl. of Appl. Logic, 3:396-420, 2005. 888 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)",
    "original_translation": "Juegos del sistema normativo Thomas ◦ Departamento de Agotnes de Ingeniería Informática Bergen University College PB. 2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos de creciente prioridad e investigamos la complejidad computacional y las propiedades teóricas del juego de este modelo. En el modelo subyacente de sistemas normativos, utilizamos estructuras de Kripke para representar las posibles transiciones de un sistema multiagente. Un sistema normativo es simplemente un subconjunto de la estructura Kripke, que contiene los arcos que están prohibidos por el sistema normativo. Especificamos los objetivos de un agente como una jerarquía de fórmulas de lógica de árbol de computación (CTL), una lógica ampliamente utilizada para representar las propiedades de las estructuras de Kripke: la intuición es que los objetivos más arriba son preferidos por el agente sobre los que aparecen más abajo.La jerarquía. Usando este esquema, definimos un modelo de utilidad ordinal, que a su vez nos permite interpretar nuestros sistemas normativos basados en Kripke como juegos, en los que los agentes deben determinar si cumplir con el sistema normativo o no. Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial distribuida]: sistemas multiagentes;I.2.4 [Formalismos y métodos de representación del conocimiento] Términos generales Teoría 1. Introducción Los sistemas normativos, o las leyes sociales, han demostrado ser un enfoque atractivo para la coordinación en los sistemas de múltiples agentes [13, 14, 10, 15, 1]. Aunque los diversos enfoques de los sistemas normativos propuestos en la literatura difieren en los detalles técnicos, todos comparten la misma intuición básica de que un sistema normativo es un conjunto de restricciones sobre el comportamiento de los agentes en el sistema;Al imponer estas limitaciones, se espera que surja algún objetivo deseable. Shoham y Tennenholtz propusieron la idea de usar leyes sociales para coordinar sistemas de agentes múltiples [13, 14];Su enfoque fue extendido por van der Hoek et al.Para incluir la idea de especificar un objetivo global deseable para una ley social como una fórmula lógica, con la idea de que el sistema normativo se consideraría exitoso si, después de implementarla (es decir, después de eliminar todas las acciones prohibidas), la fórmula objetivoestaba garantizado que estaría satisfecho en el sistema [15]. Sin embargo, este modelo no tuvo en cuenta las preferencias de los agentes individuales y, por lo tanto, no explicó el posible comportamiento estratégico por parte de los agentes al decidir si cumplir con el sistema normativo o no. Este modelo de sistemas normativos se extendió aún más al atribuir a cada agente un solo objetivo en [16]. Sin embargo, este modelo todavía estaba demasiado empobrecido para capturar los tipos de toma de decisiones que tienen lugar cuando un agente decide si cumplir con una ley social o no. En realidad, las consideraciones estratégicas entran en juego: un agente tiene en cuenta no solo si el sistema normativo sería beneficioso para sí mismo, sino también si otros agentes elegirán racionalmente participar. En este artículo, desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos, de creciente prioridad. Especificamos los objetivos de los agentes como una jerarquía de fórmulas de lógica de árbol de cálculo (CTL), una lógica ampliamente utilizada para representar las propiedades de las estructuras de Kripke [8]: la intuición es que los objetivos más arriba son los que el agente es preferido por el que el agente sobre aquellosAparece más abajo en la jerarquía. Usando este esquema, definimos un modelo de utilidad ordinal, que a su vez nos permite interpretar nuestros sistemas normativos KripkeBased como juegos, en los que los agentes deben determinar si cumplir con el sistema normativo o no. Por lo tanto, proporcionamos un puente muy natural entre las estructuras y los idiomas lógicos y las técnicas y conceptos de la teoría de juegos, que han demostrado ser muy poderosos para analizar escenarios de estilo de contrato social como los sistemas normativos [3, 4]. Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete.2. Estructuras de Kripke y CTL Utilizamos estructuras de Kripke como nuestro modelo semántico básico para sistemas multiagentes [8]. Una estructura de Kripke es esencialmente un gráfico dirigido, con el conjunto de vértice S correspondiente a los posibles estados del sistema que se modelan, y la relación R ⊆ S × S captura el 881 978-81-904262-7-5 (RPS) C 2007 IfaamasPosibles transiciones del sistema;Intuitivamente, estas transiciones son causadas por agentes en el sistema que realizan acciones, aunque no incluimos tales acciones en nuestro modelo semántico (ver, por ejemplo, [13, 2, 15] para modelos relacionados que incluyen acciones como ciudadanos de primera clase). Dejamos que S0 denote el conjunto de posibles estados iniciales del sistema. Nuestro modelo está destinado a corresponder al conocido modelo de concurrencia intercalada de la literatura de sistemas reactivos: por lo tanto, un arco corresponde a la ejecución de una acción atómica por uno de los procesos en el sistema, que llamamos agentes. Es importante tener en cuenta que, en contraste con modelos como [2, 15], aquí no estamos modelando la acción sincrónica. Esta suposición no es esencial para nuestro análisis, pero simplifica enormemente la presentación. Sin embargo, nos pareció conveniente incluir dentro de nuestro modelo los agentes que causan transiciones. Por lo tanto, asumimos un conjunto A de agentes, y etiquetamos cada transición en R con el agente que causa la transición a través de una función α: R → A. Finalmente, usamos un vocabulario φ = {p, q ,...} de variables booleanas para expresar las propiedades de los estados individuales s: usamos una función v: s → 2φ para etiquetar cada estado con las variables booleanas verdaderas (o satisfechas) en ese estado. Recolectando estos componentes juntos, una estructura de Kripke marcada con agente (más de φ) es un 6-tupla: K = S, S0, R, A, α, V, donde: • S es un conjunto de estados finitos y no vacío,• S0 ⊆ S (S0 = ∅) es el conjunto de estados iniciales;• R ⊆ S × S es una relación binaria total en S, que nos referimos como la relación de transición1;• a = {1 ,..., n} es un conjunto de agentes;• α: R → A etiqueta cada transición en R con un agente;y • V: S → 2φ etiqueta cada estado con el conjunto de variables proposicionales verdaderas en ese estado. En aras de la brevedad, en adelante nos referiremos a una estructura de Kripke de agente simplemente como una estructura de Kripke. Una ruta sobre una relación de transición r es una secuencia infinita de estados π = s0, s1 ,...que debe satisfacer la propiedad que ∀u ∈ N: (su, su+1) ∈ R. Si u ∈ N, entonces denotamos por π [u] el componente indexado por u en π (por lo tanto π [0] denota el primeroelemento, π [1] el segundo, y así sucesivamente). Una ruta π de tal manera que π [0] = s es un spath. Deje que πr (s) denote el conjunto de s-spaths sobre r;Dado que generalmente será claro en el contexto, a menudo omitimos la referencia a R y simplemente escribimos π (s). A veces nos referiremos y pensaremos en una ruta S como un posible cálculo, o evolución del sistema, de s.EJEMPLO 1. Nuestro ejemplo de ejecución es de un sistema con un solo recurso no variable, que desean dos agentes. Considere la estructura Kripke representada en la Figura 1. Tenemos dos estados, S y T, y dos variables booleanas correspondientes P1 y P2, que son 1 en el tiempo de ramificación literatura lógica temporal, se dice que una relación r ⊆ s × s es total IFF ∀S ∃S: (S, (S, (S, (S, (S, (S, (S, (S, (S, (S,s) ∈ R. Tenga en cuenta que el término relación total a veces se usa para referirse a las relaciones r ⊆ s × s de tal manera que para cada par de elementos s, s ∈ S tenemos (s, s) ∈ R or (s, s, s) ∈ R;No estamos usando el término de esta manera aquí. También vale la pena señalar que para algunos dominios, otras restricciones pueden ser más apropiadas que la total de totalidad. Por ejemplo, uno podría considerar el requisito de totalidad del agente, que en cada estado, cada agente tiene al menos una posible transición disponible: ∀s∀i ∈ A∃S: (S, S) ∈ R y α (S, S) =i.2P T P 2 2 1 S 1 1 Figura 1: El control de control de recursos en ejecución.mutuamente excluyentes. Piense en PI como el agente I de significado que actualmente tiene control sobre el recurso. Cada agente tiene dos acciones posibles, cuando posee el recurso: regalarlo o mantenerlo. Obviamente, hay infinitas muchas patas S y patas T. Digamos que nuestro conjunto de estados iniciales S0 es igual a {S, T}, es decir, no hacemos ninguna suposición sobre quién inicialmente tiene control sobre el recurso.2.1 CTL ahora definimos la lógica del árbol de cálculo (CTL), una lógica temporal de tiempo de ramificación destinada a representar las propiedades de las estructuras de Kripke [8]. Tenga en cuenta que dado que CTL es bien conocido y ampliamente documentado en la literatura, nuestra presentación, aunque completa, será algo breve. Usaremos CTL para expresar objetivos de agentes. La sintaxis de CTL se define mediante la siguiente gramática: ϕ :: = |P |¬ϕ |ϕ ∨ ϕ |E fϕ |E (ϕ u ϕ) |A fϕ |A (ϕ u ϕ) donde p ∈ φ. Denotamos el conjunto de fórmula CTL sobre φ por Lφ;Como se entiende φ, generalmente omitimos la referencia a él. La semántica de CTL se da con respecto a la relación de satisfacción | =, que se mantiene entre los pares de la forma k, s, (donde k es una estructura de Kripke y S es un estado en k) y fórmulas del idioma. La relación de satisfacción se define de la siguiente manera: k, s | =;K, s | = p iff p ∈ V (s) (donde p ∈ φ);K, s | = ¬ϕ iff no k, s | = ϕ;K, s | = ϕ ∨ ψ iff k, s | = ϕ o k, s | = ψ;K, s | = a fϕ iff ∀π ∈ π (s): k, π [1] | = ϕ;K, s | = e fϕ iff ∃π ∈ π (s): k, π [1] | = ϕ;K, s | = a (ϕ u ψ) iff ∀π ∈ π (s), ∃u ∈ N, s.t. K, π [u] | = ψ y ∀v, (0 ≤ v <u): k, π [v] | = ϕ k, s | = e (ϕ u ψ) iff ∃π ∈ π (s),∃u ∈ N, S.T. K, π [u] | = ψ y ∀v, (0 ≤ v <u): k, π [v] | = ϕ los conectivos lógicos clásicos restantes (∧, →, ↔) se supone que se define como abreviaturas enTérminos de ¬, ∨, de la manera convencional. Se definen los operadores temporales CTL restantes: a ♦ ϕ ≡ a (u ϕ) e ♦ ϕ ≡ e (u ϕ) a ϕ rims | = ϕ para alguna estructura Kripke k y estado s en k;ϕ es válido si K, S | = ϕ para todas las estructuras de Kripke K y estados en K. El problema de verificar si K, S | = ϕ para K, S, ϕ (verificación del modelo) se puede hacer en tiempo polinomial determinista, mientras verifica si un ϕ dado es satisfactable o si ϕ es válido es exptime-complete [8]. Escribimos k | = ϕ si k, s0 | = ϕ para todos s0 ∈ S0, y | = ϕ si k | = ϕ para todos K. 882 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 3. Sistemas normativos Para nuestros propósitos, un sistema normativo es simplemente un conjunto de restricciones sobre el comportamiento de los agentes en un sistema [1]. Más precisamente, un sistema normativo define, para cada transición del sistema posible, ya sea que esa transición se considere legal o no. Los diferentes sistemas normativos pueden diferir en si una transición es legal o no. Formalmente, un sistema normativo η (W.R.T. A Kripke Estructura K = S, S0, R, A, α, V) es simplemente un subconjunto de R, de modo que R \\ η es una relación total. El requisito de que R \\ η sea total es una restricción de razonabilidad: previene los sistemas normativos que conducen a estados sin sucesor. Sea n (r) = {η: (η ⊆ r) & (r \\ η es total)} el conjunto de sistemas normativos sobre R. La interpretación prevista de un sistema normativo η es que (s, s) ∈ η significaLa transición (s, s) está prohibida en el contexto de η;Por lo tanto, r \\ η denota las transiciones legales de η. Dado que se supone que η es razonable, estamos garantizados que existe una transición legal externa para cada estado. Denotamos el sistema normativo vacío por η∅, entonces η∅ = ∅. Tenga en cuenta que el sistema normativo vacío η∅ es razonable con respecto a cualquier relación de transición R. El efecto de implementar un sistema normativo en una estructura de Kripke es eliminar de sus transiciones prohibidas de acuerdo con este sistema normativo (ver [15, 1]). Si K es una estructura de Kripke, y η es un sistema normativo sobre K, entonces K † η denota la estructura de Kripke obtenida de K eliminando las transiciones prohibidas en η. Formalmente, si K = S, S0, R, A, α, V y η ∈ N (R), entonces deje que K † η = K sea la estructura Kripke K = S, S0, R, A, α, V donde: • S = S, S0 = S0, A = A y V = V;• r = r \\ η;y • α es la restricción de α a r: α (s, s) = j α (s, s) if (s, s) ∈ R indefinido de otra manera. Tenga en cuenta que para todos K, tenemos k † η∅ = K. Ejemplo 1. (continuación) Cuando piensa en términos de equidad, parece natural considerar los sistemas normativos η que contienen (s, s) o (t, t). Un sistema normativo con (s, t) no sería justo, en el sentido de que a ♦ a ¬p1 ∨ a ♦ a ¬p2 sostiene: en todos los caminos, desde algún momento, un agente tendrá control para siempre. Hagamos, para referencia posterior, fijar η1 = {(s, s)}, η2 = {(t, t)} y η3 = {(s, s), (t, t)}. Más tarde, abordaremos la cuestión de si los agentes deberían elegir racionalmente cumplir con un sistema normativo particular. En este contexto, es útil definir los operadores de los sistemas normativos que corresponden a grupos de agentes que defienden el sistema normativo. Formalmente, deje que K = S, S0, R, A, α, V sea una estructura de Kripke, sea C ⊆ A un conjunto de agentes sobre K, y sea η un sistema normativo sobre K. Entonces: • η c denota elsistema normativo que es el mismo que η excepto que solo contiene los arcos de η que corresponden a las acciones de los agentes en C. llamamos η c la restricción de η a C, y se define como: η c = {(s, S): (S, S) ∈ η & α (S, S) ∈ C}. Por lo tanto, K † (η c) es la estructura de Kripke que resulta si solo los agentes en C eligen cumplir con el sistema normativo.• η c denota el sistema normativo que es el mismo que η excepto que solo contiene los arcos de η que no corresponden a acciones de agentes en C. llamamos η c la exclusión de C de η, y se define como:η c = {(s, s): (s, s) ∈ η & α (s, s) ∈ C}. Por lo tanto, K † (η c) es la estructura de Kripke que resulta si solo los agentes en C eligen no cumplir con el sistema normativo (es decir, los únicos que cumplen son los que están en A \\ C). Tenga en cuenta que tenemos η c = η (a \\ c) y η c = η (a \\ c). Ejemplo 1. (continuación) Tenemos η1 {1} = η1 = {(s, s)}, mientras η1 {1} = η∅ = η1 {2}. Del mismo modo, tenemos η3 {1} = {(s, s)} y η3 {1} = {(t, t)}.4. Metas y servicios públicos A continuación, queremos poder capturar los objetivos que tienen los agentes, ya que estos impulsarán las consideraciones estratégicas de los agentes, particularmente, como veremos, consideraciones sobre si cumplir o no un sistema normativo. Modelaremos los objetivos de un agente como una lista priorizada de fórmulas CTL, que representan propiedades cada vez más deseadas que el agente desea mantener. La interpretación prevista de tal jerarquía de objetivos γi para el agente I ∈ A es que cuanto más arriba es la jerarquía, más es, más lo desea. Tenga en cuenta que suponemos que si un agente puede alcanzar un objetivo en un nivel particular en su jerarquía de objetivos, entonces no se preocupa sobre los objetivos más bajos por la jerarquía. Formalmente, una jerarquía de objetivos, γ, (sobre una estructura de Kripke k) es una secuencia finita y no vacía de fórmulas CTL γ = (ϕ0, ϕ1, ..., ϕk) en la que, por convención, ϕ0 =. Utilizamos una notación de indexación de números naturales para extraer los elementos de una jerarquía de objetivos, por lo que si γ = (ϕ0, ϕ1, ..., ϕk) luego γ [0] = ϕ0, γ [1] = ϕ1, y así sucesivamente. Denotamos el índice más grande de cualquier elemento en γ por | γ |. Se dice que una estructura de Kripke en particular K satisface un objetivo en el índice X en la jerarquía de objetivos γ si K | = γ [x], es decir, si γ [x] está satisfecho en todos los estados iniciales s0 de K. una propiedad potencial obvia de la metaLas jerarquías son la monotonicidad: donde los objetivos en niveles más altos en la jerarquía implican lógicamente aquellos en niveles más bajos en la jerarquía. Formalmente, una jerarquía de objetivos γ es monotónica si para todas las x ∈ {1 ,..., | γ |} ⊆ n, tenemos | = γ [x] → γ [x - 1]. El tipo más simple de jerarquía de objetivos monotónicos es donde γ [x+1] = γ [x] ∧ ψx+1 para algunos ψx+1, por lo que en cada nivel sucesivo de la jerarquía, agregamos nuevas restricciones a la meta del nivel anterior. Aunque esta es una propiedad natural de muchas jerarquías de objetivos, no es una propiedad que exigimos todas las jerarquías de objetivos. Ejemplo 1. (Continuación) Suponga que los agentes tienen objetivos similares, pero opuestos: cada agente I quiere mantener la fuente lo más a menudo y lo más posible para sí mismo. Defina la jerarquía de objetivos de cada agente como: γi = (ϕi 0 =, ϕi 1 = e ♦ pi, ϕi 2 = e e ♦ pi, ϕi 3 = e ♦ e pi, ϕi 4 = a e ♦ pi, ϕi 5 = e ♦ a pi,ϕi 6 = a a ♦ pi, ϕi 7 = a (a ♦ pi ∧ e pi), ϕi 8 = a pi).en ϕi 8). Gracias a nuestra restricción de razonabilidad, este objetivo implica ϕi 7 que dice que, no importa cómo evolucionen las rutas de cálculo, siempre será que todo el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 883 Las continuaciones llegarán a un punto en el que PI y, además, hay una continuación en la que PI siempre se mantiene. El objetivo ϕi 6 es una restricción de equidad implicada por él. Tenga en cuenta que A ♦ Pi dice que cada cálculo finalmente llega a un estado de PI. Esto puede significar que después de que Pi haya sucedido, nunca volverá a suceder.ϕi 6 evita esto: dice que, no importa dónde se encuentre, debería haber un futuro estado de PI. El objetivo ϕi 5 es como el objetivo fuerte ϕi 8, pero acepta que esto solo se logra en algún cálculo, eventualmente.ϕi 4 requiere que en cada camino, siempre hay una continuación que eventualmente le da a Pi. El objetivo ϕi 3 dice que Pi debería ser cierto en alguna rama, desde algún momento. Implica ϕi 2 que expresa que hay un cálculo de tal manera que en todas partes durante él, es posible elegir una continuación que eventualmente satisfaga a PI. Esto implica ϕi 1, lo que dice que PI al menos no debería ser imposible. Si incluso eliminamos esa demanda, tenemos el objetivo trivial ϕi 0. Observamos que puede parecer más natural expresar una restricción de equidad ϕi 6 como un ♦ pi. Sin embargo, esta no es una fórmula CTL adecuada. De hecho, es una fórmula en CTL ∗ [9], y en esta lógica, las dos expresiones serían equivalentes. Sin embargo, nuestros resultados básicos de complejidad en las siguientes secciones no se mantendrían para el lenguaje más rico CTL ∗ 2, y el precio a pagar por esto es que tenemos que formular nuestros objetivos deseados de una manera algo más engorrosa de lo que podríamos ser idealmente. Por supuesto, nuestro marco básico no exige que los objetivos se expresen en CTL;Se podrían expresar igualmente en CTL ∗ o de hecho ATL [2] (como en [15]). Comentamos sobre las implicaciones de las representaciones alternativas de objetivos al final de la siguiente sección. Un sistema de múltiples agentes recoge una estructura de Kripke (que representa las propiedades básicas de un sistema en consideración: su espacio de estado y las posibles transiciones de estado que pueden ocurrir en ella), junto con una jerarquía de objetivos, una para cada agente, que representa elAspiraciones de los agentes en el sistema. Formalmente, un sistema de múltiples agentes, M, es un (n + 1) -tuple: M = K, γ1 ,..., γn donde K es una estructura de Kripke, y para cada agente I en K, γi es una jerarquía de objetivos sobre K. 4.1 La utilidad de los sistemas normativos ahora podemos definir la utilidad de una estructura de Krocipke para un agente. La idea es que la utilidad de una estructura de Kripke es el índice más alto de cualquier objetivo garantizado para ese agente en la estructura de Kripke. Hacemos esto preciso en la función ui (·): ui (k) = max {j: 0 ≤ j ≤ | γi |& K | = γi [j]} Tenga en cuenta que, utilizando estas definiciones de objetivos y utilidad, nunca tiene sentido tener un objetivo ϕ en el índice n si hay un objetivo lógicamente más débil ψ en el índice n + k en la jerarquía:de utilidad, nunca podría ser N para ninguna estructura K. Ejemplo 1. (continuación) Sea M = K, γ1, γ2 el sistema multiagente de la Figura 1, con γ1 y γ2 como se definió anteriormente en este ejemplo. Recuerde que hemos definido S0 como {S, T}. Entonces, u1 (k) = u2 (k) = 4: el objetivo ϕ4 es verdadero en S0, pero ϕ5 no lo es. Para ver que ϕ2 4 = A E ♦ P2 es verdadero en S, por ejemplo, tenga en cuenta que en la ruta siempre es el caso de que hay una transición a T, en la que P2 es verdadero. Tenga en cuenta que, dado que para cualquier jerarquía de objetivos γi tenemos γ [0] =, entonces para todas las estructuras de Kripke, UI (K) está bien definida, con UI (K) ≥ 2 CTL ∗ La comprobación del modelo es PSPACE-COMPLETE y, por lo tanto, mucho peor(Bajo supuestos teóricos de complejidad estándar) que la verificación del modelo CTL [8].η Δ1 (k, η) Δ2 (k, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figura 2: Beneficios de implementar un sistema normativo η (izquierda) y pagos para el juego σm.0. Tenga en cuenta que esta es una medida de utilidad ordinal: nos dice, para cualquier agente determinado, la utilidad relativa de diferentes estructuras de Kripke, pero los valores de utilidad no están en alguna escala estándar de todo el sistema. El hecho de que UI (K1)> UI (K2) ciertamente significa que prefiere estrictamente K1 sobre K2, pero el hecho de que UI (K)> Uj (k) no significa que valora K más bien que J. Por lo tanto, no tiene sentido comparar los valores de utilidad entre los agentes, y por ejemplo, algunas medidas de utilidad del sistema (especialmente aquellas medidas que agregan las utilidades individuales, como el bienestar social), no tienen sentido cuando se aplican en este entorno. Sin embargo, como veremos en breve, se pueden aplicar otras medidas, como la eficiencia de Pareto. Hay otras representaciones para los objetivos, lo que nos permitiría definir los servicios públicos cardinales. Lo más simple sería especificar los objetivos γ para un agente como una relación finita, no vacía, uno a uno: γ ⊆ L × R. Suponemos que los valores X en los pares (ϕ, x) ∈ γ se especifican para que X para el agente I significa lo mismo que X para el Agente J, por lo que tenemos utilidad cardinal. Luego definimos la utilidad para i de una estructura Kripke k asui (k) = max {x: (ϕ, x) ∈ γi & k | = ϕ}. Los resultados de este documento, de hecho, se mantienen independientemente de cuáles de estas representaciones realmente elegimos;Nos fijamos en el enfoque de la jerarquía de objetivos en interés de la simplicidad. Nuestro siguiente paso es mostrar cómo, de la misma manera, podemos levantar la función de utilidad de las estructuras de Kripke a los sistemas normativos. Supongamos que se nos da un sistema de múltiples agentes M = K, γ1 ,..., γn y un sistema normativo asociado η sobre K. Sea para el agente I, Δi (k, k) la diferencia en su utilidad cuando se mueve de k a k: Δi (k, k) = ui (k) - ui (k). Entonces la utilidad de η al agente I Wrt K es Δi (k, k † η). A veces abusaremos de la notación y simplemente escribiremos ΔI (k, η) para esto, y referiremos a ella como el beneficio del Agente I de implementar η en K. Tenga en cuenta que este beneficio puede ser negativo. Resumiendo, la utilidad de un sistema normativo a un agente es la diferencia entre la utilidad de la estructura Kripke en la que se implementó el sistema normativo y la estructura original de Kripke. Si este valor es mayor que 0, entonces el agente estaría mejor si se impusiera el sistema normativo, mientras que si es inferior a 0, entonces el agente estaría peor si η se impusiera que en el sistema original. Decimos que η es individualmente racional para i wrt k si Δi (k, η)> 0, y simpliciter racional individualmente si η es individualmente racional para cada agente. Un sistema social ahora es un par σ = M, η donde M es un sistema de múltiples agentes, y η es un sistema normativo sobre m. EJEMPLO 1. La tabla en la mano izquierda en la Figura 2 muestra las utilidades Δi (k, η) de implementar η en la estructura Kripke de nuestro ejemplo de ejecución, para los sistemas normativos η = η∅, η1, η2 y η3, introducido antes. Recuerde que u1 (k) = u2 (k) = 4. 4.2 Objetivos universales y existenciales 884 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) teniendo en cuenta que una norma η restringe las posibles transiciones del modelo en consideración, hacemos la siguiente observación, tomando prestado de [15]. Algunas clases de objetivos son monotónicas o antimonotónicas con respecto a agregar restricciones adicionales a un sistema. Por lo tanto, definamos dos fragmentos del lenguaje de CTL: el lenguaje universal lu con elemento típico μ, y el fragmento existencial LE con elemento típico ε.μ :: = |P |¬P |μ ∨ μ |A Fμ |A μ |A (μ u μ) ε :: = |P |¬P |ε ∨ ε |E Fε |E ♦ ε |E (ε u ε) digamos, para dos estructuras de Kripke K1 = S, S0, R1, A, α, V y K2 = S, S0, R2, A, α, V que K1 es un subsistema de K2 y K2es un supersistema de K1, escrito K1 K2 IFF R1 ⊆ R2. Tenga en cuenta que típicamente k † η K. entonces tenemos (cf. [15]). Teorema 1. Suponga K1 k2, y s ∈ S. entonces ∀ε ∈ LE: K1, S | = ε ⇒ K2, S | = ε ∀μ ∈ Lu: K2, S | = μ ⇒ K1, S | = μ tiene lo siguienteEfecto al imponer una nueva norma: Corolario 1. Sea K una estructura, y η un sistema normativo. Deje que γi denote una jerarquía de objetivos para el agente i.1. Suponga que el agente es la utilidad UI (k) es n, y γi [n] ∈ Lu, (es decir, γi [n] es una fórmula universal). Luego, para cualquier sistema normativo η, Δi (k, η) ≥ 0. 2. Supongamos que el agente es UI UI (K † η) es N, y γi [n] es una fórmula existencial ε. Luego, Δi (k † η, k) ≥ 0. Corolario 1S Primer elemento dice que un agente cuyo objetivo máximo actual en un sistema es una fórmula universal, nunca debe temer la imposición de una nueva norma η. La razón es que su objetivo actual al menos seguirá siendo cierto (de hecho, un gol más alto en la jerarquía puede ser cierto). De esto se deduce que un agente con solo objetivos universales solo puede obtener de la imposición de sistemas normativos η. Lo contrario es cierto para los objetivos existenciales, según el segundo elemento del corolario: nunca puede ser malo que un agente deshace una norma η. Por lo tanto, un agente con solo objetivos existenciales podría temer cualquier norma η. Sin embargo, estas observaciones suponen implícitamente que todos los agentes en el sistema cumplirán con la norma. Si de hecho lo harán, por supuesto, es una decisión estratégica: depende en parte de lo que el agente cree que otros agentes harán. Esto nos motiva a considerar los juegos normativos del sistema.5. Juegos del sistema normativo Ahora tenemos una forma principalmente de hablar sobre la utilidad de los sistemas normativos para los agentes, por lo que podemos comenzar a aplicar el aparato técnico de la teoría de juegos para analizarlos. Supongamos que tenemos un sistema de múltiples agentes M = K, γ1 ,..., γn y un sistema normativo η sobre K. Se propone a los agentes en M que η debe imponerse a K (típicamente para lograr algún objetivo de coordinación). Nuestro agente, digamos el Agente I, se enfrenta a una opción: ¿Debería cumplir con las restricciones del sistema normativo, o no? Tenga en cuenta que este razonamiento tiene lugar antes de que el agente esté en el sistema: es una consideración de tiempo de diseño. Podemos entender el razonamiento aquí como un juego, como sigue. Un juego en forma normal estratégica (cf. [11, p.11]) es una estructura: G = AG, S1 ,..., Sn, U1 ,..., Un Where: • Ag = {1 ,..., n} es un conjunto de agentes: los jugadores del juego;• Si es el conjunto de estrategias para cada agente i ∈ Ag (una estrategia para un agente I no es más que una elección entre acciones alternativas);y • UI: (S1 × · · · × Sn) → R es la función de utilidad para el agente i ∈ Ag, que asigna una utilidad a cada combinación de opciones de estrategia para los agentes. Ahora, supongamos que se nos da un sistema social σ = m, η donde m = k, γ1 ,..., γn. Luego podemos asociar un juego, el juego del sistema normativo, gς con σ, como sigue. Los agentes AG en Gς son como en σ. Cada agente I tiene solo dos estrategias disponibles: • C - Realice (coopere) con el sistema normativo;y • D - No cumpla con (defecto de) el sistema normativo. Si S es una tupla de estrategias, una para cada agente, y x ∈ {c, d}, entonces denotamos por agx s subconjunto de agentes que juegan la estrategia X en S. Por lo tanto, para un sistema social σ = m, η, el sistema normativo η Agc s solo implementa las restricciones para aquellos agentes que eligen cooperar en Gς. Tenga en cuenta que esto es lo mismo que η AGD S: el sistema normativo que excluye todas las restricciones de los agentes que juegan D en Gς. Luego definimos las funciones de utilidad UI para cada i ∈ Ag como: ui (s) = Δi (k, η agc s). Entonces, por ejemplo, si SD es una colección de estrategias en la que cada agente defecta (es decir, no cumple con la norma), entonces ui (SD) = Δi (k, (η agd sd)) = ui (k † η∅) - ui (k) = 0. De la misma manera, si SC es una colección de estrategias en la que cada agente coopera (es decir, cumple con la norma), entonces ui (sc) = Δi (k, (η agd sc)) = ui (k † (η ∅)) = ui (k † η). Ahora podemos comenzar a investigar algunas propiedades de los juegos normativos del sistema. Ejemplo 1. (continuación) Para nuestro sistema de ejemplo, hemos mostrado los diferentes valores de U para nuestro sistema de agente múltiple con la norma η3, es decir, {(s, s), (t, t)} como la segunda tabla de la Figura 2. Por ejemplo, el par (0, 3) en la matriz debajo de la entrada S = C, D se obtiene de la siguiente manera. U1 (c, d) = Δ1 (k, η3 agc c, d) = u1 (k † η3 agc c, d) - u1 (k). El primer término de esto es la utilidad de 1 en el sistema K, donde implementamos η3 para el agente cooperante, es decir, 1, solo. Esto significa que las transiciones son r \\ {(s, s)}. En este sistema, todavía ϕ1 4 = A E ♦ P1 es el objetivo más alto para el Agente 1. Esta es la misma utilidad para 1 que en K, y por lo tanto, Δ1 (k, η3 Agc C, D) = 0. Agente 2 de los beneficios del curso Si el Agente 1 cumple con η3 mientras que 2 no lo hace. Su utilidad sería 3, ya que η3 Agc C, D es de hecho η1.5.1 Sistemas normativos racionales individuales Un sistema normativo es individualmente racional si a cada agente le iría mejor si se impusiera el sistema normativo que de otra manera. Esta es una condición necesaria, aunque no suficiente en una norma para esperar que todos lo respeten. Tenga en cuenta que η3 de nuestro ejemplo es individualmente racional para 1 y 2, aunque esta no es una situación estable: dado que el otro juega C, es mejor jugando D. Podemos caracterizar fácilmente la racionalidad individual con respecto al juego correspondienteEn forma estratégica, como sigue. Sea σ = m, η un sistema social. Entonces los siguientes son equivalentes: el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 885 F (XK) ... S0 S1 S2 S3 S4 S (2K-1) S2K T (X1) F (X1) T (X2) F (X2) T (xk) Figura 3: La estructura Kripke producida en la reducción del teorema 2;Todas las transiciones están asociadas con el Agente 1, el único estado inicial es S0.1. η es individualmente racional en M;2. ∀i ∈ Ag, ui (sc)> ui (sd) en el juego gς. El problema de decisión asociado con los sistemas normativos racionales individuales es el siguiente: Sistema normativo racional individualmente (IRNS): Dado: Sistema de agente múltiple m. Pregunta: ¿Existe un sistema normativo racional individualmente para M? Teorema 2. IRNS es NP-completado, incluso en sistemas de un agente. PRUEBA. Para la membresía de NP, adivine un sistema normativo η, y verifique que sea individualmente racional. Desde η ⊆ r, podremos adivinarlo en el tiempo polinomial no determinista. Para verificar que es individualmente racional, verificamos que para todos los i, tenemos ui (k † η)> ui (k);La computación k † η se establece la resta, por lo que se puede hacer en el tiempo polinomial, al tiempo que determinar el valor de UI (k) para cualquier k se puede hacer con un número polinomial de llamadas de verificación de modelos, cada una de las cuales requiere solo tiempo polinomial en elK y γ. Por lo tanto, verificar que UI (K † η)> ui (k) solo requiere tiempo polinomial. Para NP-Hardness, reducimos el SAT [12, p.77]. Dada una instancia SAT ϕ sobre las variables booleanas x1 ,..., XK, producimos una instancia de IRNS de la siguiente manera. Primero, definimos un solo agente a = {1}. Para cada variable booleana Xi en la instancia de SAT, creamos dos variables booleanas t (xi) y f (xi) en la instancia de IRNS. Luego creamos una estructura de Kripke Kϕ con estados 2K + 1, como se muestra en la Figura 3: Los arcos en este gráfico corresponden a transiciones en Kϕ. Sea ϕ ∗ el resultado de sustituir sistemáticamente por cada variable booleana xi en ϕ la expresión CTL (e ft (xi)). A continuación, considere las siguientes fórmulas: k^ i = 1 e f (t (xi) ∨ f (xi)) (1) k^ i = 1 ¬ ((e ft (xi)) ∧ (e ff (xi))) (2) Luego definimos la jerarquía de objetivos para todos los agentes 1 de la siguiente manera: γ1 [0] = γ1 [1] = (1) ∧ (2) ∧ ϕ ∗ Afirmamos que hay un sistema normativo racional individualmente para la instanciaconstruido IFF ϕ es satisfactable. Primero, observe que cualquier sistema normativo racional individualmente debe forzar γ1 [1] a ser verdadero, ya que en el sistema original, no tenemos γ1 [1]. Para la dirección ⇒, si hay un sistema normativo racional individualmente η, entonces construimos una tarea satisfactoria para ϕ considerando los arcos que están prohibidos por η: la fórmula (1) asegura que debemos prohibir un arco a una t (xi)o un estado F (xi) para todas las variables xi, pero (2) asegura que no podamos prohibir los arcos a ambos. Entonces, si prohibimos un arco a un estado t (xi), entonces en la valoración correspondiente para ϕ hacemos xi falso, mientras que si prohibimos un arco a un estado f (xi), entonces hacemos que Xi sea verdadero. El hecho de que ϕ ∗ sea parte del objetivo asegura que el sistema normativo sea de hecho una valoración para ϕ. Para ⇐, tenga en cuenta que para cualquier valoración satisfactoria para ϕ podemos construir un sistema normativo racional individualmente η, de la siguiente manera: si la valoración hace que Xi sea verdadera, prohíbe el arco al estado F (xi), mientras que si la valoración hace que Xi false, prohibimos el arco al estado t (xi). El sistema normativo resultante asegura γ1 [1] y, por lo tanto, es individualmente racional. Observe que la estructura Kripke construida en la reducción contiene solo un agente, por lo que se demuestra el teorema.5.2 Sistemas normativos de Pareto eficiente Pareto La eficiencia es una medida básica de cuán bueno es un resultado particular para un grupo de agentes [11, p.7]. Intuitivamente, un resultado es pareto eficiente si no hay otro resultado que haga que cada agente sea mejor. En nuestro marco, supongamos que se nos da un sistema social σ = m, η, y preguntó si η es pareto eficiente. Esto equivale a preguntar si hay o no algún otro sistema normativo η de modo que cada agente estaría mejor bajo η que con η. Si η mejora a cada agente que η, entonces decimos que η Pareto domina η. El problema de decisión es el siguiente: Sistema normativo eficiente de Pareto (Pens): Dado: Sistema de múltiples agentes M y sistema normativo η sobre m. Pregunta: ¿Es eficiente η Pareto para M? Teorema 3. Los bolígrafos son CO-NP completos, incluso para sistemas de un agente. PRUEBA. Sea M y η como en el teorema. Mostramos que el problema del complemento a los bolígrafos, al que nos referimos como dominado por Pareto, es NP Completo. En este problema, se nos da m y η, y se nos pregunta si η está dominado por Pareto, es decir, si existe o no algunos η sobre M tal que η hace que cada agente sea mejor que η. Para la membresía de NP, simplemente adivine un sistema normativo η, y verifique que para todos los i ∈ A, tenemos ui (k † η)> ui (k † η) - verificar requiere un número polinomial de problemas de verificación de modelos, cada uno de los cualesToma tiempo polinomial. Como η ⊆ R, el sistema normativo se puede adivinar en el tiempo polinomial no determinista. Para la duración de NP, reducimos los IRN, que sabemos que son NPComplete del Teorema 2. Dada una instancia M de IRNS, dejamos que M en el caso de Pareto dominado sea como en la instancia de IRNS, y definimos el sistema normativo para que Pareto dominado sea η∅, el sistema normativo vacío. Ahora, es sencillo que exista un sistema normativo η que Pareto domina η∅ en M Iff existe un sistema normativo racional individualmente en m. Dado que el problema del complemento es NP-Completo, se deduce que los bolígrafos son CO-NP-Completo.886 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (aamas 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 U1 (k † η) 4 4 7 6 5 0 0 8 0 U2 (k † η) 4 7 4 6 0 5 8 0 0 00 Tabla 1: Utilidades para todas las normas posibles en nuestro ejemplo ¿Qué hay de las normas eficientes de Pareto para nuestro ejemplo de juguete? Establecer esta pregunta equivale a encontrar los sistemas normativos dominantes entre η0 = η∅, η1, η2, η3 definido antes, y η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s), s), (t, s)}, η7 = {(t, t), (s, t)} y η8 = {(s, t), (t, s)}. Las utilidades para cada sistema se dan en la Tabla 1. A partir de esto, inferimos que las normas eficientes de Pareto son η1, η2, η3, η6 y η7. Tenga en cuenta que η8 prohíbe que el recurso se transfiera de un agente a otro, y esto no es bueno para ningún agente (ya que hemos elegido s0 = {s, t}, ningún agente puede estar seguro de obtener el recurso, es decir, el objetivoϕi 1 no es cierto en k † η8).5.3 Sistemas normativos de implementación de NASH El concepto de solución más famoso en la teoría del juego es, por supuesto, el equilibrio de Nash [11, p.14]. Se dice que una colección de estrategias, una para cada agente, forma un equilibrio de Nash si ningún agente puede beneficiarse haciendo otra cosa que no sea jugar su estrategia, bajo el supuesto de que los otros agentes juegan el suyo. Los equilibrios de Nash son importantes porque proporcionan soluciones estables al problema de qué estrategia debe jugar un agente. Tenga en cuenta que en nuestro ejemplo de juguete, aunque η3 es individualmente racional para cada agente, no es un equilibrio de Nash, ya que dada esta norma, sería beneficioso que el Agente 1 se desvíe (y del mismo modo para 2). En nuestro marco, decimos que un sistema social σ = M, η (donde η = η∅) es una implementación de Nash si SC (es decir, todos que cumplen con el sistema normativo) forma un equilibrio NASH en el juego Gς. La intuición es que si σ es una implementación de NASH, entonces cumplir con el sistema normativo es una solución razonable para todos los interesados: no puede haber ningún beneficio para desviarse de él, de hecho, hay un incentivo positivo para que todos cumplan. Si σ no es una implementación de NASH, entonces es poco probable que el sistema normativo tenga éxito, ya que el cumplimiento no es racional para algunos agentes.(Nuestra elección de terminología se elige deliberadamente para reflejar la forma en que el término implementación de NASH se utiliza en la teoría de la implementación o el diseño del mecanismo [11, p.185], donde un diseñador de juegos busca lograr algunos resultados diseñando las reglas del juego de este tipo de juego.que estos resultados son equilibrios). Implementación de NASH (NI): Dado: Sistema de múltiples agentes m. Pregunta: ¿Existe un sistema normativo no vacío η sobre M tal que m, η forma una implementación de NASH? Verificar que un sistema social particular forma una implementación de NASH se puede hacer en el tiempo polinomial: equivale a verificación: ∀i ∈ A: ui (k † η) ≥ ui (k † (η {i})). Esto claramente requiere solo un número polinomial de llamadas de verificación de modelos, cada una de las cuales requiere solo tiempo polinomial. Teorema 4. El problema de NI es NP-completado, incluso para sistemas de dosagentes. PRUEBA. Para la membresía de NP, simplemente adivine un sistema normativo η y verifique que forme una implementación de NASH;Dado que η ⊆ r, la adivinación se puede hacer en el tiempo polinomial no determinista, y como S (2k+1) 1 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 T (X1) F(x1) t (x2) f (x2) t (xk) f (xk) 2 2 t (x1) f (x1) t (x2) f (x2) t (xk) f (xk) ..... ...... S0 Figura 4: Reducción para el teorema 4. Argumentamos anteriormente, verificando que forma una implementación de NASH se puede hacer en tiempo polinomial. Para NP-Hardness, reducimos el SAT. Supongamos que se nos da una instancia de SAT ϕ sobre las variables booleanas x1 ,..., xk. Luego construimos una instancia de Ni como sigue. Creamos dos agentes, a = {1, 2}. Para cada variable booleana Xi creamos dos variables booleanas, t (xi) y f (xi), y luego definimos una estructura Kripke como se muestra en la Figura 4, siendo S0 el único estado inicial;El etiquetado de ARC en la Figura 4 proporciona la función α, y cada estado está marcado con las proposiciones que son ciertas en ese estado. Para cada variable booleana xi, definimos las fórmulas Xi y X⊥ I como sigue: xi = e f (t (xi) ∧ e f ((e f (t (xi))) ∧ a f (¬f (xi)))) x⊥ i = e f (f (xi) ∧ e f ((e f (f (xi))) ∧ a f (¬t (xi)))) que ϕ ∗ sea la fórmula obtenida de ϕ porSustituyendo sistemáticamente Xi por XI. Cada agente tiene tres objetivos: γi [0] = para ambos i ∈ {1, 2}, mientras que γ1 [1] = k^ i = 1 ((e f (t (xi))) ∧ (e f (f (f (f (f (f (f (f (f (f (f (F (xi)))) γ2 [1] = E Fe f k^ i = 1 ((e f (t (xi))) ∧ (e f (f (f (xi)))) y finalmente, para ambos agentes, γi [2] siendo la conjunción de las siguientes fórmulas: la sexta intl. Conf.en agentes autónomos y sistemas de múltiples agentes (aamas 07) 887 k^ i = 1 (xi ∨ x⊥ i) (3) k^ i = 1 ¬ (xi ∧ x⊥ i) (4) k^ i = 1 ¬(E f (t (xi)) ∧ e f (f (xi))) (5) ϕ ∗ (6) Denotamos el sistema de múltiples agentes así construido por Mϕ. Ahora, demostramos que la instancia de SAT ϕ es satisfactable si Mϕ tiene un sistema normativo de implementación NASH: para la dirección ⇒, supongamos que ϕ es satisfactable y que X sea una valoración satisfactoria, es decir, un conjunto de variables booleanas que hacen ϕ verdadero. Podemos extraer del sistema normativo de implementación X A Nash η de la siguiente manera: si xi ∈ X, entonces η incluye el arco de S0 al estado en el que F (xi) es verdadero, y también incluye el arco de S (2k + 1)al estado en el que f (xi) es verdadero;Si xi ∈ X, entonces η incluye el arco de S0 al estado en el que t (xi) es verdadero, y también incluye el arco de S (2k + 1) al estado en el que t (xi) es verdadero. Ningún otro arco, aparte de los tan definidos, como se incluye en η. Observe que η es individualmente racional para ambos agentes: si ambos cumplen con el sistema normativo, entonces tendrán sus objetivos γi [2] alcanzados, que no lo hacen en el sistema básico. Para ver que η forma una implementación de NASH, observe que si cualquiera de los agentes se defecta de η, tampoco tendrá sus objetivos γi [2] alcanzados: el agente 1 prefiere estrictamente (c, c) sobre (d, c) y agente 2 estrictamentePrefiere (C, C) sobre (C, D). Para la dirección ⇐, suponga que existe un sistema normativo de implementación NASH η, en cuyo caso η = ∅. Entonces ϕ es satisfactable;para suponer no. Entonces los objetivos γi [2] no se pueden alcanzar por ningún sistema normativo (por construcción). Ahora, dado que η debe prohibir al menos una transición, entonces al menos un agente no se logrará su objetivo γi [1] si cumpliera, por lo que al menos uno lo haría mejor al desertar, es decir, no cumplir con η. Pero esto contradice la suposición de que η es una implementación de NASH, es decir, que (C, C) forma un equilibrio de Nash. Este resultado es quizás de algún interés técnico más allá de las preocupaciones específicas del presente documento, ya que está relacionado con dos problemas que son de interés más amplio: la complejidad del diseño del mecanismo [5] y la complejidad de calcular los equilibrios de Nash [6, 7, 7] 5.4 Lenguajes de objetivos más ricos Es interesante considerar lo que sucede con la complejidad de los problemas que consideramos anteriormente si permitimos idiomas más ricos para las metas: en particular, CTL ∗ [9]. La principal diferencia es que determinar la interfaz de usuario (k) en un sistema múltiple de agente m dado cuando se usa dicho lenguaje de gol implica resolver un problema complementario de PSPACE (ya que la verificación del modelo para CTL ∗ es PSPACE-Complete [8]). De hecho, parece que para cada uno de los tres problemas que consideramos anteriormente, el problema correspondiente bajo la suposición de una representación CTL ∗ para los objetivos también es completado por PSPACE. No puede ser más fácil, ya que determinar la utilidad de una estructura de Kripke en particular implica resolver un problema complicado de PSPACE. Para ver la membresía en PSPACE, podemos explotar el hecho de que PSPACE = NPSPACE [12, p.150], por lo que podemos adivinar el sistema normativo deseado, aplicando un procedimiento de verificación PSPACE para verificar que tenga las propiedades deseadas.6. Conclusiones Se supone que las normas sociales restringen nuestro comportamiento. Por supuesto, tal restricción no tiene que ser mala: el hecho de que el comportamiento de los agentes esté restringido puede parecer una limitación, pero puede haber beneficios si puede suponer que otros también limitarán su comportamiento. La pregunta entonces, para un agente es, cómo asegurarse de que otros cumplirán con una norma. Y, para un diseñador de sistemas, cómo asegurarse de que el sistema se comportará socialmente, es decir, según su norma. La teoría del juego es una herramienta muy natural para analizar y responder estas preguntas, que implican consideraciones estratégicas, y hemos propuesto una forma de traducir preguntas clave sobre los sistemas normativos basados en la lógica a las preguntas teóricas del juego. Hemos propuesto un marco lógico para razonar sobre tales escenarios, y hemos dado algunos costos computacionales para resolver algunas de las preguntas principales sobre ellos. Por supuesto, nuestro enfoque está en muchos sentidos abierto para la extensión o enriquecimiento. Un problema obvio es considerar es la complejidad de las preguntas que damos para representaciones más prácticas de los modelos (cf. [1]), y considerar otras clases de objetivos permitidos.7. Referencias [1] T. Agotnes, W. van der Hoek, J. A. Rodríguez-Aguilar, C. Sierra y M. Wooldridge. Sobre la lógica de los sistemas normativos. En Proc. IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger y O. Kupferman. Lógica temporal de tiempo alterno. Jnl.de la ACM, 49 (5): 672-713, 2002. [3] K. Binmore. Teoría del juego y el contrato social Volumen 1: Jugar justo. The MIT Press: Cambridge, MA, 1994. [4] K. Binmore. Teoría del juego y el Contrato Social Volumen 2: Solo jugando. The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer y T. Sandholm. Complejidad del diseño del mecanismo. En Proc. UAI, Edmonton, Canadá, 2002. [6] V. Conitzer y T. Sandholm. Resultados de complejidad sobre los equilibrios de Nash. En Proc. IJCAI-03, pp. 765-771, Acapulco, México, 2003. [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou. La complejidad de calcular un equilibrio de Nash. En Proc. Stoc, Seattle, WA, 2006. [8] E. A. Emerson. Lógica temporal y modal. En Manual de teoría. Comp. Sci. Volumen B, páginas 996-1072. Elsevier, 1990. [9] E. A. Emerson y J. Y. Halpern. A veces y nunca revisado: en el tiempo de ramificación versus la lógica temporal de tiempo lineal. Jnl.de la ACM, 33 (1): 151-178, 1986. [10] D. Fitoussi y M. Tennenholtz. Elegir leyes sociales para sistemas de múltiples agentes: minimalidad y simplicidad. Inteligencia Artificial, 119 (1-2): 61-101, 2000. [11] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham y M. Tennenholtz. Sobre la síntesis de leyes sociales útiles para las sociedades de agentes artificiales. En Proc. AAAI, San Diego, CA, 1992. [14] Y. Shoham y M. Tennenholtz. Sobre las leyes sociales para las sociedades de agentes artificiales: diseño fuera de línea. En teorías computacionales de interacción y agencia, páginas 597-618. The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts y M. Wooldridge. Leyes sociales en tiempo alternativo: efectividad, viabilidad y síntesis. Synthese, 2007. [16] M. Wooldridge y W. van der Hoek. Sobre obligaciones y capacidad normativa. Jnl.de Appl. Lógica, 3: 396-420, 2005. 888 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07)",
    "original_sentences": [
        "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
        "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
        "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
        "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
        "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
        "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
        "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
        "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
        "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
        "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
        "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
        "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
        "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
        "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
        "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
        "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
        "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
        "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
        "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
        "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
        "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
        "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
        "We let S0 denote the set of possible initial states of the system.",
        "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
        "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
        "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
        "However, we find it convenient to include within our model the agents that cause transitions.",
        "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
        "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
        "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
        "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
        "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
        "A path π such that π[0] = s is an s-path.",
        "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
        "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
        "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
        "Consider the Kripke structure depicted in Figure 1.",
        "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
        "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
        "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
        "Think of pi as meaning agent i has currently control over the resource.",
        "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
        "Obviously there are infinitely many different s-paths and t-paths.",
        "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
        "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
        "We will use CTL to express agents goals.",
        "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
        "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
        "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
        "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
        "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
        "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
        "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
        "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
        "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
        "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
        "Different normative systems may differ on whether or not a transition is legal.",
        "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
        "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
        "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
        "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
        "We denote the empty normative system by η∅, so η∅ = ∅.",
        "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
        "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
        "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
        "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
        "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
        "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
        "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
        "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
        "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
        "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
        "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
        "Note that we have η C = η (A\\C) and η C = η (A\\C).",
        "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
        "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
        "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
        "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
        "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
        "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
        "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
        "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
        "We denote the largest index of any element in γ by |γ|.",
        "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
        "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
        "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
        "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
        "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
        "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
        "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
        "Goal ϕi 6 is a fairness constraint implied by it.",
        "Note that A♦pi says that every computation eventually reaches a pi state.",
        "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
        "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
        "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
        "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
        "This implies ϕi 1, which says that pi should at least not be impossible.",
        "If we even drop that demand, we have the trivial goal ϕi 0.",
        "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
        "However, this is not a proper CTL formula.",
        "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
        "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
        "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
        "We comment on the implications of alternative goal representations at the conclusion of the next section.",
        "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
        "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
        "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
        "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
        "Recall that we have defined S0 as {s, t}.",
        "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
        "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
        "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
        "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
        "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
        "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
        "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
        "There are other representations for goals, which would allow us to define cardinal utilities.",
        "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
        "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
        "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
        "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
        "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
        "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
        "Then the utility of η to agent i wrt K is δi (K, K † η).",
        "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
        "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
        "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
        "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
        "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
        "EXAMPLE 1.",
        "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
        "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
        "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
        "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
        "Note that typically K † η K. Then we have (cf. [15]).",
        "THEOREM 1.",
        "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
        "Let K be a structure, and η a normative system.",
        "Let γi denote a goal hierarchy for agent i. 1.",
        "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
        "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
        "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
        "Then, δi (K † η, K) ≥ 0.",
        "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
        "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
        "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
        "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
        "Hence, an agent with only existential goals might well fear any norm η.",
        "However, these observations implicitly assume that all agents in the system will comply with the norm.",
        "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
        "This motivates us to consider normative system games. 5.",
        "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
        "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
        "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
        "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
        "We can understand the reasoning here as a game, as follows.",
        "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
        "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
        "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
        "The agents AG in GΣ are as in Σ.",
        "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
        "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
        "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
        "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
        "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
        "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
        "We can now start to investigate some properties of normative system games.",
        "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
        "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
        "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
        "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
        "This means that the transitions are R \\ {(s, s)}.",
        "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
        "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
        "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
        "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
        "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
        "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
        "Let Σ = M , η be a social system.",
        "Then the following are equivalent: The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
        "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
        "Question: Does there exist an individually rational normative system for M ?",
        "THEOREM 2.",
        "IRNS is NP-complete, even in one-agent systems.",
        "PROOF.",
        "For membership of NP, guess a normative system η, and verify that it is individually rational.",
        "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
        "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
        "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
        "For NP-hardness, we reduce SAT [12, p.77].",
        "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
        "First, we define a single agent A = {1}.",
        "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
        "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
        "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
        "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
        "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
        "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
        "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
        "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
        "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
        "The resulting normative system ensures γ1[1], and is thus individually rational.",
        "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
        "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
        "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
        "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
        "If η makes every agent better off than η, then we say η Pareto dominates η.",
        "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
        "Question: Is η Pareto efficient for M ?",
        "THEOREM 3.",
        "PENS is co-NP-complete, even for one-agent systems.",
        "PROOF.",
        "Let M and η be as in the Theorem.",
        "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
        "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
        "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
        "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
        "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
        "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
        "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
        "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
        "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
        "The utilities for each system are given in Table 1.",
        "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
        "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
        "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
        "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
        "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
        "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
        "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
        "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
        "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
        "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
        "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
        "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
        "THEOREM 4.",
        "The NI problem is NP-complete, even for twoagent systems.",
        "PROOF.",
        "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
        "For NP-hardness, we reduce SAT.",
        "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
        "Then we construct an instance of NI as follows.",
        "We create two agents, A = {1, 2}.",
        "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
        "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
        "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
        "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
        "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
        "No other arcs, apart from those so defined, as included in η.",
        "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
        "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
        "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
        "Then ϕ is satisfiable; for suppose not.",
        "Then the goals γi [2] are not achievable by any normative system, (by construction).",
        "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
        "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
        "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
        "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
        "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
        "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
        "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
        "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
        "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
        "The question then, for an agent is, how to be sure that others will comply with a norm.",
        "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
        "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
        "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
        "Of course, our approach is in many senses open for extension or enrichment.",
        "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
        "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
        "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
        "On the logic of normative systems.",
        "In Proc.",
        "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
        "Alternating-time temporal logic.",
        "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
        "Game Theory and the Social Contract Volume 1: Playing Fair.",
        "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
        "Game Theory and the Social Contract Volume 2: Just Playing.",
        "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
        "Complexity of mechanism design.",
        "In Proc.",
        "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
        "Complexity results about nash equilibria.",
        "In Proc.",
        "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
        "The complexity of computing a Nash equilibrium.",
        "In Proc.",
        "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
        "Temporal and modal logic.",
        "In Handbook of Theor.",
        "Comp.",
        "Sci.",
        "Vol.",
        "B, pages 996-1072.",
        "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
        "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
        "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
        "Choosing social laws for multi-agent systems: Minimality and simplicity.",
        "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
        "A Course in Game Theory.",
        "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
        "Computational Complexity.",
        "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
        "On the synthesis of useful social laws for artificial agent societies.",
        "In Proc.",
        "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
        "On social laws for artificial agent societies: Off-line design.",
        "In Computational Theories of Interaction and Agency, pages 597-618.",
        "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
        "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
        "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
        "On obligations and normative ability.",
        "Jnl. of Appl.",
        "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
    ],
    "error_count": 0,
    "keys": {
        "normative system game": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the <br>normative system game</br> - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Luego podemos asociar un juego, el \"Juego de sistema normativo\", Gς con σ, como sigue.Juego de sistema normativo"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "multiple goals of increasing priority": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have <br>multiple goals of increasing priority</br>, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen \"múltiples objetivos de creciente prioridad\" e investigamos la complejidad computacional y las propiedades teóricas del juego de este modelo.múltiples objetivos de creciente prioridad"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "game theoretic properties": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and <br>game theoretic properties</br> of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos de creciente prioridad e investigamos la complejidad computacional y las \"propiedades teóricas del juego\" de este modelo.Propiedades teóricas del juego"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "kripke structure": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the <br>kripke structure</br>, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A <br>kripke structure</br> is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled <br>kripke structure</br> (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled <br>kripke structure</br> simply as a <br>kripke structure</br>.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the <br>kripke structure</br> depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a <br>kripke structure</br> and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some <br>kripke structure</br> K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a <br>kripke structure</br> K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a <br>kripke structure</br> is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a <br>kripke structure</br>, and η is a normative system over K, then K † η denotes the <br>kripke structure</br> obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the <br>kripke structure</br> K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a <br>kripke structure</br>, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the <br>kripke structure</br> that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the <br>kripke structure</br> that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a <br>kripke structure</br> K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular <br>kripke structure</br> K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a <br>kripke structure</br> (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a <br>kripke structure</br>, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a <br>kripke structure</br> for an agent.",
                "The idea is that the utility of a <br>kripke structure</br> is the highest index of any goal that is guaranteed for that agent in the <br>kripke structure</br>.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a <br>kripke structure</br> K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the <br>kripke structure</br> in which the normative system was implemented and the original <br>kripke structure</br>.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the <br>kripke structure</br> of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The <br>kripke structure</br> produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a <br>kripke structure</br> Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the <br>kripke structure</br> constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a <br>kripke structure</br> as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular <br>kripke structure</br> involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un sistema normativo es simplemente un subconjunto de la \"estructura Kripke\", que contiene los arcos que están prohibidos por el sistema normativo.Estructura de Kripke",
                "Una \"estructura de Kripke\" es esencialmente un gráfico dirigido, con el conjunto de vértices que corresponde a los posibles estados del sistema que se modela, y la relación R ⊆ S × S captura el 881 978-81-904262-7-5 (RPS) C2007 IFAAMAS Posibles transiciones del sistema;Intuitivamente, estas transiciones son causadas por agentes en el sistema que realizan acciones, aunque no incluimos tales acciones en nuestro modelo semántico (ver, por ejemplo, [13, 2, 15] para modelos relacionados que incluyen acciones como ciudadanos de primera clase).Estructura de Kripke",
                "La recolección de estos componentes juntas, una \"estructura de Kripke\" marcada con agente (más de φ) es un 6-tupla: K = S, S0, R, A, α, V, donde: • S es un conjunto finito y no vacío deEstados, • S0 ⊆ S (S0 = ∅) es el conjunto de estados iniciales;• R ⊆ S × S es una relación binaria total en S, que nos referimos como la relación de transición1;• a = {1 ,..., n} es un conjunto de agentes;• α: R → A etiqueta cada transición en R con un agente;y • V: S → 2φ etiqueta cada estado con el conjunto de variables proposicionales verdaderas en ese estado.Estructura de Kripke",
                "En aras de la brevedad, en adelante nos referiremos a una \"estructura Kripke\" de Agente simplemente como una \"estructura de Kripke\".Estructura de Kripke",
                "Considere la \"estructura de Kripke\" representada en la Figura 1. Estructura de Kripke",
                "La semántica de CTL se da con respecto a la relación de satisfacción | =, que se mantiene entre los pares de la forma k, s, (donde k es una \"estructura de kripke\" y s es un estado en k) y fórmulas del idioma.Estructura de Kripke",
                "Se definen los operadores temporales CTL restantes: a ♦ ϕ ≡ a (u ϕ) e ♦ ϕ ≡ e (u ϕ) a ϕ rims | = ϕ para alguna \"estructura kripke\" k y estado s en k;ϕ es válido si K, S | = ϕ para todas las estructuras de Kripke K y estados en K. El problema de verificar si K, S | = ϕ para K, S, ϕ (verificación del modelo) se puede hacer en tiempo polinomial determinista, mientras verifica si un ϕ dado es satisfactable o si ϕ es válido es exptime-complete [8].Estructura de Kripke",
                "Formalmente, un sistema normativo η (W.R.T. A \"Kripke Structure\" K = S, S0, R, A, α, V) es simplemente un subconjunto de R, de modo que R \\ η es una relación total.Estructura de Kripke",
                "Tenga en cuenta que el sistema normativo vacío η∅ es razonable con respecto a cualquier relación de transición R. El efecto de implementar un sistema normativo en una \"estructura de Kripke\" es eliminar de sus transiciones prohibidas de acuerdo con este sistema normativo (ver [15, 1]).Estructura de Kripke",
                "Si K es una \"estructura de Kripke\", y η es un sistema normativo sobre K, entonces K † η denota la \"estructura Kripke\" obtenida de K al eliminar las transiciones prohibidas en η.Estructura de Kripke",
                "Formalmente, si K = S, S0, R, A, α, V y η ∈ N (R), entonces deje que K † η = K sea la \"Estructura Kripke\" K = S, S0, R, A, α,V Donde: • S = S, S0 = S0, A = A y V = V;• r = r \\ η;y • α es la restricción de α a r: α (s, s) = j α (s, s) if (s, s) ∈ R indefinido de otra manera.Estructura de Kripke",
                "Formalmente, deje que K = S, S0, R, A, α, V sea una \"estructura de Kripke\", sea C ⊆ A un conjunto de agentes sobre K, y sea η un sistema normativo sobre K. Entonces: • η Cdenota el sistema normativo que es el mismo que η excepto que solo contiene los arcos de η que corresponden a las acciones de los agentes en C. llamamos η c la restricción de η a C, y se define como: η c = {(S, S): (S, S) ∈ η & α (S, S) ∈ C}.Estructura de Kripke",
                "Por lo tanto, K † (η c) es la \"estructura Kripke\" que resulta si solo los agentes en C eligen cumplir con el sistema normativo.• η c denota el sistema normativo que es el mismo que η excepto que solo contiene los arcos de η que no corresponden a acciones de agentes en C. llamamos η c la exclusión de C de η, y se define como:η c = {(s, s): (s, s) ∈ η & α (s, s) ∈ C}.Estructura de Kripke",
                "Por lo tanto, K † (η c) es la \"estructura Kripke\" que resulta si solo los agentes en C eligen no cumplir con el sistema normativo (es decir, los únicos que cumplen son los que están en A \\ C).Estructura de Kripke",
                "Formalmente, una jerarquía de objetivos, γ, (sobre una \"estructura de Kripke\" k) es una secuencia finita y no vacía de fórmulas CTL γ = (ϕ0, ϕ1, .., ϕk) en la que, por convención, ϕ0 =.Estructura de Kripke",
                "Se dice que una \"estructura de Kripke\" particular K satisface un objetivo en el índice X en la jerarquía de objetivos γ si k | = γ [x], es decir, si γ [x] está satisfecho en todos los estados iniciales s0 de K. una propiedad potencial obviade las jerarquías de objetivos es la monotonicidad: donde los objetivos en niveles más altos en la jerarquía implican lógicamente aquellos en niveles más bajos en la jerarquía.Estructura de Kripke",
                "Un sistema de múltiples agentes recoge una \"estructura de Kripke\" (que representa las propiedades básicas de un sistema bajo consideración: su espacio de estado y las posibles transiciones de estado que pueden ocurrir en ella), junto con una jerarquía de objetivos, una para cada agente,representando las aspiraciones de los agentes en el sistema.Estructura de Kripke",
                "Formalmente, un sistema de múltiples agentes, M, es un (n + 1) -tuple: M = K, γ1 ,..., γn donde K es una \"estructura de Kripke\", y para cada agente I en K, γi es una jerarquía de objetivos sobre K. 4.1 La utilidad de los sistemas normativos ahora podemos definir la utilidad de una \"estructura de Kripke\" para un agente.Estructura de Kripke",
                "La idea es que la utilidad de una \"estructura de Kripke\" es el índice más alto de cualquier objetivo garantizado para ese agente en la \"estructura de Kripke\".Estructura de Kripke",
                "Luego definimos la utilidad para i de una \"estructura de Kripke\" k asui (k) = max {x: (ϕ, x) ∈ γi & k | = ϕ}.Estructura de Kripke",
                "Resumiendo, la utilidad de un sistema normativo a un agente es la diferencia entre la utilidad de la \"estructura de Kripke\" en la que se implementó el sistema normativo y la \"estructura Kripke\" original.Estructura de Kripke",
                "La tabla en la mano izquierda en la Figura 2 muestra las utilidades Δi (k, η) de implementar η en la \"estructura Kripke\" de nuestro ejemplo de ejecución, para los sistemas normativos η = η∅, η1, η2 y η3, introducido antes.Estructura de Kripke",
                "Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 885 F (XK) ... S0 S1 S2 S3 S4 S (2K-1) S2K T (X1) F (X1) T (X2) F (X2) T (xk) Figura 3: La \"estructura Kripke\" producida en la reducción del teorema 2;Todas las transiciones están asociadas con el Agente 1, el único estado inicial es S0.1. η es individualmente racional en M;2. ∀i ∈ Ag, ui (sc)> ui (sd) en el juego gς.Estructura de Kripke",
                "Luego creamos una \"estructura de Kripke\" Kϕ con estados 2K + 1, como se muestra en la Figura 3: Los arcos en este gráfico corresponden a transiciones en Kϕ.Estructura de Kripke",
                "Observe que la \"estructura Kripke\" construida en la reducción contiene solo un agente, por lo que se demuestra el teorema.5.2 Sistemas normativos de Pareto eficiente Pareto La eficiencia es una medida básica de cuán bueno es un resultado particular para un grupo de agentes [11, p.7].Estructura de Kripke",
                "Para cada variable booleana Xi creamos dos variables booleanas, t (xi) y f (xi), y luego definimos una \"estructura Kripke\" como se muestra en la Figura 4, siendo S0 el único estado inicial;El etiquetado de ARC en la Figura 4 proporciona la función α, y cada estado está marcado con las proposiciones que son ciertas en ese estado.Estructura de Kripke",
                "No puede ser más fácil, ya que determinar la utilidad de una \"estructura de Kripke\" particular implica resolver un problema completado de PSPACE.Estructura de Kripke"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "computation tree logic": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of <br>computation tree logic</br> (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of <br>computation tree logic</br> (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define <br>computation tree logic</br> (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Especificamos los objetivos de los agentes como una jerarquía de fórmulas de \"lógica del árbol de computación\" (CTL), una lógica ampliamente utilizada para representar las propiedades de las estructuras de Kripke: la intuición es que los objetivos más arriba son preferidos por el agente sobre aquellos que aparecen sobre los que aparecenMás abajo en la jerarquía.lógica del árbol de cálculo",
                "Especificamos los objetivos de un agente como una jerarquía de fórmulas de \"lógica de árbol de computación\" (CTL), una lógica ampliamente utilizada para representar las propiedades de las estructuras de Kripke [8]: la intuición es que los objetivos más arriba son preferidos por el agentelos que aparecen más abajo en la jerarquía.lógica del árbol de cálculo",
                "Digamos que nuestro conjunto de estados iniciales S0 es igual a {S, T}, es decir, no hacemos ninguna suposición sobre quién inicialmente tiene control sobre el recurso.2.1 CTL ahora definimos la \"lógica del árbol de cálculo\" (CTL), una lógica temporal de tiempo de ramificación destinada a representar las propiedades de las estructuras de Kripke [8].lógica del árbol de cálculo"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "ordinal utility": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of <br>ordinal utility</br>, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of <br>ordinal utility</br>, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an <br>ordinal utility</br> measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Usando este esquema, definimos un modelo de \"utilidad ordinal\", que a su vez nos permite interpretar nuestros sistemas normativos basados en Kripke como juegos, en los que los agentes deben determinar si cumplir con el sistema normativo o no.utilidad ordinal",
                "Usando este esquema, definimos un modelo de \"utilidad ordinal\", que a su vez nos permite interpretar nuestros sistemas normativos KripkeBased como juegos, en los que los agentes deben determinar si cumplir con el sistema normativo o no.utilidad ordinal",
                "Tenga en cuenta que esta es una medida de \"utilidad ordinal\": nos dice, para cualquier agente determinado, la utilidad relativa de diferentes estructuras de Kripke, pero los valores de utilidad no están en alguna escala estándar de todo el sistema.utilidad ordinal"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "computational complexity": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the <br>computational complexity</br> and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the <br>computational complexity</br> of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the <br>computational complexity</br> of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "<br>computational complexity</br>.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos de creciente prioridad e investigamos la \"complejidad computacional\" y las propiedades teóricas del juego de este modelo.complejidad computacional",
                "Luego caracterizamos la \"complejidad computacional\" de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete.complejidad computacional",
                "Luego caracterizamos la \"complejidad computacional\" de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete.2. complejidad computacional",
                "\"complejidad computacional\". complejidad computacional"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "nash implementation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a <br>nash implementation</br> is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a <br>nash implementation</br> is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 <br>nash implementation</br> Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a <br>nash implementation</br> if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a <br>nash implementation</br>, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a <br>nash implementation</br>, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term <br>nash implementation</br> is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "<br>nash implementation</br> (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a <br>nash implementation</br>?",
                "Verifying that a particular social system forms a <br>nash implementation</br> can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a <br>nash implementation</br>; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a <br>nash implementation</br> can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a <br>nash implementation</br> normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a <br>nash implementation</br> normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a <br>nash implementation</br>, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a <br>nash implementation</br> normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a <br>nash implementation</br>, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una \"implementación de NASH\" es completar NP.Implementación de NASH",
                "Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una \"implementación de NASH\" es completar NP.2. Implementación de NASH",
                "Tenga en cuenta que η8 prohíbe que el recurso se transfiera de un agente a otro, y esto no es bueno para ningún agente (ya que hemos elegido s0 = {s, t}, ningún agente puede estar seguro de obtener el recurso, es decir, el objetivoϕi 1 no es cierto en k † η8).5.3 Sistemas normativos de \"Implementación NASH\" El concepto de solución más famoso en la teoría del juego es, por supuesto, el equilibrio de Nash [11, p.14].Implementación de NASH",
                "En nuestro marco, decimos que un sistema social σ = M, η (donde η = η∅) es una \"implementación de Nash\" si SC (es decir, todos que cumplen con el sistema normativo) forma un equilibrio NASH en el juego Gς.Implementación de NASH",
                "La intuición es que si σ es una \"implementación de Nash\", entonces cumplir con el sistema normativo es una solución razonable para todos los interesados: no puede haber ningún beneficio para desviarse de él, de hecho, hay un incentivo positivo para que todos cumplan.Implementación de NASH",
                "Si σ no es una \"implementación de NASH\", entonces es poco probable que el sistema normativo tenga éxito, ya que el cumplimiento no es racional para algunos agentes.(Nuestra elección de terminología se elige deliberadamente para reflejar la forma en que el término \"implementación de Nash\" se utiliza en la teoría de la implementación o el diseño del mecanismo [11, p.185], donde un diseñador de juegos busca lograr algunos resultados mediante el diseño de las reglas de las reglas de las reglas de las reglas dejuego de tal manera que estos resultados son equilibrios.) Implementación de Nash",
                "\"Implementación de Nash\" (NI): Dado: Sistema de múltiples agentes m.Implementación de NASH",
                "Pregunta: ¿Existe un sistema normativo no vacío η sobre M tal que m, η forma una \"implementación de NASH\"?Implementación de NASH",
                "Verificar que un sistema social particular forma una \"implementación de NASH\" se puede hacer en tiempo polinómico: equivale a verificar: ∀i ∈ A: UI (k † η) ≥ ui (k † (η {i})).Implementación de NASH",
                "Para la membresía de NP, simplemente adivine un sistema normativo η y verifique que forme una \"implementación de NASH\";Dado que η ⊆ r, la adivinación se puede hacer en el tiempo polinomial no determinista, y como S (2k+1) 1 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 T (X1) F(x1) t (x2) f (x2) t (xk) f (xk) 2 2 t (x1) f (x1) t (x2) f (x2) t (xk) f (xk) ..... ...... S0 Figura 4: Reducción para el teorema 4. Argumentamos anteriormente, verificando que forma una \"implementación de NASH\" se puede hacer en tiempo polinomial.Implementación de NASH",
                "Ahora, demostramos que la instancia de SAT ϕ es satisfactable si Mϕ tiene un sistema normativo de \"implementación NASH\": para la dirección ⇒, supongamos que ϕ es satisfactable y que X sea una valoración satisfactoria, es decir, un conjunto de variables booleanas que hacen ϕ verdadero.Implementación de NASH",
                "Podemos extraer del sistema normativo X de X a \"Nash\" de la siguiente manera: si xi ∈ X, entonces η incluye el arco de S0 al estado en el que F (xi) es verdadero, y también incluye el arco de S (2k +1) al estado en el que f (xi) es verdadero;Si xi ∈ X, entonces η incluye el arco de S0 al estado en el que t (xi) es verdadero, y también incluye el arco de S (2k + 1) al estado en el que t (xi) es verdadero.Implementación de NASH",
                "Para ver que η forma una \"implementación de NASH\", observe que si cualquiera de los agentes se deserve de η, tampoco tendrá sus objetivos γi [2] alcanzados: el agente 1 prefiere estrictamente (c, c) sobre (d, c) y agente y agente2 Prefiere estrictamente (C, C) sobre (C, D).Implementación de NASH",
                "Para la dirección ⇐, supongamos que existe un sistema normativo de \"implementación de NASH\" η, en cuyo caso η = ∅.Implementación de NASH",
                "Pero esto contradice la suposición de que η es una \"implementación de NASH\", es decir, que (C, C) forma un equilibrio NASH.Implementación de NASH"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "social law": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a <br>social law</br> as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a <br>social law</br>.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Shoham y Tennenholtz propusieron la idea de usar leyes sociales para coordinar sistemas de agentes múltiples [13, 14];Su enfoque fue extendido por van der Hoek et al.incluir la idea de especificar un objetivo global deseable para una \"ley social\" como una fórmula lógica, con la idea de que el sistema normativo se consideraría exitoso si, después de implementarla (es decir, después de eliminar todas las acciones prohibidas), elSe garantiza que la fórmula objetiva se satisfara en el sistema [15].ley social",
                "Sin embargo, este modelo todavía estaba demasiado empobrecido para capturar los tipos de toma de decisiones que tienen lugar cuando un agente decide si cumplir con una \"ley social\" o no.ley social"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "multi-agent system": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A <br>multi-agent system</br> collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a <br>multi-agent system</br>, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a <br>multi-agent system</br> M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a <br>multi-agent system</br>, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a <br>multi-agent system</br> M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: <br>multi-agent system</br> M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: <br>multi-agent system</br> M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: <br>multi-agent system</br> M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the <br>multi-agent system</br> so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given <br>multi-agent system</br> M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Un \"sistema de agentes múltiples\" recopila una estructura de Kripke (que representa las propiedades básicas de un sistema bajo consideración: su espacio de estado y las posibles transiciones de estado que pueden ocurrir en ella), junto con una jerarquía de objetivos, una para cada agente,representando las aspiraciones de los agentes en el sistema.sistema de múltiples agentes",
                "Formalmente, un \"sistema de agentes múltiples\", m, es un (n + 1) -tuple: m = k, γ1 ,..., γn donde K es una estructura de Kripke, y para cada agente I en K, γi es una jerarquía de objetivos sobre K. 4.1 La utilidad de los sistemas normativos ahora podemos definir la utilidad de una estructura de Krocipke para un agente.sistema de múltiples agentes",
                "Supongamos que se nos da un \"sistema de múltiples agentes\" M = K, γ1 ,..., γn y un sistema normativo asociado η sobre K. Sea para el agente I, Δi (k, k) la diferencia en su utilidad cuando se mueve de k a k: Δi (k, k) = ui (k) - ui (k).sistema de múltiples agentes",
                "Un sistema social ahora es un par σ = M, η donde M es un \"sistema de múltiples agentes\", y η es un sistema normativo sobre m.sistema de múltiples agentes",
                "Supongamos que tenemos un \"sistema de múltiples agentes\" M = K, γ1 ,..., γn y un sistema normativo η sobre K. Se propone a los agentes en M que η debe imponerse a K (típicamente para lograr algún objetivo de coordinación).sistema de múltiples agentes",
                "El problema de decisión asociado con los sistemas normativos racionales individuales es el siguiente: Sistema normativo racional individualmente (IRNS): Dado: \"Sistema de agente múltiple\" m.sistema de múltiples agentes",
                "El problema de la decisión es el siguiente: Sistema normativo eficiente de Pareto (PENS): Dado: \"Sistema de múltiples agentes\" my Sistema normativo η sobre m.sistema de múltiples agentes",
                "Implementación de NASH (NI): Dado: \"Sistema de múltiples agentes\" m.sistema de múltiples agentes",
                "Conf.en agentes autónomos y sistemas de múltiples agentes (aamas 07) 887 k^ i = 1 (xi ∨ x⊥ i) (3) k^ i = 1 ¬ (xi ∧ x⊥ i) (4) k^ i = 1 ¬(E f (t (xi)) ∧ e f (f (xi))) (5) ϕ ∗ (6) Denotamos el \"sistema de agentes múltiples\", así construido por Mϕ.sistema de múltiples agentes",
                "La principal diferencia es que determinar la interfaz de usuario (k) en un \"sistema de agentes múltiples\" dado cuando se usa dicho lenguaje de objetivos implica resolver un problema completado de PSPACE (ya que la verificación del modelo para CTL ∗ es PSPACE-COMPLETO [8]).sistema de múltiples agentes"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "desirable objective": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some <br>desirable objective</br> will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Aunque los diversos enfoques de los sistemas normativos propuestos en la literatura difieren en los detalles técnicos, todos comparten la misma intuición básica de que un sistema normativo es un conjunto de restricciones sobre el comportamiento de los agentes en el sistema;Al imponer estas limitaciones, se espera que surja algún \"objetivo deseable\".Objetivo deseable"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "constraint": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness <br>constraint</br>: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness <br>constraint</br>, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness <br>constraint</br> implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness <br>constraint</br> ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El requisito de que R \\ η sea total es una \"restricción\" razonable: previene sistemas normativos que conducen a estados sin sucesor.restricción",
                "Gracias a nuestra \"restricción\" de razonabilidad, este objetivo implica ϕi 7 que dice que, no importa cómo evolucionen las rutas de cálculo, siempre será que todo el sexto INTL.restricción",
                "El objetivo ϕi 6 es una \"restricción\" de equidad implicada por él.restricción",
                "Observamos que puede parecer más natural expresar una \"restricción\" de equidad ϕi 6 como un ♦ pi.restricción"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "decision making": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of <br>decision making</br> that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Sin embargo, este modelo todavía estaba demasiado empobrecido para capturar los tipos de \"toma de decisiones\" que tienen lugar cuando un agente decide si cumplir con una ley social o no.Toma de decisiones"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "normative system": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>normative system</br> Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A <br>normative system</br> is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the <br>normative system</br>.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the <br>normative system</br> or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based <br>normative system</br> games; for example, we show that the complexity of checking whether there exists a <br>normative system</br> which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a <br>normative system</br> is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the <br>normative system</br> would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the <br>normative system</br> or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the <br>normative system</br> would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the <br>normative system</br> or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based <br>normative system</br> games; for example, we show that the complexity of checking whether there exists a <br>normative system</br> which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a <br>normative system</br> is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a <br>normative system</br> defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a <br>normative system</br> η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a <br>normative system</br> η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty <br>normative system</br> by η∅, so η∅ = ∅.",
                "Note that the empty <br>normative system</br> η∅ is reasonable with respect to any transition relation R. The effect of implementing a <br>normative system</br> on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a <br>normative system</br> over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A <br>normative system</br> with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular <br>normative system</br>.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the <br>normative system</br>.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a <br>normative system</br> over K. Then: • η C denotes the <br>normative system</br> that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the <br>normative system</br>. • η C denotes the <br>normative system</br> that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the <br>normative system</br> (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a <br>normative system</br>.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a <br>normative system</br> η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated <br>normative system</br> η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a <br>normative system</br> to an agent is the difference between the utility of the Kripke structure in which the <br>normative system</br> was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the <br>normative system</br> were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a <br>normative system</br> over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a <br>normative system</br>.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any <br>normative system</br> η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider <br>normative system</br> games. 5.",
                "<br>normative system</br> GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a <br>normative system</br> η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the <br>normative system</br>, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the <br>normative system</br> game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the <br>normative system</br>; and • D - do not comply with (defect from) the <br>normative system</br>.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the <br>normative system</br> η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the <br>normative system</br> that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of <br>normative system</br> games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A <br>normative system</br> is individually rational if every agent would fare better if the <br>normative system</br> were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL <br>normative system</br> (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational <br>normative system</br> for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a <br>normative system</br> η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational <br>normative system</br> for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational <br>normative system</br> must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational <br>normative system</br> η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the <br>normative system</br> is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational <br>normative system</br> η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting <br>normative system</br> ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other <br>normative system</br> η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT <br>normative system</br> (PENS): Given: Multi-agent system M and <br>normative system</br> η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a <br>normative system</br> η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the <br>normative system</br> can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the <br>normative system</br> for PARETO DOMINATED to be η∅, the empty <br>normative system</br>.",
                "Now, it is straightforward that there exists a <br>normative system</br> η which Pareto dominates η∅ in M iff there exist an individually rational <br>normative system</br> in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the <br>normative system</br>) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the <br>normative system</br> is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the <br>normative system</br> is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty <br>normative system</br> η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a <br>normative system</br> η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation <br>normative system</br>: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation <br>normative system</br> η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the <br>normative system</br>, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation <br>normative system</br> η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any <br>normative system</br>, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired <br>normative system</br>, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Juegos de \"Sistema Normativo\" Thomas ◦ Departamento de Agotnes de Ingeniería Informática Bergen University College PB.sistema normativo",
                "Un \"sistema normativo\" es simplemente un subconjunto de la estructura Kripke, que contiene los arcos que están prohibidos por el \"sistema normativo\".sistema normativo",
                "Usando este esquema, definimos un modelo de utilidad ordinal, que a su vez nos permite interpretar nuestros sistemas normativos basados en Kripke como juegos, en los que los agentes deben determinar si cumplir con el \"sistema normativo\" o no.sistema normativo",
                "Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de \"sistema normativo\" basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un \"sistema normativo\" que tiene la propiedad de ser una implementación de NASH es NP-Complete.sistema normativo",
                "Aunque los diversos enfoques de los sistemas normativos propuestos en la literatura difieren en los detalles técnicos, todos comparten la misma intuición básica que un \"sistema normativo\" es un conjunto de restricciones sobre el comportamiento de los agentes en el sistema;Al imponer estas limitaciones, se espera que surja algún objetivo deseable.sistema normativo",
                "Shoham y Tennenholtz propusieron la idea de usar leyes sociales para coordinar sistemas de agentes múltiples [13, 14];Su enfoque fue extendido por van der Hoek et al.Incluir la idea de especificar un objetivo global deseable para una ley social como una fórmula lógica, con la idea de que el \"sistema normativo\" se consideraría exitoso si, después de implementarla (es decir, después de eliminar todas las acciones prohibidas), elSe garantiza que la fórmula objetiva se satisfara en el sistema [15].sistema normativo",
                "Sin embargo, este modelo no tuvo en cuenta las preferencias de los agentes individuales y, por lo tanto, no explicó el posible comportamiento estratégico por parte de los agentes al decidir si cumplir con el \"sistema normativo\" o no.sistema normativo",
                "En realidad, las consideraciones estratégicas entran en juego: un agente tiene en cuenta no solo si el \"sistema normativo\" sería beneficioso para sí mismo, sino también si otros agentes elegirán racionalmente participar.sistema normativo",
                "Usando este esquema, definimos un modelo de utilidad ordinal, que a su vez nos permite interpretar nuestros sistemas normativos kripkeBased como juegos, en los que los agentes deben determinar si cumplir con el \"sistema normativo\" o no.sistema normativo",
                "Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de \"sistema normativo\" basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un \"sistema normativo\" que tiene la propiedad de ser una implementación de NASH es NP-Complete.2. Sistema normativo",
                "Los sistemas normativos para nuestros propósitos, un \"sistema normativo\" es simplemente un conjunto de restricciones sobre el comportamiento de los agentes en un sistema [1].sistema normativo",
                "Más precisamente, un \"sistema normativo\" define, para cada transición del sistema posible, ya sea que esa transición se considere legal o no.sistema normativo",
                "Formalmente, un \"sistema normativo\" η (W.R.T. A Kripke Estructura K = S, S0, R, A, α, V) es simplemente un subconjunto de R, de modo que R \\ η es una relación total.sistema normativo",
                "Sea n (r) = {η: (η ⊆ r) & (r \\ η es total)} el conjunto de sistemas normativos sobre R. La interpretación prevista de un \"sistema normativo\" η es que (s, s) ∈η significa la transición (s, s) está prohibida en el contexto de η;Por lo tanto, r \\ η denota las transiciones legales de η.sistema normativo",
                "Denotamos el \"sistema normativo\" vacío por η∅, entonces η∅ = ∅.sistema normativo",
                "Tenga en cuenta que el \"sistema normativo\" vacío η∅ es razonable con respecto a cualquier relación de transición R.[15, 1]).sistema normativo",
                "Si K es una estructura de Kripke, y η es un \"sistema normativo\" sobre K, entonces K † η denota la estructura Kripke obtenida de K al eliminar las transiciones prohibidas en η.sistema normativo",
                "Un \"sistema normativo\" con (s, t) no sería justo, en el sentido de que a ♦ a ¬p1 ∨ a ♦ a ¬p2 sostiene: en todos los caminos, desde algún momento, un agente tendrá control para siempre.sistema normativo",
                "Más tarde, abordaremos la cuestión de si los agentes deberían elegir racionalmente cumplir con un \"sistema normativo\" particular.sistema normativo",
                "En este contexto, es útil definir los operadores de los sistemas normativos que corresponden a grupos de agentes que defienden el \"sistema normativo\".sistema normativo",
                "Formalmente, deje que K = S, S0, R, A, α, V sea una estructura de Kripke, sea C ⊆ A un conjunto de agentes sobre K, y sea η un \"sistema normativo\" sobre K. Entonces: • η cdenota el \"sistema normativo\" que es lo mismo que η excepto que solo contiene los arcos de η que corresponden a las acciones de los agentes en C. llamamos a η c la restricción de η a C, y se define como: η c= {(S, S): (S, S) ∈ η & α (S, S) ∈ C}.sistema normativo",
                "Por lo tanto, K † (η c) es la estructura de Kripke que resulta si solo los agentes en C eligen cumplir con el \"sistema normativo\".• η c denota el \"sistema normativo\" que es lo mismo que η, excepto que solo contiene los arcos de η que no corresponden a acciones de agentes en C. llamamos a η c la exclusión de C de η, y se definecomo: η c = {(s, s): (s, s) ∈ η & α (s, s) ∈ C}.sistema normativo",
                "Por lo tanto, K † (η c) es la estructura de Kripke que resulta si solo los agentes en C eligen no cumplir con el \"sistema normativo\" (es decir, los únicos que cumplen son los de A \\ C).sistema normativo",
                "Metas y servicios públicos A continuación, queremos poder capturar los objetivos que tienen los agentes, ya que estos impulsarán las consideraciones estratégicas de los agentes, particularmente, como veremos, consideraciones sobre si cumplir o no un \"sistema normativo\".sistema normativo",
                "Tenga en cuenta que, dado que para cualquier jerarquía de objetivos γi tenemos γ [0] =, entonces para todas las estructuras de Kripke, UI (K) está bien definida, con UI (K) ≥ 2 CTL ∗ La comprobación del modelo es PSPACE-COMPLETE y, por lo tanto, mucho peor(Bajo supuestos teóricos de complejidad estándar) que la verificación del modelo CTL [8].η Δ1 (k, η) Δ2 (k, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figura 2: Beneficios de implementar un \"sistema normativo\" η (izquierda) y pagos para el juego σm.0. Sistema normativo",
                "Supongamos que se nos da un sistema de múltiples agentes M = K, γ1 ,..., γn y un \"sistema normativo\" asociado η sobre K. Sea para el agente I, Δi (k, k) la diferencia en su utilidad cuando se mueve de k a k: Δi (k, k) = ui (k) - ui(K).sistema normativo",
                "Resumiendo, la utilidad de un \"sistema normativo\" a un agente es la diferencia entre la utilidad de la estructura Kripke en la que se implementó el \"sistema normativo\" y la estructura original de Kripke.sistema normativo",
                "Si este valor es mayor que 0, entonces el agente estaría mejor si se impusiera el \"sistema normativo\", mientras que si es inferior a 0, entonces el agente estaría peor si η se impusiera que en el sistema original.sistema normativo",
                "Un sistema social ahora es un par σ = M, η donde M es un sistema de múltiples agentes, y η es un \"sistema normativo\" sobre m.sistema normativo",
                "Sea K una estructura, y η un \"sistema normativo\".sistema normativo",
                "Luego, para cualquier \"sistema normativo\" η, Δi (k, η) ≥ 0. 2. Sistema normativo",
                "Esto nos motiva a considerar los juegos de \"sistema normativo\".5. Sistema normativo",
                "Juegos de \"Sistema Normativo\" Ahora tenemos una forma principalmente de hablar sobre la utilidad de los sistemas normativos para los agentes, por lo que podemos comenzar a aplicar el aparato técnico de la teoría de juegos para analizarlos.sistema normativo",
                "Supongamos que tenemos un sistema de múltiples agentes M = K, γ1 ,..., γn y un \"sistema normativo\" η sobre K. Se propone a los agentes en M que η debe imponerse a K (típicamente para lograr algún objetivo de coordinación).sistema normativo",
                "Nuestro agente, digamos el Agente I, se enfrenta a una opción: ¿Debería cumplir con las restricciones del \"sistema normativo\", o no?sistema normativo",
                "Luego podemos asociar un juego, el juego \"Sistema normativo\", Gς con σ, como sigue.sistema normativo",
                "Cada agente I tiene solo dos estrategias disponibles: • C - Realice (coopere) con el \"sistema normativo\";y • d - no cumpla con (defecto de) el \"sistema normativo\".sistema normativo",
                "Si S es una tupla de estrategias, una para cada agente, y x ∈ {c, d}, entonces denotamos por agx s subconjunto de agentes que juegan la estrategia X en S. Por lo tanto, para un sistema social σ = m, η, el \"sistema normativo\" η Agc s solo implementa las restricciones para aquellos agentes que eligen cooperar en Gς.sistema normativo",
                "Tenga en cuenta que esto es lo mismo que η Agd S: el \"sistema normativo\" que excluye todas las restricciones de los agentes que juegan D en Gς.sistema normativo",
                "Ahora podemos comenzar a investigar algunas propiedades de los juegos de \"sistema normativo\".sistema normativo",
                "Su utilidad sería 3, ya que η3 Agc C, D es de hecho η1.5.1 Sistemas normativos racionales individuales Un \"sistema normativo\" es individualmente racional si a cada agente le iría mejor si el \"sistema normativo\" se impusiera de lo contrario.sistema normativo",
                "El problema de decisión asociado con los sistemas normativos racionales individuales es el siguiente: \"Sistema normativo\" racional individualmente (IRNS): Dado: Sistema de agentes múltiples m.sistema normativo",
                "Pregunta: ¿Existe un \"sistema normativo\" racional individualmente para M?sistema normativo",
                "Para la membresía de NP, adivine un \"sistema normativo\" η, y verifique que sea individualmente racional.sistema normativo",
                "A continuación, considere las siguientes fórmulas: k^ i = 1 e f (t (xi) ∨ f (xi)) (1) k^ i = 1 ¬ ((e ft (xi)) ∧ (e ff (xi))) (2) Luego definimos la jerarquía de objetivos para todos los agentes 1 de la siguiente manera: γ1 [0] = γ1 [1] = (1) ∧ (2) ∧ ϕ ∗ Afirmamos que hay un \"sistema normativo\" racional individualmente para elinstancia así construida IFF ϕ es satisfactable.sistema normativo",
                "Primero, observe que cualquier \"sistema normativo\" racional individualmente debe forzar γ1 [1] a ser verdadero, ya que en el sistema original, no tenemos γ1 [1].sistema normativo",
                "Para la dirección ⇒, si hay un \"sistema normativo\" racional individualmente η, entonces construimos una tarea satisfactoria para ϕ considerando los arcos que están prohibidos por η: la fórmula (1) asegura que debemos prohibir un arco a una t (xi) o un estado f (xi) para todas las variables xi, pero (2) asegura que no podamos prohibir los arcos a ambos.sistema normativo",
                "El hecho de que ϕ ∗ sea parte del objetivo asegura que el \"sistema normativo\" sea de hecho una valoración para ϕ.sistema normativo",
                "Para ⇐, tenga en cuenta que para cualquier valoración satisfactoria para ϕ podemos construir un \"sistema normativo\" racional individualmente η, de la siguiente manera: si la valoración hace que xi sea verdadera, prohíbe el arco al estado F (xi), mientras que si la valoración lo hacexi falso, prohíbe el arco al estado t (xi).sistema normativo",
                "El \"sistema normativo\" resultante asegura γ1 [1] y, por lo tanto, es individualmente racional.sistema normativo",
                "Esto equivale a preguntar si hay algún otro \"sistema normativo\" η de modo que cada agente estaría mejor bajo η que con η.sistema normativo",
                "El problema de la decisión es el siguiente: Pareto \"Sistema normativo\" eficiente (Pens): Dado: Sistema de múltiples agentes M y \"Sistema normativo\" η sobre m.sistema normativo",
                "Para la membresía de NP, simplemente adivina un \"sistema normativo\" η, y verifique que para todos los i ∈ A, tenemos ui (k † η)> ui (k † η) - verificar requiere un número polinomial de problemas de verificación de modelos, cada unode los cuales lleva tiempo polinomial.sistema normativo",
                "Como η ⊆ R, el \"sistema normativo\" se puede adivinar en el tiempo polinomial no determinista.sistema normativo",
                "Dada una instancia m de IRNS, dejamos que M en el caso de Pareto dominado sea como en la instancia de IRNS, y definimos el \"sistema normativo\" para que Pareto dominado sea η∅, el \"sistema normativo\" vacío.sistema normativo",
                "Ahora, es sencillo que exista un \"sistema normativo\" η que Pareto domina η∅ en M Iff existe un \"sistema normativo\" racional individualmente en m.sistema normativo",
                "En nuestro marco, decimos que un sistema social σ = M, η (donde η = η∅) es una implementación de Nash si SC (es decir, todos los que cumplen con el \"sistema normativo\") forma un equilibrio NASH en el juego Gς.sistema normativo",
                "La intuición es que si σ es una implementación de NASH, entonces cumplir con el \"sistema normativo\" es una solución razonable para todos los interesados: no puede haber ningún beneficio para desviarse de él, de hecho, hay un incentivo positivo para que todos cumplan.sistema normativo",
                "Si σ no es una implementación de NASH, entonces es poco probable que el \"sistema normativo\" tenga éxito, ya que el cumplimiento no es racional para algunos agentes.(Nuestra elección de terminología se elige deliberadamente para reflejar la forma en que el término implementación de NASH se utiliza en la teoría de la implementación o el diseño del mecanismo [11, p.185], donde un diseñador de juegos busca lograr algunos resultados diseñando las reglas del juego de este tipo de juego.que estos resultados son equilibrios.) Sistema normativo",
                "Pregunta: ¿Existe un \"sistema normativo\" no vacío η sobre M tal que m, η forma una implementación de NASH?sistema normativo",
                "Para la membresía de NP, simplemente adivine un \"sistema normativo\" η y verifique que forme una implementación de NASH;Dado que η ⊆ r, la adivinación se puede hacer en el tiempo polinomial no determinista, y como S (2k+1) 1 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 T (X1) F(x1) t (x2) f (x2) t (xk) f (xk) 2 2 t (x1) f (x1) t (x2) f (x2) t (xk) f (xk) ..... ...... S0 Figura 4: Reducción para el teorema 4. Argumentamos anteriormente, verificando que forma una implementación de NASH se puede hacer en tiempo polinomial.sistema normativo",
                "Ahora, demostramos que la instancia de SAT ϕ es satisfactable si Mϕ tiene una implementación de Nash \"Sistema normativo\": para la dirección ⇒, suponga que ϕ es satisfactable y que X sea una valoración satisfactoria, es decir, un conjunto de variables booleanas que hacen ϕ verdadero.sistema normativo",
                "Podemos extraer de la implementación de X A Nash \"Sistema normativo\" η de la siguiente manera: si xi ∈ X, entonces η incluye el arco de S0 al estado en el que F (xi) es verdadero, y también incluye el arco de S (2K +1) al estado en el que f (xi) es verdadero;Si xi ∈ X, entonces η incluye el arco de S0 al estado en el que t (xi) es verdadero, y también incluye el arco de S (2k + 1) al estado en el que t (xi) es verdadero.sistema normativo",
                "Tenga en cuenta que η es individualmente racional para ambos agentes: si ambos cumplen con el \"sistema normativo\", entonces tendrán sus objetivos γi [2] alcanzados, que no están en el sistema básico.sistema normativo",
                "Para la dirección ⇐, suponga que existe una implementación de NASH \"Sistema normativo\" η, en cuyo caso η = ∅.sistema normativo",
                "Entonces los objetivos γi [2] no se pueden lograr por ningún \"sistema normativo\" (por construcción).sistema normativo",
                "Para ver la membresía en PSPACE, podemos explotar el hecho de que PSPACE = NPSPACE [12, p.150], por lo que podemos adivinar el \"sistema normativo\" deseado, aplicando un procedimiento de verificación de PSPACE para verificar que tenga las propiedades deseadas.6. Sistema normativo"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "goal": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single <br>goal</br> in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a <br>goal</br> hierarchy γi for agent i ∈ A is that the further up the hierarchy a <br>goal</br> is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a <br>goal</br> at a particular level in its <br>goal</br> hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a <br>goal</br> hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a <br>goal</br> hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a <br>goal</br> at index x in <br>goal</br> hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a <br>goal</br> hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic <br>goal</br> hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the <br>goal</br> of the previous level.",
                "Although this is a natural property of many <br>goal</br> hierarchies, it is not a property we demand of all <br>goal</br> hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents <br>goal</br> hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired <br>goal</br> of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this <br>goal</br> implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "<br>goal</br> ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The <br>goal</br> ϕi 5 is like the strong <br>goal</br> ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "<br>goal</br> ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial <br>goal</br> ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative <br>goal</br> representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a <br>goal</br> hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a <br>goal</br> hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any <br>goal</br> that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a <br>goal</br> ϕ at index n if there is a logically weaker <br>goal</br> ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: <br>goal</br> ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any <br>goal</br> hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the <br>goal</br> hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a <br>goal</br> hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal <br>goal</br> in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current <br>goal</br> will at least remain true (in fact a <br>goal</br> higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest <br>goal</br> for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the <br>goal</br> hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the <br>goal</br> ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., <br>goal</br> ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] <br>goal</br> achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer <br>goal</br> Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a <br>goal</br> language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Este modelo de sistemas normativos se extendió aún más al atribuir a cada agente un solo \"objetivo\" en [16].meta",
                "La interpretación prevista de tal jerarquía de \"objetivo\" γi para el agente I ∈ A es que cuanto más arriba es la jerarquía un \"objetivo\", más lo desea.meta",
                "Tenga en cuenta que suponemos que si un agente puede lograr un \"objetivo\" en un nivel particular en su jerarquía de \"objetivo\", entonces no se preocupa por los objetivos más bajos por la jerarquía.meta",
                "Formalmente, una jerarquía de \"objetivo\", γ, (sobre una estructura de Kripke k) es una secuencia finita y no vacía de fórmulas CTL γ = (ϕ0, ϕ1, ..., ϕk) en la que, por convención, ϕ0 =.meta",
                "Usamos una notación de indexación de números naturales para extraer los elementos de una jerarquía de \"objetivo\", por lo que si γ = (ϕ0, ϕ1, ..., ϕk) luego γ [0] = ϕ0, γ [1] = ϕ1, y asíen.meta",
                "Se dice que una estructura de Kripke en particular K satisface un \"objetivo\" en el índice X en la jerarquía de \"objetivo\" γ si K | = γ [x], es decir, si γ [x] está satisfecho en todos los estados iniciales s0 de K. un obvioLa propiedad potencial de las jerarquías de objetivos es la monotonicidad: donde los objetivos en niveles más altos en la jerarquía implican lógicamente aquellos en niveles más bajos en la jerarquía.meta",
                "Formalmente, una jerarquía de \"objetivo\" γ es monotónica si para todos x ∈ {1 ,..., | γ |} ⊆ n, tenemos | = γ [x] → γ [x - 1].meta",
                "El tipo más simple de jerarquía monotónica de \"objetivo\" es donde γ [x+1] = γ [x] ∧ ψx+1 para algunos ψx+1, por lo que en cada nivel sucesivo de la jerarquía, agregamos nuevas restricciones al \"objetivo\"del nivel anterior.meta",
                "Aunque esta es una propiedad natural de muchas jerarquías de \"objetivo\", no es una propiedad que exigimos todas las jerarquías de \"objetivo\".meta",
                "Defina la jerarquía de \"objetivo\" de cada agente como: γi = (ϕi 0 =, ϕi 1 = e ♦ pi, ϕi 2 = e e ♦ pi, ϕi 3 = e ♦ e pi, ϕi 4 = a e ♦ pi, ϕi 5 = e ♦A pi ϕi 6 = a a ♦ pi, ϕi 7 = a (a ♦ pi ∧ e pi), ϕi 8 = a pi) El \"objetivo\" más deseado del agente I es, en cada cálculo, siempre tener el recurso, pi, pi, pi(Esto se expresa en ϕi 8).meta",
                "Gracias a nuestra restricción de razonabilidad, este \"objetivo\" implica ϕi 7 que dice que, no importa cómo evolucionen las rutas de cálculo, siempre será que todo el sexto INTL.meta",
                "\"Objetivo\" ϕi 6 es una restricción de equidad implicada por él.meta",
                "El \"objetivo\" ϕi 5 es como el fuerte \"objetivo\" ϕi 8, pero acepta que esto solo se logra en algún cálculo, eventualmente.ϕi 4 requiere que en cada camino, siempre hay una continuación que eventualmente le da a Pi.meta",
                "\"Objetivo\" ϕi 3 dice que Pi debería ser cierto en alguna rama, desde algún momento.meta",
                "Si incluso eliminamos esa demanda, tenemos el \"objetivo\" trivial ϕi 0. Objetivo",
                "Comentamos sobre las implicaciones de las representaciones alternativas de \"objetivo\" al final de la siguiente sección.meta",
                "Un sistema de múltiples agentes recoge una estructura de Kripke (que representa las propiedades básicas de un sistema en consideración: su espacio de estado y las posibles transiciones de estado que pueden ocurrir en ella), junto con una jerarquía de \"objetivo\", una para cada agente,representando las aspiraciones de los agentes en el sistema.meta",
                "Formalmente, un sistema de múltiples agentes, M, es un (n + 1) -tuple: M = K, γ1 ,..., γn donde K es una estructura de Kripke, y para cada agente I en K, γi es una jerarquía de \"objetivo\" sobre K. 4.1 La utilidad de los sistemas normativos ahora podemos definir la utilidad de una estructura de Kripke para un agente.meta",
                "La idea es que la utilidad de una estructura de Kripke es el índice más alto de cualquier \"objetivo\" garantizado para ese agente en la estructura de Kripke.meta",
                "Hacemos esto preciso en la función ui (·): ui (k) = max {j: 0 ≤ j ≤ | γi |& K | = γi [j]} Tenga en cuenta que, utilizando estas definiciones de objetivos y utilidad, nunca tiene sentido tener un \"objetivo\" ϕ en el índice n si hay un \"objetivo\" ψ ψ en el índice n + k lógicamente más débil en elJerarquía: por definición de utilidad, nunca podría ser N para ninguna estructura K. Ejemplo 1. (continuación) Sea M = K, γ1, γ2 el sistema multiagente de la Figura 1, con γ1 y γ2 como se definió anteriormente en este ejemplo.meta",
                "Entonces, u1 (k) = u2 (k) = 4: \"meta\" ϕ4 es verdadero en S0, pero ϕ5 no lo es.meta",
                "Observe que, dado que para cualquier jerarquía de \"objetivo\" γi tenemos γ [0] =, entonces para todas las estructuras de Kripke, UI (k) está bien definida, con UI (k) ≥ 2 CTL ∗ La comprobación del modelo es PSPACE-COMPLETMucho peor (bajo supuestos teóricos de complejidad estándar) que la verificación del modelo CTL [8].η Δ1 (k, η) Δ2 (k, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figura 2: Beneficios de implementar un sistema normativo η (izquierda) y pagos para el juego σm.0. Objetivo",
                "Los resultados de este documento, de hecho, se mantienen independientemente de cuáles de estas representaciones realmente elegimos;Nos fijamos en el enfoque de jerarquía de \"objetivo\" en interés de la simplicidad.meta",
                "Deje que γi denote una jerarquía de \"objetivo\" para el agente i.1. Objetivo",
                "El primer elemento del Corolario 1 dice que un agente cuyo \"objetivo\" máximo actual en un sistema es una fórmula universal, nunca debe temer la imposición de una nueva norma η.meta",
                "La razón es que su \"objetivo\" actual al menos seguirá siendo cierto (de hecho, un \"objetivo\" más alto en la jerarquía puede ser cierto).meta",
                "En este sistema, todavía ϕ1 4 = a E ♦ P1 es el \"objetivo\" más alto para el Agente 1. Objetivo",
                "A continuación, considere las siguientes fórmulas: k^ i = 1 e f (t (xi) ∨ f (xi)) (1) k^ i = 1 ¬ ((e ft (xi)) ∧ (e ff (xi))) (2) Luego definimos la jerarquía de \"objetivo\" para todos los agentes 1 de la siguiente manera: γ1 [0] = γ1 [1] = (1) ∧ (2) ∧ ϕ ∗ Afirmamos que hay un sistema normativo racional individualmente para elinstancia así construida IFF ϕ es satisfactable.meta",
                "El hecho de que ϕ ∗ es parte del \"objetivo\" asegura que el sistema normativo sea de hecho una valoración para ϕ.meta",
                "Tenga en cuenta que η8 prohíbe que el recurso se transfiera de un agente a otro, y esto no es bueno para ningún agente (ya que hemos elegido s0 = {s, t}, ningún agente puede estar seguro de obtener el recurso, es decir, \",\", \",\",El objetivo \"ϕi 1 no es cierto en K † η8).5.3 Sistemas normativos de implementación de NASH El concepto de solución más famoso en la teoría del juego es, por supuesto, el equilibrio de Nash [11, p.14].meta",
                "Ahora, dado que η debe prohibir al menos una transición, entonces al menos un agente no podría tener su \"objetivo\" γi [1] alcanzado si cumpliera, por lo que al menos uno sería mejor al desertar, es decir, no cumplir con η.meta",
                "Este resultado es quizás de algún interés técnico más allá de las preocupaciones específicas del presente documento, ya que está relacionado con dos problemas que son de interés más amplio: la complejidad del diseño del mecanismo [5] y la complejidad de calcular los equilibrios de Nash [6, 7, 7] 5.4 Lenguajes de \"objetivo\" más ricos Es interesante considerar lo que sucede con la complejidad de los problemas que consideramos anteriormente si permitimos idiomas más ricos para las metas: en particular, CTL ∗ [9].meta",
                "La principal diferencia es que determinar la interfaz de usuario (k) en un sistema múltiple de agente m dado, cuando se usa dicho lenguaje de \"objetivo\" implica resolver un problema completado de PSPACE (ya que la verificación del modelo para CTL ∗ es PSPACE-COMPLETA [8]).meta"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "logic": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree <br>logic</br> (CTL), a widely used <br>logic</br> for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree <br>logic</br> (CTL), a widely used <br>logic</br> for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal <br>logic</br> literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree <br>logic</br> (CTL), a branching time temporal <br>logic</br> intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical <br>logic</br> connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this <br>logic</br>, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning <br>logic</br>-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the <br>logic</br> of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal <br>logic</br>.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal <br>logic</br>.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal <br>logic</br>.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "<br>logic</br>, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Especificamos los objetivos de un agente como una jerarquía de fórmulas de \"lógica\" (CTL) de árbol de computación, una \"lógica\" ampliamente utilizada para representar las propiedades de las estructuras de Kripke: la intuición es que los objetivos más arriba son preferidos por el agente sobre aquellosque aparecen más abajo en la jerarquía.lógica",
                "Especificamos los objetivos de los agentes como una jerarquía de fórmulas de \"lógica\" del árbol de cálculo (CTL), una \"lógica\" ampliamente utilizada para representar las propiedades de las estructuras de Kripke [8]: la intuición es que los objetivos más arriba son preferidos por la jerarquía.Agente sobre aquellos que aparecen más abajo en la jerarquía.lógica",
                "Tenemos dos estados, S y T, y dos variables booleanas correspondientes P1 y P2, que son 1 en la literatura de \"lógica\" temporal de tiempo de ramificación, se dice que una relación R ⊆ S × S es total IFF ∀S ∃S: ((((((s, s) ∈ R. Tenga en cuenta que el término relación total a veces se usa para referirse a las relaciones r ⊆ s × s tal que para cada par de elementos s, s ∈ S tenemos (s, s) ∈ R or (s, s) ∈ R;No estamos usando el término de esta manera aquí.lógica",
                "Digamos que nuestro conjunto de estados iniciales S0 es igual a {S, T}, es decir, no hacemos ninguna suposición sobre quién inicialmente tiene control sobre el recurso.2.1 CTL ahora definimos la \"lógica\" del árbol de cálculo (CTL), una \"lógica\" temporal de tiempo de ramificación destinada a representar las propiedades de las estructuras de Kripke [8].lógica",
                "K, π [u] | = ψ y ∀v, (0 ≤ v <u): k, π [v] | = ϕ se supone que los conectivos \"lógicos\" clásicos restantes (∧, →, ↔) se definen como comoAbreviaturas en términos de ¬, ∨, de la manera convencional.lógica",
                "De hecho, es una fórmula en CTL ∗ [9], y en esta \"lógica\", las dos expresiones serían equivalentes.lógica",
                "La teoría del juego es una herramienta muy natural para analizar y responder estas preguntas, que implican consideraciones estratégicas, y hemos propuesto una forma de traducir preguntas clave sobre los sistemas normativos basados en \"lógica\" a las preguntas teóricas del juego.lógica",
                "En la \"lógica\" de los sistemas normativos.lógica",
                "\"Lógica\" temporal de tiempo alterno.lógica",
                "\"Lógica\" temporal y modal.lógica",
                "A veces y nunca revisado: en el tiempo de ramificación versus la \"lógica\" temporal de tiempo lineal.lógica",
                "\"Lógica\", 3: 396-420, 2005. 888 El sexto intl.lógica"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "game": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational complexity and <br>game</br> theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of <br>game</br> theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational complexity of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the complexity of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic complexity results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard complexity theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the <br>game</br> ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of <br>game</br> theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a <br>game</br>, as follows.",
                "A <br>game</br> in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the <br>game</br>; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a <br>game</br> - the normative system <br>game</br> - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding <br>game</br> in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the <br>game</br> GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in <br>game</br> theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the <br>game</br> GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a <br>game</br> designer seeks to achieve some outcomes by designing the rules of the <br>game</br> such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the complexity of mechanism design [5], and the complexity of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "<br>game</br> theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to <br>game</br> theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the complexity of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "<br>game</br> Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "<br>game</br> Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "Complexity of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "Complexity results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The complexity of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in <br>game</br> Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos de creciente prioridad e investigamos la complejidad computacional y las propiedades teóricas del \"juego\" de este modelo.juego",
                "Por lo tanto, proporcionamos un puente muy natural entre las estructuras y los idiomas lógicos y las técnicas y conceptos de la teoría del \"juego\", que han demostrado ser muy poderosos para analizar escenarios de estilo de contrato social como los sistemas normativos [3, 4].juego",
                "Tenga en cuenta que, dado que para cualquier jerarquía de objetivos γi tenemos γ [0] =, entonces para todas las estructuras de Kripke, UI (K) está bien definida, con UI (K) ≥ 2 CTL ∗ La comprobación del modelo es PSPACE-COMPLETE y, por lo tanto, mucho peor(Bajo supuestos teóricos de complejidad estándar) que la verificación del modelo CTL [8].η Δ1 (k, η) Δ2 (k, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figura 2: Beneficios de implementar un sistema normativo η (izquierda) y pagos para el \"juego\" σm.0. Juego",
                "Juegos del sistema normativo Ahora tenemos una forma principalmente de hablar sobre la utilidad de los sistemas normativos para los agentes, por lo que podemos comenzar a aplicar el aparato técnico de la teoría del \"juego\" para analizarlos.juego",
                "Podemos entender el razonamiento aquí como un \"juego\", como sigue.juego",
                "Un \"juego\" en forma normal estratégica (cf. [11, p.11]) es una estructura: G = AG, S1 ,..., Sn, U1 ,..., Un Where: • Ag = {1 ,..., n} es un conjunto de agentes: los jugadores del \"juego\";• Si es el conjunto de estrategias para cada agente i ∈ Ag (una estrategia para un agente I no es más que una elección entre acciones alternativas);y • UI: (S1 × · · · × Sn) → R es la función de utilidad para el agente i ∈ Ag, que asigna una utilidad a cada combinación de opciones de estrategia para los agentes.juego",
                "Entonces podemos asociar un \"juego\" - el sistema normativo \"juego\" - Gς con σ, como sigue.juego",
                "Tenga en cuenta que η3 de nuestro ejemplo es individualmente racional para 1 y 2, aunque esta no es una situación estable: dado que el otro juega C, es mejor jugando D. Podemos caracterizar fácilmente la racionalidad individual con respecto a la correspondiente \"Juego \"en forma estratégica, como sigue.juego",
                "Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 885 F (XK) ... S0 S1 S2 S3 S4 S (2K-1) S2K T (X1) F (X1) T (X2) F (X2) T (xk) Figura 3: La estructura Kripke producida en la reducción del teorema 2;Todas las transiciones están asociadas con el Agente 1, el único estado inicial es S0.1. η es individualmente racional en M;2. ∀i ∈ Ag, ui (sc)> ui (sd) en el \"juego\" gς.juego",
                "Tenga en cuenta que η8 prohíbe que el recurso se transfiera de un agente a otro, y esto no es bueno para ningún agente (ya que hemos elegido s0 = {s, t}, ningún agente puede estar seguro de obtener el recurso, es decir, el objetivoϕi 1 no es cierto en k † η8).5.3 Sistemas normativos de implementación de NASH El concepto de solución más famoso en la teoría del \"juego\" es, por supuesto, el equilibrio de Nash [11, p.14].juego",
                "En nuestro marco, decimos que un sistema social σ = M, η (donde η = η∅) es una implementación de Nash si SC (es decir, todos que cumplen con el sistema normativo) forma un equilibrio NASH en el \"juego\" gς.juego",
                "Si σ no es una implementación de NASH, entonces es poco probable que el sistema normativo tenga éxito, ya que el cumplimiento no es racional para algunos agentes.(Nuestra elección de terminología se elige deliberadamente para reflejar la forma en que el término implementación de Nash se utiliza en la teoría de la implementación o el diseño del mecanismo [11, p.185], donde un diseñador de \"juego\" busca lograr algunos resultados mediante el diseño de las reglas de las reglas de las reglas de las reglas de las reglas\"Juego\" de tal manera que estos resultados sean equilibrios). Juego",
                "La teoría del \"juego\" es una herramienta muy natural para analizar y responder estas preguntas, que implican consideraciones estratégicas, y hemos propuesto una forma de traducir preguntas clave sobre los sistemas normativos basados en la lógica a las preguntas teóricas de \"juego\".juego",
                "Teoría del \"juego\" y el contrato social Volumen 1: Jugar justo.juego",
                "Teoría del \"juego\" y el contrato social Volumen 2: solo jugando.juego",
                "Un curso de teoría de \"juego\".juego"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "complexity": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Normative System Games Thomas ◦ Agotnes Dept of Computer Engineering Bergen University College PB.",
                "2030, N-5020 Bergen Norway tag@hib.no Wiebe van der Hoek Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK wiebe@csc.liv.ac.uk Michael Wooldridge Dept of Computer Science University of Liverpool Liverpool L69 7ZF UK mjw@csc.liv.ac.uk ABSTRACT We develop a model of normative systems in which agents are assumed to have multiple goals of increasing priority, and investigate the computational <br>complexity</br> and game theoretic properties of this model.",
                "In the underlying model of normative systems, we use Kripke structures to represent the possible transitions of a multiagent system.",
                "A normative system is then simply a subset of the Kripke structure, which contains the arcs that are forbidden by the normative system.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripke-based normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We then characterise the computational <br>complexity</br> of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the <br>complexity</br> of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems; I.2.4 [Knowledge representation formalisms and methods] General Terms Theory 1.",
                "INTRODUCTION Normative systems, or social laws, have proved to be an attractive approach to coordination in multi-agent systems [13, 14, 10, 15, 1].",
                "Although the various approaches to normative systems proposed in the literature differ on technical details, they all share the same basic intuition that a normative system is a set of constraints on the behaviour of agents in the system; by imposing these constraints, it is hoped that some desirable objective will emerge.",
                "The idea of using social laws to coordinate multi-agent systems was proposed by Shoham and Tennenholtz [13, 14]; their approach was extended by van der Hoek et al. to include the idea of specifying a desirable global objective for a social law as a logical formula, with the idea being that the normative system would be regarded as successful if, after implementing it (i.e., after eliminating all forbidden actions), the objective formula was guaranteed to be satisfied in the system [15].",
                "However, this model did not take into account the preferences of individual agents, and hence neglected to account for possible strategic behaviour by agents when deciding whether to comply with the normative system or not.",
                "This model of normative systems was further extended by attributing to each agent a single goal in [16].",
                "However, this model was still too impoverished to capture the kinds of decision making that take place when an agent decides whether or not to comply with a social law.",
                "In reality, strategic considerations come into play: an agent takes into account not just whether the normative system would be beneficial for itself, but also whether other agents will rationally choose to participate.",
                "In this paper, we develop a model of normative systems in which agents are assumed to have multiple goals, of increasing priority.",
                "We specify an agents goals as a hierarchy of formulae of Computation Tree Logic (CTL), a widely used logic for representing the properties of Kripke structures [8]: the intuition is that goals further up the hierarchy are preferred by the agent over those that appear further down the hierarchy.",
                "Using this scheme, we define a model of ordinal utility, which in turn allows us to interpret our Kripkebased normative systems as games, in which agents must determine whether to comply with the normative system or not.",
                "We thus provide a very natural bridge between logical structures and languages and the techniques and concepts of game theory, which have proved to be very powerful for analysing social contract-style scenarios such as normative systems [3, 4].",
                "We then characterise the computational <br>complexity</br> of a number of decision problems associated with these Kripke-based normative system games; for example, we show that the <br>complexity</br> of checking whether there exists a normative system which has the property of being a Nash implementation is NP-complete. 2.",
                "KRIPKE STRUCTURES AND CTL We use Kripke structures as our basic semantic model for multiagent systems [8].",
                "A Kripke structure is essentially a directed graph, with the vertex set S corresponding to possible states of the system being modelled, and the relation R ⊆ S × S capturing the 881 978-81-904262-7-5 (RPS) c 2007 IFAAMAS possible transitions of the system; intuitively, these transitions are caused by agents in the system performing actions, although we do not include such actions in our semantic model (see, e.g., [13, 2, 15] for related models which include actions as first class citizens).",
                "We let S0 denote the set of possible initial states of the system.",
                "Our model is intended to correspond to the well-known interleaved concurrency model from the reactive systems literature: thus an arc corresponds to the execution of an atomic action by one of the processes in the system, which we call agents.",
                "It is important to note that, in contrast to such models as [2, 15], we are therefore here not modelling synchronous action.",
                "This assumption is not in fact essential for our analysis, but it greatly simplifies the presentation.",
                "However, we find it convenient to include within our model the agents that cause transitions.",
                "We therefore assume a set A of agents, and we label each transition in R with the agent that causes the transition via a function α : R → A.",
                "Finally, we use a vocabulary Φ = {p, q, . . .} of Boolean variables to express the properties of individual states S: we use a function V : S → 2Φ to label each state with the Boolean variables true (or satisfied) in that state.",
                "Collecting these components together, an agent-labelled Kripke structure (over Φ) is a 6-tuple: K = S, S0 , R, A, α, V , where: • S is a finite, non-empty set of states, • S0 ⊆ S (S0 = ∅) is the set of initial states; • R ⊆ S × S is a total binary relation on S, which we refer to as the transition relation1 ; • A = {1, . . . , n} is a set of agents; • α : R → A labels each transition in R with an agent; and • V : S → 2Φ labels each state with the set of propositional variables true in that state.",
                "In the interests of brevity, we shall hereafter refer to an agentlabelled Kripke structure simply as a Kripke structure.",
                "A path over a transition relation R is an infinite sequence of states π = s0, s1, . . . which must satisfy the property that ∀u ∈ N: (su , su+1) ∈ R. If u ∈ N, then we denote by π[u] the component indexed by u in π (thus π[0] denotes the first element, π[1] the second, and so on).",
                "A path π such that π[0] = s is an s-path.",
                "Let ΠR(s) denote the set of s-paths over R; since it will usually be clear from context, we often omit reference to R, and simply write Π(s).",
                "We will sometimes refer to and think of an s-path as a possible computation, or system evolution, from s. EXAMPLE 1.",
                "Our running example is of a system with a single non-sharable resource, which is desired by two agents.",
                "Consider the Kripke structure depicted in Figure 1.",
                "We have two states, s and t, and two corresponding Boolean variables p1 and p2, which are 1 In the branching time temporal logic literature, a relation R ⊆ S × S is said to be total iff ∀s ∃s : (s, s ) ∈ R. Note that the term total relation is sometimes used to refer to relations R ⊆ S × S such that for every pair of elements s, s ∈ S we have either (s, s ) ∈ R or (s , s) ∈ R; we are not using the term in this way here.",
                "It is also worth noting that for some domains, other constraints may be more appropriate than simple totality.",
                "For example, one might consider the agent totality requirement, that in every state, every agent has at least one possible transition available: ∀s∀i ∈ A∃s : (s, s ) ∈ R and α(s, s ) = i. 2p t p 2 2 1 s 1 1 Figure 1: The resource control running example. mutually exclusive.",
                "Think of pi as meaning agent i has currently control over the resource.",
                "Each agent has two possible actions, when in possession of the resource: either give it away, or keep it.",
                "Obviously there are infinitely many different s-paths and t-paths.",
                "Let us say that our set of initial states S0 equals {s, t}, i.e., we dont make any assumptions about who initially has control over the resource. 2.1 CTL We now define Computation Tree Logic (CTL), a branching time temporal logic intended for representing the properties of Kripke structures [8].",
                "Note that since CTL is well known and widely documented in the literature, our presentation, though complete, will be somewhat terse.",
                "We will use CTL to express agents goals.",
                "The syntax of CTL is defined by the following grammar: ϕ ::= | p | ¬ϕ | ϕ ∨ ϕ | E fϕ | E(ϕ U ϕ) | A fϕ | A(ϕ U ϕ) where p ∈ Φ.",
                "We denote the set of CTL formula over Φ by LΦ; since Φ is understood, we usually omit reference to it.",
                "The semantics of CTL are given with respect to the satisfaction relation |=, which holds between pairs of the form K, s, (where K is a Kripke structure and s is a state in K), and formulae of the language.",
                "The satisfaction relation is defined as follows: K, s |= ; K, s |= p iff p ∈ V (s) (where p ∈ Φ); K, s |= ¬ϕ iff not K, s |= ϕ; K, s |= ϕ ∨ ψ iff K, s |= ϕ or K, s |= ψ; K, s |= A fϕ iff ∀π ∈ Π(s) : K, π[1] |= ϕ; K, s |= E fϕ iff ∃π ∈ Π(s) : K, π[1] |= ϕ; K, s |= A(ϕ U ψ) iff ∀π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ K, s |= E(ϕ U ψ) iff ∃π ∈ Π(s), ∃u ∈ N, s.t.",
                "K, π[u] |= ψ and ∀v, (0 ≤ v < u) : K, π[v] |= ϕ The remaining classical logic connectives (∧, →, ↔) are assumed to be defined as abbreviations in terms of ¬, ∨, in the conventional manner.",
                "The remaining CTL temporal operators are defined: A♦ϕ ≡ A( U ϕ) E♦ϕ ≡ E( U ϕ) A ϕ ≡ ¬E♦¬ϕ E ϕ ≡ ¬A♦¬ϕ We say ϕ is satisfiable if K, s |= ϕ for some Kripke structure K and state s in K; ϕ is valid if K, s |= ϕ for all Kripke structures K and states s in K. The problem of checking whether K, s |= ϕ for given K, s, ϕ (model checking) can be done in deterministic polynomial time, while checking whether a given ϕ is satisfiable or whether ϕ is valid is EXPTIME-complete [8].",
                "We write K |= ϕ if K, s0 |= ϕ for all s0 ∈ S0 , and |= ϕ if K |= ϕ for all K. 882 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 3.",
                "NORMATIVE SYSTEMS For our purposes, a normative system is simply a set of constraints on the behaviour of agents in a system [1].",
                "More precisely, a normative system defines, for every possible system transition, whether or not that transition is considered to be legal or not.",
                "Different normative systems may differ on whether or not a transition is legal.",
                "Formally, a normative system η (w.r.t. a Kripke structure K = S, S0 , R, A, α, V ) is simply a subset of R, such that R \\ η is a total relation.",
                "The requirement that R\\η is total is a reasonableness constraint: it prevents normative systems which lead to states with no successor.",
                "Let N (R) = {η : (η ⊆ R) & (R \\ η is total)} be the set of normative systems over R. The intended interpretation of a normative system η is that (s, s ) ∈ η means transition (s, s ) is forbidden in the context of η; hence R \\ η denotes the legal transitions of η.",
                "Since it is assumed η is reasonable, we are guaranteed that a legal outward transition exists for every state.",
                "We denote the empty normative system by η∅, so η∅ = ∅.",
                "Note that the empty normative system η∅ is reasonable with respect to any transition relation R. The effect of implementing a normative system on a Kripke structure is to eliminate from it all transitions that are forbidden according to this normative system (see [15, 1]).",
                "If K is a Kripke structure, and η is a normative system over K, then K † η denotes the Kripke structure obtained from K by deleting transitions forbidden in η.",
                "Formally, if K = S, S0 , R, A, α, V , and η ∈ N (R), then let K†η = K be the Kripke structure K = S , S0 , R , A , α , V where: • S = S , S0 = S0 , A = A , and V = V ; • R = R \\ η; and • α is the restriction of α to R : α (s, s ) = j α(s, s ) if (s, s ) ∈ R undefined otherwise.",
                "Notice that for all K, we have K † η∅ = K. EXAMPLE 1. (continued) When thinking in terms of fairness, it seems natural to consider normative systems η that contain (s, s) or (t, t).",
                "A normative system with (s, t) would not be fair, in the sense that A♦A ¬p1 ∨ A♦A ¬p2 holds: in all paths, from some moment on, one agent will have control forever.",
                "Let us, for later reference, fix η1 = {(s, s)}, η2 = {(t, t)}, and η3 = {(s, s), (t, t)}.",
                "Later, we will address the issue of whether or not agents should rationally choose to comply with a particular normative system.",
                "In this context, it is useful to define operators on normative systems which correspond to groups of agents defecting from the normative system.",
                "Formally, let K = S, S0 ,R, A,α, V be a Kripke structure, let C ⊆ A be a set of agents over K, and let η be a normative system over K. Then: • η C denotes the normative system that is the same as η except that it only contains the arcs of η that correspond to the actions of agents in C. We call η C the restriction of η to C, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose to comply with the normative system. • η C denotes the normative system that is the same as η except that it only contains the arcs of η that do not correspond to actions of agents in C. We call η C the exclusion of C from η, and it is defined as: η C = {(s, s ) : (s, s ) ∈ η & α(s, s ) ∈ C}.",
                "Thus K † (η C) is the Kripke structure that results if only the agents in C choose not to comply with the normative system (i.e., the only ones who comply are those in A \\ C).",
                "Note that we have η C = η (A\\C) and η C = η (A\\C).",
                "EXAMPLE 1. (Continued) We have η1 {1} = η1 = {(s, s)}, while η1 {1} = η∅ = η1 {2}.",
                "Similarly, we have η3 {1} = {(s, s)} and η3 {1} = {(t, t)}. 4.",
                "GOALS AND UTILITIES Next, we want to be able to capture the goals that agents have, as these will drive an agents strategic considerations - particularly, as we will see, considerations about whether or not to comply with a normative system.",
                "We will model an agents goals as a prioritised list of CTL formulae, representing increasingly desired properties that the agent wishes to hold.",
                "The intended interpretation of such a goal hierarchy γi for agent i ∈ A is that the further up the hierarchy a goal is, the more it is desired by i.",
                "Note that we assume that if an agent can achieve a goal at a particular level in its goal hierarchy, then it is unconcerned about goals lower down the hierarchy.",
                "Formally, a goal hierarchy, γ, (over a Kripke structure K) is a finite, non-empty sequence of CTL formulae γ = (ϕ0, ϕ1, . . . , ϕk ) in which, by convention, ϕ0 = .",
                "We use a natural number indexing notation to extract the elements of a goal hierarchy, so if γ = (ϕ0, ϕ1, . . . , ϕk ) then γ[0] = ϕ0, γ[1] = ϕ1, and so on.",
                "We denote the largest index of any element in γ by |γ|.",
                "A particular Kripke structure K is said to satisfy a goal at index x in goal hierarchy γ if K |= γ[x], i.e., if γ[x] is satisfied in all initial states S0 of K. An obvious potential property of goal hierarchies is monotonicity: where goals at higher levels in the hierarchy logically imply those at lower levels in the hierarchy.",
                "Formally, a goal hierarchy γ is monotonic if for all x ∈ {1, . . . , |γ|} ⊆ N, we have |= γ[x] → γ[x − 1].",
                "The simplest type of monotonic goal hierarchy is where γ[x + 1] = γ[x] ∧ ψx+1 for some ψx+1, so at each successive level of the hierarchy, we add new constraints to the goal of the previous level.",
                "Although this is a natural property of many goal hierarchies, it is not a property we demand of all goal hierarchies.",
                "EXAMPLE 1. (continued) Suppose the agents have similar, but opposing goals: each agent i wants to keep the source as often and long as possible for himself.",
                "Define each agents goal hierarchy as: γi = ( ϕi 0 = , ϕi 1 = E♦pi , ϕi 2 = E E♦pi , ϕi 3 = E♦E pi , ϕi 4 = A E♦pi , ϕi 5 = E♦A pi ϕi 6 = A A♦pi , ϕi 7 = A (A♦pi ∧ E pi ), ϕi 8 = A pi ) The most desired goal of agent i is to, in every computation, always have the resource, pi (this is expressed in ϕi 8).",
                "Thanks to our reasonableness constraint, this goal implies ϕi 7 which says that, no matter how the computation paths evolve, it will always be that all The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 883 continuations will hit a point in which pi , and, moreover, there is a continuation in which pi always holds.",
                "Goal ϕi 6 is a fairness constraint implied by it.",
                "Note that A♦pi says that every computation eventually reaches a pi state.",
                "This may mean that after pi has happened, it will never happen again. ϕi 6 circumvents this: it says that, no matter where you are, there should be a future pi state.",
                "The goal ϕi 5 is like the strong goal ϕi 8 but it accepts that this is only achieved in some computation, eventually. ϕi 4 requires that in every path, there is always a continuation that eventually gives pi .",
                "Goal ϕi 3 says that pi should be true on some branch, from some moment on.",
                "It implies ϕi 2 which expresses that there is a computation such that everywhere during it, it is possible to choose a continuation that eventually satisfies pi .",
                "This implies ϕi 1, which says that pi should at least not be impossible.",
                "If we even drop that demand, we have the trivial goal ϕi 0.",
                "We remark that it may seem more natural to express a fairness constraint ϕi 6 as A ♦pi .",
                "However, this is not a proper CTL formula.",
                "It is in fact a formula in CTL ∗ [9], and in this logic, the two expressions would be equivalent.",
                "However, our basic <br>complexity</br> results in the next sections would not hold for the richer language CTL ∗2 , and the price to pay for this is that we have to formulate our desired goals in a somewhat more cumbersome manner than we might ideally like.",
                "Of course, our basic framework does not demand that goals are expressed in CTL; they could equally well be expressed in CTL ∗ or indeed ATL [2] (as in [15]).",
                "We comment on the implications of alternative goal representations at the conclusion of the next section.",
                "A multi-agent system collects together a Kripke structure (representing the basic properties of a system under consideration: its state space, and the possible state transitions that may occur in it), together with a goal hierarchy, one for each agent, representing the aspirations of the agents in the system.",
                "Formally, a multi-agent system, M , is an (n + 1)-tuple: M = K, γ1, . . . , γn where K is a Kripke structure, and for each agent i in K, γi is a goal hierarchy over K. 4.1 The Utility of Normative Systems We can now define the utility of a Kripke structure for an agent.",
                "The idea is that the utility of a Kripke structure is the highest index of any goal that is guaranteed for that agent in the Kripke structure.",
                "We make this precise in the function ui (·): ui (K) = max{j : 0 ≤ j ≤ |γi | & K |= γi [j ]} Note that using these definitions of goals and utility, it never makes sense to have a goal ϕ at index n if there is a logically weaker goal ψ at index n + k in the hierarchy: by definition of utility, it could never be n for any structure K. EXAMPLE 1. (continued) Let M = K, γ1, γ2 be the multiagent system of Figure 1, with γ1 and γ2 as defined earlier in this example.",
                "Recall that we have defined S0 as {s, t}.",
                "Then, u1(K) = u2(K) = 4: goal ϕ4 is true in S0 , but ϕ5 is not.",
                "To see that ϕ2 4 = A E♦p2 is true in s for instance: note that on ever path it is always the case that there is a transition to t, in which p2 is true.",
                "Notice that since for any goal hierarchy γi we have γ[0] = , then for all Kripke structures, ui (K) is well defined, with ui (K) ≥ 2 CTL ∗ model checking is PSPACE-complete, and hence much worse (under standard <br>complexity</br> theoretic assumptions) than model checking CTL [8]. η δ1(K, η) δ2(K, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figure 2: Benefits of implementing a normative system η (left) and pay-offs for the game ΣM . 0.",
                "Note that this is an ordinal utility measure: it tells us, for any given agent, the relative utility of different Kripke structures, but utility values are not on some standard system-wide scale.",
                "The fact that ui (K1) > ui (K2) certainly means that i strictly prefers K1 over K2, but the fact that ui (K) > uj (K) does not mean that i values K more highly than j .",
                "Thus, it does not make sense to compare utility values between agents, and so for example, some system wide measures of utility, (notably those measures that aggregate individual utilities, such as social welfare), do not make sense when applied in this setting.",
                "However, as we shall see shortly, other measures - such as Pareto efficiency - can be usefully applied.",
                "There are other representations for goals, which would allow us to define cardinal utilities.",
                "The simplest would be to specify goals γ for an agent as a finite, non-empty, one-to-one relation: γ ⊆ L×R.",
                "We assume that the x values in pairs (ϕ, x) ∈ γ are specified so that x for agent i means the same as x for agent j , and so we have cardinal utility.",
                "We then define the utility for i of a Kripke structure K asui (K) = max{x : (ϕ, x) ∈ γi & K |= ϕ}.",
                "The results of this paper in fact hold irrespective of which of these representations we actually choose; we fix upon the goal hierarchy approach in the interests of simplicity.",
                "Our next step is to show how, in much the same way, we can lift the utility function from Kripke structures to normative systems.",
                "Suppose we are given a multi-agent system M = K, γ1, . . . , γn and an associated normative system η over K. Let for agent i, δi (K, K ) be the difference in his utility when moving from K to K : δi (K, K ) = ui (K )− ui (K).",
                "Then the utility of η to agent i wrt K is δi (K, K † η).",
                "We will sometimes abuse notation and just write δi (K, η) for this, and refer to it as the benefit for agent i of implementing η in K. Note that this benefit can be negative.",
                "Summarising, the utility of a normative system to an agent is the difference between the utility of the Kripke structure in which the normative system was implemented and the original Kripke structure.",
                "If this value is greater than 0, then the agent would be better off if the normative system were imposed, while if it is less than 0 then the agent would be worse off if η were imposed than in the original system.",
                "We say η is individually rational for i wrt K if δi (K, η) > 0, and individually rational simpliciter if η is individually rational for every agent.",
                "A social system now is a pair Σ = M , η where M is a multi-agent system, and η is a normative system over M .",
                "EXAMPLE 1.",
                "The table at the left hand in Figure 2 displays the utilities δi (K, η) of implementing η in the Kripke structure of our running example, for the normative systems η = η∅, η1, η2 and η3, introduced before.",
                "Recall that u1(K) = u2(K) = 4. 4.2 Universal and Existential Goals 884 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) Keeping in mind that a norm η restricts the possible transitions of the model under consideration, we make the following observation, borrowing from [15].",
                "Some classes of goals are monotonic or anti-monotonic with respect to adding additional constraints to a system.",
                "Let us therefore define two fragments of the language of CTL: the universal language Lu with typical element μ, and the existential fragment Le with typical element ε. μ ::= | p | ¬p | μ ∨ μ | A fμ | A μ | A(μ U μ) ε ::= | p | ¬p | ε ∨ ε | E fε | E♦ε | E(ε U ε) Let us say, for two Kripke structures K1 = S, S0 , R1, A, α, V and K2 = S, S0 , R2, A, α, V that K1 is a subsystem of K2 and K2 is a supersystem of K1, written K1 K2 iff R1 ⊆ R2.",
                "Note that typically K † η K. Then we have (cf. [15]).",
                "THEOREM 1.",
                "Suppose K1 K2, and s ∈ S. Then ∀ε ∈ Le : K1, s |= ε ⇒ K2, s |= ε ∀μ ∈ Lu : K2, s |= μ ⇒ K1, s |= μ This has the following effect on imposing a new norm: COROLLARY 1.",
                "Let K be a structure, and η a normative system.",
                "Let γi denote a goal hierarchy for agent i. 1.",
                "Suppose agent is utility ui (K) is n, and γi [n] ∈ Lu , (i.e., γi [n] is a universal formula).",
                "Then, for any normative system η, δi (K, η) ≥ 0. 2.",
                "Suppose agent is utility ui (K † η) is n, and γi [n] is an existential formula ε.",
                "Then, δi (K † η, K) ≥ 0.",
                "Corollary 1s first item says that an agent whose current maximal goal in a system is a universal formula, need never fear the imposition of a new norm η.",
                "The reason is that his current goal will at least remain true (in fact a goal higher up in the hierarchy may become true).",
                "It follows from this that an agent with only universal goals can only gain from the imposition of normative systems η.",
                "The opposite is true for existential goals, according to the second item of the corollary: it can never be bad for an agent to undo a norm η.",
                "Hence, an agent with only existential goals might well fear any norm η.",
                "However, these observations implicitly assume that all agents in the system will comply with the norm.",
                "Whether they will in fact do so, of course, is a strategic decision: it partly depends on what the agent thinks that other agents will do.",
                "This motivates us to consider normative system games. 5.",
                "NORMATIVE SYSTEM GAMES We now have a principled way of talking about the utility of normative systems for agents, and so we can start to apply the technical apparatus of game theory to analyse them.",
                "Suppose we have a multi-agent system M = K, γ1, . . . , γn and a normative system η over K. It is proposed to the agents in M that η should be imposed on K, (typically to achieve some coordination objective).",
                "Our agent - lets say agent i - is then faced with a choice: should it comply with the strictures of the normative system, or not?",
                "Note that this reasoning takes place before the agent is in the system - it is a design time consideration.",
                "We can understand the reasoning here as a game, as follows.",
                "A game in strategic normal form (cf. [11, p.11]) is a structure: G = AG, S1, . . . , Sn , U1, . . . , Un where: • AG = {1, . . . , n} is a set of agents - the players of the game; • Si is the set of strategies for each agent i ∈ AG (a strategy for an agent i is nothing else than a choice between alternative actions); and • Ui : (S1 × · · · × Sn ) → R is the utility function for agent i ∈ AG, which assigns a utility to every combination of strategy choices for the agents.",
                "Now, suppose we are given a social system Σ = M , η where M = K, γ1, . . . , γn .",
                "Then we can associate a game - the normative system game - GΣ with Σ, as follows.",
                "The agents AG in GΣ are as in Σ.",
                "Each agent i has just two strategies available to it: • C - comply (cooperate) with the normative system; and • D - do not comply with (defect from) the normative system.",
                "If S is a tuple of strategies, one for each agent, and x ∈ {C, D}, then we denote by AGx S the subset of agents that play strategy x in S. Hence, for a social system Σ = M , η , the normative system η AGC S only implements the restrictions for those agents that choose to cooperate in GΣ.",
                "Note that this is the same as η AGD S : the normative system that excludes all the restrictions of agents that play D in GΣ.",
                "We then define the utility functions Ui for each i ∈ AG as: Ui (S) = δi (K, η AGC S ).",
                "So, for example, if SD is a collection of strategies in which every agent defects (i.e., does not comply with the norm), then Ui (SD ) = δi (K, (η AGD SD )) = ui (K † η∅) − ui (K) = 0.",
                "In the same way, if SC is a collection of strategies in which every agent cooperates (i.e., complies with the norm), then Ui (SC ) = δi (K, (η AGD SC )) = ui (K † (η ∅)) = ui (K † η).",
                "We can now start to investigate some properties of normative system games.",
                "EXAMPLE 1. (continued) For our example system, we have displayed the different U values for our multi agent system with the norm η3, i.e., {(s, s), (t, t)} as the second table of Figure 2.",
                "For instance, the pair (0, 3) in the matrix under the entry S = C, D is obtained as follows.",
                "U1( C, D ) = δ1(K, η3 AGC C,D ) = u1(K † η3 AGC C,D ) − u1(K).",
                "The first term of this is the utility of 1 in the system K where we implement η3 for the cooperating agent, i.e., 1, only.",
                "This means that the transitions are R \\ {(s, s)}.",
                "In this system, still ϕ1 4 = A E♦p1 is the highest goal for agent 1.",
                "This is the same utility for 1 as in K, and hence, δ1(K, η3 AGC C,D ) = 0.",
                "Agent 2 of course benefits if agent 1 complies with η3 while 2 does not.",
                "His utility would be 3, since η3 AGC C,D is in fact η1. 5.1 Individually Rational Normative Systems A normative system is individually rational if every agent would fare better if the normative system were imposed than otherwise.",
                "This is a necessary, although not sufficient condition on a norm to expect that everybody respects it.",
                "Note that η3 of our example is individually rational for both 1 and 2, although this is not a stable situation: given that the other plays C, i is better of by playing D. We can easily characterise individually rationality with respect to the corresponding game in strategic form, as follows.",
                "Let Σ = M , η be a social system.",
                "Then the following are equivalent: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 885 f(xk) ... s0 s1 s2 s3 s4 s(2k−1) s2k t(x1) f(x1) t(x2) f(x2) t(xk) Figure 3: The Kripke structure produced in the reduction of Theorem 2; all transitions are associated with agent 1, the only initial state is s0. 1. η is individually rational in M ; 2. ∀i ∈ AG, Ui (SC ) > Ui (SD ) in the game GΣ.",
                "The decision problem associated with individually rational normative systems is as follows: INDIVIDUALLY RATIONAL NORMATIVE SYSTEM (IRNS): Given: Multi-agent system M .",
                "Question: Does there exist an individually rational normative system for M ?",
                "THEOREM 2.",
                "IRNS is NP-complete, even in one-agent systems.",
                "PROOF.",
                "For membership of NP, guess a normative system η, and verify that it is individually rational.",
                "Since η ⊆ R, we will be able to guess it in nondeterministic polynomial time.",
                "To verify that it is individually rational, we check that for all i, we have ui (K † η) > ui (K); computing K † η is just set subtraction, so can be done in polynomial time, while determining the value of ui (K) for any K can be done with a polynomial number of model checking calls, each of which requires only time polynomial in the K and γ.",
                "Hence verifying that ui (K † η) > ui (K) requires only polynomial time.",
                "For NP-hardness, we reduce SAT [12, p.77].",
                "Given a SAT instance ϕ over Boolean variables x1, . . . , xk , we produce an instance of IRNS as follows.",
                "First, we define a single agent A = {1}.",
                "For each Boolean variable xi in the SAT instance, we create two Boolean variables t(xi ) and f (xi ) in the IRNS instance.",
                "We then create a Kripke structure Kϕ with 2k + 1 states, as shown in Figure 3: arcs in this graph correspond to transitions in Kϕ.",
                "Let ϕ∗ be the result of systematically substituting for every Boolean variable xi in ϕ the CTL expression (E ft(xi )).",
                "Next, consider the following formulae: k^ i=1 E f(t(xi ) ∨ f (xi )) (1) k^ i=1 ¬((E ft(xi )) ∧ (E ff (xi ))) (2) We then define the goal hierarchy for all agent 1 as follows: γ1[0] = γ1[1] = (1) ∧ (2) ∧ ϕ∗ We claim there is an individually rational normative system for the instance so constructed iff ϕ is satisfiable.",
                "First, notice that any individually rational normative system must force γ1[1] to be true, since in the original system, we do not have γ1[1].",
                "For the ⇒ direction, if there is an individually rational normative system η, then we construct a satisfying assignment for ϕ by considering the arcs that are forbidden by η: formula (1) ensures that we must forbid an arc to either a t(xi ) or a f (xi ) state for all variables xi , but (2) ensures that we cannot forbid arcs to both.",
                "So, if we forbid an arc to a t(xi ) state then in the corresponding valuation for ϕ we make xi false, while if we forbid an arc to a f (xi ) state then we make xi true.",
                "The fact that ϕ∗ is part of the goal ensures that the normative system is indeed a valuation for ϕ.",
                "For ⇐, note that for any satisfying valuation for ϕ we can construct an individually rational normative system η, as follows: if the valuation makes xi true, we forbid the arc to the f (xi ) state, while if the valuation makes xi false, we forbid the arc to the t(xi ) state.",
                "The resulting normative system ensures γ1[1], and is thus individually rational.",
                "Notice that the Kripke structure constructed in the reduction contains just a single agent, and so the Theorem is proven. 5.2 Pareto Efficient Normative Systems Pareto efficiency is a basic measure of how good a particular outcome is for a group of agents [11, p.7].",
                "Intuitively, an outcome is Pareto efficient if there is no other outcome that makes every agent better off.",
                "In our framework, suppose we are given a social system Σ = M , η , and asked whether η is Pareto efficient.",
                "This amounts to asking whether or not there is some other normative system η such that every agent would be better off under η than with η.",
                "If η makes every agent better off than η, then we say η Pareto dominates η.",
                "The decision problem is as follows: PARETO EFFICIENT NORMATIVE SYSTEM (PENS): Given: Multi-agent system M and normative system η over M .",
                "Question: Is η Pareto efficient for M ?",
                "THEOREM 3.",
                "PENS is co-NP-complete, even for one-agent systems.",
                "PROOF.",
                "Let M and η be as in the Theorem.",
                "We show that the complement problem to PENS, which we refer to as PARETO DOMINATED, is NP-complete.",
                "In this problem, we are given M and η, and we are asked whether η is Pareto dominated, i.e., whether or not there exists some η over M such that η makes every agent better off than η.",
                "For membership of NP, simply guess a normative system η , and verify that for all i ∈ A, we have ui (K † η ) > ui (K † η) - verifying requires a polynomial number of model checking problems, each of which takes polynomial time.",
                "Since η ⊆ R, the normative system can be guessed in non-deterministic polynomial time.",
                "For NP-hardness, we reduce IRNS, which we know to be NPcomplete from Theorem 2.",
                "Given an instance M of IRNS, we let M in the instance of PARETO DOMINATED be as in the IRNS instance, and define the normative system for PARETO DOMINATED to be η∅, the empty normative system.",
                "Now, it is straightforward that there exists a normative system η which Pareto dominates η∅ in M iff there exist an individually rational normative system in M .",
                "Since the complement problem is NP-complete, it follows that PENS is co-NP-complete. 886 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 u1(K † η) 4 4 7 6 5 0 0 8 0 u2(K † η) 4 7 4 6 0 5 8 0 0 Table 1: Utilities for all possible norms in our example How about Pareto efficient norms for our toy example?",
                "Settling this question amounts to finding the dominant normative systems among η0 = η∅, η1, η2, η3 defined before, and η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s, s), (t, s)}, η7 = {(t, t), (s, t)} and η8 = {(s, t), (t, s)}.",
                "The utilities for each system are given in Table 1.",
                "From this, we infer that the Pareto efficient norms are η1, η2, η3, η6 and η7.",
                "Note that η8 prohibits the resource to be passed from one agent to another, and this is not good for any agent (since we have chosen S0 = {s, t}, no agent can be sure to ever get the resource, i.e., goal ϕi 1 is not true in K † η8). 5.3 Nash Implementation Normative Systems The most famous solution concept in game theory is of course Nash equilibrium [11, p.14].",
                "A collection of strategies, one for each agent, is said to form a Nash equilibrium if no agent can benefit by doing anything other than playing its strategy, under the assumption that the other agents play theirs.",
                "Nash equilibria are important because they provide stable solutions to the problem of what strategy an agent should play.",
                "Note that in our toy example, although η3 is individually rational for each agent, it is not a Nash equilibrium, since given this norm, it would be beneficial for agent 1 to deviate (and likewise for 2).",
                "In our framework, we say a social system Σ = M , η (where η = η∅) is a Nash implementation if SC (i.e., everyone complying with the normative system) forms a Nash equilibrium in the game GΣ.",
                "The intuition is that if Σ is a Nash implementation, then complying with the normative system is a reasonable solution for all concerned: there can be no benefit to deviating from it, indeed, there is a positive incentive for all to comply.",
                "If Σ is not a Nash implementation, then the normative system is unlikely to succeed, since compliance is not rational for some agents. (Our choice of terminology is deliberately chosen to reflect the way the term Nash implementation is used in implementation theory, or mechanism design [11, p.185], where a game designer seeks to achieve some outcomes by designing the rules of the game such that these outcomes are equilibria.)",
                "NASH IMPLEMENTATION (NI) : Given: Multi-agent system M .",
                "Question: Does there exist a non-empty normative system η over M such that M , η forms a Nash implementation?",
                "Verifying that a particular social system forms a Nash implementation can be done in polynomial time - it amounts to checking: ∀i ∈ A : ui (K † η) ≥ ui (K † (η {i})).",
                "This, clearly requires only a polynomial number of model checking calls, each of which requires only polynomial time.",
                "THEOREM 4.",
                "The NI problem is NP-complete, even for twoagent systems.",
                "PROOF.",
                "For membership of NP, simply guess a normative system η and check that it forms a Nash implementation; since η ⊆ R, guessing can be done in non-deterministic polynomial time, and as s(2k+1) 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) 2 2 t(x1) f(x1) t(x2) f(x2) t(xk) f(xk) ...... s0 Figure 4: Reduction for Theorem 4. we argued above, verifying that it forms a Nash implementation can be done in polynomial time.",
                "For NP-hardness, we reduce SAT.",
                "Suppose we are given a SAT instance ϕ over Boolean variables x1, . . . , xk .",
                "Then we construct an instance of NI as follows.",
                "We create two agents, A = {1, 2}.",
                "For each Boolean variable xi we create two Boolean variables, t(xi ) and f (xi ), and we then define a Kripke structure as shown in Figure 4, with s0 being the only initial state; the arc labelling in Figure 4 gives the α function, and each state is labelled with the propositions that are true in that state.",
                "For each Boolean variable xi , we define the formulae xi and x⊥ i as follows: xi = E f(t(xi ) ∧ E f((E f(t(xi ))) ∧ A f(¬f (xi )))) x⊥ i = E f(f (xi ) ∧ E f((E f(f (xi ))) ∧ A f(¬t(xi )))) Let ϕ∗ be the formula obtained from ϕ by systematically substituting xi for xi .",
                "Each agent has three goals: γi [0] = for both i ∈ {1, 2}, while γ1[1] = k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) γ2[1] = E fE f k^ i=1 ((E f(t(xi ))) ∧ (E f(f (xi )))) and finally, for both agents, γi [2] being the conjunction of the following formulae: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 887 k^ i=1 (xi ∨ x⊥ i ) (3) k^ i=1 ¬(xi ∧ x⊥ i ) (4) k^ i=1 ¬(E f(t(xi )) ∧ E f(f (xi ))) (5) ϕ∗ (6) We denote the multi-agent system so constructed by Mϕ.",
                "Now, we prove that the SAT instance ϕ is satisfiable iff Mϕ has a Nash implementation normative system: For the ⇒ direction, suppose ϕ is satisfiable, and let X be a satisfying valuation, i.e., a set of Boolean variables making ϕ true.",
                "We can extract from X a Nash implementation normative system η as follows: if xi ∈ X , then η includes the arc from s0 to the state in which f (xi ) is true, and also includes the arc from s(2k + 1) to the state in which f (xi ) is true; if xi ∈ X , then η includes the arc from s0 to the state in which t(xi ) is true, and also includes the arc from s(2k + 1) to the state in which t(xi ) is true.",
                "No other arcs, apart from those so defined, as included in η.",
                "Notice that η is individually rational for both agents: if they both comply with the normative system, then they will have their γi [2] goals achieved, which they do not in the basic system.",
                "To see that η forms a Nash implementation, observe that if either agent defects from η, then neither will have their γi [2] goals achieved: agent 1 strictly prefers (C, C) over (D, C), and agent 2 strictly prefers (C, C) over (C, D).",
                "For the ⇐ direction, suppose there exists a Nash implementation normative system η, in which case η = ∅.",
                "Then ϕ is satisfiable; for suppose not.",
                "Then the goals γi [2] are not achievable by any normative system, (by construction).",
                "Now, since η must forbid at least one transition, then at least one agent would fail to have its γi [1] goal achieved if it complied, so at least one would do better by defecting, i.e., not complying with η.",
                "But this contradicts the assumption that η is a Nash implementation, i.e., that (C, C) forms a Nash equilibrium.",
                "This result is perhaps of some technical interest beyond the specific concerns of the present paper, since it is related to two problems that are of wider interest: the <br>complexity</br> of mechanism design [5], and the <br>complexity</br> of computing Nash equilibria [6, 7] 5.4 Richer Goal Languages It is interesting to consider what happens to the complexity of the problems we consider above if we allow richer languages for goals: in particular, CTL ∗ [9].",
                "The main difference is that determining ui (K) in a given multi-agent system M when such a goal language is used involves solving a PSPACE-complete problem (since model checking for CTL ∗ is PSPACE-complete [8]).",
                "In fact, it seems that for each of the three problems we consider above, the corresponding problem under the assumption of a CTL ∗ representation for goals is also PSPACE-complete.",
                "It cannot be any easier, since determining the utility of a particular Kripke structure involves solving a PSPACE-complete problem.",
                "To see membership in PSPACE we can exploit the fact that PSPACE = NPSPACE [12, p.150], and so we can guess the desired normative system, applying a PSPACE verification procedure to check that it has the desired properties. 6.",
                "CONCLUSIONS Social norms are supposed to restrict our behaviour.",
                "Of course, such a restriction does not have to be bad: the fact that an agents behaviour is restricted may seem a limitation, but there may be benefits if he can assume that others will also constrain their behaviour.",
                "The question then, for an agent is, how to be sure that others will comply with a norm.",
                "And, for a system designer, how to be sure that the system will behave socially, that is, according to its norm.",
                "Game theory is a very natural tool to analyse and answer these questions, which involve strategic considerations, and we have proposed a way to translate key questions concerning logic-based normative systems to game theoretical questions.",
                "We have proposed a logical framework to reason about such scenarios, and we have given some computational costs for settling some of the main questions about them.",
                "Of course, our approach is in many senses open for extension or enrichment.",
                "An obvious issue is to consider is the <br>complexity</br> of the questions we give for more practical representations of models (cf. [1]), and to consider other classes of allowable goals. 7.",
                "REFERENCES [1] T. Agotnes, W. van der Hoek, J.",
                "A. Rodriguez-Aguilar, C. Sierra, and M. Wooldridge.",
                "On the logic of normative systems.",
                "In Proc.",
                "IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger, and O. Kupferman.",
                "Alternating-time temporal logic.",
                "Jnl. of the ACM, 49(5):672-713, 2002. [3] K. Binmore.",
                "Game Theory and the Social Contract Volume 1: Playing Fair.",
                "The MIT Press: Cambridge, MA, 1994. [4] K. Binmore.",
                "Game Theory and the Social Contract Volume 2: Just Playing.",
                "The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer and T. Sandholm.",
                "<br>complexity</br> of mechanism design.",
                "In Proc.",
                "UAI, Edmonton, Canada, 2002. [6] V. Conitzer and T. Sandholm.",
                "<br>complexity</br> results about nash equilibria.",
                "In Proc.",
                "IJCAI-03, pp. 765-771, Acapulco, Mexico, 2003. [7] C. Daskalakis, P. W. Goldberg, and C. H. Papadimitriou.",
                "The <br>complexity</br> of computing a Nash equilibrium.",
                "In Proc.",
                "STOC, Seattle, WA, 2006. [8] E. A. Emerson.",
                "Temporal and modal logic.",
                "In Handbook of Theor.",
                "Comp.",
                "Sci.",
                "Vol.",
                "B, pages 996-1072.",
                "Elsevier, 1990. [9] E. A. Emerson and J. Y. Halpern.",
                "Sometimes and not never revisited: on branching time versus linear time temporal logic.",
                "Jnl. of the ACM, 33(1):151-178, 1986. [10] D. Fitoussi and M. Tennenholtz.",
                "Choosing social laws for multi-agent systems: Minimality and simplicity.",
                "Artificial Intelligence, 119(1-2):61-101, 2000. [11] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou.",
                "Computational <br>complexity</br>.",
                "Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham and M. Tennenholtz.",
                "On the synthesis of useful social laws for artificial agent societies.",
                "In Proc.",
                "AAAI, San Diego, CA, 1992. [14] Y. Shoham and M. Tennenholtz.",
                "On social laws for artificial agent societies: Off-line design.",
                "In Computational Theories of Interaction and Agency, pages 597-618.",
                "The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts, and M. Wooldridge.",
                "Social laws in alternating time: Effectiveness, feasibility, and synthesis.",
                "Synthese, 2007. [16] M. Wooldridge and W. van der Hoek.",
                "On obligations and normative ability.",
                "Jnl. of Appl.",
                "Logic, 3:396-420, 2005. 888 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos de creciente prioridad e investigamos la \"complejidad\" computacional y las propiedades teóricas del juego de este modelo.complejidad",
                "Luego caracterizamos la \"complejidad\" computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la \"complejidad\" de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete.complejidad",
                "Luego caracterizamos la \"complejidad\" computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la \"complejidad\" de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete.2. complejidad",
                "Sin embargo, nuestra \"complejidad\" básica resulta en las siguientes secciones no se mantendrían para el lenguaje más rico CTL ∗ 2, y el precio a pagar por esto es que tenemos que formular nuestros objetivos deseados de una manera algo más engorrosa de lo que podríamos hacer idealmente.complejidad",
                "Tenga en cuenta que, dado que para cualquier jerarquía de objetivos γi tenemos γ [0] =, entonces para todas las estructuras de Kripke, UI (K) está bien definida, con UI (K) ≥ 2 CTL ∗ La comprobación del modelo es PSPACE-COMPLETE y, por lo tanto, mucho peor(Bajo supuestos teóricos de \"complejidad\" estándar) que la comprobación del modelo CTL [8].η Δ1 (k, η) Δ2 (k, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figura 2: Beneficios de implementar un sistema normativo η (izquierda) y pagos para el juego σm.0. complejidad",
                "Este resultado es quizás de algún interés técnico más allá de las preocupaciones específicas del presente documento, ya que está relacionado con dos problemas que son de mayor interés: la \"complejidad\" del diseño del mecanismo [5] y la \"complejidad\" de calcular los equilibrios Nash[6, 7] 5.4 Lenguajes de objetivos más ricos Es interesante considerar lo que sucede con la complejidad de los problemas que consideramos anteriormente si permitimos idiomas más ricos para las metas: en particular, CTL ∗ [9].complejidad",
                "Un problema obvio es considerar es la \"complejidad\" de las preguntas que damos para representaciones más prácticas de modelos (cf. [1]), y considerar otras clases de objetivos permitidos.7. Complejidad",
                "\"Complejidad\" del diseño del mecanismo.complejidad",
                "Resultados de \"complejidad\" sobre los equilibrios de Nash.complejidad",
                "La \"complejidad\" de calcular un equilibrio de Nash.complejidad",
                "Complejidad computacional\".complejidad"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}