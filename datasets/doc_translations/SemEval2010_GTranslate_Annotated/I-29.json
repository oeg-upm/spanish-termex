{
    "id": "I-29",
    "original_text": "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment. We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution. The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others. We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure. The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set. Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities. Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change. Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver. Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1. INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules. Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions. In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program. We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution. The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds. To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents. Each agent is also given a pre-computed set of local contingency (fall-back) options. Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework. In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints. This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms. The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]). However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules. We define an agent architecture centered around incremental management of a flexible times schedule. The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change. Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change. To this schedule management infra-structure, we add two mechanisms for multi-agent coordination. Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities. Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents. This latter process uses analysis of detected conflicts in the STN as a basis for generating options. The remainder of the paper is organized as follows. We begin by briefly summarizing the general distributed scheduling problem of interest in our work. Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation. In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents. We then give some experimental results to indicate current system performance. Finally we conclude with a brief discussion of current research plans. 2. THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program. The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment. A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem. Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks. A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when. Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution. Figure 2: Subjective view for Agent 2. As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward. Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1]. Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1. At the highest, most abstract level, the root of the tree is a special task called the task group. On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods. Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world. Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources). Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero. For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed. For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality. Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed. A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes. Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles). Two types of nles can be specified: hard and soft. Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality. Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task. Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints. Figure 1 shows the complete objective view of a simple 2 agent problem. Figure 2 shows the subjective view available to agent 2 for the same problem. In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3. OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment. First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution. This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision. The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement. This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available. Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure. Figure 3: Agent Architecture. Our solution framework is made concrete in the agent architecture depicted in Figure 3. In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN. At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent. The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied. When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated. In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule. Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views). After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change. The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule. These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective. In those cases where global improvement is verified, joint changes are committed to. In the following sections we consider the mechanics of these components in more detail. 4. THE SCHEDULER As indicated above, our agent scheduler operates incrementally. Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event. There is an inherent bias toward schedule stability which provides better support for the continuity in execution. This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules. The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment. As mentioned earlier, slack can be used as a hedge against uncertain method execution times. It also provides a basis for softening the impact of inter-dependencies across agents. In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem. In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3]. An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0. Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points. An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair. As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network. This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2]. As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule). Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop. The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem. The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once. The allocator selects methods from this list and attempts to install them in the agents schedule. Failure to do so reinvokes the quality propagator with the problematic activity excluded. The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes. The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled. Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality. The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined. Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators. The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline. Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline. The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order. In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda. Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated. The allocator iteratively pops the first method mnew from the agenda and attempts to install it. This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not. If any of the enabler activities fails to install, the allocation pass fails. When successful, the enables constraints linking the enabler activities to mnew are activated. The STN rejects an infeasible enabler constraint by returning a conflict. In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure. Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods. At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods. If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5. THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict. Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized. One basic mechanism needed to model execution in the STN is a dynamic model for current time. We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point. As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established. When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods. A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent. This coordination must be robust despite the fact that the The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule. If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture. This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler. The scheduler is triggered in response to various environmental messages. There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment. Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model. We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality. Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics. We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule. The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit. As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation). The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed. These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction). Of course as execution unfolds, actual method durations may deviate from these expectations. In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process. Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update. If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method. However if the method completes with a duration shorter than expected a rescheduling action might be warranted. The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline. However, it may present a possibility for exploiting the unanticipated scheduling slack. The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est). If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor. If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period). If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline. Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs. In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities. Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing. A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested. If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent. At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair. Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates. If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule. In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model. Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule. Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality. It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view. Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict. In the case of non-temporal model changes, rescheduling action is currently always initiated. 6. INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly. Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes. In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents. More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views. A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods. These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options. Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents. In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response. Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager. Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits. Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule. When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules. If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes. The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode. Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers. More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled. For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions. If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality. The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents. To illustrate, consider again the example in Figure 1. The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3). Assume that this is Agent1s current schedule. Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25. Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30. Agent2 sends a must schedule M4 query to Agent1. Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5. However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10. Hence, Agent 2 signals to Agent1 to commit to this non-local option. Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable. Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle. Given this cycle, the mechanism proceeds in three steps. First, the constraints involved in the cycle are collected. Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes. Third, constraints in this subset are selectively retracted to The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2. Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored. If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule. To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21. Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5). Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4). If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70. However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5). Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1. In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf). Upon communication of this fact Agent 2 signals to commit. 7. EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation. This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics. No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution. INT Interdependent. Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness. Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled. SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run. OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation. Agent Quality is % of optimal durations within six experiment classes. These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run. Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible. The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality. This established a challenging benchmark for the distributed agent systems to compare against. The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator. As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems. These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute. Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%. The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events. The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons. In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure. This constitutes a case where more sophisticated reasoning over success probability would benefit this agent. The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration). The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule. Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8. STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems. Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods. This scale places much higher computational demands on all of the agents components. We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues. In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems. To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms. To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes. To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity. Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9. ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International. This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033. Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10. REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A. Long, and B. Kohout. C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi. Gaining efficiency and flexibility in the simple temporal problem. In Proc. 3rd Int. Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl. Temporal constraint networks. Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker. TÆMS: A framework for environment centered analysis & design of coordination mechanisms. In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448. Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser. Designing a family of coordination algorithms. In Proc. 1st. Int. Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey. Design-To-Time Real-Time Scheduling. PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger. Algorithms for a temporal decoupling problem in multi-agent planning. In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand. Interleaving temporal planning and execution in robotics domains. In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams. Remote agent: To boldly go where no AI system has gone before. Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B. Do, and M. Fromherz. On-line planning and scheduling of high-speed manufacturing. In Proc. ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams. Enabling fast flexible planning through incremental temporal reasoning with conflict extraction. In Proce. ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng. Slack-based heuristics for constraint satisfaction scheduling. In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser. Criteria-directed heuristic task scheduling. International Journal of Approximate Reasoning, 19(1):91-118, 1998. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491",
    "original_translation": "Gestión distribuida de horarios de tiempos flexibles Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein, el Instituto de Robótica, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {SFS, Anthonyg, Wizim, Laurabar, Zbr} @cs.Resumen de cmu.edu Consideramos el problema de administrar los horarios en un entorno incierto y distribuido. Asumimos un equipo de agentes colaborativos, cada uno responsable de ejecutar una parte de un horario globalmente preestablecido, pero ninguna posee una visión global del problema o la solución. El objetivo es maximizar la calidad conjunta obtenida de las actividades ejecutadas por todos los agentes, dado que, durante la ejecución, los eventos inesperados forzarán los cambios a algunas actividades prescritas y reducirán la utilidad de ejecutar otros. Describimos una arquitectura de agente para resolver este problema que combina dos mecanismos básicos: (1) una representación de tiempos flexibles del cronograma de agentes (usando una red temporal simple) y (2) un procedimiento de reprogramación incremental. Los antiguos setos contra la incertidumbre temporal al permitir que la ejecución proceda de un conjunto de soluciones factibles, y el último actúa para revisar el cronograma de los agentes cuando la ejecución se ve forzada fuera de este conjunto de soluciones o cuando los eventos de ejecución reducen el valor esperado de este conjunto de solución factible. La coordinación básica con otros agentes se logra simplemente comunicando los cambios de programación a aquellos agentes con actividades interdependientes. Luego, según lo permita el tiempo, la infraestructura local de resolución de problemas locales se utiliza para impulsar una generación de opciones entre agentes y un proceso de consulta, destinado a identificar oportunidades para mejorar las soluciones a través del cambio conjunto. Usando un simulador para modelar el entorno, comparamos el rendimiento de nuestro sistema de múltiples agentes con el de un solucionador MDP centralizado óptimo (pero no escalable) esperado. Categorías y descriptores de sujetos I.2.11 [Metodologías de computación]: inteligencia artificial artificial inteligencia artificial Algoritmos de términos generales, diseño 1. Introducción Las limitaciones prácticas de muchos entornos de aplicación requieren una gestión distribuida de la ejecución de planes y horarios. Factores tales como la separación geográfica de los agentes ejecutivos, las limitaciones en el ancho de banda de comunicación, las limitaciones relacionadas con la cadena de mando y el alto tempo de la dinámica de ejecución pueden impedir que cualquier agente solo obtenga una visión global completa del problema y, por lo tanto, necesite necesitar una planificación colaborativa pero localizada pero localizada de planificación localizaday decisiones de programación. En este documento, consideramos el problema de administrar y ejecutar horarios en un entorno incierto y distribuido según lo definido por el Programa de Coordinadores de DARPA. Asumimos un equipo de agentes colaborativos, cada uno responsable de ejecutar una parte de un horario preestablecido globalmente, pero ninguna posee una visión global del problema o la solución. El objetivo del equipo es maximizar la calidad total de todas las actividades ejecutadas por todos los agentes, dado que los eventos inesperados forzarán los cambios a las actividades previamente programadas y alterar la utilidad de ejecutar a otros a medida que se desarrolla la ejecución. Para proporcionar una base para la coordinación distribuida, cada agente es consciente de las dependencias entre sus actividades programadas y las de otros agentes. Cada agente también recibe un conjunto precomputado de opciones de contingencia local (caída). Central para nuestro enfoque para resolver este problema de múltiples agentes es un marco incremental de programación de veces flexible. En una representación de los tiempos flexibles de un cronograma de agentes, los intervalos de ejecución asociados con las actividades programadas no se fijan, sino que se permiten flotar dentro de las restricciones de secuenciación de tiempo y actividad impuesta. Esta representación permite el uso explícito de la holgura como cobertura contra formas simples de incertidumbre de ejecución (por ejemplo, duraciones de actividad), y su implementación subyacente como un modelo de red temporal simple (STN) proporciona mecanismos eficientes de actualización y aplicación de consistencia. Las ventajas de los marcos de tiempos flexibles se han demostrado en varios contextos centralizados de planificación y programación (por ejemplo, [12, 8, 9, 10, 11]). Sin embargo, su uso en la configuración de resolución de problemas distribuidos ha sido bastante escaso ([7] es una excepción), y los enfoques anteriores para la programación de múltiples agentes (por ejemplo, [6, 13, 5]) generalmente han operado con representaciones de agentes de tiempo fijo del agentehorarios. Definimos una arquitectura de agente centrada en la gestión incremental de un horario de tiempos flexibles. La representación basada en STN subyacente se usa (1) para aflojar el acoplamiento entre los hilos del ejecutor y el planificador, (2) para retener una capacidad básica para absorber retrasos de ejecución inesperados (o aceleraciones) y (3) para proporcionar un criterio básico para detectarla necesidad de cambio de horario. El cambio local es AC484 978-81-904262-7-5 (RPS) C 2007 Ifaamas Figura 1: un problema de dos agentes C de Cems.Cumplido por un programador incremental, diseñado para maximizar la calidad al intentar minimizar el cambio de horario. A este cronograma de infraestructura de gestión, agregamos dos mecanismos para la coordinación de múltiples agentes. La coordinación básica con otros agentes se logra mediante la comunicación simple de los cambios de horario local a otros agentes con actividades interdependientes. En capas sobre esto es un proceso de generación y evaluación de opciones no local (similar en algunos aspectos a [5]), dirigido a la identificación de oportunidades para la mejora global a través de cambios conjuntos en los horarios de múltiples agentes. Este último proceso utiliza el análisis de conflictos detectados en el STN como base para generar opciones. El resto del documento se organiza de la siguiente manera. Comenzamos resumiendo brevemente el problema de programación distribuido general de interés en nuestro trabajo. A continuación, presentamos la arquitectura del agente que hemos desarrollado para resolver este problema y dibujar su operación. En las siguientes secciones, describimos los componentes de la arquitectura con más detalle, considerando a su vez problemas relacionados con la ejecución de los horarios de los agentes, revisando incrementalmente los horarios de los agentes y coordinando los cambios de programación entre múltiples agentes. Luego damos algunos resultados experimentales para indicar el rendimiento actual del sistema. Finalmente concluimos con una breve discusión sobre los planes de investigación actuales.2. El problema de los coordinadores como se indica anteriormente el problema de gestión del cronograma distribuido que abordamos en este documento es el presentado por el Programa de Coordinadores de DARPA. El problema de los coordinadores se refiere generalmente a la ejecución colaborativa de una misión conjunta por parte de un equipo de agentes en un entorno altamente dinámico. Una misión está formulada como una red de tareas, que se distribuyen entre los agentes por el simulador de masas de modo que ningún agente tiene una visión completa y objetiva de todo el problema. En cambio, cada agente recibe solo una vista subjetiva que contiene solo la parte de la red de tareas que se relaciona con tareas terrestres de las que es responsable y cualquier tarea remota que tenga interdependencias con estas tareas locales. Un horario inicial precomputado también se distribuye a los agentes, y cada horario de agentes indica cuál de sus tareas locales debe ejecutarse y cuándo. Cada tarea tiene un valor de calidad asociado que se acumula si se ejecuta con éxito dentro de sus restricciones, y el objetivo general es maximizar la calidad obtenida durante la ejecución. Figura 2: Vista subjetiva para el Agente 2. A medida que avanza la ejecución, los agentes deben reaccionar ante resultados inesperados (por ejemplo, retrasos en las tareas, fallas) y cambios en la misión (por ejemplo, nuevas tareas, cambios de fecha límite) generados por el simulador, reconocen cuándo las tareas programadas ya no son factibles o deseables, y coordinadas, y coordinadascon el uno al otro para tomar acciones de reprogramación correctivas y maximizadas de calidad que mantienen la ejecución de la misión general en el futuro. Los problemas se especifican formalmente utilizando una versión del lenguaje TAEMS (análisis de tareas, modelado de entorno y simulación) [4] llamado C TAEMS [1]. Dentro de los Cems, las tareas se representan jerárquicamente, como se muestra en el ejemplo en la Figura 1. En el nivel más alto y abstracto, la raíz del árbol es una tarea especial llamada grupo de tareas. En niveles sucesivos, las tareas constituyen actividades agregadas, que pueden descomponerse en conjuntos de subtareas y/o actividades primitivas, denominadas métodos. Los métodos aparecen en el nivel de la hoja de las estructuras de tareas de Caems y son aquellos que son directamente ejecutables en el mundo. Cada método declarado M solo puede ser ejecutado por un agente especificado (denotado por AG: AgentN en la Figura 1) y cada agente puede ejecutar como máximo un método en cualquier momento dado (es decir, los agentes son recursos de capacidad de unidad). Las duraciones y la calidad del método generalmente se especifican como distribuciones de probabilidad discretas y, por lo tanto, se conocen con certeza solo después de haber sido ejecutadas.1 También es posible que un método falle inesperadamente en la ejecución, en cuyo caso la calidad informada es cero. Para cada tarea, se define una función de acumulación de calidad QAF, que especifica cuándo y cómo una tarea acumula la calidad a medida que se ejecutan sus subtareas (métodos). Por ejemplo, una tarea con un MIN QAF acumulará la calidad de su hijo con la más baja calidad si todos sus hijos ejecutan y acumulan calidad positiva. Las tareas con Sum o Max QAFS adquieren calidad tan pronto como un niño se ejecuta con calidad positiva;Como sugieren sus nombres QAF, sus valores respectivos, en última instancia, serán la calidad total o máxima de todos los niños que se ejecutaron. Una tarea de sincronización de suma acumulará calidad solo para aquellos niños que comienzan la ejecución simultáneamente con el primer niño que se ejecuta, mientras que una tarea exactamente una acumulación de calidad solo, si es precisamente, uno de sus niños se ejecuta. Las interdependencias entre tareas/métodos en el problema se modelan a través de efectos no locales (NLE). Se pueden especificar dos tipos de NLES: duro y suave. Las nleses duras expresan 1 para simplificar, las Figuras 1 y 2 muestran solo valores fijos para la calidad y duración del método. El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 485 condiciones previas causales: por ejemplo, el NLE en la Figura 1 estipula que el método objetivo M5 no puede ejecutarse hasta que la fuente M4 acumule la calidad. No se requieren restricciones para facilitar y los obstáculos, no se requieren restricciones;Sin embargo, cuando están en juego, amplifican (o amortiguan) la calidad y la duración de la tarea objetivo. Cualquier tarea o método A también puede estar limitado por una hora de inicio más temprana y una fecha límite, especificando la ventana en la que A se puede ejecutar de manera factible.A también puede heredar estas restricciones de las tareas de antepasados en cualquier nivel superior en la estructura de tareas, y su ventana de ejecución efectiva se definirá por la más ajustada de estas restricciones. La Figura 1 muestra la vista objetiva completa de un problema simple de 2 agentes. La Figura 2 muestra la vista subjetiva disponible para el Agente 2 para el mismo problema. En lo que sigue, a veces utilizaremos el término actividad para referirse genéricamente a los nodos de tareas y métodos.3. Descripción general del enfoque Nuestro marco de soluciones combina dos principios básicos para hacer frente al problema de administrar los horarios de múltiples agentes en un entorno de ejecución incierto y estresado por el tiempo. Primero es el uso de una representación de tiempos flexibles basados en STN de restricciones de solución, lo que permite que la ejecución sea impulsada por un conjunto de horarios en lugar de una solución de un solo punto. Esto proporciona una cobertura básica contra la incertidumbre temporal y puede usarse para modular la necesidad de revisión de la solución. El segundo principio es responder primero localmente a eventos excepcionales, y luego, según lo permita el tiempo, explorar opciones no locales (es decir, opciones que involucran el cambio en 2 o más agentes) para la mejora global de soluciones. Esto proporciona un medio para mantener el ritmo de la ejecución y para vincular la cantidad de esfuerzo gastado en una mejora de soluciones múltiples más global en el tiempo disponible. El tiempo de resolución de problemas local y no local se minimiza aún más mediante el uso de un procedimiento de programación incremental central. Figura 3: Arquitectura del agente. Nuestro marco de soluciones se hace concreto en la arquitectura del agente representada en la Figura 3. En su forma más básica, un agente comprende cuatro componentes principales: un albacea, un programador, un administrador estatal distribuido (DSM) y un administrador de opciones, todo lo cual comparten un modelo común del problema actual y la solución que combina un nivel de dominioRepresentación de la estructura de tareas subjetivas de Caems a un STN subyacente. En cualquier momento durante la operación, el programa instalado actualmente dicta el tiempo y la secuencia de actividades a nivel de dominio que el agente iniciará. El albacea, que se ejecuta en su propio hilo, monitorea continuamente las condiciones habilitadoras de varias actividades pendientes, y activa la siguiente actividad pendiente tan pronto como se cumplan todas sus limitaciones causales y temporales. Cuando se reciben los resultados de la ejecución del entorno (MASS) y/o los cambios a las restricciones externas supuestas se reciben de otros agentes, se actualiza el modelo de estado de los agentes del estado actual. En los casos en que esta actualización conduce a la inconsistencia en el STN o se reconoce que el horario local actual ahora podría mejorarse, el programador, ejecutándose en un hilo separado, se invoca para revisar la solución actual e instalar un nuevo horario. Cada vez que las limitaciones del horario local cambian en respuesta a una actualización de estado actual o mediante la manipulación del programador, el DSM se invoca para comunicar estos cambios a los agentes interesados (es decir, aquellos agentes que comparten dependencias y tienen vistas subjetivas superpuestas). Después de responder localmente a una actualización estatal dada y consecuencias de comunicación, el agente utilizará cualquier tiempo de cálculo restante para explorar las posibilidades de mejora a través del cambio conjunto. El administrador de opciones utiliza el planificador (en este caso en modo hipotético) para generar una o más opciones no locales, es decir, identificar cambios en el cronograma de uno o más agentes que permitirán al agente local aumentar la calidad de su cronograma. Estas opciones se formulan y comunican como consultas a los agentes remotos apropiados, que a su vez evalúan hipotéticamente el impacto de los cambios propuestos desde su perspectiva local. En aquellos casos en los que se verifica la mejora global, se comprometen los cambios conjuntos. En las siguientes secciones consideramos la mecánica de estos componentes con más detalle.4. El planificador como se indicó anteriormente, nuestro programador de agentes opera de forma incremental. Los marcos de programación incremental son ideales para dominios que requieren un acoplamiento ajustado de ejecución del programador: en lugar de recomputar un nuevo horario en respuesta a cada cambio, responden rápidamente a los eventos de ejecución al localizar los cambios y hacer ajustes al horario actual para acomodar el evento. Existe un sesgo inherente hacia la estabilidad del cronograma que proporciona un mejor soporte para la continuidad en la ejecución. Esta última propiedad también es ventajosa en la configuración de múltiples agentes, ya que la estabilidad de la solución tiende a minimizar la onda en diferentes horarios de agentes. El acoplamiento de la programación incremental con la programación de tiempos flexibles agrega apalancamiento adicional en un entorno de ejecución incierto y multiagente. Como se mencionó anteriormente, Slack se puede usar como una cobertura contra los tiempos de ejecución de métodos inciertos. También proporciona una base para ablandar el impacto de las interdependencias entre los agentes. En esta sección, resumimos el planificador central que hemos desarrollado para resolver el problema de los coordinadores. En secciones posteriores, discutimos su uso en la gestión de la ejecución y la coordinación con otros agentes.4.1 Representación de la solución STN para mantener el rango de valores admisibles para los tiempos de inicio y finalización de varios métodos en un agente determinado SCHED486 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), todas las limitaciones de problemas y programación que afectan estos tiempos están codificados en una red temporal simple subyacente (STN) [3]. Un STN representa las restricciones temporales como un gráfico G <n, E>, donde los nodos en n representan el conjunto de puntos de tiempo de interés, y los bordes en E son distancias entre pares de puntos de tiempo en N. un punto de tiempo especial, llamado calendario ceromotiva la red y tiene el valor 0. Las restricciones en las actividades (por ejemplo, el tiempo de liberación, el tiempo de debido, la duración) y las relaciones entre las actividades (por ejemplo, la relación de ParentChild, habilitan) se representan uniformemente como restricciones temporales (es decir, bordes) entre los puntos de tiempo de inicio y finalización relevantes. Un cronograma de agentes se designa como un orden total de los métodos seleccionados al publicar restricciones de precedencia entre el final y los puntos de inicio de cada par ordenado. Como se insertan nuevos métodos en un horario o actualizaciones de estado externos requieren ajustes a las restricciones existentes (por ejemplo, la sustitución de una restricción de duración real, el ajuste de una fecha límite), la red propaga restricciones y mantiene límites inferiores y superiores en todos los puntos de tiempo en la red. Esto se logra de manera eficiente mediante el uso de un algoritmo de ruta más corto estándar de todos los pares;En nuestra implementación, aprovechamos un procedimiento incremental basado en [2]. A medida que se actualizan los límites, se realiza una verificación de consistencia para la presencia de ciclos negativos, y la ausencia de dicho ciclo asegura la viabilidad temporal continua de la red (y, por lo tanto, del cronograma). De lo contrario, se ha detectado un conflicto, y es necesaria cierta cantidad de retracción de restricción para restaurar la viabilidad.4.2 Mantenimiento de horarios de alta calidad El planificador consta de dos componentes básicos: un propagador de calidad y un asignador de actividades que funciona en un bucle estrictamente integrado. El propagador de calidad analiza la jerarquía de actividad y recopila un conjunto de métodos que (si se programan) maximizarían la calidad del problema local de los agentes. Los métodos se recopilan sin tener en cuenta la contención de recursos;En esencia, el propagador de calidad resuelve de manera óptima un problema relajado donde los agentes son capaces de realizar un número infinito de actividades a la vez. El asignador selecciona métodos de esta lista e intenta instalarlos en el horario de los agentes. De lo contrario, reinvoca el propagador de calidad con la actividad problemática excluida. El propagador de calidad: el propagador de calidad realiza las siguientes acciones en la estructura de tareas de los caems: • Calcula la calidad de todas las actividades en la estructura de tareas: la calidad de calidad esperada de un método m se calcula a partir de la distribución de probabilidad de la ejecuciónresultados. La calidad cual (t) de una tarea t se calcula aplicando su QAF a la calidad evaluada de sus hijos.• Genera una lista de contribuyentes para cada tarea: los métodos que, si están programados, maximizarán la calidad obtenida por la tarea.• Genera una lista de activadores para cada tarea: los métodos que, si están programados, son suficientes para calificar la tarea según lo programado. Se eligen métodos en la lista de activadores para minimizar las demandas en la línea de tiempo de los agentes sin tener en cuenta la calidad. La primera vez que se invoca el propagador de calidad, se calculan las cualidades de todas las tareas y métodos y se determinan las listas iniciales de contribuyentes y activadores. Las llamadas posteriores al propagador ocurren cuando el asignador instala métodos en la línea de tiempo de los agentes: falla del asignador para instalar un método hace que el propagador recompute una nueva lista de contribuyentes y activadores. El asignador de actividades: el asignador de actividad busca instalar los contribuyentes del grupo de tareas identificados por el propagador de calidad en la línea de tiempo de los agentes. Cualquier método actualmente programado que no aparezca en la lista de contribuyentes no se redactan y se eliminan de la línea de tiempo. Los contribuyentes se preprocesan utilizando una heurística centrada en la calidad para crear una agenda ordenada para disminuir el orden de calidad. Además, los métodos asociados con A y tarea (es decir, Min, Sumand) se agrupan consecutivamente dentro de la agenda. Dado que una tarea y la tarea acumula la calidad solo si todos sus niños están programados, esto sesga el proceso de programación para fallar temprano (y los contribuyentes regeneradores) cuando los métodos elegidos para el y no se pueden asignar juntos. El asignador aparece iterativamente el primer método mNEW de la agenda e intenta instalarlo. Esto implica la primera verificación que se han programado todas las actividades que habilitan MNNEW, mientras se intenta instalar cualquier habilitador que no lo sea. Si alguna de las actividades del habilitador no se instala, el pase de asignación falla. Cuando tiene éxito, las restricciones permiten que se activen las actividades del habilitador con MNNEW. El STN rechaza una restricción de facilitador inviable al devolver un conflicto. En este caso, cualquier actividades de habilitador que haya programado esté desinstalada y el asignador devuelve la falla. Una vez que se garantiza la programación de los habilitadores, se busca una ranura factible en la línea de tiempo de los agentes dentro de la ventana de tiempo MNNEWS y el asignador intenta insertar MNNEW entre dos métodos actualmente programados. En el nivel STN, la inserción de MNEWS rompe la restricción de secuenciación entre los dos métodos de línea de tiempo existentes e intenta insertar dos nuevas restricciones de secuenciación que encadenan a estos métodos. Si estas inserciones tienen éxito, la rutina devuelve el éxito, de lo contrario, los dos métodos de línea de tiempo existentes se vuelven a relacionar y los intentos de asignación de la siguiente ranura posible para la inserción de MNNEW.5. La dinámica de la ejecución que mantiene un horario de veces flexible nos permite utilizar un enfoque basado en conflictos para la reparación del programa: en lugar de reaccionar a cada evento en la ejecución que puede afectar el cronograma existente al calcular una solución actualizada, el STN puede absorber cualquier cambio de cambio.Eso no causa un conflicto. En consecuencia, se minimizan el cálculo (produciendo un nuevo horario) y los costos de comunicación (informar a otros agentes de cambios que los afectan). Un mecanismo básico necesario para modelar la ejecución en el STN es un modelo dinámico para el tiempo actual. Empleamos un modelo propuesto por [7] que establece un punto de tiempo de tiempo actual e incluye un enlace entre él y el punto de tiempo calendario cero. Como cada método está programado, se establece una restricción de precedencia simple entre el punto de tiempo de tiempo actual y el método. Cuando el programador recibe una actualización de tiempo actual, el enlace entre Calendar-Zero y la hora actual se modifica para reflejar este nuevo tiempo, y la restricción se propaga a todos los métodos programados. Un segundo problema se refiere a la sincronización entre el ejecutor y el programador, como productor y consumidor del cronograma que se ejecuta en diferentes hilos dentro de un agente determinado. Esta coordinación debe ser robusta a pesar del hecho de que el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 487, el albacea debe iniciar métodos para la ejecución en tiempo real, incluso mientras el planificador puede reevaluar el cronograma para maximizar la calidad y/o transmitir un horario revisado. Si el ejecutor, por ejemplo, se pliega un método para la ejecución basado en la hora actual, mientras que el programador está instanciando un cronograma revisado en el que ese método ya no es ejecutado a continuación, puede surgir un estado inconsistente dentro de la arquitectura del agente. Esto se aborda en parte al introducir una ventana de congelación;El programador no puede reprogramar un período de tiempo corto (y ajustable) especificado más allá del tiempo actual dentro del cual cualquier actividad programada como elegible para comenzar en el horario actual no puede ser reprogramada por el planificador. El planificador se activa en respuesta a varios mensajes ambientales. Hay dos tipos de clases de mensajes ambientales que discutimos aquí como dinámica de ejecución: 1) retroalimentación como resultado de la ejecución del método: tanto los agentes como los de otros agentes, y 2) cambios en el modelo de Caems correspondiente a un conjunto de un conjunto deEvoluciones simulatordinadas del problema y el entorno. Dichos mensajes se denominan actualizaciones y son tratados por el planificador como directivas para modificar permanentemente los parámetros en su modelo. Discutimos estos tipos de actualizaciones a su vez aquí y diferimos hasta más tarde la discusión de consultas al planificador, un modo de qué if iniciado por un agente remoto que está buscando una calidad global más alta. Ya sea que se invoque a través de una actualización o una consulta, la respuesta de los programadores es una opción;Esencialmente, un cronograma completo de actividades que el agente puede ejecutar junto con las métricas de calidad asociadas. Definimos una opción local como un horario válido para las actividades de un agente, que no requiere cambios en ningún horario de otro agente. El diseño general para manejar la dinámica de ejecución tiene como objetivo el comportamiento de programación en cualquier momento en el que una opción local que maximice la vista local de la calidad se devuelve rápidamente, posiblemente seguido de horarios de calidad a nivel mundial que implican la coordinación entre agentes si los ciclos de programador disponibles lo permiten. Como tal, el modo de programación predeterminado para actualizaciones es buscar la opción local de la más alta calidad de acuerdo con la estrategia de búsqueda de programadores, instanciar la opción como su horario actual y notificar al ejecutor de la revisión.5.1 Respondiendo a la ejecución de la actividad Como se sugirió anteriormente, un cronograma comprometido consiste en una secuencia de métodos, cada uno con una ventana de tiempo de inicio designada [EST, LST] (según lo dispuesto por la representación STN subyacente). El ejecutor es libre de ejecutar un método en cualquier momento dentro de su ventana de tiempo de inicio, una vez que se hayan confirmado cualquier condición de habilitación adicional. Estas ventanas de tiempo de inicio programadas se establecen utilizando la duración esperada de cada método programado (derivado de distribuciones de duración del método asociado durante la construcción del cronograma). Por supuesto, a medida que se desarrolla la ejecución, las duraciones del método real pueden desviarse de estas expectativas. En estos casos, la flexibilidad retenida en el cronograma se puede utilizar para absorber parte de esta imprevisibilidad y modular la invocación de un proceso de revisión del cronograma. Considere el caso de un mensaje de finalización del método, uno de los mensajes ambientales que podrían comunicarse al planificador como una actualización del estado de ejecución. Si el tiempo de finalización coincide con la duración esperada (es decir, se completa exactamente como se esperaba), entonces la respuesta de los programadores es simplemente marcarlo como completado y el agente puede proceder a comunicar el tiempo en el que tiene calidad acumulada a cualquier agente remotovinculado a este método. Sin embargo, si el método se completa con una duración más corta de lo esperado, podría estar justificada una acción de reprogramación. La publicación de la duración real en el STN no introduce potencial de conflicto en este caso, ya sea con los últimos tiempos de inicio (LST) de métodos locales o remotos que dependen de este método como un facilitador, o para métodos programados sucesivos en la línea de tiempo de los agentes. Sin embargo, puede presentar la posibilidad de explotar la holgura de programación imprevista. La representación de tiempos flexibles que ofrece el STN proporciona un medio rápido para evaluar si el siguiente método en la línea de tiempo puede comenzar la ejecución inmediata en lugar de esperar su tiempo de inicio más temprano (EST) previamente establecido. Si de hecho, el EST del siguiente método programado puede volver a la hora actual una vez que la restricción de duración real se sustituye por la restricción de duración esperada, entonces el horario puede dejarse intacto y simplemente comunicarse nuevamente al ejecutor. Si alternativamente, otras restricciones de problemas evitan esta relajación del EST, entonces hay un tiempo de inactividad forzado que puede explotarse revisando el cronograma, y se invoca el planificador (siempre respetando el período de congelación). Si el método se completa más tarde de lo esperado, entonces no hay necesidad de reprogramar bajo programación de tiempos flexibles a menos que 1) el método termine más tarde que el LST de la actividad programada posterior, o 2) termina más tarde que su fecha límite. Por lo tanto, solo invocamos al planificador si, al publicar el final tardío en el STN, se produce una violación de restricción. En este último caso, no se acumulan calidad y se reprograma, incluso si no hay conflictos con actividades programadas posteriores. Otras actualizaciones de estado de ejecución que el agente puede recibir incluyen: • Inicio del método: si un método enviado para la ejecución se inicia dentro de su ventana [EST, LST], la respuesta es marcarlo como ejecutando. Un método no puede comenzar antes cuando el ejecutor lo transmite, pero es posible que comience más tarde de lo solicitado. Si la hora de inicio publicada causa una inconsistencia en el STN (por ejemplo, porque la duración del método esperado ya no se puede acomodar), la restricción de duración en el STN se acorta en función de la distribución conocida hasta que se restablezca o reprogramación.• Falla del método: cualquier método en ejecución puede fallar inesperadamente, sin obtener calidad para el agente. En este punto, la reprogramación se exige ya que el método puede permitir otras actividades o afectar significativamente la calidad en ausencia de reparación local. Nuevamente, el albacea procederá con la ejecución del siguiente método si llega su hora de inicio antes de que se comete el horario revisado, y el programador se adapta a esto respetando la ventana de congelación.• La hora actual avanza una actualización sobre la hora actual puede llegar solo o como parte de cualquiera de las actualizaciones discutidas anteriormente. Si, al actualizar el enlace de tiempo actual en el STN (como se describió anteriormente), un resultado de conflicto, el estado de ejecución es inconsistente con el cronograma. En este caso, el programador procede como si la ejecución fuera consistente con sus expectativas, sujetas a posibles actualizaciones posteriores.488 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 5.2 Respondiendo a las actualizaciones del modelo, el agente también puede recibir dinámicamente cambios en el modelo de agentes subyacentes a los Cems. Las revisiones dinámicas en las distribuciones de resultados para métodos que ya están en una visión subjetiva de los agentes pueden afectar los valores evaluados de calidad y/o duración que dieron forma al cronograma actual. Del mismo modo, las revisiones dinámicas en los tiempos de lanzamiento designados y los plazos para métodos y tareas que ya están en una visión subjetiva de los agentes pueden invalidar un cronograma existente o presentar oportunidades para aumentar la calidad. También es posible durante la ejecución recibir actualizaciones en las que se otorgan nuevos métodos y posiblemente estructuras de tareas completas al agente para su inclusión en su visión subjetiva. Los cambios en el modelo que involucran restricciones temporales se manejan de la misma manera que se describe para los inicios y finalizaciones del método, es decir, la reprogramación se requiere solo cuando la publicación de las limitaciones revisadas conduce a un conflicto STN. En el caso de los cambios en el modelo no temporal, la acción de reprogramación actualmente siempre se inicia.6. La coordinación entre agentes, después de haber respondido localmente a un resultado de ejecución inesperado o un cambio de modelo, es necesario comunicar las consecuencias a los agentes con actividades interdependientes para que puedan alinear sus decisiones en consecuencia. Las respuestas que se ven bien localmente pueden tener un efecto global subóptimo una vez que se realizan alineaciones y, por lo tanto, los agentes deben tener la capacidad de buscar cambios de horario conjunto mutuamente beneficioso. En esta sección resumimos los mecanismos de coordinación proporcionados en la arquitectura del agente para abordar estos problemas.6.1 Comunicación de restricciones no locales Un medio básico de coordinación con otros agentes es proporcionada por el mecanismo de estado distribuido (DSM), que es responsable de comunicar los cambios realizados con el modelo o el cronograma de un agente determinado a otros agentes interesados. Más específicamente, el DSM de un agente determinado actúa para impulsar cualquier cambio realizado en los límites de tiempo, la calidad o el estado de una tarea/método local a todos los demás agentes que tienen la misma tarea/método que un nodo remoto en sus opiniones subjetivas. Un agente destinatario trata cualquier cambio comunicado como formas adicionales de actualizaciones, en este caso una actualización que modifica las restricciones actuales asociadas con tareas o métodos no locales (pero interdependientes). Estos cambios se manejan de manera idéntica a las actualizaciones que reflejan los resultados de la ejecución del cronograma, lo que potencialmente desencadena el programador local si se detecta la necesidad de reprogramar.6.2 Generación de opciones no locales Como se menciona en la sección anterior, los agentes primero responden a cualquier consulta o actualización dada (ya sea desde la ejecución o de otro agente) es generar una o más opciones locales. Dichas opciones representan cambios de programación local que son consistentes con todas las restricciones conocidas actualmente originadas de otros horarios de agentes y, por lo tanto, se pueden implementar sin interacción con otros agentes. En muchos casos, sin embargo, un cambio de mayor escopeta a los horarios de dos o más agentes puede producir una respuesta de mayor calidad. La exploración de oportunidades para dicha acción coordinada por parte de dos o más agentes es responsabilidad del gerente de opciones. Ejecutando en modo de menor prioridad que el ejecutor y el planificador, el administrador de opciones inicia un proceso de generación y evaluación de opciones no local en respuesta a cualquier cambio de cronograma local realizado por el agente si las restricciones de tiempo de cálculo lo permiten. En términos generales, una opción no local identifica ciertas relajaciones (para una o más restricciones impuestas por los métodos programados por uno o más agentes remotos) que permiten la generación de un horario local de mayor calidad. Cuando se encuentra, un agente coordinador utiliza una opción no local para formular consultas a cualquier otro agente involucrado para determinar el impacto de tales relajaciones de restricciones en sus horarios locales. Si el cambio de calidad combinado informado de un conjunto de una o más consultas relevantes es una ganancia neta, entonces el agente emisor señala a los otros agentes involucrados para comprometerse con este conjunto conjunto de cambios de horario. El gerente de opciones actualmente emplea dos estrategias de búsqueda básicas para generar opciones no locales, cada una explotando el programador local en modo hipotético. Sincronización optimista: la sincronización optimista es una estrategia de generación de opciones no local donde la búsqueda se utiliza para explorar el impacto en la calidad si se realizan supuestos optimistas sobre los habilitadores remotos actualmente no programados. Más específicamente, la estrategia busca métodos contribuyentes que actualmente no sean programados debido al hecho de que una o más tareas o métodos habilitadores (fuente) remotos no están programados actualmente. Para cada método local, el conjunto de habilitadores remotos se activan hipotéticamente, y el programador intenta construir un nuevo horario local bajo estos supuestos optimistas. Si tiene éxito, se genera una opción no local, que especifica el valor del nuevo cronograma local de mayor calidad, las restricciones temporales en la actividad objetivo local y el conjunto de actividades del habilitador de programación imprescindible que deben programarse por agentes remotos para quePara lograr esta calidad local. Las consultas necesarias que solicitan el impacto de calidad de la programación de estas actividades se formulan y se envían a los agentes remotos relevantes. Para ilustrar, considere nuevamente el ejemplo en la Figura 1. La calidad máxima que Agent1 puede contribuir al grupo de tareas es 15 (programando M1, M2 y M3). Suponga que este es el horario actual de agente 1. Dado este estado, la calidad máxima que Agent2 puede contribuir al grupo de tareas es 10, y la calidad total del grupo de tareas sería 15 + 10 = 25. Utilizando la sincronización optimista, Agent2 generará una opción no local que indica que si M5 se habilita, tanto M5 como M6 se programarían, y la calidad aportada por Agent2 al grupo de tareas se convertiría en 30. Agent2 envía una consulta de programación M4 al agente1. Debido a las limitaciones de la ventana de tiempo, el Agente1 debe eliminar M3 de su horario para obtener M4 encendido, lo que resulta en un nuevo horario de menor calidad de 5. Sin embargo, cuando Agent2 recibe esta respuesta de opción de Agent1, determina que la calidad total acumulada para el grupo de tareas sería 5 + 30 = 35, una ganancia neta de 10. Por lo tanto, el Agente 2 señala al Agente1 para comprometerse con esta opción no local. Relajación basada en conflictos: una segunda estrategia para generar opciones no locales, denominada relajación dirigida por conflictos, utiliza el análisis de conflictos STN para identificar y priorizar las limitaciones externas para relajarse en caso de que se encuentre un método particular que aumentaría la calidad local.para ser insportable. Recuerde que si un método no se puede insertar de manera factible en el horario, un intento de hacerlo generará un ciclo negativo. Dado este ciclo, el mecanismo continúa en tres pasos. Primero, se recopilan las limitaciones involucradas en el ciclo. En segundo lugar, en virtud de las conexiones en el STN al modelo C Taems de nivel de dominio, este conjunto se filtra para identificar el subconjunto asociado con los nodos remotos. Tercero, las restricciones en este subconjunto se retraen selectivamente al Sexto INTL. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 489 Figura 4: Se agrega una tarea de alta calidad a la estructura de tareas del agente2. Figura 5: Si M4, M5 y M7 están programados, el STN detecta un conflicto.Determine si se restaura la consistencia STN. Si tiene éxito, se genera una opción no local que indica qué restricciones remotas deben relajarse y por cuánto permitir la instalación del nuevo horario local de mayor calidad. Para ilustrar esta estrategia, considere la Figura 5 donde el Agente1 tiene M1, M2 y M4 en su línea de tiempo y, por lo tanto, EST (M4) = 21. Agent2 tiene M5 y M6 en su línea de tiempo, con EST (M5) = 31 (M6 podría programarse antes o después de M5). Supongamos que Agent2 recibe una nueva tarea M7 con la fecha límite 55 (ver Figura 4). Si Agent2 pudiera programar M7, la calidad aportada por Agent2 al grupo de tareas sería de 70. Sin embargo, un intento de programar M7 junto con M5 y M6 conduce a un conflicto, ya que el EST (M7) = 46, Dur (M7) = 10 y LFT (M7) = 55 (ver Figura 5). La relajación dirigida al conflicto por el Agente 2 sugiere relajar el LFT (M4) por 1 tick to 30, y esta consulta se comunica al Agente 1. De hecho, al retraer el método M1 o M2 del horario, esta relajación se puede acomodar sin pérdida de calidad para el Agente1 (debido al MIN QAF). Tras la comunicación de este hecho, el agente 2 señales para comprometerse.7. Resultados experimentales Una versión inicial del agente descrita en este documento se desarrolló en colaboración con SRI International y se sometió a la evaluación programática de los coordinadores realizados independientemente. Esta evaluación involucró más de 2000 instancias problemáticas generadas aleatoriamente por un generador de escenarios que se configuró para producir escenarios de diversos problemas de clase Descripción de la clase de agente OD OD Dynamics. Nobles.El 97.9% (390 problemas) la duración y la calidad de la tarea real varían según la distribución. Int interdependiente. Las actividades frecuentes y del 100% (360 problemas) aleatorias (especialmente facilitan) las actividades encadenadas juntas 99.5% (360 Probs) a través de secuencias de habilitan la opresión temporal TT de TT. Lanzamiento - 94.9% (360 Probaciones) Fecha límite Windows impiden tareas preferidas de alta calidad (duración más larga) de todas las programas. Los problemas de sincronización contienen un rango de 97.1% (360 probadores) diferentes tareas de suma de sincronización NTA nueva llegada de tareas.El modelo CTAEMS 99.0% (360 Probs) aumenta con nuevas tareas dinámicamente durante la ejecución. AVG general: 98.1% (2190 Probs) STD Dev: 6.96 Tabla 1: rendimiento del agente de año 1 sobre la evaluación de los coordinadores. La calidad del agente es el % de duraciones óptimas dentro de seis clases de experimentos. Estas clases, resumidas en la Tabla 1, fueron diseñadas para evaluar aspectos clave de un conjunto de coordinadores agentes de programación distribuidos, como su capacidad para manejar resultados de ejecución inesperados, cadenas de NLES que involucran múltiples agentes y una programación efectiva de nuevas actividades que surgen inesperadamente enalgún punto durante la ejecución del problema. Los problemas de evaluación del año 1 se limitaron a ser lo suficientemente pequeños (3-10 agentes, 50 - 100 métodos) de modo que la comparación con un solucionador centralizado óptimo era factible. El equipo de evaluación empleó un solucionador basado en MDP capaz de desenrollar todo el espacio de búsqueda para estos problemas, eligiendo un agente en cada punto de decisión de ejecución, la actividad es más probable que produzca la máxima calidad global. Esto estableció un punto de referencia desafiante para que los sistemas de agentes distribuidos se comparen. La configuración de hardware utilizada por los evaluadores instanció y ejecutó un agente por máquina, dedicando una máquina separada al simulador de masas. Como se informó en la Tabla 1, el agente prototipo de año 1 se compara claramente favorablemente con el punto de referencia en todas las clases, que se encuentra dentro del 2% del promedio de MDP óptimo en todo el conjunto de 2190 problemas. Estos resultados son particularmente notables dado que cada programador basado en STN de agentes hace muy poco razonamiento sobre la probabilidad de éxito de las secuencias de actividad que selecciona para ejecutar. Solo se adoptaron tácticas simples para abordar explícitamente dicha incertidumbre, como el uso de duraciones esperadas y calidad para las actividades y una política de excluir de la consideración esas actividades con la probabilidad de falla de> 75%. El rendimiento del agente muy respetable puede ser acreditado al menos parcialmente al hecho de que la representación de tiempos flexibles empleados por el programador le proporciona un tampón importante contra la incertidumbre de la ejecución y los eventos exógenos. El agente gira en su rendimiento más bajo en las clases de experimentos TT (opresión temporal), y un examen de los registros de rastreo del agente revela posibles razones. En aproximadamente la mitad de los problemas de TT, el agente de año 1 tiene un rendimiento inferior, las ventanas de tiempo especificadas dentro de las cuales un agente ac490 el sexto intl. Conf.En los agentes autónomos y los sistemas de múltiples agentes (AAMAS 07) deben programarse, las tividades son tan estrictas que cualquier actividad programada que se ejecute con una duración más larga que el valor esperado, causa una falla de fecha límite. Esto constituye un caso en el que el razonamiento más sofisticado sobre la probabilidad de éxito beneficiaría a este agente. La otra mitad de los problemas de TT de bajo rendimiento implican actividades que dependen de las relaciones de facilitación para adaptarse a sus ventanas de tiempo (recuerde que la facilitación aumenta la calidad y disminuye la duración). El Limited facilita el razonamiento realizado por el programador del año 1 a veces hace que las fallas instalaran un horario inicial muy facilitado. Incluso cuando tales actividades se instalan con éxito, tienden a ser propensas a las fallas de la fecha límite, si una actividad (s) del lado de la fuente falla o excede su duración esperada, la duración más larga de la actividad objetivo puede violar su fecha límite de ventana de tiempo.8. Estado e instrucciones Nuestros esfuerzos de investigación actuales tienen como objetivo extender las capacidades del agente del año 1 y ampliar los problemas significativamente mayores. Los objetivos de evaluación programática de Year 2 requieren resolver problemas en el orden de 100 agentes y 10,000 métodos. Esta escala impone demandas computacionales mucho más altas en todos los componentes de los agentes. Recientemente hemos completado una reimplementación del agente prototipo diseñado para abordar algunos problemas de rendimiento reconocidos. Además de verificar que el rendimiento en los problemas de Year 1 coincida o superarse, recientemente hemos realizado algunas pruebas exitosas con el agente en unos pocos 100 problemas de agente. Para abordar completamente diversos problemas de escala, estamos investigando una serie de mecanismos de coordinación más avanzados. Para proporcionar una perspectiva más global a las decisiones de programación local, estamos introduciendo mecanismos para la computación, comunicación y utilizando estimaciones del impacto no local de los nodos remotos. Para abordar mejor el problema de establecer puntos de sincronización entre agentes, ampliamos el uso de propietarios de tareas y protocolos QAF-SpeciFC como un medio para dirigir la actividad de coordinación. Finalmente, planeamos explorar el uso de mecanismos de coordinación basados en STN más avanzados, incluido el uso de desacoplamiento temporal [7] para aislar las acciones de los agentes interdependientes y la introducción de programas de contingencia sensible de probabilidad.9. Agradecimientos La arquitectura del agente de año 1 se desarrolló en colaboración con Andrew Agno, Roger Mailler y Regis Vincent de SRI International. Este documento se basa en el trabajo respaldado por la Agencia de Proyectos de Investigación Advanciación del Departamento de Defensa (DARPA) bajo el contrato # FA8750-05-C0033. Los hallazgos de opiniones y conclusiones o recomendaciones expresadas en este documento son los de los autores y no reflejan necesariamente las opiniones de DARPA.10. Referencias [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A. Long y B. Kohout. C Taems Especificación del lenguaje v. 1.06, octubre de 2005. [2] A. Cesta y A. Oddi. Ganar eficiencia y flexibilidad en el problema temporal simple. En Proc.3er int. Taller sobre representación y razonamiento temporal, Key West FL, mayo de 1996. [3] R. Dechter, I. Meiri y J. Pearl. Redes de restricción temporal. Artificial Intelligence, 49: 61-95, mayo de 1991. [4] K. Decker. Tæms: un marco para el análisis y el diseño centrado en el medio ambiente de los mecanismos de coordinación. En G. Ohare y N. Jennings, editores, Fundamentos de inteligencia artificial distribuida, Capítulo 16, páginas 429-448. Wiley Inter-Cience, 1996. [5] K. Decker y V. Lesser. Diseño de una familia de algoritmos de coordinación. En Proc.1er. En t. Conferencia sobre sistemas de múltiples agentes, San Francisco, 1995. [6] A. J. Garvey. Programación de diseño en tiempo real de diseño. Tesis doctoral, Univ.de Massachusetts, febrero de 1996. [7] L. Hunsberger. Algoritmos para un problema de desacoplamiento temporal en la planificación de múltiples agentes. En Proc.18ª Conferencia Nacional sobre AI, 2002. [8] S. Lemai y F. Ingrand. Interelejar la planificación y ejecución temporal en dominios robóticos. En Proc.19ª Conferencia Nacional sobre AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell y B. C. Williams. Agente remoto: ir audazmente a donde no se ha ido ningún sistema de IA antes. Artificial Intelligence, 103 (1-2): 5-47, 1998. [10] W. Ruml, M. B. Do y M. fromhherz. Planificación en línea y programación de fabricación de alta velocidad. En Proc. ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger y B. Williams. Permitiendo una planificación rápida flexible a través del razonamiento temporal incremental con extracción de conflictos. En el precio. ICAPS-05, Monterey, 2005. [12] S. Smith y C. Cheng. Heurística basada en holgura para la programación de satisfacción de restricciones. En Proc.12ª Conferencia Nacional sobre AI, Wash DC, julio de 1993. [13] T. Wagner, A. Garvey y V. Lesser. Programación de tareas heurísticas dirigidas por criterios. Revista Internacional de razonamiento aproximado, 19 (1): 91-118, 1998. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 491",
    "original_sentences": [
        "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
        "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
        "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
        "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
        "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
        "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
        "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
        "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
        "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
        "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
        "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
        "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
        "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
        "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
        "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
        "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
        "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
        "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
        "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
        "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
        "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
        "We define an agent architecture centered around incremental management of a flexible times schedule.",
        "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
        "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
        "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
        "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
        "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
        "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
        "The remainder of the paper is organized as follows.",
        "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
        "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
        "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
        "We then give some experimental results to indicate current system performance.",
        "Finally we conclude with a brief discussion of current research plans. 2.",
        "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
        "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
        "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
        "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
        "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
        "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
        "Figure 2: Subjective view for Agent 2.",
        "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
        "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
        "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
        "At the highest, most abstract level, the root of the tree is a special task called the task group.",
        "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
        "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
        "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
        "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
        "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
        "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
        "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
        "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
        "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
        "Two types of nles can be specified: hard and soft.",
        "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
        "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
        "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
        "Figure 1 shows the complete objective view of a simple 2 agent problem.",
        "Figure 2 shows the subjective view available to agent 2 for the same problem.",
        "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
        "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
        "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
        "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
        "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
        "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
        "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
        "Figure 3: Agent Architecture.",
        "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
        "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
        "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
        "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
        "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
        "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
        "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
        "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
        "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
        "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
        "In those cases where global improvement is verified, joint changes are committed to.",
        "In the following sections we consider the mechanics of these components in more detail. 4.",
        "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
        "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
        "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
        "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
        "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
        "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
        "It also provides a basis for softening the impact of inter-dependencies across agents.",
        "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
        "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
        "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
        "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
        "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
        "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
        "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
        "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
        "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
        "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
        "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
        "The allocator selects methods from this list and attempts to install them in the agents schedule.",
        "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
        "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
        "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
        "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
        "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
        "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
        "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
        "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
        "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
        "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
        "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
        "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
        "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
        "If any of the enabler activities fails to install, the allocation pass fails.",
        "When successful, the enables constraints linking the enabler activities to mnew are activated.",
        "The STN rejects an infeasible enabler constraint by returning a conflict.",
        "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
        "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
        "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
        "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
        "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
        "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
        "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
        "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
        "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
        "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
        "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
        "This coordination must be robust despite the fact that the The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
        "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
        "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
        "The scheduler is triggered in response to various environmental messages.",
        "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
        "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
        "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
        "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
        "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
        "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
        "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
        "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
        "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
        "Of course as execution unfolds, actual method durations may deviate from these expectations.",
        "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
        "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
        "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
        "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
        "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
        "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
        "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
        "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
        "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
        "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
        "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
        "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
        "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
        "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
        "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
        "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
        "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
        "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
        "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
        "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
        "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
        "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
        "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
        "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
        "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
        "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
        "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
        "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
        "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
        "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
        "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
        "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
        "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
        "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
        "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
        "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
        "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
        "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
        "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
        "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
        "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
        "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
        "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
        "To illustrate, consider again the example in Figure 1.",
        "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
        "Assume that this is Agent1s current schedule.",
        "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
        "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
        "Agent2 sends a must schedule M4 query to Agent1.",
        "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
        "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
        "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
        "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
        "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
        "Given this cycle, the mechanism proceeds in three steps.",
        "First, the constraints involved in the cycle are collected.",
        "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
        "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
        "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
        "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
        "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
        "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
        "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
        "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
        "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
        "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
        "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
        "Upon communication of this fact Agent 2 signals to commit. 7.",
        "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
        "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
        "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
        "INT Interdependent.",
        "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
        "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
        "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
        "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
        "Agent Quality is % of optimal durations within six experiment classes.",
        "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
        "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
        "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
        "This established a challenging benchmark for the distributed agent systems to compare against.",
        "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
        "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
        "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
        "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
        "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
        "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
        "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
        "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
        "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
        "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
        "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
        "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
        "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
        "This scale places much higher computational demands on all of the agents components.",
        "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
        "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
        "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
        "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
        "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
        "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
        "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
        "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
        "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
        "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
        "Long, and B. Kohout.",
        "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
        "Gaining efficiency and flexibility in the simple temporal problem.",
        "In Proc. 3rd Int.",
        "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
        "Temporal constraint networks.",
        "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
        "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
        "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
        "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
        "Designing a family of coordination algorithms.",
        "In Proc. 1st.",
        "Int.",
        "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
        "Design-To-Time Real-Time Scheduling.",
        "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
        "Algorithms for a temporal decoupling problem in multi-agent planning.",
        "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
        "Interleaving temporal planning and execution in robotics domains.",
        "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
        "Remote agent: To boldly go where no AI system has gone before.",
        "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
        "Do, and M. Fromherz.",
        "On-line planning and scheduling of high-speed manufacturing.",
        "In Proc.",
        "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
        "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
        "In Proce.",
        "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
        "Slack-based heuristics for constraint satisfaction scheduling.",
        "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
        "Criteria-directed heuristic task scheduling.",
        "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
    ],
    "error_count": 0,
    "keys": {
        "managing schedule": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of <br>managing schedule</br>s in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Gestión distribuida de horarios de tiempos flexibles Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein, el Instituto de Robótica, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {SFS, Anthonyg, Wizim, Laurabar, Zbr} @cs.CMU.EDU Resumen Consideramos el problema de \"administrar el horario\" en un entorno incierto y distribuido.Gestión del horario"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "distributed environment": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, <br>distributed environment</br>.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and <br>distributed environment</br> as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Gestión distribuida de horarios de tiempos flexibles Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein, el Instituto de Robótica, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {SFS, Anthonyg, Wizim, Laurabar, Zbr} @cs.CMU.EDU Resumen Consideramos el problema de administrar los horarios en un \"entorno distribuido\" incierto \".entorno distribuido",
                "En este documento, consideramos el problema de administrar y ejecutar horarios en un entorno incierto y \"distribuido\" según lo definido por el Programa de Coordinadores de DARPA.entorno distribuido"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "agent architecture": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an <br>agent architecture</br> for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an <br>agent architecture</br> centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the <br>agent architecture</br> we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: <br>agent architecture</br>.",
                "Our solution framework is made concrete in the <br>agent architecture</br> depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the <br>agent architecture</br>.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the <br>agent architecture</br> to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 <br>agent architecture</br> was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Describimos una \"arquitectura de agente\" para resolver este problema que combina dos mecanismos básicos: (1) una representación de tiempos flexibles del cronograma de agentes (usando una red temporal simple) y (2) un procedimiento de reprogramación incremental.arquitectura de agente",
                "Definimos una \"arquitectura de agente\" centrada en la gestión incremental de un horario de tiempos flexibles.arquitectura de agente",
                "A continuación, presentamos la \"Arquitectura del Agente\" que hemos desarrollado para resolver este problema y dibujar su operación.arquitectura de agente",
                "Figura 3: \"Arquitectura del agente\".arquitectura de agente",
                "Nuestro marco de soluciones se hace concreto en la \"Arquitectura del agente\" que se muestra en la Figura 3. Arquitectura del agente",
                "Si el ejecutor, por ejemplo, se aplica un método para la ejecución basado en la hora actual, mientras que el programador instanciona un cronograma revisado en el que ese método ya no se ejecuta a continuación, puede surgir un estado inconsistente dentro de la \"arquitectura de agente\".arquitectura de agente",
                "En esta sección resumimos los mecanismos de coordinación proporcionados en la \"arquitectura del agente\" para abordar estos problemas.6.1 Comunicación de restricciones no locales Un medio básico de coordinación con otros agentes es proporcionada por el mecanismo de estado distribuido (DSM), que es responsable de comunicar los cambios realizados con el modelo o el cronograma de un agente determinado a otros agentes interesados.arquitectura de agente",
                "Agradecimientos El año 1 \"Arquitectura del Agente\" se desarrolló en colaboración con Andrew Agno, Roger Mailler y Regis Vincent de SRI International.arquitectura de agente"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "schedule": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established <br>schedule</br>, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents <br>schedule</br> (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents <br>schedule</br> when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating <br>schedule</br> changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished <br>schedule</br>, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents <br>schedule</br>, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times <br>schedule</br>.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for <br>schedule</br> change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize <br>schedule</br> change.",
                "To this <br>schedule</br> management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local <br>schedule</br> changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating <br>schedule</br> changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed <br>schedule</br> management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial <br>schedule</br> is also distributed to the agents, and each agents <br>schedule</br> indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed <br>schedule</br> dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local <br>schedule</br> might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new <br>schedule</br>.",
                "Whenever local <br>schedule</br> constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the <br>schedule</br> of one or more other agents that will enable the local agent to raise the quality of its <br>schedule</br>.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new <br>schedule</br> in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current <br>schedule</br> to accommodate the event.",
                "There is an inherent bias toward <br>schedule</br> stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents <br>schedule</br> is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a <br>schedule</br> or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the <br>schedule</br>).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents <br>schedule</br>.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times <br>schedule</br> enables us to use a conflict-driven approach to <br>schedule</br> repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new <br>schedule</br>) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the <br>schedule</br> running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the <br>schedule</br> to maximize quality, and/or transmitting a revised <br>schedule</br>.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised <br>schedule</br> in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current <br>schedule</br> cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete <br>schedule</br> of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid <br>schedule</br> for an agents activities, which does not require change to any other agents <br>schedule</br>.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current <br>schedule</br>, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed <br>schedule</br> consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during <br>schedule</br> construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the <br>schedule</br> can be used to absorb some of this unpredictability and modulate invocation of a <br>schedule</br> revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the <br>schedule</br> can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the <br>schedule</br>, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised <br>schedule</br> is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the <br>schedule</br>.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current <br>schedule</br>.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant <br>schedule</br> or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint <br>schedule</br> changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or <br>schedule</br> of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting <br>schedule</br> execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local <br>schedule</br> changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local <br>schedule</br> change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local <br>schedule</br>.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of <br>schedule</br> changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local <br>schedule</br> under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local <br>schedule</br>, the temporal constraints on the local target activity, and the set of must-<br>schedule</br> enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current <br>schedule</br>.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must <br>schedule</br> M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its <br>schedule</br> to get M4 on, resulting in a new lower quality <br>schedule</br> of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the <br>schedule</br>, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local <br>schedule</br>.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could <br>schedule</br> M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to <br>schedule</br> M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the <br>schedule</br> this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial <br>schedule</br>.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Asumimos un equipo de agentes colaborativos, cada uno responsable de ejecutar una parte de un \"horario\" globalmente preestablecido, pero ninguna posee una visión global del problema o la solución.cronograma",
                "Describimos una arquitectura de agente para resolver este problema que combina dos mecanismos básicos: (1) una representación de tiempos flexibles de los agentes \"programar\" (utilizando una red temporal simple) y (2) un procedimiento de reprogramación incremental.cronograma",
                "Los antiguos setos contra la incertidumbre temporal al permitir que la ejecución proceda de un conjunto de soluciones factibles, y el segundo actúa para revisar el \"horario\" de los agentes cuando la ejecución se ve obligada a fuera de este conjunto de soluciones o cuando los eventos de ejecución reducen el valor esperado de este factibleConjunto de soluciones.cronograma",
                "La coordinación básica con otros agentes se logra simplemente comunicando los cambios de \"cronograma\" a aquellos agentes con actividades interdependientes.cronograma",
                "Asumimos un equipo de agentes colaborativos, cada uno responsable de ejecutar una parte de un \"horario\" preestablecido globalmente, pero ninguna posee una visión global del problema o la solución.cronograma",
                "En una representación de los tiempos flexibles de un \"horario\" de los agentes, los intervalos de ejecución asociados con las actividades programadas no se fijan, sino que se permiten flotar dentro de las restricciones de secuencia de tiempo y actividad impuesta.cronograma",
                "Definimos una arquitectura de agente centrada en la gestión incremental de un \"horario\" de tiempos flexibles.cronograma",
                "La representación basada en STN subyacente se usa (1) para aflojar el acoplamiento entre los hilos del ejecutor y el planificador, (2) para retener una capacidad básica para absorber retrasos de ejecución inesperados (o aceleraciones) y (3) para proporcionar un criterio básico para detectarLa necesidad de un cambio de \"horario\".cronograma",
                "El cambio local es AC484 978-81-904262-7-5 (RPS) C 2007 Ifaamas Figura 1: un problema de dos agentes C de Cems.Cumplido por un programador incremental, diseñado para maximizar la calidad al intentar minimizar el cambio de \"cronograma\".cronograma",
                "A esta infraestructura de gestión de \"cronograma\", agregamos dos mecanismos para la coordinación de múltiples agentes.cronograma",
                "La coordinación básica con otros agentes se logra mediante la comunicación simple de los cambios locales de \"cronograma\" a otros agentes con actividades interdependientes.cronograma",
                "En las siguientes secciones, describimos los componentes de la arquitectura con más detalle, considerando a su vez problemas relacionados con la ejecución de los horarios de los agentes, revisando incrementalmente los horarios de los agentes y coordinando los cambios de \"cronograma\" entre múltiples agentes.cronograma",
                "El problema de los coordinadores como se indica anteriormente el problema de gestión de \"cronograma\" distribuido que abordamos en este documento es el presentado por el Programa de Coordinadores de DARPA.cronograma",
                "Un \"Anexo\" inicial previamente computado también se distribuye a los agentes, y cada horario de los agentes \"indica cuál de sus tareas locales debe ejecutarse y cuándo.cronograma",
                "En cualquier momento durante la operación, el \"cronograma\" instalado actualmente dicta el momento y la secuencia de actividades a nivel de dominio que el agente iniciará.cronograma",
                "En los casos en que esta actualización conduce a la inconsistencia en el STN o se reconoce que ahora se puede mejorar el \"Anexo\" local actual, el programador, ejecutándose en un hilo separado, para revisar la solución actual e instalar un nuevo \"Programa\".cronograma",
                "Cada vez que las restricciones locales de \"programación\" cambian en respuesta a una actualización de estado actual o mediante la manipulación del programador, el DSM se invoca para comunicar estos cambios a los agentes interesados (es decir, aquellos agentes que comparten dependencias y tienen opiniones subjetivas superpuestas).cronograma",
                "El administrador de opciones utiliza el planificador (en este caso en modo hipotético) para generar una o más opciones no locales, es decir, identificar cambios en el \"horario\" de uno o más agentes que permitirán al agente local aumentar la calidad desu \"horario\".cronograma",
                "Los marcos de programación incremental son ideales para dominios que requieren un ajuste de acoplamiento de ejecución de programador ajustado: en lugar de recomputar un nuevo \"horario\" en respuesta a cada cambio, responden rápidamente a los eventos de ejecución al localizar los cambios y hacer ajustes al \"horario\" actual para acomodar el acomodadoevento.cronograma",
                "Existe un sesgo inherente hacia la estabilidad de \"cronograma\" que proporciona un mejor soporte para la continuidad en la ejecución.cronograma",
                "Un \"horario\" de los agentes se designa como un orden total de métodos seleccionados al publicar restricciones de precedencia entre el final y los puntos de inicio de cada par ordenado.cronograma",
                "Como se insertan nuevos métodos en un \"horario\" o actualizaciones de estado externos requieren ajustes a las restricciones existentes (por ejemplo, sustitución de una restricción de duración real, ajuste de una fecha límite), la red propaga restricciones y mantiene límites inferiores y superiores en todos los puntos de tiempo en todos los puntos de tiempo enla red.cronograma",
                "A medida que se actualizan los límites, se realiza una verificación de consistencia para la presencia de ciclos negativos, y la ausencia de dicho ciclo asegura la viabilidad temporal continua de la red (y, por lo tanto, del \"horario\").cronograma",
                "El asignador selecciona métodos de esta lista e intenta instalarlos en el \"horario\" de los agentes.cronograma",
                "La dinámica de la ejecución que mantiene un \"horario\" de veces flexible nos permite usar un enfoque impulsado por conflictos para la reparación de \"programar\": en lugar de reaccionar a cada evento en la ejecución que puede afectar el horario existente al calcular una solución actualizada, el STN el STNpuede absorber cualquier cambio que no cause un conflicto.cronograma",
                "En consecuencia, se minimizan el cálculo (produciendo un nuevo \"cronograma\") y los costos de comunicación (informar a otros agentes de cambios que los afectan).cronograma",
                "Un segundo problema se refiere a la sincronización entre el albacea y el programador, como productor y consumidor del \"cronograma\" que se ejecuta en diferentes hilos dentro de un agente determinado.cronograma",
                "Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 487, el albacea debe iniciar métodos para la ejecución en tiempo real, incluso mientras el planificador puede reevaluar el \"horario\" para maximizar la calidad y/o transmitir un \"horario\" revisado.cronograma",
                "Si el ejecutor, por ejemplo, se pliega un método para la ejecución basado en la hora actual, mientras que el programador instanciona un \"cronograma\" revisado en el que ese método ya no se ejecuta a continuación, puede surgir un estado inconsistente dentro de la arquitectura del agente.cronograma",
                "Esto se aborda en parte al introducir una ventana de congelación;El programador no puede reprogramar un período de tiempo corto (y ajustable) especificado más allá del tiempo actual dentro del cual cualquier actividad programada como elegible para comenzar en el \"Anexo\" actual.cronograma",
                "Ya sea que se invoque a través de una actualización o una consulta, la respuesta de los programadores es una opción;Esencialmente, un \"horario\" completo de actividades que el agente puede ejecutar junto con las métricas de calidad asociadas.cronograma",
                "Definimos una opción local como un \"horario\" válido para las actividades de un agente, que no requiere cambio a ningún otro agente \"horario\".cronograma",
                "Como tal, el modo de programación predeterminado para actualizaciones es buscar la opción local de la más alta calidad de acuerdo con la estrategia de búsqueda de programadores, instanciar la opción como su \"horario\" actual y notificar al ejecutor de la revisión.5.1 Respondiendo a la ejecución de la actividad Como se sugirió anteriormente, un \"cronograma\" comprometido consiste en una secuencia de métodos, cada uno con una ventana de tiempo de inicio [EST, LST] designada (según lo dispuesto por la representación STN subyacente).cronograma",
                "Estas ventanas de tiempo de inicio programadas se establecen utilizando la duración esperada de cada método programado (derivado de las distribuciones de duración del método asociado durante la construcción de \"horario\").cronograma",
                "En estos casos, la flexibilidad retenida en el \"cronograma\" se puede utilizar para absorber parte de esta imprevisibilidad y modular la invocación de un proceso de revisión de \"cronograma\".cronograma",
                "Si de hecho, el EST del siguiente método programado puede volver a la hora actual una vez que la restricción de duración real se sustituye por la restricción de duración esperada, entonces el \"Anexo\" puede dejarse intacto y simplemente comunicarse al Ejecutor.cronograma",
                "Si alternativamente, otras restricciones de problemas evitan esta relajación del EST, entonces hay un tiempo de inactividad forzado que puede explotarse revisando el \"horario\", y se invoca el planificador (siempre respetando el período de congelación).cronograma",
                "Nuevamente, el albacea procederá con la ejecución del siguiente método si llega su hora de inicio antes de que se comete el \"horario\" revisado, y el programador se adapta a esto respetando la ventana de congelación.• La hora actual avanza una actualización sobre la hora actual puede llegar solo o como parte de cualquiera de las actualizaciones discutidas anteriormente.cronograma",
                "Si, al actualizar el enlace de tiempo actual en el STN (como se describió anteriormente), un resultado de conflicto, el estado de ejecución es inconsistente con el \"cronograma\".cronograma",
                "Las revisiones dinámicas en las distribuciones de resultados para métodos que ya están en una visión subjetiva de los agentes pueden afectar los valores evaluados de calidad y/o duración que dieron forma al \"horario\" actual.cronograma",
                "Del mismo modo, las revisiones dinámicas en los tiempos de lanzamiento designados y los plazos para métodos y tareas que ya están en una visión subjetiva de los agentes pueden invalidar un \"cronograma\" existente o presentar oportunidades para aumentar la calidad.cronograma",
                "Las respuestas que se ven bien localmente pueden tener un efecto global subóptimo una vez que se realizan alineaciones, y por lo tanto, los agentes deben tener la capacidad de buscar cambios de \"programación\" mutuamente beneficiosos.cronograma",
                "En esta sección resumimos los mecanismos de coordinación proporcionados en la arquitectura del agente para abordar estos problemas.6.1 Comunicación de restricciones no locales Un medio básico de coordinación con otros agentes es proporcionada por el mecanismo de estado distribuido (DSM), que es responsable de comunicar los cambios realizados con el modelo o \"horario\" de un agente determinado a otros agentes interesados.cronograma",
                "Estos cambios se manejan de manera idéntica a actualizaciones que reflejan los resultados de ejecución de \"programación\", lo que potencialmente desencadena el programador local si se detecta la necesidad de reprogramar.6.2 Generación de opciones no locales Como se menciona en la sección anterior, los agentes primero responden a cualquier consulta o actualización dada (ya sea desde la ejecución o de otro agente) es generar una o más opciones locales.cronograma",
                "Dichas opciones representan cambios locales de \"cronograma\" que son consistentes con todas las restricciones conocidas actualmente originadas de otros horarios de agentes y, por lo tanto, se pueden implementar sin interacción con otros agentes.cronograma",
                "Ejecutando en modo de menor prioridad que el ejecutor y el planificador, el administrador de opciones inicia un proceso de generación y evaluación de opciones no local en respuesta a cualquier cambio local de \"programación\" realizado por el agente si las restricciones de tiempo de cálculo lo permiten.cronograma",
                "En términos generales, una opción no local identifica ciertas relajaciones (para una o más restricciones impuestas por los métodos programados por uno o más agentes remotos) que permiten la generación de un \"horario\" local de mayor calidad.cronograma",
                "Si el cambio de calidad combinado informado de un conjunto de una o más consultas relevantes es una ganancia neta, entonces el agente emisor señala a los otros agentes involucrados para comprometerse con este conjunto conjunto de cambios de \"horario\".cronograma",
                "Para cada método local, el conjunto de habilitadores remotos se activan hipotéticamente, y el planificador intenta construir un nuevo \"cronograma\" local bajo estos supuestos optimistas.cronograma",
                "Si tiene éxito, se genera una opción no local, que especifica el valor del nuevo \"cronograma\" local de mayor calidad, las restricciones temporales en la actividad objetivo local y el conjunto de actividades de habilitador de \"programación\" que deben programarseAgentes remotos para lograr esta calidad local.cronograma",
                "Suponga que este es el \"Anexo\" actual de Agent1.cronograma",
                "Agent2 envía una consulta M4 de \"Programa\" imprescindible al Agente1.cronograma",
                "Debido a las limitaciones de la ventana de tiempo, el agente1 debe eliminar M3 de su \"horario\" para obtener M4 encendido, lo que resulta en un nuevo \"horario\" de menor calidad de 5.",
                "Recuerde que si un método no se puede insertar de manera factible en el \"horario\", un intento de hacerlo generará un ciclo negativo.cronograma",
                "Si tiene éxito, se genera una opción no local que indica qué restricciones remotas deben estar relajadas y por cuánto permitir la instalación del nuevo \"horario\" local de mayor calidad.cronograma",
                "Si Agent2 pudiera \"programar\" M7, la calidad aportada por Agent2 al grupo de tareas sería de 70.",
                "Sin embargo, un intento de \"programar\" M7 junto con M5 y M6 conduce a un conflicto, ya que el EST (M7) = 46, Dur (M7) = 10 y LFT (M7) = 55 (ver Figura 5).cronograma",
                "De hecho, al retraer el método m1 o m2 del \"horario\", esta relajación se puede acomodar sin pérdida de calidad para el agente1 (debido al MIN QAF).cronograma",
                "El limitado facilita el razonamiento realizado por el programador del año 1 a veces hace que las fallas instalaran un \"horario\" inicial muy facilitado.cronograma"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "inter-dependent activities": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with <br>inter-dependent activities</br>.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with <br>inter-dependent activities</br> so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La coordinación básica con otros agentes se logra simplemente comunicando los cambios de programación a aquellos agentes con \"actividades interdependientes\".actividades interdependientes",
                "La coordinación entre agentes, después de haber respondido localmente a un resultado de ejecución inesperado o un cambio de modelo, es necesario comunicar las consecuencias a los agentes con \"actividades interdependientes\" para que puedan alinear sus decisiones en consecuencia.actividades interdependientes"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "geographical separation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as <br>geographical separation</br> of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Factores como la \"separación geográfica\" de los agentes ejecutivos, las limitaciones en el ancho de banda de comunicación, las limitaciones relacionadas con la cadena de mando y el alto tempo de la dinámica de ejecución pueden impedir que cualquier agente solo obtenga una visión global completa del problema y, por lo tanto, require colaboración todavía.decisiones de planificación y programación localizadas.separación geográfica"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "flexible time": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a <br>flexible time</br>s representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of <br>flexible time</br>s frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a <br>flexible time</br>s schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based <br>flexible time</br>s representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with <br>flexible time</br>s scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The <br>flexible time</br>s representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under <br>flexible time</br>s scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the <br>flexible time</br>s representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Describimos una arquitectura de agente para resolver este problema que combina dos mecanismos básicos: (1) una representación de \"tiempo flexible\" del cronograma de agentes (utilizando una red temporal simple) y (2) un procedimiento de reprogramación incremental.tiempo flexible",
                "Las ventajas de los marcos S del \"tiempo flexible\" se han demostrado en varios contextos de planificación y programación centralizados (por ejemplo, [12, 8, 9, 10, 11]).tiempo flexible",
                "Definimos una arquitectura de agente centrada en la gestión incremental de un horario de \"tiempo flexible\".tiempo flexible",
                "Primero es el uso de una representación de \"tiempo flexible\" basada en STN de restricciones de solución, lo que permite que la ejecución sea impulsada por un conjunto de horarios en lugar de una solución de un solo punto.tiempo flexible",
                "El acoplamiento de la programación incremental con la programación del \"tiempo flexible\" agrega apalancamiento adicional en un entorno de ejecución incierto y multiagente.tiempo flexible",
                "La representación S del \"tiempo flexible\" que ofrece el STN proporciona un medio rápido para evaluar si el siguiente método en la línea de tiempo puede comenzar la ejecución inmediata en lugar de esperar su hora de inicio (EST) más temprana previamente establecida.tiempo flexible",
                "Si el método se completa más tarde de lo esperado, entonces no hay necesidad de reprogramar bajo la programación de \"tiempo flexible\" a menos que 1) el método termine más tarde que el LST de la actividad programada posterior, o 2) termina más tarde que su fecha límite.tiempo flexible",
                "El rendimiento del agente muy respetable puede ser acreditado al menos parcialmente al hecho de que la representación del \"tiempo flexible\" empleada por el programador le proporciona un amortiguador importante contra la incertidumbre de la ejecución y los eventos exógenos.tiempo flexible"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "centralized planning": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various <br>centralized planning</br> and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Las ventajas de los marcos de tiempos flexibles se han demostrado en varios contextos de \"planificación centralizada\" y programación (por ejemplo, [12, 8, 9, 10, 11]).planificación centralizada"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "management": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed <br>management</br> of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed <br>management</br> of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental <br>management</br> of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule <br>management</br> infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule <br>management</br> problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Distribuido \"Gestión\" de horarios de tiempos flexibles Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein, el Instituto de Robótica, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {SFS, Anthonyg, Wizim, Laurabar, Zbr}@cs.cmu.edu Resumen Consideramos el problema de administrar los horarios en un entorno incierto y distribuido.gestión",
                "Introducción Las restricciones prácticas de muchos entornos de aplicación requieren \"gestión\" distribuida de la ejecución de planes y horarios.gestión",
                "Definimos una arquitectura de agente centrada en la \"gestión\" incremental de un horario flexible de los tiempos.gestión",
                "A este cronograma de infraestructura de \"gestión\", agregamos dos mecanismos para la coordinación de múltiples agentes.gestión",
                "El problema de los coordinadores como se indica anteriormente el problema de \"gestión\" del cronograma distribuido que abordamos en este documento es el presentado por el Programa de Coordinadores de DARPA.gestión"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "scheduler-execution": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight <br>scheduler-execution</br> coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los marcos de programación incremental son ideales para dominios que requieren un ajuste ajustado de \"ejecución del planificador\": en lugar de recomputar un nuevo horario en respuesta a cada cambio, responden rápidamente a los eventos de ejecución al localizar los cambios y hacer ajustes al horario actual para acomodar el evento.ejecución del planificador"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "slack": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of <br>slack</br> as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, <br>slack</br> can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling <br>slack</br>.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "<br>slack</br>-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Esta representación permite el uso explícito de \"holgura\" como cobertura contra formas simples de incertidumbre ejecutiva (por ejemplo, duraciones de actividad) y su implementación subyacente como un modelo de red temporal simple (STN) proporciona mecanismos eficientes de actualización y aplicación de consistencia.flojo",
                "Como se mencionó anteriormente, \"Slack\" puede usarse como cobertura contra los tiempos de ejecución de métodos inciertos.flojo",
                "Sin embargo, puede presentar la posibilidad de explotar la programación imprevista \"holgura\".flojo",
                "La heurística basada en \"holgura\" para la programación de satisfacción de restricciones.flojo"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "shortest path algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs <br>shortest path algorithm</br>; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Esto se logra de manera eficiente mediante el uso de un \"algoritmo de ruta más corto\" estándar de todos los pares;En nuestra implementación, aprovechamos un procedimiento incremental basado en [2].Algoritmo de ruta más corto"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "activity allocator": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an <br>activity allocator</br> that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The <br>activity allocator</br> - The <br>activity allocator</br> seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "De lo contrario, se ha detectado un conflicto, y es necesaria cierta cantidad de retracción de restricción para restaurar la viabilidad.4.2 Mantener horarios de alta calidad, el planificador consta de dos componentes básicos: un propagador de calidad y un \"asignador de actividades\" que funcione en un bucle estrictamente integrado.asignador de actividades",
                "El \"Asignador de actividad\": el \"Asignator de actividades\" busca instalar los contribuyentes del grupo de tareas identificados por el propagador de calidad en la línea de tiempo de los agentes.asignador de actividades"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "conflict-driven approach": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a <br>conflict-driven approach</br> to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La dinámica de la ejecución que mantiene un cronograma de veces flexible nos permite usar un \"enfoque impulsado por el conflicto\" para la reparación del programa: en lugar de reaccionar a cada evento en la ejecución que puede afectar el cronograma existente al calcular una solución actualizada, el STN puede absorberCualquier cambio que no cause un conflicto.enfoque impulsado por conflictos"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "optimistic synchronization": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "<br>optimistic synchronization</br> - <br>optimistic synchronization</br> is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using <br>optimistic synchronization</br>, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Sincronización optimista\" - \"Sincronización optimista\" es una estrategia de generación de opciones no local donde la búsqueda se utiliza para explorar el impacto en la calidad si se realizan suposiciones optimistas sobre los habilitadores remotos actualmente no programados.sincronización optimista",
                "Usando \"sincronización optimista\", Agent2 generará una opción no local que indica que si M5 se habilita, tanto M5 como M6 se programarían, y la calidad aportada por Agent2 al grupo de tareas se convertiría en 30. Sincronización optimista"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "inter-agent coordination": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail <br>inter-agent coordination</br> if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "<br>inter-agent coordination</br> Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "El diseño general para manejar la dinámica de ejecución tiene como objetivo el comportamiento de programación en cualquier momento en el que una opción local que maximice la vista local de la calidad se devuelve rápidamente, posiblemente seguido de horarios de calidad a nivel mundial que implican \"coordinación entre agentes\" si los ciclos de programador disponibles lo permiten.coordinación entre agentes",
                "\"Coordinación entre agentes\" Después de haber respondido localmente a un resultado de ejecución inesperado o un cambio de modelo, es necesario comunicar las consecuencias a los agentes con actividades interdependientes para que puedan alinear sus decisiones en consecuencia.coordinación entre agentes"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "performance": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the <br>performance</br> of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system <br>performance</br>.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing multi-agent schedules in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: <br>performance</br> of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent <br>performance</br> can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest <br>performance</br> on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized <br>performance</br> issues.",
                "In addition to verifying that the <br>performance</br> on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Usando un simulador para modelar el entorno, comparamos el \"rendimiento\" de nuestro sistema de múltiples agentes con el de un solucionador MDP centralizado óptimo (pero no escalable) esperado.actuación",
                "Luego damos algunos resultados experimentales para indicar el \"rendimiento\" del sistema actual.actuación",
                "AVG general: 98.1% (2190 Probs) STD Dev: 6.96 Tabla 1: \"Desempeño\" del agente del año 1 sobre la evaluación de los coordinadores.actuación",
                "El \"rendimiento\" del agente muy respetable puede ser acreditado al menos parcialmente al hecho de que la representación de tiempos flexibles empleada por el programador le proporciona un amortiguador importante contra la incertidumbre de la ejecución y los eventos exógenos.actuación",
                "El agente gira en su \"rendimiento\" más bajo en las clases de experimentos TT (opresión temporal), y un examen de los registros de rastreo del agente revela posibles razones.actuación",
                "Recientemente hemos completado una reimplementación del agente prototipo diseñado para abordar algunos problemas reconocidos de \"rendimiento\".actuación",
                "Además de verificar que el \"rendimiento\" en los problemas del año 1 se coincida o excede, recientemente hemos realizado algunas pruebas exitosas con el agente en unos 100 problemas de agente.actuación"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "multi-agent schedule": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Distributed Management of Flexible Times Schedules Stephen F. Smith, Anthony Gallagher, Terry Zimmerman, Laura Barbulescu, Zachary Rubinstein The Robotics Institute, Carnegie Mellon University 5000 Forbes Avenue, Pittsburgh PA 15024 {sfs,anthonyg,wizim,laurabar,zbr}@cs.cmu.edu ABSTRACT We consider the problem of managing schedules in an uncertain, distributed environment.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally pre-established schedule, but none possessing a global view of either the problem or solution.",
                "The goal is to maximize the joint quality obtained from the activities executed by all agents, given that, during execution, unexpected events will force changes to some prescribed activities and reduce the utility of executing others.",
                "We describe an agent architecture for solving this problem that couples two basic mechanisms: (1) a flexible times representation of the agents schedule (using a Simple Temporal Network) and (2) an incremental rescheduling procedure.",
                "The former hedges against temporal uncertainty by allowing execution to proceed from a set of feasible solutions, and the latter acts to revise the agents schedule when execution is forced outside of this set of solutions or when execution events reduce the expected value of this feasible solution set.",
                "Basic coordination with other agents is achieved simply by communicating schedule changes to those agents with inter-dependent activities.",
                "Then, as time permits, the core local problem solving infra-structure is used to drive an inter-agent option generation and query process, aimed at identifying opportunities for solution improvement through joint change.",
                "Using a simulator to model the environment, we compare the performance of our multi-agent system with that of an expected optimal (but non-scalable) centralized MDP solver.",
                "Categories and Subject Descriptors I.2.11 [Computing Methodologies]: Artificial IntelligenceDistributed Artificial Intelligence General Terms Algorithms, Design 1.",
                "INTRODUCTION The practical constraints of many application environments require distributed management of executing plans and schedules.",
                "Such factors as geographical separation of executing agents, limitations on communication bandwidth, constraints relating to chain of command and the high tempo of execution dynamics may all preclude any single agent from obtaining a complete global view of the problem, and hence necessitate collaborative yet localized planning and scheduling decisions.",
                "In this paper, we consider the problem of managing and executing schedules in an uncertain and distributed environment as defined by the DARPA Coordinators program.",
                "We assume a team of collaborative agents, each responsible for executing a portion of a globally preestablished schedule, but none possessing a global view of either the problem or solution.",
                "The team goal is to maximize the total quality of all activities executed by all agents, given that unexpected events will force changes to pre-scheduled activities and alter the utility of executing others as execution unfolds.",
                "To provide a basis for distributed coordination, each agent is aware of dependencies between its scheduled activities and those of other agents.",
                "Each agent is also given a pre-computed set of local contingency (fall-back) options.",
                "Central to our approach to solving this multi-agent problem is an incremental flexible-times scheduling framework.",
                "In a flexible-times representation of an agents schedule, the execution intervals associated with scheduled activities are not fixed, but instead are allowed to float within imposed time and activity sequencing constraints.",
                "This representation allows the explicit use of slack as a hedge against simple forms of executional uncertainty (e.g., activity durations), and its underlying implementation as a Simple Temporal Network (STN) model provides efficient updating and consistency enforcement mechanisms.",
                "The advantages of flexible times frameworks have been demonstrated in various centralized planning and scheduling contexts (e.g., [12, 8, 9, 10, 11]).",
                "However their use in distributed problem solving settings has been quite sparse ([7] is one exception), and prior approaches to multi-agent scheduling (e.g., [6, 13, 5]) have generally operated with fixed-times representations of agent schedules.",
                "We define an agent architecture centered around incremental management of a flexible times schedule.",
                "The underlying STN-based representation is used (1) to loosen the coupling between executor and scheduler threads, (2) to retain a basic ability to absorb unexpected executional delays (or speedups), and (3) to provide a basic criterion for detecting the need for schedule change.",
                "Local change is ac484 978-81-904262-7-5 (RPS) c 2007 IFAAMAS Figure 1: A two agent C TAEMS problem. complished by an incremental scheduler, designed to maximize quality while attempting to minimize schedule change.",
                "To this schedule management infra-structure, we add two mechanisms for multi-agent coordination.",
                "Basic coordination with other agents is achieved by simple communication of local schedule changes to other agents with interdependent activities.",
                "Layered over this is a non-local option generation and evaluation process (similar in some respects to [5]), aimed at identification of opportunities for global improvement through joint changes to the schedules of multiple agents.",
                "This latter process uses analysis of detected conflicts in the STN as a basis for generating options.",
                "The remainder of the paper is organized as follows.",
                "We begin by briefly summarizing the general distributed scheduling problem of interest in our work.",
                "Next, we introduce the agent architecture we have developed to solve this problem and sketch its operation.",
                "In the following sections, we describe the components of the architecture in more detail, considering in turn issues relating to executing agent schedules, incrementally revising agent schedules and coordinating schedule changes among multiple agents.",
                "We then give some experimental results to indicate current system performance.",
                "Finally we conclude with a brief discussion of current research plans. 2.",
                "THE COORDINATORS PROBLEM As indicated above the distributed schedule management problem that we address in this paper is that put forth by the DARPA Coordinators program.",
                "The Coordinators problem is concerned generally with the collaborative execution of a joint mission by a team of agents in a highly dynamic environment.",
                "A mission is formulated as a network of tasks, which are distributed among the agents by the MASS simulator such that no agent has a complete, objective view of the whole problem.",
                "Instead, each agent receives only a subjective view containing just the portion of the task network that relates to ground tasks that it is responsible for and any remote tasks that have interdependencies with these local tasks.",
                "A pre-computed initial schedule is also distributed to the agents, and each agents schedule indicates which of its local tasks should be executed and when.",
                "Each task has an associated quality value which accrues if it is successfully executed within its constraints, and the overall goal is to maximize the quality obtained during execution.",
                "Figure 2: Subjective view for Agent 2.",
                "As execution proceeds, agents must react to unexpected results (e.g., task delays, failures) and changes to the mission (e.g., new tasks, deadline changes) generated by the simulator, recognize when scheduled tasks are no longer feasible or desirable, and coordinate with each other to take corrective, quality-maximizing rescheduling actions that keep execution of the overall mission moving forward.",
                "Problems are formally specified using a version of the TAEMS language (Task Analysis, Environment Modeling and Simulation) [4] called C TAEMS [1].",
                "Within C TAEMS, tasks are represented hierarchically, as shown in the example in Figure 1.",
                "At the highest, most abstract level, the root of the tree is a special task called the task group.",
                "On successive levels, tasks constitute aggregate activities, which can be decomposed into sets of subtasks and/or primitive activities, termed methods.",
                "Methods appear at the leaf level of C TAEMS task structures and are those that are directly executable in the world.",
                "Each declared method m can only be executed by a specified agent (denoted by ag : AgentN in Figure 1) and each agent can be executing at most one method at any given time (i.e. agents are unit-capacity resources).",
                "Method durations and quality are typically specified as discrete probability distributions, and hence known with certainty only after they have been executed.1 It is also possible for a method to fail unexpectedly in execution, in which case the reported quality is zero.",
                "For each task, a quality accumulation function qaf is defined, which specifies when and how a task accumulates quality as its subtasks (methods) are executed.",
                "For example, a task with a min qaf will accrue the quality of its child with lowest quality if all its children execute and accumulate positive quality.",
                "Tasks with sum or max qafs acquire quality as soon as one child executes with positive quality; as their qaf names suggest, their respective values ultimately will be the total or maximum quality of all children that executed.",
                "A sync-sum task will accrue quality only for those children that commence execution concurrently with the first child that executes, while an exactly-one task accrues quality only if precisely one of its children executes.",
                "Inter-dependencies between tasks/methods in the problem are modeled via non-local effects (nles).",
                "Two types of nles can be specified: hard and soft.",
                "Hard nles express 1 For simplicity, Figures 1 and 2 show only fixed values for method quality and duration.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 485 causal preconditions: for example, the enables nle in Figure 1 stipulates that the target method M5 can not be executed until the source M4 accumulates quality.",
                "Soft nles, which include facilitates and hinders, are not required constraints; however, when they are in play, they amplify (or dampen) the quality and duration of the target task.",
                "Any given task or method a can also be constrained by an earliest start time and a deadline, specifying the window in which a can be feasibly executed. a may also inherit these constraints from ancestor tasks at any higher level in the task structure, and its effective execution window will be defined by the tightest of these constraints.",
                "Figure 1 shows the complete objective view of a simple 2 agent problem.",
                "Figure 2 shows the subjective view available to agent 2 for the same problem.",
                "In what follows, we will sometimes use the term activity to refer generically to both task and method nodes. 3.",
                "OVERVIEW OF APPROACH Our solution framework combines two basic principles for coping with the problem of managing <br>multi-agent schedule</br>s in an uncertain and time stressed execution environment.",
                "First is the use of a STN-based flexible times representation of solution constraints, which allows execution to be driven by a set of schedules rather than a single point solution.",
                "This provides a basic hedge against temporal uncertainty and can be used to modulate the need for solution revision.",
                "The second principle is to first respond locally to exceptional events, and then, as time permits, explore nonlocal options (i.e., options involving change by 2 or more agents) for global solution improvement.",
                "This provides a means for keeping pace with execution, and for tying the amount of effort spent in more global multi-agent solution improvement to the time available.",
                "Both local and non-local problem solving time is further minimized by the use of a core incremental scheduling procedure.",
                "Figure 3: Agent Architecture.",
                "Our solution framework is made concrete in the agent architecture depicted in Figure 3.",
                "In its most basic form, an agent comprises four principal components - an Executor, a Scheduler, a Distributed State Manager (DSM), and an Options Manager - all of which share a common model of the current problem and solution state that couples a domainlevel representation of the subjective c taems task structure to an underlying STN.",
                "At any point during operation, the currently installed schedule dictates the timing and sequence of domain-level activities that will be initiated by the agent.",
                "The Executor, running in its own thread, continually monitors the enabling conditions of various pending activities, and activates the next pending activity as soon as all of its causal and temporal constraints are satisfied.",
                "When execution results are received back from the environment (MASS) and/or changes to assumed external constraints are received from other agents, the agents model of current state is updated.",
                "In cases where this update leads to inconsistency in the STN or it is otherwise recognized that the current local schedule might now be improved, the Scheduler, running on a separate thread, is invoked to revise the current solution and install a new schedule.",
                "Whenever local schedule constraints change either in response to a current state update or through manipulation by the Scheduler, the DSM is invoked to communicate these changes to interested agents (i.e., those agents that share dependencies and have overlapping subjective views).",
                "After responding locally to a given state update and communicating consequences, the agent will use any remaining computation time to explore possibilities for improvement through joint change.",
                "The Option Manager utilizes the Scheduler (in this case in hypothetical mode) to generate one or more non-local options, i.e., identifying changes to the schedule of one or more other agents that will enable the local agent to raise the quality of its schedule.",
                "These options are formulated and communicated as queries to the appropriate remote agents, who in turn hypothetically evaluate the impact of proposed changes from their local perspective.",
                "In those cases where global improvement is verified, joint changes are committed to.",
                "In the following sections we consider the mechanics of these components in more detail. 4.",
                "THE SCHEDULER As indicated above, our agent scheduler operates incrementally.",
                "Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.",
                "There is an inherent bias toward schedule stability which provides better support for the continuity in execution.",
                "This latter property is also advantageous in multi-agent settings, since solution stability tends to minimize the ripple across different agents schedules.",
                "The coupling of incremental scheduling with flexible times scheduling adds additional leverage in an uncertain, multiagent execution environment.",
                "As mentioned earlier, slack can be used as a hedge against uncertain method execution times.",
                "It also provides a basis for softening the impact of inter-dependencies across agents.",
                "In this section, we summarize the core scheduler that we have developed to solve the Coordinators problem.",
                "In subsequent sections we discuss its use in managing execution and coordinating with other agents. 4.1 STN Solution Representation To maintain the range of admissible values for the start and end times of various methods in a given agents sched486 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) ule, all problem and scheduling constraints impacting these times are encoded in an underlying Simple Temporal Network (STN)[3].",
                "An STN represents temporal constraints as a graph G < N, E >, where nodes in N represent the set of time points of interest, and edges in E are distances between pairs of time points in N. A special time point, called calendar zero grounds the network and has the value 0.",
                "Constraints on activities (e.g. release time, due time, duration) and relationships between activities (e.g. parentchild relation, enables) are uniformly represented as temporal constraints (i.e., edges) between relevant start and finish time points.",
                "An agents schedule is designated as a total ordering of selected methods by posting precedence constraints between the end and start points of each ordered pair.",
                "As new methods are inserted into a schedule or external state updates require adjustments to existing constraints (e.g., substitution of an actual duration constraint, tightening of a deadline), the network propagates constraints and maintains lower and upper bounds on all time points in the network.",
                "This is accomplished efficiently via the use of a standard all-pairs shortest path algorithm; in our implementation, we take advantage of an incremental procedure based on [2].",
                "As bounds are updated, a consistency check is made for the presence of negative cycles, and the absence of any such cycle ensures the continued temporal feasibility of the network (and hence the schedule).",
                "Otherwise a conflict has been detected, and some amount of constraint retraction is necessary to restore feasibility. 4.2 Maintaining High-Quality Schedules The scheduler consists of two basic components: a quality propagator and an activity allocator that work in a tightly integrated loop.",
                "The quality propagator analyzes the activity hierarchy and collects a set of methods that (if scheduled) would maximize the quality of the agents local problem.",
                "The methods are collected without regard for resource contention; in essence, the quality propagator optimally solves a relaxed problem where agents are capable of performing an infinite number of activities at once.",
                "The allocator selects methods from this list and attempts to install them in the agents schedule.",
                "Failure to do so reinvokes the quality propagator with the problematic activity excluded.",
                "The Quality Propagator - The quality propagator performs the following actions on the C TAEMS task structure: • Computes the quality of all activities in the task structure: The expected quality qual(m) of a method m is computed from the probability distribution of the execution outcomes.",
                "The quality qual(t) of a task t is computed by applying its qaf to the assessed quality of its children. • Generates a list of contributors for each task: methods that, if scheduled, will maximize the quality obtained by the task. • Generates a list of activators for each task: methods that, if scheduled, are sufficient to qualify the task as scheduled.",
                "Methods in the activators list are chosen to minimize demands on the agents timeline without regard to quality.",
                "The first time the quality propagator is invoked, the qualities of all tasks and methods are calculated and the initial lists of contributors and activators are determined.",
                "Subsequent calls to the propagator occur as the allocator installs methods on the agents timeline: failure of the allocator to install a method causes the propagator to recompute a new list of contributors and activators.",
                "The Activity Allocator - The activity allocator seeks to install the contributors of the taskgroup identified by the quality propagator onto the agents timeline.",
                "Any currently scheduled methods that do not appear in the contributors list are first unscheduled and removed from the timeline.",
                "The contributors are then preprocessed using a quality-centric heuristic to create an agenda sorted in decreasing quality order.",
                "In addition, methods associated with a and task (i.e., min, sumand) are grouped consecutively within the agenda.",
                "Since an and task accumulates quality only if all its children are scheduled, this biases the scheduling process towards failing early (and regenerating contributors) when the methods chosen for the and cannot together be allocated.",
                "The allocator iteratively pops the first method mnew from the agenda and attempts to install it.",
                "This entails first checking that all activities that enable mnew have been scheduled, while attempting to install any enabler that is not.",
                "If any of the enabler activities fails to install, the allocation pass fails.",
                "When successful, the enables constraints linking the enabler activities to mnew are activated.",
                "The STN rejects an infeasible enabler constraint by returning a conflict.",
                "In this event any enabler activities it has scheduled are uninstalled and the allocator returns failure.",
                "Once scheduling of enablers is ensured, a feasible slot on the agents timeline within mnews time window is sought and the allocator attempts to insert mnew between two currently scheduled methods.",
                "At the STN level, mnews insertion breaks the sequencing constraint between the two extant timeline methods and attempts to insert two new sequencing constraints that chain mnew to these methods.",
                "If these insertions succeed, the routine returns success, otherwise the two extant timeline methods are relinked and allocation attempts the next possible slot for mnew insertion. 5.",
                "THE DYNAMICS OF EXECUTION Maintaining a flexible-times schedule enables us to use a conflict-driven approach to schedule repair: Rather than reacting to every event in the execution that may impact the existing schedule by computing an updated solution, the STN can absorb any change that does not cause a conflict.",
                "Consequently, computation (producing a new schedule) and communication costs (informing other agents of changes that affect them) are minimized.",
                "One basic mechanism needed to model execution in the STN is a dynamic model for current time.",
                "We employ a model proposed by [7] that establishes a current-time time point and includes a link between it and the calendar-zero time point.",
                "As each method is scheduled, a simple precedence constraint between the current-time time point and the method is established.",
                "When the scheduler receives a current time update, the link between calendar-zero and current-time is modified to reflect this new time, and the constraint propagates to all scheduled methods.",
                "A second issue concerns synchronization between the executor and the scheduler, as producer and consumer of the schedule running on different threads within a given agent.",
                "This coordination must be robust despite the fact that the The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 487 executor needs to start methods for execution in real-time even while the scheduler may be reassessing the schedule to maximize quality, and/or transmitting a revised schedule.",
                "If the executor, for example, slates a method for execution based on current time while the scheduler is instantiating a revised schedule in which that method is no longer nextto-be-executed, an inconsistent state may arise within the agent architecture.",
                "This is addressed in part by introducing a freeze window; a specified short (and adjustable) time period beyond current time within which any activity slated as eligible to start in the current schedule cannot be rescheduled by the scheduler.",
                "The scheduler is triggered in response to various environmental messages.",
                "There are two types of environmental message classes that we discuss here as execution dynamics: 1) feedback as a result of method execution - both the agents own and that of other agents, and 2) changes in the C TAEMS model corresponding to a set of simulatordirected evolutions of the problem and environment.",
                "Such messages are termed updates and are treated by the scheduler as directives to permanently modify parameters in its model.",
                "We discuss these update types in turn here and defer until later the discussion of queries to the scheduler, a what-if mode initiated by a remote agent that is pursuing higher global quality.",
                "Whether it is invoked via an update or a query, the schedulers response is an option; essentially a complete schedule of activities the agent can execute along with associated quality metrics.",
                "We define a local option as a valid schedule for an agents activities, which does not require change to any other agents schedule.",
                "The overarching design for handling execution dynamics aims at anytime scheduling behavior in which a local option maximizing the local view of quality is returned quickly, possibly followed by globally higher quality schedules that entail inter-agent coordination if available scheduler cycles permit.",
                "As such, the default scheduling mode for updates is to seek the highest quality local option according to the schedulers search strategy, instantiate the option as its current schedule, and notify the executor of the revision. 5.1 Responding to Activity Execution As suggested earlier, a committed schedule consists of a sequence of methods, each with a designated [est, lst] start time window (as provided by the underlying STN representation).",
                "The executor is free to execute a method any time within its start time window, once any additional enabling conditions have been confirmed.",
                "These scheduled start time windows are established using the expected duration of each scheduled method (derived from associated method duration distributions during schedule construction).",
                "Of course as execution unfolds, actual method durations may deviate from these expectations.",
                "In these cases, the flexibility retained in the schedule can be used to absorb some of this unpredictability and modulate invocation of a schedule revision process.",
                "Consider the case of a method completion message, one of the environmental messages that could be communicated to the scheduler as an execution state update.",
                "If the completion time is coincident with the expected duration (i.e., it completes exactly as expected), then the schedulers response is to simply mark it as completed and the agent can proceed to communicate the time at which it has accumulated quality to any remote agents linked to this method.",
                "However if the method completes with a duration shorter than expected a rescheduling action might be warranted.",
                "The posting of the actual duration in the STN introduces no potential for conflict in this case, either with the latest start times (lsts) of local or remote methods that depend on this method as an enabler, or to successively scheduled methods on the agents timeline.",
                "However, it may present a possibility for exploiting the unanticipated scheduling slack.",
                "The flexible times representation afforded by the STN provides a quick means of assessing whether the next method on the timeline can begin immediate execution instead of waiting for its previously established earliest start time (est).",
                "If indeed the est of the next scheduled method can spring back to current-time once the actual duration constraint is substituted for the expected duration constraint, then the schedule can be left intact and simply communicated back to the executor.",
                "If alternatively, other problem constraints prevent this relaxation of the est, then there is forced idle time that may be exploited by revising the schedule, and the scheduler is invoked (always respecting the freeze period).",
                "If the method completes later than expected, then there is no need for rescheduling under flexible times scheduling unless 1) the method finishes later than the lst of the subsequent scheduled activity, or 2) it finishes later than its deadline.",
                "Thus we only invoke the scheduler if, upon posting the late finish in the STN, a constraint violation occurs.",
                "In the latter case no quality is accrued and rescheduling is mandated even if there are no conflicts with subsequent scheduled activities.",
                "Other execution status updates the agent may receive include: • method start - If a method sent for execution is started within its [est, lst] window, the response is to mark it as executing.",
                "A method cannot start earlier than when it is transmitted by the executor but it is possible for it to start later than requested.",
                "If the posted start time causes an inconsistency in the STN (e.g. because the expected method duration can no longer be accommodated) the duration constraint in the STN is shortened based on the known distribution until either consistency is restored or rescheduling is mandated. • method failure - Any method under execution may fail unexpectedly, garnering no quality for the agent.",
                "At this point rescheduling is mandated as the method may enable other activities or significantly impact quality in the absence of local repair.",
                "Again, the executor will proceed with execution of the next method if its start time arrives before the revised schedule is committed, and the scheduler accommodates this by respecting the freeze window. • current time advances An update on current time may arrive either alone or as part of any of the previously discussed updates.",
                "If, when updating the currenttime link in the STN (as described above), a conflict results, the execution state is inconsistent with the schedule.",
                "In this case, the scheduler proceeds as if execution were consistent with its expectations, subject to possible later updates. 488 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 5.2 Responding to Model Updates The agent can also dynamically receive changes to the agents underlying C TAEMS model.",
                "Dynamic revisions in the outcome distributions for methods already in an agents subjective view may impact the assessed quality and/or duration values that shaped the current schedule.",
                "Similarly, dynamic revisions in the designated release times and deadlines for methods and tasks already in an agents subjective view can invalidate an extant schedule or present opportunities to boost quality.",
                "It is also possible during execution to receive updates in which new methods and possibly entire task structures are given to the agent for inclusion in its subjective view.",
                "Model changes that involve temporal constraints are handled in much the same fashion as described for method starts and completions, i.e, rescheduling is required only when the posting of the revised constraints leads to an STN conflict.",
                "In the case of non-temporal model changes, rescheduling action is currently always initiated. 6.",
                "INTER-AGENT COORDINATION Having responded locally to an unexpected execution result or model change, it is necessary to communicate the consequences to agents with inter-dependent activities so that they can align their decisions accordingly.",
                "Responses that look good locally may have a sub-optimal global effect once alignments are made, and hence agents must have the ability to seek mutually beneficial joint schedule changes.",
                "In this section we summarize the coordination mechanisms provided in the agent architecture to address these issues. 6.1 Communicating Non-Local Constraints A basic means of coordination with other agents is provided by the Distributed State Mechanism (DSM), which is responsible for communicating changes made to the model or schedule of a given agent to other interested agents.",
                "More specifically, the DSM of a given agent acts to push any changes made to the time bounds, quality, or status of a local task/method to all the other agents that have that same task/method as a remote node in their subjective views.",
                "A recipient agent treats any communicated changes as additional forms of updates, in this case an update that modifies the current constraints associated with non-local (but inter-dependent) tasks or methods.",
                "These changes are handled identically to updates reflecting schedule execution results, potentially triggering the local scheduler if the need to reschedule is detected. 6.2 Generating Non-Local Options As mentioned in the previous section, the agents first response to any given query or update (either from execution or from another agent) is to generate one or more local options.",
                "Such options represent local schedule changes that are consistent with all currently known constraints originating from other agents schedules, and hence can be implemented without interaction with other agents.",
                "In many cases, however, a larger-scoped change to the schedules of two or more agents can produce a higher-quality response.",
                "Exploration of opportunities for such coordinated action by two or more agents is the responsibility of the Options Manager.",
                "Running in lower priority mode than the Executor and Scheduler, the Options Manager initiates a non-local option generation and evaluation process in response to any local schedule change made by the agent if computation time constraints permits.",
                "Generally speaking, a non-local option identifies certain relaxations (to one or more constraints imposed by methods that are scheduled by one or more remote agents) that enable the generation of a higher quality local schedule.",
                "When found, a non-local option is used by a coordinating agent to formulate queries to any other involved agents in order to determine the impact of such constraint relaxations on their local schedules.",
                "If the combined quality change reported back from a set of one or more relevant queries is a net gain, then the issuing agent signals to the other involved agents to commit to this joint set of schedule changes.",
                "The Option Manager currently employs two basic search strategies for generating non-local options, each exploiting the local scheduler in hypothetical mode.",
                "Optimistic Synchronization - Optimistic synchronization is a non-local option generation strategy where search is used to explore the impact on quality if optimistic assumptions are made about currently unscheduled remote enablers.",
                "More specifically, the strategy looks for would be contributor methods that are currently unscheduled due to the fact that one or more remote enabling (source) tasks or methods are not currently scheduled.",
                "For each such local method, the set of remote enablers are hypothetically activated, and the scheduler attempts to construct a new local schedule under these optimistic assumptions.",
                "If successful, a non-local option is generated, specifying the value of the new, higher quality local schedule, the temporal constraints on the local target activity, and the set of must-schedule enabler activities that must be scheduled by remote agents in order to achieve this local quality.",
                "The needed queries requesting the quality impact of scheduling these activities are then formulated and sent to the relevant remote agents.",
                "To illustrate, consider again the example in Figure 1.",
                "The maximum quality that Agent1 can contribute to the task group is 15 (by scheduling M1, M2 and M3).",
                "Assume that this is Agent1s current schedule.",
                "Given this state, the maximum quality that Agent2 can contribute to the task group is 10, and the total task group quality would then be 15 + 10 = 25.",
                "Using optimistic synchronization, Agent2 will generate a non-local option that indicates that if M5 becomes enabled, both M5 and M6 would be scheduled, and the quality contributed by Agent2 to the task group would become 30.",
                "Agent2 sends a must schedule M4 query to Agent1.",
                "Because of the time window constraints, Agent1 must remove M3 from its schedule to get M4 on, resulting in a new lower quality schedule of 5.",
                "However, when Agent2 receives this option response from Agent1, it determines that the total quality accumulated for the task group would be 5 + 30 = 35, a net gain of 10.",
                "Hence, Agent 2 signals to Agent1 to commit to this non-local option.",
                "Conflict-Driven Relaxation - A second strategy for generating non-local options, referred to as Conflict-Directed Relaxation, utilizes analysis of STN conflicts to identify and prioritize external constraints to relax in the event that a particular method that would increase local quality is found to be unschedulable.",
                "Recall that if a method cannot be feasibly inserted into the schedule, an attempt to do so will generate a negative cycle.",
                "Given this cycle, the mechanism proceeds in three steps.",
                "First, the constraints involved in the cycle are collected.",
                "Second, by virtue of the connections in the STN to the domain-level C TAEMS model, this set is filtered to identify the subset associated with remote nodes.",
                "Third, constraints in this subset are selectively retracted to The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 489 Figure 4: A high quality task is added to the task structure of Agent2.",
                "Figure 5: If M4, M5 and M7 are scheduled, a conflict is detected by the STN. determine if STN consistency is restored.",
                "If successful, a non-local option is generated indicating which remote constraint(s) must be relaxed and by how much to allow installation of the new, higher quality local schedule.",
                "To illustrate this strategy, consider Figure 5 where Agent1 has M1, M2 and M4 on its timeline, and therefore est(M4) = 21.",
                "Agent2 has M5 and M6 on its timeline, with est(M5) = 31 (M6 could be scheduled before or after M5).",
                "Suppose that Agent2 receives a new task M7 with deadline 55 (see Figure 4).",
                "If Agent2 could schedule M7, the quality contributed by Agent2 to the task group would be 70.",
                "However, an attempt to schedule M7 together with M5 and M6 leads to a conflict, since the est(M7) = 46, dur(M7) = 10 and lft(M7) = 55 (see Figure 5).",
                "Conflict-directed relaxation by Agent 2 suggests relaxing the lft(M4) by 1 tick to 30, and this query is communicated to Agent 1.",
                "In fact, by retracting either method M1 or M2 from the schedule this relaxation can be accommodated with no quality loss to Agent1 (due to the min qaf).",
                "Upon communication of this fact Agent 2 signals to commit. 7.",
                "EXPERIMENTAL RESULTS An initial version of the agent described in this paper was developed in collaboration with SRI International and subjected to the independently conducted Coordinators programmatic evaluation.",
                "This evaluation involved over 2000 problem instances randomly generated by a scenario generator that was configured to produce scenarios of varying Problem Class Description Agent Class Quality OD Only Dynamics.",
                "No NLEs. 97.9% (390 probs) Actual task duration & quality vary according to distribution.",
                "INT Interdependent.",
                "Frequent & 100% (360 probs) random (esp. facilitates) CHAINS Activities chained together 99.5% (360 probs) via sequences of enables NLEs (1-4 chains/prob) TT Temporal Tightness.",
                "Release - 94.9% (360 probs) Deadline windows preclude preferred high quality (longest duration) tasks from all being scheduled.",
                "SYNC Problems contain range of 97.1% (360 probs) different Sync sum tasks NTA New Task Arrival. cTaems 99.0% (360 probs) model is augmented with new tasks dynamically during run.",
                "OVERALL Avg: 98.1% (2190 probs) Std dev: 6.96 Table 1: Performance of year 1 agent over Coordinators evaluation.",
                "Agent Quality is % of optimal durations within six experiment classes.",
                "These classes, summarized in Table 1, were designed to evaluate key aspects of a set of Coordinators distributed scheduling agents, such as their ability to handle unexpected execution results, chains of nles involving multiple agents, and effective scheduling of new activities that arise unexpectedly at some point during the problem run.",
                "Year 1 evaluation problems were constrained to be small enough (3 -10 agents, 50 - 100 methods) such that comparison against an optimal centralized solver was feasible.",
                "The evaluation team employed an MDP-based solver capable of unrolling the entire search space for these problems, choosing for an agent at each execution decision point the activity most likely to produce maximum global quality.",
                "This established a challenging benchmark for the distributed agent systems to compare against.",
                "The hardware configuration used by the evaluators instantiated and ran one agent per machine, dedicating a separate machine to the MASS simulator.",
                "As reported in Table 1, the year 1 prototype agent clearly compares favorably to the benchmark on all classes, coming within 2% of the MDP optimal averaged over the entire set of 2190 problems.",
                "These results are particularly notable given that each agents STN-based scheduler does very little reasoning over the success probability of the activity sequences it selects to execute.",
                "Only simple tactics were adopted to explicitly address such uncertainty, such as the use of expected durations and quality for activities and a policy of excluding from consideration those activities with failure likelihood of >75%.",
                "The very respectable agent performance can be at least partially credited to the fact that the flexible times representation employed by the scheduler affords it an important buffer against the uncertainty of execution and exogenous events.",
                "The agent turns in its lowest performance on the TT (Temporal Tightness) experiment classes, and an examination of the agent trace logs reveals possible reasons.",
                "In about half of the TT problems the year 1 agent under-performs on, the specified time windows within which an agents ac490 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) tivities must be scheduled are so tight that any scheduled activity which executes with a longer duration than the expected value, causes a deadline failure.",
                "This constitutes a case where more sophisticated reasoning over success probability would benefit this agent.",
                "The other half of underperforming TT problems involve activities that depend on facilitation relationships in order to fit in their time windows (recall that facilitation increases quality and decreases duration).",
                "The limited facilitates reasoning performed by the year 1 scheduler sometimes causes failures to install a heavily facilitated initial schedule.",
                "Even when such activities are successfully installed they tend to be prone to deadline failures -If a source-side activity(s) either fails or exceeds its expected duration the resulting longer duration of the target activity can violate its time window deadline. 8.",
                "STATUS AND DIRECTIONS Our current research efforts are aimed at extending the capabilities of the Year 1 agent and scaling up to significantly larger problems.",
                "Year 2 programmatic evaluation goals call for solving problems on the order of 100 agents and 10,000 methods.",
                "This scale places much higher computational demands on all of the agents components.",
                "We have recently completed a re-implementation of the prototype agent designed to address some recognized performance issues.",
                "In addition to verifying that the performance on Year 1 problems is matched or exceeded, we have recently run some successful tests with the agent on a few 100 agent problems.",
                "To fully address various scale up issues, we are investigating a number of more advanced coordination mechanisms.",
                "To provide more global perspective to local scheduling decisions, we are introducing mechanisms for computing, communicating and using estimates of the non-local impact of remote nodes.",
                "To better address the problem of establishing inter-agent synchronization points, we expanding the use of task owners and qaf-specifc protocols as a means for directing coordination activity.",
                "Finally, we plan to explore the use of more advanced STN-driven coordination mechanisms, including the use of temporal decoupling [7] to insulate the actions of inter-dependent agents and the introduction of probability sensitive contingency schedules. 9.",
                "ACKNOWLEDGEMENTS The Year 1 agent architecture was developed in collaboration with Andrew Agno, Roger Mailler and Regis Vincent of SRI International.",
                "This paper is based on work supported by the Department of Defense Advance Research Projects Agency (DARPA) under Contract # FA8750-05-C0033.",
                "Any opinions findings and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of DARPA. 10.",
                "REFERENCES [1] M. Boddy, B. Horling, J. Phelps, R. Goldman, R. Vincent, A.",
                "Long, and B. Kohout.",
                "C taems language specification v. 1.06, October 2005. [2] A. Cesta and A. Oddi.",
                "Gaining efficiency and flexibility in the simple temporal problem.",
                "In Proc. 3rd Int.",
                "Workshop on Temporal Representation and Reasoning, Key West FL, May 1996. [3] R. Dechter, I. Meiri, and J. Pearl.",
                "Temporal constraint networks.",
                "Artificial Intelligence, 49:61-95, May 1991. [4] K. Decker.",
                "TÆMS: A framework for environment centered analysis & design of coordination mechanisms.",
                "In G. OHare and N. Jennings, editors, Foundations of Distributed Artificial Intelligence, chapter 16, pages 429-448.",
                "Wiley Inter-Science, 1996. [5] K. Decker and V. Lesser.",
                "Designing a family of coordination algorithms.",
                "In Proc. 1st.",
                "Int.",
                "Conference on Multi-Agent Systems, San Francisco, 1995. [6] A. J. Garvey.",
                "Design-To-Time Real-Time Scheduling.",
                "PhD thesis, Univ. of Massachusetts, Feb. 1996. [7] L. Hunsberger.",
                "Algorithms for a temporal decoupling problem in multi-agent planning.",
                "In Proc. 18th National Conference on AI, 2002. [8] S. Lemai and F. Ingrand.",
                "Interleaving temporal planning and execution in robotics domains.",
                "In Proc. 19th National Conference on AI, 2004. [9] N. Muscettola, P. P. Nayak, B. Pell, and B. C. Williams.",
                "Remote agent: To boldly go where no AI system has gone before.",
                "Artificial Intelligence, 103(1-2):5-47, 1998. [10] W. Ruml, M. B.",
                "Do, and M. Fromherz.",
                "On-line planning and scheduling of high-speed manufacturing.",
                "In Proc.",
                "ICAPS-05, Monterey, 2005. [11] I. Shu, R. Effinger, and B. Williams.",
                "Enabling fast flexible planning through incremental temporal reasoning with conflict extraction.",
                "In Proce.",
                "ICAPS-05, Monterey, 2005. [12] S. Smith and C. Cheng.",
                "Slack-based heuristics for constraint satisfaction scheduling.",
                "In Proc. 12th National Conference on AI, Wash DC, July 1993. [13] T. Wagner, A. Garvey, and V. Lesser.",
                "Criteria-directed heuristic task scheduling.",
                "International Journal of Approximate Reasoning, 19(1):91-118, 1998.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 491"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Descripción general del enfoque Nuestro marco de soluciones combina dos principios básicos para hacer frente al problema de administrar el \"horario de múltiples agentes\" en un entorno de ejecución incierto y estresado por el tiempo.horario de múltiples agentes"
            ],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}