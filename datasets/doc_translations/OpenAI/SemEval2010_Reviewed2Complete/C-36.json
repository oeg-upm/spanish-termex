{
    "id": "C-36",
    "original_text": "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W. Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure. Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations. As the number of participants in the network increases, security becomes an increasing concern. This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types. Key refresh allows us to ensure forward and backward security when event brokers join and leave the network. We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions. We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1. INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications. Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them. In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area. However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two. While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations. As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far. Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface. In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems. The architecture provides a mechanism for authorising event clients to publish and subscribe to event types. The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system. The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly. Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers. This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure. We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys. With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter). We effectively move the enforcement of access control from the brokers to the encryption key managers. We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications. Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system. Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers. There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network. First, sharing brokers will create a physically larger network that will provide greater geographic reach. Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance. Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper. It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain. This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area. We have included Detective Smith as a subscriber in this domain. Congestion Charge Service Domain. The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain. The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain. The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper. PITO Domain. The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed. It is the event type owner in this particular scenario. Encryption protects the confidentiality of events should they be transported through unauthorised domains. However encrypting whole events means unauthorised brokers cannot make efficient routing decisions. Our approach is to apply encryption to the individual attributes of events. This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes. In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes. In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted. We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure. Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle. The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case. Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it. However this approach will often not be acceptable in Internet-scale systems. We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content. Publications will be encrypted with their event type specific encryption keys. By controlling access to the encryption keys, we can control access to the event types. The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys. We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2. In Section 3 we present our model for encrypting event content on both the event and the attribute level. Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems. We analytically evaluate the performance of our proposal in Section 5. Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2. BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems. We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service. Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event. The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes. Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers. Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client. In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively. A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client. A broker network can have a static topology (e.g. Siena [3] and Gryphon [14]) or a dynamic topology (e.g. Scribe [4] and Hermes [13]). Our proposed approach will work in both cases. A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology. On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure. Our work is based on the Hermes system. Hermes is a content-based publish/subscribe middleware that includes strong event type support. In other words, each publication is an instance of a particular predefined event type. Publications are type checked at the local broker of each publisher. Our attribute level encryption scheme assumes that events are typed. Hermes uses a structured overlay network as a transport and therefore has a dynamic topology. A Hermes publication consists of an event type identifier and a set of attribute value pairs. The type identifier is the SHA-1 hash of the name of the event type. It is used to route the publication through the event broker network. It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures. A useful side effect of secure event types are their globally unique event type and attribute names. These names can be referred to by access control policies. In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12]. The model treats event types as resources that publishers, subscribers, and event brokers want to access. The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type. For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate. We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates. That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type. We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system. In our case the first level of access control is applied when the participant tries to join the publish/subscribe network. Unauthorised event brokers are not allowed to join the broker network. Similarly unauthorised event clients are not allowed to connect to an event broker. All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer. The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system. Thus we assume that these clients are not a threat. The event client relies completely on the local event broker for access to the broker network. Therefore the event client is unable to access any events without the assistance of the local broker. The brokers on the other hand are able to analyse all events in the system that pass through them. A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption). There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern. Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary. While traffic analysis is an important concern we have not addressed it further in this paper. 3. ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys. Effectively we move the responsibility for access control from the broker network to the key managers. It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client. This allows us to implement the event content encryption within the broker network without involving the clients. By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 . The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used. This is discussed in Sect. 4.2 having to decrypt the same event. Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system. If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system. We can implement encryption either at the event level or the attribute level. Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster. Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty. In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype. Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext. The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network. The globally unique event type identifier specifies the encryption key used to encrypt the event content. Each event type in the system will have its own individual encryption key. Keys are refreshed, as discussed in Sect. 4.2. While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>. Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing. Event brokers that do not have access to the encryption key will be forced to route the event based only on its type. That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links. Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes. This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key. The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers. The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys. Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them. An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >. Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>. The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition. Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication. Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately. In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm. Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much. This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small. As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5. The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level. The event type owner can therefore allow clients to have different levels of access to the same event type. Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network. Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application. The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation. The publisher would then publish an instance of each of these types instead of publishing just a combined event. For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective. This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically. This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions. Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches. For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription. The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted. In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters. This would again reveal information about the event content to the unauthorised broker. In the case of encrypting complete events, we also encrypt the complete subscription filter. The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter. In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions. Each attribute filter is encrypted individually, much as when encrypting a publication. In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand. For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext. With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted. In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other. In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference. If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session. Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree. In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network). Therefore it is probable that the rendezvous node will reside outside the current domain. This situation is illustrated in the event dissemination tree in Fig. 2. So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node. To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events. A broker fills the cache with content that it has decrypted, for example, in order to filter on the content. The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event. The next broker can look the attribute up from the cache instead of having to decrypt it. If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent. Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing. In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains. We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters. EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection. The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data. The EAX mode is compatible with any block cipher. We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far. In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21]. A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext. Effectively CTR mode transforms a block cipher into a stream cipher. The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits). Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally. For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher. With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length. In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag. In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed. The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]). It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream. In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce. The broker is responsible for ensuring that the timestamps increase monotonically. The authentication tag is appended to the produced cipher text to create a two-tuple. With event encryption a single tag is created for the encrypted event. With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags. The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead. We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter. EAX also supports including unencrypted associated data in the tag calculation. The integrity of this data is protected, but it is still readable by everyone. This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing. The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters. We have included the event type identifier as associated data in order to protect its integrity. Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22]. Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX. Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use. The CCM mode is the predecessor of the EAX mode. It was developed in order to provide a free alternative to OCB. The EAX was developed later to address some issues with CCM [18]. Similarly to EAX, CCM is also a two-pass mode. 4. KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier). That identifier is used to determine the encryption key to use when encrypting or decrypting the content. Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key. By controlling access to the encryption key we effectively control access to the encrypted event content. In order to control access to the encryption keys we form a key group of brokers for each individual encryption key. The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group. The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so. Therefore the key group manager must be trusted by the type owner to enforce the access control policy. We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain. In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems. The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node. Authority to access a given event type is granted by the owner of that type issuing a capability to a node. The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access. For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events. The sequence of events required for a broker to successfully join a key group is shown in Fig. 4. Both the client hosting broker and the client must be authorised to make the clients request. That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events. This is because from the perspective of the broker network, the local broker acts as a proxy for the client. We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests. Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them. In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication. In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time. There are a number of scalable key management protocols for secure group communication [15]. We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept. We chose to implement OFT, because of its relatively simplicity and good performance. Our implementation uses the same structured overlay network used by the broker network as a transport. The OFT protocol is based on a binary tree where the participants are at the leaves of the tree. It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires. Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages. Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages. Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised. Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members. In our case key group membership is based on the broker holding a capability that authorises it to join the key group. The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer. In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member. In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided. Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire. These situations are both illustrated in Fig.5. It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future. More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers. When an encryption key is refreshed the new key is tagged with a timestamp. The encryption key to use for a given event is selected based on the events publication timestamp. The old keys will be kept for a reasonable amount of time in order to allow for some clock drift. Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network. It can be configured independently per key group if necessary. 5. EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware. The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system. We ran three performance tests in a discrete event simulator. The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory. We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system. The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption. We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one. The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber. The test measures the combined time it takes to publish and deliver 100,000 events. If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB. In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis). Each attribute is set to a 30 character string. For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput. The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown. The same tests were run with no content encryption, event encryption, and attribute encryption. As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption. The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext. When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance. Event encryption fares better, because of fewer encryption operations. The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does. The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value. A more efficient implementation would provide its own marshalling mechanism. Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness. Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content. This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead. In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials. The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription. The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput. The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements. The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker. In this scenario the middle broker does not need to decrypt nor encrypt the event content. As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25. The attribute values in each case are 30 character strings. Each test is repeated five times, and we use the average of all iterations in the graph. The same test was then repeated with no encryption, event encryption and attribute encryption turned on. The encrypted modes follow each other very closely. Predictably, the plaintext mode performs a little better for all attribute counts. The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test. The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes. We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation. The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption. The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption. In the test we form a broker network of 2000 brokers. We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers. Each subscriber simulates a group of subscribers that all have the same access rights to the published event. Each subscriber group has its own event type in the test. The outcome of this test is shown in Fig. 8. The number of subscriber groups is increased from 1 to 50 (the x-axis). For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group. We count the number of hops each publication makes through the broker network (y-axis). Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes. The subscriber groups used in this test represent disjoint permission sets over such event attributes. The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type. The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups. Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption. With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6. RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20]. The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions. Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems. Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented. Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10]. They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships. As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers. We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber. Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures. Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network. Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events. In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching. We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication. The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper. Finally, Fiege et al. address the related topic of event visibility in [6]. While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7. CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system. Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials. This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue. Attribute level encryption can be implemented in order to enforce fine-grained access control policies. In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them. Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection. In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness. Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments. Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation. David Eyers is supported by EPSRC (GR/S94919). 114 8. REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen. Securing publish/subscribe for multi-domain systems. In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner. Eax: A conventional authenticated-encryption mode. Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf. Design and evaluation of a wide-area event notification service. ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron. SCRIBE: A large-scale and decentralized application-level multicast infrastructure. IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen. The TLS protocol, version 1.0. RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann. Engineering event-based systems with scopes. In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002. Springer-Verlag. [7] T. Iwata and I. A. Iurosawa. OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman. Key establishment in large dynamic groups using one-way function trees. Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST). Advanced Encryption Standard (AES). Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash. Secure distribution of events in content-based publish subscribe systems. In Proc. of the 10th USENIX Security Symposium. USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon. Secure event types in content-based, multi-domain publish/subscribe systems. In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon. A capabilities-based access control architecture for multi-domain publish/subscribe systems. In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006. IEEE. [13] P. R. Pietzuch and J. M. Bacon. Hermes: A distributed event-based middleware architecture. In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002. IEEE. [14] P. R. Pietzuch and S. Bhola. Congestion control in a reliable scalable message-oriented middleware. In M. Endler and D. Schmidt, editors, Proc. of the 4th Int. Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003. Springer. [15] S. Rafaeli and D. Hutchison. A survey of key management for secure group communication. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum. Enabling confidentiality in content-based publish/subscribe infrastructures. In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J. Black, and T. Krovetz. OCB: a block-cipher mode of operation for efficient authenticated encryption. In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner. A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu. Securing publish-subscribe overlay services with eventguard. In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf. Security issues and requirements in internet-scale publish-subscribe systems. In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002. IEEE. [21] D. Whitfield and M. Hellman. Privacy and authentication: An introduction to cryptography. In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson. Counter with CBC-MAC (CCM). RFC 3610, Internet Engineering Task Force, Sept. 2003. 115",
    "original_translation": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del Servicio de Cargo por Congestión. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de rendimiento significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5. La ventaja del cifrado de atributos es que el propietario del tipo puede controlar el acceso al tipo de evento a nivel de atributo. El propietario del tipo de evento puede permitir que los clientes tengan diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado a nivel de atributo permite el enrutamiento basado en el contenido en casos en los que un intermediario solo tiene acceso a algunos de los atributos del evento, reduciendo así el impacto general de la entrega de eventos en la red de intermediarios. Por lo tanto, la elección entre cifrado de eventos y cifrado de atributos es un compromiso entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos puede ser emulada introduciendo un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. El editor publicaría entonces una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría volverse difícil de gestionar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría un gran número de tipos de eventos y las políticas y suscripciones podrían cambiar dinámicamente. Este enfoque crea un gran número de eventos adicionales que deben ser enrutados a través de la red, como se muestra en la Sección 5.3. 3.3 Cifrado de suscripciones. Para proteger completamente la confidencialidad del contenido de los eventos, también debemos cifrar las suscripciones. Las suscripciones encriptadas garantizan: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido del evento al monitorear qué suscripciones coincide con un evento dado. Por ejemplo, en el primer caso un corredor no autorizado puede crear suscripciones con filtros adecuadamente elegidos, dirigirlas hacia la raíz del árbol de difusión de eventos y monitorear qué eventos le fueron entregados como coincidentes con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento incluso si el evento seguía encriptado. En el segundo caso, aunque un corredor no autorizado no pudiera crear suscripciones por sí mismo, aún podría revisar las suscripciones que se dirigían a través de él, tomar nota de los filtros de esas suscripciones y monitorear qué eventos le son entregados por corredores aguas arriba que coincidan con los filtros de suscripción. Esto revelaría nuevamente información sobre el contenido del evento al corredor no autorizado. En el caso de cifrar eventos completos, también ciframos el filtro de suscripción completo. El identificador del tipo de evento en la suscripción debe mantenerse intacto para permitir a los corredores de bolsa dirigir los eventos según su tema cuando no estén autorizados a acceder al filtro. En tales casos, se requiere que el corredor no autorizado asuma que los eventos de ese tipo coinciden con todas las expresiones de filtro. Cada filtro de atributo se encripta de forma individual, al igual que al encriptar una publicación. Además del identificador del tipo de evento, los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifren esos filtros a los que tienen acceso, y enrutan el evento en función de si coincide con los filtros descifrados. 3.4 Evitar Operaciones Criptográficas Innecesarias No es necesario cifrar el contenido del evento si el corredor actual y el siguiente corredor en el árbol de difusión de eventos tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede asumir que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, siempre que el siguiente corredor sea miembro del mismo dominio, el evento puede ser enrutado hacia él en texto plano. Con el cifrado de atributos es posible que el corredor vecino esté autorizado para acceder a un subconjunto de los atributos descifrados, en cuyo caso los atributos a los que el corredor no está autorizado a acceder se le pasarían cifrados. Para saber cuándo es seguro pasar el evento en forma de texto plano, los corredores intercambian credenciales como parte de un saludo cuando se conectan entre sí. En los casos en que los corredores puedan verificar las credenciales de los demás, los agregarán a la tabla de enrutamiento para futuras referencias. Si un corredor adquiere nuevas credenciales después del saludo inicial, presentará estas nuevas credenciales a sus vecinos mientras esté en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, ya que es más económico cifrar el evento una vez en la raíz del árbol de difusión de eventos. En Hermes, el nodo de encuentro para cada tipo de evento se selecciona de forma uniformemente aleatoria (el nombre del tipo de evento se hashea con el algoritmo de hash SHA-1 para producir el tipo de evento 108 PHB IBIB IB SHB RN IB SHB Figura 2: La dirección de los nodos está distribuida de manera uniforme en toda la red, por lo que los nodos de encuentro pueden encontrarse fuera del dominio que posee un tipo de evento IB IB SHBPHBP S Encripta Filtra desde la caché Desencripta, entrega Desencripta, filtra Texto plano Caché de texto plano (la mayoría de los datos) Caché de texto plano (algunos datos) Diferentes dominios Cifrado CLAVE Figura 3: Almacenamiento en caché de datos desencriptados para aumentar la eficiencia al entregar a pares con privilegios de seguridad equivalentes, luego el identificador se utiliza para seleccionar el nodo de encuentro en la red superpuesta estructurada). Por lo tanto, es probable que el nodo de encuentro resida fuera del dominio actual. Esta situación está ilustrada en el árbol de difusión del evento en la Figura 2. Incluso con aplicaciones internas del dominio, donde el evento puede ser enviado desde el publicador a todos los suscriptores en forma de texto plano, el contenido del evento en la mayoría de los casos tendrá que ser encriptado para poder ser enviado al nodo de encuentro. Para evitar desciframientos innecesarios, adjuntamos una caché de contenido en texto plano a los eventos encriptados. Un corredor llena la caché con contenido que ha descifrado, por ejemplo, para filtrar en el contenido. El caché es accedido por el intermediario cuando entrega un evento a un suscriptor local después de verificar primero si el evento coincide con el filtro de suscripción, pero el intermediario también envía el caché al siguiente intermediario con el evento encriptado. El siguiente corredor puede buscar el atributo en la caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, la caché se descartará antes de que se envíe el evento. Obviamente, enviar la caché con el evento encriptado aumentará el costo de comunicación, pero esto se compensa con el ahorro en el procesamiento de encriptación/desencriptación. En la Fig. 3 vemos dos flujos de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre intermediarios en dos dominios diferentes. Mostramos en la Sección 5.2 que el costo adicional de enviar mensajes encriptados con una caché de texto completo incurre en casi ningún costo adicional en comparación con el envío de mensajes de texto plano. 3.5 Implementación En nuestra implementación hemos utilizado el modo de operación EAX [2] al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para cifradores de bloque, también llamado algoritmo de Cifrado Autenticado con Datos Asociados (AEAD) que proporciona simultáneamente confidencialidad de datos y protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer paso se encripta el texto plano, y en el segundo paso se genera un código de autenticación de mensaje (MAC) para los datos encriptados. El modo EAX es compatible con cualquier cifrador de bloques. Decidimos utilizar el algoritmo Estándar de Encriptación Avanzada (AES) en nuestra implementación, debido a su estatus estándar y al hecho de que el algoritmo ha sido sometido a un exhaustivo criptoanálisis durante su existencia y hasta el momento no se han encontrado vulnerabilidades graves. Además de proporcionar confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en modo de contador (modo CTR) [21]. Un cifrado de bloque en modo de contador se utiliza para producir una secuencia de bits de clave que luego se XORean con el texto plano. El modo CTR transforma efectivamente un cifrado por bloques en un cifrado de flujo. La ventaja de los cifrados de flujo es que el texto cifrado tiene la misma longitud que el texto plano, mientras que con los cifrados de bloque el texto plano debe ser rellenado a un múltiplo de la longitud del bloque del cifrado de bloque (por ejemplo, el tamaño de bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, ya que el relleno podría aumentar el tamaño del atributo de manera desproporcionada. Por ejemplo, un solo entero podría tener una longitud de 32 bits, que se rellenaría a 128 bits si usáramos un cifrado por bloques. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno necesario para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud total del texto plano. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número usado una vez), una clave de cifrado y el texto plano, y devuelve el texto cifrado y una etiqueta de autenticación. En el modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve ya sea el texto plano, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente al pasar a través de una construcción OMAC (ver [7]). Es importante que los valores de nonce particulares no se reutilicen, de lo contrario, el cifrado de bloques en modo CTR produciría una secuencia de clave idéntica. En nuestra implementación utilizamos la marca de tiempo del evento definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) seguida de la identidad de PHB (es decir, la clave pública) como nonce. El corredor es responsable de asegurarse de que las marcas de tiempo aumenten de forma monótona. La etiqueta de autenticación se añade al texto cifrado producido para crear un par ordenado. Con el cifrado de eventos se crea una única etiqueta para el evento cifrado. Con el cifrado de atributo 109, cada atributo se cifra y autentica por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer un equilibrio entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación añadida. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero se podría hacer que la longitud de la etiqueta sea un parámetro definido por el publicador/suscriptor para cada publicación/suscripción o incluirlo en la definición del tipo de evento para hacerlo un parámetro específico del tipo. EAX también admite incluir datos asociados no encriptados en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero sigue siendo legible por todos. Esta característica podría ser utilizada con cifrado de eventos en casos donde parte del contenido del evento es público y, por lo tanto, sería útil para enrutamiento basado en contenido. La integridad de los datos seguiría protegida contra cambios, pero los intermediarios no autorizados podrían aplicar filtros. Hemos incluido el identificador del tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AEAD incluyen el modo de libro de códigos de desplazamiento (OCB) [17] y el modo de contador con CBC-MAC (CCM) [22]. A diferencia del modo EAX, el modo OCB solo requiere un paso sobre el texto plano, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en los Estados Unidos, lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado con el fin de proporcionar una alternativa gratuita a OCB. El EAX se desarrolló más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasadas. 4. GESTIÓN DE CLAVES En ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador del atributo). Ese identificador se utiliza para determinar la clave de encriptación que se debe usar al encriptar o desencriptar el contenido. Cada tipo de evento, en el cifrado de eventos, y atributo, en el cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo de claves de intermediarios para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando sea necesario y para entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicita unirse al grupo clave esté autorizado para hacerlo. Por lo tanto, el administrador del grupo clave debe ser confiable por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el administrador del grupo clave es o bien un tercero de confianza o, alternativamente, un miembro del dominio de propietarios del tipo. En [12] Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo posee un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento específico es otorgada por el propietario de ese tipo al emitir una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que el Propietario del Tipo, el Corredor, y el Administrador de Claves deben seguir. 1. Conceder autorización para la clave de la placa de número. 2. El Corredor solicita unirse al grupo de claves de la placa de número. 5. Si el corredor cumple con todas las verificaciones, comenzará a recibir las claves apropiadas. 3. El Administrador de Claves puede verificar las credenciales de los corredores en el Servicio de Control de Acceso. 4. El Administrador de Claves puede verificar que el Propietario del Tipo permita el acceso. Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo de claves al que el nodo está autorizado a acceder. Por ejemplo, una tupla <NP, suscribirse, *> autorizaría al propietario a suscribirse a eventos de matrícula con acceso a todos los atributos en los eventos publicados. La secuencia de eventos necesarios para que un corredor se una con éxito a un grupo clave se muestra en la Figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para realizar la solicitud del cliente. Es decir, si el cliente realiza una solicitud de suscripción para eventos de matrícula, tanto el cliente como el corredor local deben estar autorizados para suscribirse a eventos de matrícula. Esto se debe a que, desde la perspectiva de la red de corredores, el corredor local actúa como un intermediario para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utilizan para autorizar las solicitudes de publicación/suscripción. No hacerlo podría llevar a la situación inconsistente en la que un SHB está autorizado para realizar una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la Matrícula anterior, el corredor local que posee la capacidad mencionada está autorizado para unirse al grupo clave de Matrícula, así como a los grupos clave de todos los atributos en el tipo de evento de Matrícula. La encriptación de contenido de eventos en un sistema de publicación/suscripción multi-dominio descentralizado puede considerarse como una subcategoría de la comunicación de grupo segura. En ambos casos, el sistema de gestión de claves debe escalar bien con el número de clientes, los clientes pueden estar distribuidos en áreas geográficas extensas, puede haber altas tasas de rotación en la membresía del grupo, y todos los miembros deben estar sincronizados entre sí en tiempo para poder utilizar la misma clave de cifrado al mismo tiempo. Existen varios protocolos de gestión de claves escalables para comunicación segura en grupo [15]. Hemos implementado el protocolo del Árbol de Función Unidireccional (OFT) [8] como una prueba de concepto. Decidimos implementar OFT debido a su relativa simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de intermediarios como transporte. El protocolo OFT se basa en un árbol binario donde los participantes se encuentran en las hojas del árbol. Escalando en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, lo cual hemos verificado en nuestras simulaciones. 4.2 Actualización de claves Tradicionalmente, en los esquemas de gestión de claves de grupo, la clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente abandona el grupo o expira un temporizador. Actualizar la clave cuando un nuevo miembro se une proporciona secrecía hacia atrás, es decir, se evita que el nuevo miembro acceda a los mensajes antiguos. Refrescar la clave de manera similar cuando un miembro existente se va proporciona secreto hacia adelante, es decir, se evita que el antiguo miembro acceda a los mensajes futuros. Se emiten actualizaciones periódicas desencadenadas por temporizador para limitar el daño causado por la clave actual comprometida. Aunque los protocolos de gestión de claves de última generación son eficientes, refrescar la clave innecesariamente introduce tráfico adicional y procesamiento entre los miembros del grupo de claves. En nuestro caso, la membresía del grupo clave se basa en que el corredor posea una capacidad que lo autorice a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que, en su forma más simple, definen un período de tiempo durante el cual el certificado es válido, y en casos más complejos implican verificaciones en línea hacia el emisor. Para evitar actualizaciones innecesarias de claves, el administrador de claves examina las condiciones de validez del certificado del miembro que se une o abandona. En caso de unirse a un miembro, si el gerente puede asegurar que el certificado era válido en el momento de la actualización de clave anterior, se puede evitar una nueva actualización de clave. De manera similar, en lugar de actualizar la clave inmediatamente cuando un miembro abandona el grupo de claves, el administrador de claves puede almacenar en caché sus credenciales y actualizar la clave solo cuando las credenciales expiren. Estas situaciones están ilustradas en la Fig. 5. Se puede asumir que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio está autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad en el futuro previsible. Se implementaría un control de acceso más detallado y dinámico en el borde de la red del intermediario entre los clientes y los intermediarios que alojan a los clientes. Cuando se actualiza una clave de encriptación, la nueva clave se etiqueta con una marca de tiempo. La clave de encriptación a utilizar para un evento dado se selecciona en función de la marca de tiempo de publicación del evento. Las llaves antiguas se mantendrán durante un tiempo razonable para permitir cierta desviación del reloj. Establecer este valor es parte del protocolo de gestión de claves, aunque exactamente cuánto tiempo debe ser dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar de forma independiente por grupo de teclas si es necesario. 5. EVALUACIÓN Para evaluar el rendimiento del cifrado de contenido del evento, hemos implementado ambos enfoques de cifrado ejecutándose en nuestra implementación del middleware de publicación/suscripción Hermes. La implementación admite tres modos: contenido en texto plano, cifrado de eventos y cifrado de atributos, en un único sistema de publicación/suscripción. Realizamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 de 3.2GHz con 1GB de memoria principal. Decidimos realizar las pruebas en un simulador de eventos en lugar de en un sistema desplegado real para poder medir el tiempo total que lleva manejar todos los mensajes en el sistema. Las siguientes secciones describen con más detalle las configuraciones específicas de las pruebas y los resultados. 5.1 Sobrecarga de Extremo a Extremo La prueba de sobrecarga de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por la encriptación del contenido del evento. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor se suscribió al tipo de evento anunciado sin ningún filtro, es decir, cada publicación coincidía con la publicación del suscriptor y, por lo tanto, se entregaba al suscriptor. El test mide el tiempo combinado que se tarda en publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye tanto encriptar el contenido en el PHB como desencriptarlo en el SHB. En la prueba, el número de atributos en el tipo de evento se incrementa de 1 a 25 (el eje x). Cada atributo se establece como una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y se mide el tiempo transcurrido para derivar el rendimiento del mensaje. El test se repitió cinco veces para cada número de atributos y utilizamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que la desviación estándar no se muestra. Los mismos tests se realizaron sin encriptación de contenido, encriptación de eventos y encriptación de atributos. Como se puede ver en la Fig. 6, el cifrado del contenido del evento introduce una gran sobrecarga en comparación con no usar cifrado. El rendimiento al utilizar cifrado de atributos con un tipo de evento con un atributo es del 46% del rendimiento logrado cuando los eventos se envían en texto plano. Cuando el número de atributos aumenta, la brecha de rendimiento también aumenta: con diez atributos, el rendimiento con cifrado de atributos ha disminuido al 11.7% del rendimiento en texto plano. El cifrado de eventos es más eficiente, debido a un menor número de operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta tanto al rendimiento como lo hace el número de operaciones de encriptación individuales. La diferencia en el rendimiento con la encriptación de eventos y la encriptación de atributos con solo un atributo es causada por el mecanismo de serialización de objetos de Java: en el caso de la encriptación de eventos, se serializa toda la estructura de atributos, lo que resulta en más objetos que al serializar un único valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de empaquetado. Ten en cuenta que la implementación de EAX que utilizamos hace pasar el nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no es necesario mantener en secreto el nonce (solo que sea único), existe un posible compromiso entre tiempo y espacio que aún no hemos investigado al adjuntar atributos de nonce adicionales a los que ya se les ha aplicado este constructo OMAC. Eventos Internos del Dominio 5.2. Explicamos en la Sección 3.4 que el descifrado y cifrado del contenido del evento pueden evitarse si ambos corredores están autorizados para acceder al contenido del evento. Este test fue diseñado para demostrar que el uso del mecanismo de contenido de eventos encriptado entre dos corredores autorizados solo incurre en una pequeña sobrecarga de rendimiento. En esta prueba formamos nuevamente una red de corredores con dos corredores. 111 Programa de actualización de claves Corredor 1 uniéndose y saliendo del grupo de claves Corredor 2 uniéndose y saliendo del grupo de claves Tiempos reales de actualización de claves Tiempo Un día Las credenciales del grupo de claves de los corredores son válidas Tiempo real de unión Tiempo real de salida Un día Un día Figura 5: Cómo se ve afectado el programa de actualización de claves por la unión y salida de corredores de grupos de claves 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 Mensajes por segundo Número de atributos Sin cifrado Cifrado de atributos Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores están configurados con las mismas credenciales. El editor está vinculado a uno de los corredores y el suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtro en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para derivar el rendimiento del mensaje del sistema. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de encriptación no está incluido en las mediciones. El objetivo es modelar un entorno donde un corredor ha recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el intermediario central no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió a medida que el número de atributos en el evento publicado aumentaba de 1 a 25. Los valores de atributo en cada caso son cadenas de 30 caracteres. Cada prueba se repite cinco veces y utilizamos el promedio de todas las iteraciones en el gráfico. El mismo test fue luego repetido sin encriptación, con encriptación de eventos y con encriptación de atributos activada. Los modos encriptados siguen muy de cerca uno al otro. Predeciblemente, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente porque los eventos encriptados son de mayor tamaño, ya que incluyen tanto el texto plano como el contenido encriptado en esta prueba. La diferencia en el rendimiento es del 3.7% con un atributo y del 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede ser explicada por el recolector de basura de Java interfiriendo con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalda esta teoría. A través de la definición de múltiples tipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado del contenido del evento. El último test que realizamos fue para mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la Figura 8. El número de grupos de suscriptores se incrementa de 1 a 50 (el eje x). Para cada grupo de suscriptores n, el editor publica un evento para representar el uso de cifrado de atributos y n eventos que representan los eventos para cada grupo de suscriptores. Contamos el número de saltos que cada publicación realiza a través de la red de intermediarios (eje y). Ten en cuenta que la Fig. 8 muestra cargas de trabajo más allá de lo que esperaríamos en un uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permisos disjuntos sobre los atributos de eventos. El número de estos conjuntos puede determinarse a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado por atributo funciona mejor que el cifrado por evento incluso para un pequeño número de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso de eventos de matrícula), el recuento de saltos aumenta de 7.2 saltos para el cifrado de atributos a 16.6 saltos para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, una diferencia de un orden de magnitud. 6. TRABAJO RELACIONADO Wang et al. han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El artículo es una visión general exhaustiva de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, intenta llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al. en [1] examinan el uso del control de acceso basado en roles en sistemas de publicación/suscripción distribuidos de múltiples dominios. Su trabajo es complementario a este documento: el RBAC distribuido es una posible formalización de políticas que podría utilizar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad de eventos en el último enlace entre el suscriptor y el SHB en [10]. Ellos afirman correctamente que un enfoque de comunicación de grupo seguro es inviable en un entorno como el de publicar/suscribir que tiene membresías de grupo altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché de claves y la agrupación de suscriptores para minimizar el número de cifrados necesarios al entregar una publicación de un SHB a un conjunto de suscriptores coincidentes. En nuestro trabajo asumimos que el SHB es lo suficientemente potente como para manejar una conexión segura de TLS para cada suscriptor local. Tanto Srivatsa et al. [19] como Raiciu et al. [16] presentan mecanismos para proteger la confidencialidad de los mensajes en infraestructuras descentralizadas de publicación/suscripción. En comparación con nuestro trabajo, ambos artículos tienen como objetivo proporcionar los medios para proteger la integridad y confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red del intermediario. Raiciu et al. asumen en su trabajo que ninguno de los intermediarios en la red es de confianza y, por lo tanto, todos los eventos están encriptados desde el publicador hasta el suscriptor y que todas las coincidencias se basan en eventos encriptados. Por el contrario, asumimos que algunos de los intermediarios en el camino de una publicación son de confianza para acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También asumimos que los corredores de publicación y suscripción alojados son siempre de confianza para acceder a la publicación. Las contribuciones de Srivatsa et al. y Raiciu et al. son complementarias a las contribuciones en este artículo. Finalmente, Fiege et al. abordan el tema relacionado con la visibilidad de eventos en [6]. Si bien el trabajo se centró en el uso de alcances como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad de eventos sí se relaciona con el control de acceso en cierta medida. 7. CONCLUSIONES El cifrado del contenido del evento puede ser utilizado para hacer cumplir una política de control de acceso mientras los eventos están en tránsito en la red de intermediarios de un sistema de publicación/suscripción multi-dominio. El cifrado genera una sobrecarga, pero i) puede que no haya alternativa cuando se requiere control de acceso, y ii) la penalización en el rendimiento puede reducirse con optimizaciones de implementación, como pasar contenido en texto plano almacenado en caché junto con contenido cifrado entre intermediarios con credenciales de seguridad idénticas. Esto es especialmente apropiado si las conexiones de intermediario a intermediario están aseguradas por defecto, de modo que el espionaje de cables no sea un problema. El cifrado a nivel de atributo se puede implementar para hacer cumplir políticas de control de acceso detalladas. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los intermediarios parcialmente autorizados implementar enrutamiento basado en contenido basado en los atributos a los que tienen acceso. Nuestros experimentos muestran que i) al almacenar en caché el contenido de texto plano y cifrado cuando es posible, podemos ofrecer un rendimiento comparable a los eventos de texto plano, y ii) que la encriptación de atributos dentro de un evento incurre en mucho menos sobrecarga que definir tipos de eventos separados para los atributos que necesitan diferentes niveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer un equilibrio entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo del EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919). 114 8. REFERENCIAS [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurando la publicación/suscripción para sistemas multi-dominio. En G. Alonso, editor, Middleware, volumen 3790 de las Notas de Conferencia en Ciencias de la Computación, páginas 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, y D. Wagner. Eax: Un modo de autenticación y cifrado convencional. Archivo de Criptología ePrint, Reporte 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de amplia área. ACM Transactions on Computer Systems, 19(3):332-383, ago. 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. SCRIBE: Una infraestructura de multidifusión a nivel de aplicación a gran escala y descentralizada. Revista IEEE sobre Áreas Seleccionadas en Comunicaciones (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Grupo de Trabajo de Ingeniería de Internet, enero de 1999. [6] L. Fiege, M. Mezini, G. M uhl y A. P. Buchmann. Diseñando sistemas basados en eventos con alcances. En ECOOP 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag. [7] T. Iwata y I. Iurosawa. OMAC: One-key CBC MAC, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento de clave en grupos grandes y dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, Laboratorios TIS en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Estándares y Tecnología (NIST). Estándar de Cifrado Avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de publicación y suscripción basados en contenido. En Actas del 10º Simposio de Seguridad USENIX. USENIX, ago. 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y multi-dominio. En SEM 05: Actas del 5º taller internacional sobre ingeniería de software y middleware, páginas 98-105, Nueva York, NY, EE. UU., septiembre de 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. En Actas del Simposio sobre Aplicaciones y la Internet (SAINT 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE. [13] P. R. Pietzuch y J. M. Bacon. Hermes: Una arquitectura middleware distribuida basada en eventos. En Actas del 1er Taller Internacional sobre Sistemas Basados en Eventos Distribuidos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE. [14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware orientado a mensajes confiable y escalable. En M. Endler y D. Schmidt, editores, Actas del 4to Congreso Internacional. Conferencia sobre Middleware (Middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Springer. [15] S. Rafaeli y D. Hutchison. Una encuesta sobre la gestión de claves para la comunicación segura en grupo. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en infraestructuras de publicación/suscripción basadas en contenido. En Securecomm 06: Actas de la Segunda Conferencia Internacional IEEE/CreatNet sobre Seguridad y Privacidad en Redes de Comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Negro, y T. Krovetz. OCB: un modo de operación de cifrado de bloque para una eficiente encriptación autenticada. En la Conferencia ACM sobre Seguridad Informática y de Comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando servicios de superposición de publicación-suscripción con eventguard. En CCS 05: Actas de la 12ª conferencia de ACM sobre seguridad informática y de comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, y A. L. Wolf. Problemas de seguridad y requisitos en sistemas de publicación-suscripción a escala de internet. En Actas de la 35ª Conferencia Internacional de Ciencias de Sistemas de Hawái (HICSS02), Isla Grande, HI, EE. UU., 2002. IEEE. [21] D. Whitfield y M. Hellman. Privacidad y autenticación: Una introducción a la criptografía. En Actas del IEEE, volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contraataque con CBC-MAC (CCM). RFC 3610, Grupo de Trabajo de Ingeniería de Internet, septiembre de 2003. 115",
    "original_sentences": [
        "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
        "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
        "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
        "As the number of participants in the network increases, security becomes an increasing concern.",
        "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
        "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
        "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
        "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
        "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
        "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
        "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
        "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
        "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
        "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
        "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
        "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
        "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
        "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
        "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
        "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
        "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
        "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
        "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
        "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
        "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
        "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
        "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
        "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
        "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
        "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
        "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
        "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
        "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
        "We have included Detective Smith as a subscriber in this domain.",
        "Congestion Charge Service Domain.",
        "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
        "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
        "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
        "PITO Domain.",
        "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
        "It is the event type owner in this particular scenario.",
        "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
        "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
        "Our approach is to apply encryption to the individual attributes of events.",
        "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
        "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
        "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
        "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
        "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
        "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
        "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
        "However this approach will often not be acceptable in Internet-scale systems.",
        "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
        "Publications will be encrypted with their event type specific encryption keys.",
        "By controlling access to the encryption keys, we can control access to the event types.",
        "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
        "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
        "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
        "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
        "We analytically evaluate the performance of our proposal in Section 5.",
        "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
        "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
        "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
        "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
        "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
        "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
        "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
        "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
        "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
        "A broker network can have a static topology (e.g.",
        "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
        "Scribe [4] and Hermes [13]).",
        "Our proposed approach will work in both cases.",
        "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
        "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
        "Our work is based on the Hermes system.",
        "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
        "In other words, each publication is an instance of a particular predefined event type.",
        "Publications are type checked at the local broker of each publisher.",
        "Our attribute level encryption scheme assumes that events are typed.",
        "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
        "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
        "The type identifier is the SHA-1 hash of the name of the event type.",
        "It is used to route the publication through the event broker network.",
        "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
        "A useful side effect of secure event types are their globally unique event type and attribute names.",
        "These names can be referred to by access control policies.",
        "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
        "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
        "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
        "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
        "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
        "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
        "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
        "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
        "Unauthorised event brokers are not allowed to join the broker network.",
        "Similarly unauthorised event clients are not allowed to connect to an event broker.",
        "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
        "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
        "Thus we assume that these clients are not a threat.",
        "The event client relies completely on the local event broker for access to the broker network.",
        "Therefore the event client is unable to access any events without the assistance of the local broker.",
        "The brokers on the other hand are able to analyse all events in the system that pass through them.",
        "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
        "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
        "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
        "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
        "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
        "Effectively we move the responsibility for access control from the broker network to the key managers.",
        "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
        "This allows us to implement the event content encryption within the broker network without involving the clients.",
        "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
        "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
        "This is discussed in Sect. 4.2 having to decrypt the same event.",
        "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
        "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
        "We can implement encryption either at the event level or the attribute level.",
        "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
        "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
        "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
        "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
        "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
        "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
        "Each event type in the system will have its own individual encryption key.",
        "Keys are refreshed, as discussed in Sect. 4.2.",
        "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
        "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
        "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
        "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
        "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
        "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
        "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
        "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
        "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
        "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
        "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
        "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
        "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
        "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
        "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
        "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
        "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
        "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
        "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
        "The event type owner can therefore allow clients to have different levels of access to the same event type.",
        "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
        "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
        "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
        "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
        "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
        "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
        "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
        "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
        "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
        "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
        "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
        "This would again reveal information about the event content to the unauthorised broker.",
        "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
        "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
        "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
        "Each attribute filter is encrypted individually, much as when encrypting a publication.",
        "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
        "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
        "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
        "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
        "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
        "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
        "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
        "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
        "Therefore it is probable that the rendezvous node will reside outside the current domain.",
        "This situation is illustrated in the event dissemination tree in Fig. 2.",
        "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
        "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
        "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
        "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
        "The next broker can look the attribute up from the cache instead of having to decrypt it.",
        "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
        "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
        "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
        "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
        "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
        "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
        "The EAX mode is compatible with any block cipher.",
        "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
        "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
        "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
        "Effectively CTR mode transforms a block cipher into a stream cipher.",
        "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
        "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
        "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
        "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
        "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
        "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
        "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
        "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
        "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
        "The broker is responsible for ensuring that the timestamps increase monotonically.",
        "The authentication tag is appended to the produced cipher text to create a two-tuple.",
        "With event encryption a single tag is created for the encrypted event.",
        "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
        "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
        "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
        "EAX also supports including unencrypted associated data in the tag calculation.",
        "The integrity of this data is protected, but it is still readable by everyone.",
        "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
        "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
        "We have included the event type identifier as associated data in order to protect its integrity.",
        "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
        "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
        "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
        "The CCM mode is the predecessor of the EAX mode.",
        "It was developed in order to provide a free alternative to OCB.",
        "The EAX was developed later to address some issues with CCM [18].",
        "Similarly to EAX, CCM is also a two-pass mode. 4.",
        "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
        "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
        "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
        "By controlling access to the encryption key we effectively control access to the encrypted event content.",
        "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
        "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
        "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
        "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
        "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
        "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
        "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
        "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
        "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
        "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
        "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
        "Both the client hosting broker and the client must be authorised to make the clients request.",
        "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
        "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
        "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
        "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
        "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
        "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
        "There are a number of scalable key management protocols for secure group communication [15].",
        "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
        "We chose to implement OFT, because of its relatively simplicity and good performance.",
        "Our implementation uses the same structured overlay network used by the broker network as a transport.",
        "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
        "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
        "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
        "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
        "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
        "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
        "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
        "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
        "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
        "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
        "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
        "These situations are both illustrated in Fig.5.",
        "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
        "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
        "When an encryption key is refreshed the new key is tagged with a timestamp.",
        "The encryption key to use for a given event is selected based on the events publication timestamp.",
        "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
        "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
        "It can be configured independently per key group if necessary. 5.",
        "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
        "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
        "We ran three performance tests in a discrete event simulator.",
        "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
        "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
        "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
        "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
        "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
        "The test measures the combined time it takes to publish and deliver 100,000 events.",
        "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
        "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
        "Each attribute is set to a 30 character string.",
        "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
        "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
        "The same tests were run with no content encryption, event encryption, and attribute encryption.",
        "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
        "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
        "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
        "Event encryption fares better, because of fewer encryption operations.",
        "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
        "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
        "A more efficient implementation would provide its own marshalling mechanism.",
        "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
        "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
        "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
        "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
        "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
        "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
        "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
        "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
        "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
        "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
        "The attribute values in each case are 30 character strings.",
        "Each test is repeated five times, and we use the average of all iterations in the graph.",
        "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
        "The encrypted modes follow each other very closely.",
        "Predictably, the plaintext mode performs a little better for all attribute counts.",
        "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
        "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
        "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
        "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
        "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
        "In the test we form a broker network of 2000 brokers.",
        "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
        "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
        "Each subscriber group has its own event type in the test.",
        "The outcome of this test is shown in Fig. 8.",
        "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
        "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
        "We count the number of hops each publication makes through the broker network (y-axis).",
        "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
        "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
        "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
        "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
        "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
        "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
        "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
        "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
        "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
        "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
        "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
        "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
        "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
        "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
        "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
        "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
        "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
        "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
        "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
        "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
        "Finally, Fiege et al. address the related topic of event visibility in [6].",
        "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
        "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
        "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
        "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
        "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
        "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
        "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
        "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
        "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
        "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
        "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
        "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
        "Securing publish/subscribe for multi-domain systems.",
        "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
        "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
        "Eax: A conventional authenticated-encryption mode.",
        "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
        "Design and evaluation of a wide-area event notification service.",
        "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
        "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
        "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
        "The TLS protocol, version 1.0.",
        "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
        "Engineering event-based systems with scopes.",
        "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
        "Springer-Verlag. [7] T. Iwata and I.",
        "A. Iurosawa.",
        "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
        "Key establishment in large dynamic groups using one-way function trees.",
        "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
        "Advanced Encryption Standard (AES).",
        "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
        "Secure distribution of events in content-based publish subscribe systems.",
        "In Proc. of the 10th USENIX Security Symposium.",
        "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
        "Secure event types in content-based, multi-domain publish/subscribe systems.",
        "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
        "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
        "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
        "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
        "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
        "Hermes: A distributed event-based middleware architecture.",
        "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
        "IEEE. [14] P. R. Pietzuch and S. Bhola.",
        "Congestion control in a reliable scalable message-oriented middleware.",
        "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
        "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
        "Springer. [15] S. Rafaeli and D. Hutchison.",
        "A survey of key management for secure group communication.",
        "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
        "Enabling confidentiality in content-based publish/subscribe infrastructures.",
        "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
        "Black, and T. Krovetz.",
        "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
        "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
        "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
        "Securing publish-subscribe overlay services with eventguard.",
        "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
        "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
        "Security issues and requirements in internet-scale publish-subscribe systems.",
        "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
        "IEEE. [21] D. Whitfield and M. Hellman.",
        "Privacy and authentication: An introduction to cryptography.",
        "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
        "Counter with CBC-MAC (CCM).",
        "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
    ],
    "translated_text_sentences": [
        "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W.",
        "Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área.",
        "Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes.",
        "A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente.",
        "Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos.",
        "La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red.",
        "Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias.",
        "Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción.",
        "Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1.",
        "La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos.",
        "Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos.",
        "En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red).",
        "Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos.",
        "Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad.",
        "Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad.",
        "Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente.",
        "En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción.",
        "La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos.",
        "Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción.",
        "El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente.",
        "Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores.",
        "Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común.",
        "Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias.",
        "Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar).",
        "Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado.",
        "Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes.",
        "El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización.",
        "Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores.",
        "Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios.",
        "Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor.",
        "Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos.",
        "La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento.",
        "Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana.",
        "Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres.",
        "Hemos incluido al Detective Smith como suscriptor en este dominio.",
        "Dominio del Servicio de Cargo por Congestión.",
        "Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio.",
        "Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana.",
        "El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento.",
        "Dominio PITO.",
        "La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía.",
        "Es el propietario del tipo de evento en este escenario particular.",
        "El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados.",
        "Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes.",
        "Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos.",
        "De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles.",
        "En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles.",
        "En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado.",
        "Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida.",
        "Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico.",
        "El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso.",
        "Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él.",
        "Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet.",
        "Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento.",
        "Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento.",
        "Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos.",
        "El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado.",
        "Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2.",
        "En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo.",
        "La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio.",
        "Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5.",
        "Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales.",
        "ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados.",
        "Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos.",
        "Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado.",
        "El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios.",
        "Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores.",
        "Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente.",
        "En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente.",
        "Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía.",
        "Una red de corredores puede tener una topología estática (por ejemplo,",
        "Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo,",
        "Escribe [4] y Hermes [13]).",
        "Nuestro enfoque propuesto funcionará en ambos casos.",
        "Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica.",
        "Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo.",
        "Nuestro trabajo se basa en el sistema Hermes.",
        "Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos.",
        "En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular.",
        "Las publicaciones son verificadas en el corredor local de cada editorial.",
        "Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados.",
        "Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica.",
        "Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos.",
        "El identificador de tipo es el hash SHA-1 del nombre del tipo de evento.",
        "Se utiliza para dirigir la publicación a través de la red del intermediario de eventos.",
        "Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales.",
        "Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos.",
        "Estos nombres pueden ser referidos por políticas de control de acceso.",
        "En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12].",
        "El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder.",
        "El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado.",
        "Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado.",
        "En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización.",
        "Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo.",
        "Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema.",
        "En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción.",
        "Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores.",
        "Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos.",
        "Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte.",
        "La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción.",
        "Por lo tanto, asumimos que estos clientes no representan una amenaza.",
        "El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor.",
        "Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local.",
        "Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos.",
        "Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo).",
        "Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme.",
        "Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario.",
        "Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3.",
        "CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado.",
        "Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves.",
        "Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente.",
        "Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes.",
        "Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada.",
        "Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave.",
        "Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento.",
        "Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware.",
        "Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción.",
        "Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo.",
        "El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido.",
        "El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor.",
        "En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo.",
        "Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano.",
        "El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios.",
        "El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento.",
        "Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual.",
        "Las claves se actualizan, como se discute en la Sección 4.2.",
        "Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>.",
        "Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido.",
        "Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo.",
        "Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes.",
        "El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos.",
        "Esto resulta en una ventaja de rendimiento significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado.",
        "La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados.",
        "Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas.",
        "Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso.",
        "Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>.",
        "Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>.",
        "El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento.",
        "El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación.",
        "En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado.",
        "En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo.",
        "Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución.",
        "Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña.",
        "Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5.",
        "La ventaja del cifrado de atributos es que el propietario del tipo puede controlar el acceso al tipo de evento a nivel de atributo.",
        "El propietario del tipo de evento puede permitir que los clientes tengan diferentes niveles de acceso al mismo tipo de evento.",
        "Además, el cifrado a nivel de atributo permite el enrutamiento basado en el contenido en casos en los que un intermediario solo tiene acceso a algunos de los atributos del evento, reduciendo así el impacto general de la entrega de eventos en la red de intermediarios.",
        "Por lo tanto, la elección entre cifrado de eventos y cifrado de atributos es un compromiso entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida.",
        "La expresividad proporcionada por el cifrado de atributos puede ser emulada introduciendo un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización.",
        "El editor publicaría entonces una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado.",
        "Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective.",
        "Este enfoque podría volverse difícil de gestionar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría un gran número de tipos de eventos y las políticas y suscripciones podrían cambiar dinámicamente.",
        "Este enfoque crea un gran número de eventos adicionales que deben ser enrutados a través de la red, como se muestra en la Sección 5.3. 3.3 Cifrado de suscripciones. Para proteger completamente la confidencialidad del contenido de los eventos, también debemos cifrar las suscripciones.",
        "Las suscripciones encriptadas garantizan: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido del evento al monitorear qué suscripciones coincide con un evento dado.",
        "Por ejemplo, en el primer caso un corredor no autorizado puede crear suscripciones con filtros adecuadamente elegidos, dirigirlas hacia la raíz del árbol de difusión de eventos y monitorear qué eventos le fueron entregados como coincidentes con la suscripción.",
        "El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento incluso si el evento seguía encriptado.",
        "En el segundo caso, aunque un corredor no autorizado no pudiera crear suscripciones por sí mismo, aún podría revisar las suscripciones que se dirigían a través de él, tomar nota de los filtros de esas suscripciones y monitorear qué eventos le son entregados por corredores aguas arriba que coincidan con los filtros de suscripción.",
        "Esto revelaría nuevamente información sobre el contenido del evento al corredor no autorizado.",
        "En el caso de cifrar eventos completos, también ciframos el filtro de suscripción completo.",
        "El identificador del tipo de evento en la suscripción debe mantenerse intacto para permitir a los corredores de bolsa dirigir los eventos según su tema cuando no estén autorizados a acceder al filtro.",
        "En tales casos, se requiere que el corredor no autorizado asuma que los eventos de ese tipo coinciden con todas las expresiones de filtro.",
        "Cada filtro de atributo se encripta de forma individual, al igual que al encriptar una publicación.",
        "Además del identificador del tipo de evento, los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifren esos filtros a los que tienen acceso, y enrutan el evento en función de si coincide con los filtros descifrados. 3.4 Evitar Operaciones Criptográficas Innecesarias No es necesario cifrar el contenido del evento si el corredor actual y el siguiente corredor en el árbol de difusión de eventos tienen las mismas credenciales con respecto al tipo de evento en cuestión.",
        "Por ejemplo, se puede asumir que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, siempre que el siguiente corredor sea miembro del mismo dominio, el evento puede ser enrutado hacia él en texto plano.",
        "Con el cifrado de atributos es posible que el corredor vecino esté autorizado para acceder a un subconjunto de los atributos descifrados, en cuyo caso los atributos a los que el corredor no está autorizado a acceder se le pasarían cifrados.",
        "Para saber cuándo es seguro pasar el evento en forma de texto plano, los corredores intercambian credenciales como parte de un saludo cuando se conectan entre sí.",
        "En los casos en que los corredores puedan verificar las credenciales de los demás, los agregarán a la tabla de enrutamiento para futuras referencias.",
        "Si un corredor adquiere nuevas credenciales después del saludo inicial, presentará estas nuevas credenciales a sus vecinos mientras esté en sesión.",
        "Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, ya que es más económico cifrar el evento una vez en la raíz del árbol de difusión de eventos.",
        "En Hermes, el nodo de encuentro para cada tipo de evento se selecciona de forma uniformemente aleatoria (el nombre del tipo de evento se hashea con el algoritmo de hash SHA-1 para producir el tipo de evento 108 PHB IBIB IB SHB RN IB SHB Figura 2: La dirección de los nodos está distribuida de manera uniforme en toda la red, por lo que los nodos de encuentro pueden encontrarse fuera del dominio que posee un tipo de evento IB IB SHBPHBP S Encripta Filtra desde la caché Desencripta, entrega Desencripta, filtra Texto plano Caché de texto plano (la mayoría de los datos) Caché de texto plano (algunos datos) Diferentes dominios Cifrado CLAVE Figura 3: Almacenamiento en caché de datos desencriptados para aumentar la eficiencia al entregar a pares con privilegios de seguridad equivalentes, luego el identificador se utiliza para seleccionar el nodo de encuentro en la red superpuesta estructurada).",
        "Por lo tanto, es probable que el nodo de encuentro resida fuera del dominio actual.",
        "Esta situación está ilustrada en el árbol de difusión del evento en la Figura 2.",
        "Incluso con aplicaciones internas del dominio, donde el evento puede ser enviado desde el publicador a todos los suscriptores en forma de texto plano, el contenido del evento en la mayoría de los casos tendrá que ser encriptado para poder ser enviado al nodo de encuentro.",
        "Para evitar desciframientos innecesarios, adjuntamos una caché de contenido en texto plano a los eventos encriptados.",
        "Un corredor llena la caché con contenido que ha descifrado, por ejemplo, para filtrar en el contenido.",
        "El caché es accedido por el intermediario cuando entrega un evento a un suscriptor local después de verificar primero si el evento coincide con el filtro de suscripción, pero el intermediario también envía el caché al siguiente intermediario con el evento encriptado.",
        "El siguiente corredor puede buscar el atributo en la caché en lugar de tener que descifrarlo.",
        "Si el evento se envía a un corredor no autorizado, la caché se descartará antes de que se envíe el evento.",
        "Obviamente, enviar la caché con el evento encriptado aumentará el costo de comunicación, pero esto se compensa con el ahorro en el procesamiento de encriptación/desencriptación.",
        "En la Fig. 3 vemos dos flujos de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre intermediarios en dos dominios diferentes.",
        "Mostramos en la Sección 5.2 que el costo adicional de enviar mensajes encriptados con una caché de texto completo incurre en casi ningún costo adicional en comparación con el envío de mensajes de texto plano. 3.5 Implementación En nuestra implementación hemos utilizado el modo de operación EAX [2] al encriptar eventos, atributos y filtros de suscripción.",
        "EAX es un modo de operación para cifradores de bloque, también llamado algoritmo de Cifrado Autenticado con Datos Asociados (AEAD) que proporciona simultáneamente confidencialidad de datos y protección de integridad.",
        "El algoritmo implementa un esquema de dos pasos donde durante el primer paso se encripta el texto plano, y en el segundo paso se genera un código de autenticación de mensaje (MAC) para los datos encriptados.",
        "El modo EAX es compatible con cualquier cifrador de bloques.",
        "Decidimos utilizar el algoritmo Estándar de Encriptación Avanzada (AES) en nuestra implementación, debido a su estatus estándar y al hecho de que el algoritmo ha sido sometido a un exhaustivo criptoanálisis durante su existencia y hasta el momento no se han encontrado vulnerabilidades graves.",
        "Además de proporcionar confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en modo de contador (modo CTR) [21].",
        "Un cifrado de bloque en modo de contador se utiliza para producir una secuencia de bits de clave que luego se XORean con el texto plano.",
        "El modo CTR transforma efectivamente un cifrado por bloques en un cifrado de flujo.",
        "La ventaja de los cifrados de flujo es que el texto cifrado tiene la misma longitud que el texto plano, mientras que con los cifrados de bloque el texto plano debe ser rellenado a un múltiplo de la longitud del bloque del cifrado de bloque (por ejemplo, el tamaño de bloque de AES es de 128 bits).",
        "Evitar el relleno es muy importante en el cifrado de atributos, ya que el relleno podría aumentar el tamaño del atributo de manera desproporcionada.",
        "Por ejemplo, un solo entero podría tener una longitud de 32 bits, que se rellenaría a 128 bits si usáramos un cifrado por bloques.",
        "Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno necesario para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud total del texto plano.",
        "En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número usado una vez), una clave de cifrado y el texto plano, y devuelve el texto cifrado y una etiqueta de autenticación.",
        "En el modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve ya sea el texto plano, o un error si la verificación de autenticación falló.",
        "El nonce se expande a la longitud del bloque del cifrado de bloque subyacente al pasar a través de una construcción OMAC (ver [7]).",
        "Es importante que los valores de nonce particulares no se reutilicen, de lo contrario, el cifrado de bloques en modo CTR produciría una secuencia de clave idéntica.",
        "En nuestra implementación utilizamos la marca de tiempo del evento definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) seguida de la identidad de PHB (es decir, la clave pública) como nonce.",
        "El corredor es responsable de asegurarse de que las marcas de tiempo aumenten de forma monótona.",
        "La etiqueta de autenticación se añade al texto cifrado producido para crear un par ordenado.",
        "Con el cifrado de eventos se crea una única etiqueta para el evento cifrado.",
        "Con el cifrado de atributo 109, cada atributo se cifra y autentica por separado, y todos tienen sus etiquetas individuales.",
        "La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer un equilibrio entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación añadida.",
        "Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero se podría hacer que la longitud de la etiqueta sea un parámetro definido por el publicador/suscriptor para cada publicación/suscripción o incluirlo en la definición del tipo de evento para hacerlo un parámetro específico del tipo.",
        "EAX también admite incluir datos asociados no encriptados en el cálculo de la etiqueta.",
        "La integridad de estos datos está protegida, pero sigue siendo legible por todos.",
        "Esta característica podría ser utilizada con cifrado de eventos en casos donde parte del contenido del evento es público y, por lo tanto, sería útil para enrutamiento basado en contenido.",
        "La integridad de los datos seguiría protegida contra cambios, pero los intermediarios no autorizados podrían aplicar filtros.",
        "Hemos incluido el identificador del tipo de evento como datos asociados para proteger su integridad.",
        "Otros algoritmos AEAD incluyen el modo de libro de códigos de desplazamiento (OCB) [17] y el modo de contador con CBC-MAC (CCM) [22].",
        "A diferencia del modo EAX, el modo OCB solo requiere un paso sobre el texto plano, lo que lo hace aproximadamente el doble de rápido que EAX.",
        "Desafortunadamente, el modo OCB tiene una solicitud de patente en los Estados Unidos, lo que restringe su uso.",
        "El modo CCM es el predecesor del modo EAX.",
        "Fue desarrollado con el fin de proporcionar una alternativa gratuita a OCB.",
        "El EAX se desarrolló más tarde para abordar algunos problemas con CCM [18].",
        "De manera similar a EAX, CCM también es un modo de dos pasadas. 4.",
        "GESTIÓN DE CLAVES En ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador del atributo).",
        "Ese identificador se utiliza para determinar la clave de encriptación que se debe usar al encriptar o desencriptar el contenido.",
        "Cada tipo de evento, en el cifrado de eventos, y atributo, en el cifrado de atributos, tiene su propia clave de cifrado individual.",
        "Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado.",
        "Para controlar el acceso a las claves de cifrado, formamos un grupo de claves de intermediarios para cada clave de cifrado individual.",
        "El grupo clave se utiliza para actualizar la clave cuando sea necesario y para entregar la nueva clave a todos los miembros actuales del grupo clave.",
        "El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicita unirse al grupo clave esté autorizado para hacerlo.",
        "Por lo tanto, el administrador del grupo clave debe ser confiable por el propietario del tipo para hacer cumplir la política de control de acceso.",
        "Suponemos que el administrador del grupo clave es o bien un tercero de confianza o, alternativamente, un miembro del dominio de propietarios del tipo.",
        "En [12] Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio.",
        "El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo posee un conjunto de capacidades que definen la autoridad otorgada a ese nodo.",
        "La autoridad para acceder a un tipo de evento específico es otorgada por el propietario de ese tipo al emitir una capacidad a un nodo.",
        "La capacidad define el tipo de evento, la acción y los atributos que el Propietario del Tipo, el Corredor, y el Administrador de Claves deben seguir. 1. Conceder autorización para la clave de la placa de número. 2. El Corredor solicita unirse al grupo de claves de la placa de número. 5. Si el corredor cumple con todas las verificaciones, comenzará a recibir las claves apropiadas. 3. El Administrador de Claves puede verificar las credenciales de los corredores en el Servicio de Control de Acceso. 4. El Administrador de Claves puede verificar que el Propietario del Tipo permita el acceso. Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo de claves al que el nodo está autorizado a acceder.",
        "Por ejemplo, una tupla <NP, suscribirse, *> autorizaría al propietario a suscribirse a eventos de matrícula con acceso a todos los atributos en los eventos publicados.",
        "La secuencia de eventos necesarios para que un corredor se una con éxito a un grupo clave se muestra en la Figura 4.",
        "Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para realizar la solicitud del cliente.",
        "Es decir, si el cliente realiza una solicitud de suscripción para eventos de matrícula, tanto el cliente como el corredor local deben estar autorizados para suscribirse a eventos de matrícula.",
        "Esto se debe a que, desde la perspectiva de la red de corredores, el corredor local actúa como un intermediario para el cliente.",
        "Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utilizan para autorizar las solicitudes de publicación/suscripción.",
        "No hacerlo podría llevar a la situación inconsistente en la que un SHB está autorizado para realizar una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos.",
        "En el ejemplo de la Matrícula anterior, el corredor local que posee la capacidad mencionada está autorizado para unirse al grupo clave de Matrícula, así como a los grupos clave de todos los atributos en el tipo de evento de Matrícula. La encriptación de contenido de eventos en un sistema de publicación/suscripción multi-dominio descentralizado puede considerarse como una subcategoría de la comunicación de grupo segura.",
        "En ambos casos, el sistema de gestión de claves debe escalar bien con el número de clientes, los clientes pueden estar distribuidos en áreas geográficas extensas, puede haber altas tasas de rotación en la membresía del grupo, y todos los miembros deben estar sincronizados entre sí en tiempo para poder utilizar la misma clave de cifrado al mismo tiempo.",
        "Existen varios protocolos de gestión de claves escalables para comunicación segura en grupo [15].",
        "Hemos implementado el protocolo del Árbol de Función Unidireccional (OFT) [8] como una prueba de concepto.",
        "Decidimos implementar OFT debido a su relativa simplicidad y buen rendimiento.",
        "Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de intermediarios como transporte.",
        "El protocolo OFT se basa en un árbol binario donde los participantes se encuentran en las hojas del árbol.",
        "Escalando en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, lo cual hemos verificado en nuestras simulaciones. 4.2 Actualización de claves Tradicionalmente, en los esquemas de gestión de claves de grupo, la clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente abandona el grupo o expira un temporizador.",
        "Actualizar la clave cuando un nuevo miembro se une proporciona secrecía hacia atrás, es decir, se evita que el nuevo miembro acceda a los mensajes antiguos.",
        "Refrescar la clave de manera similar cuando un miembro existente se va proporciona secreto hacia adelante, es decir, se evita que el antiguo miembro acceda a los mensajes futuros.",
        "Se emiten actualizaciones periódicas desencadenadas por temporizador para limitar el daño causado por la clave actual comprometida.",
        "Aunque los protocolos de gestión de claves de última generación son eficientes, refrescar la clave innecesariamente introduce tráfico adicional y procesamiento entre los miembros del grupo de claves.",
        "En nuestro caso, la membresía del grupo clave se basa en que el corredor posea una capacidad que lo autorice a unirse al grupo clave.",
        "La capacidad tiene un conjunto de condiciones de validez que, en su forma más simple, definen un período de tiempo durante el cual el certificado es válido, y en casos más complejos implican verificaciones en línea hacia el emisor.",
        "Para evitar actualizaciones innecesarias de claves, el administrador de claves examina las condiciones de validez del certificado del miembro que se une o abandona.",
        "En caso de unirse a un miembro, si el gerente puede asegurar que el certificado era válido en el momento de la actualización de clave anterior, se puede evitar una nueva actualización de clave.",
        "De manera similar, en lugar de actualizar la clave inmediatamente cuando un miembro abandona el grupo de claves, el administrador de claves puede almacenar en caché sus credenciales y actualizar la clave solo cuando las credenciales expiren.",
        "Estas situaciones están ilustradas en la Fig. 5.",
        "Se puede asumir que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio está autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad en el futuro previsible.",
        "Se implementaría un control de acceso más detallado y dinámico en el borde de la red del intermediario entre los clientes y los intermediarios que alojan a los clientes.",
        "Cuando se actualiza una clave de encriptación, la nueva clave se etiqueta con una marca de tiempo.",
        "La clave de encriptación a utilizar para un evento dado se selecciona en función de la marca de tiempo de publicación del evento.",
        "Las llaves antiguas se mantendrán durante un tiempo razonable para permitir cierta desviación del reloj.",
        "Establecer este valor es parte del protocolo de gestión de claves, aunque exactamente cuánto tiempo debe ser dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red.",
        "Se puede configurar de forma independiente por grupo de teclas si es necesario. 5.",
        "EVALUACIÓN Para evaluar el rendimiento del cifrado de contenido del evento, hemos implementado ambos enfoques de cifrado ejecutándose en nuestra implementación del middleware de publicación/suscripción Hermes.",
        "La implementación admite tres modos: contenido en texto plano, cifrado de eventos y cifrado de atributos, en un único sistema de publicación/suscripción.",
        "Realizamos tres pruebas de rendimiento en un simulador de eventos discretos.",
        "El simulador se ejecutó en una estación de trabajo Intel P4 de 3.2GHz con 1GB de memoria principal.",
        "Decidimos realizar las pruebas en un simulador de eventos en lugar de en un sistema desplegado real para poder medir el tiempo total que lleva manejar todos los mensajes en el sistema.",
        "Las siguientes secciones describen con más detalle las configuraciones específicas de las pruebas y los resultados. 5.1 Sobrecarga de Extremo a Extremo La prueba de sobrecarga de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por la encriptación del contenido del evento.",
        "Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro.",
        "El suscriptor se suscribió al tipo de evento anunciado sin ningún filtro, es decir, cada publicación coincidía con la publicación del suscriptor y, por lo tanto, se entregaba al suscriptor.",
        "El test mide el tiempo combinado que se tarda en publicar y entregar 100,000 eventos.",
        "Si el contenido está encriptado, esto incluye tanto encriptar el contenido en el PHB como desencriptarlo en el SHB.",
        "En la prueba, el número de atributos en el tipo de evento se incrementa de 1 a 25 (el eje x).",
        "Cada atributo se establece como una cadena de 30 caracteres.",
        "Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y se mide el tiempo transcurrido para derivar el rendimiento del mensaje.",
        "El test se repitió cinco veces para cada número de atributos y utilizamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que la desviación estándar no se muestra.",
        "Los mismos tests se realizaron sin encriptación de contenido, encriptación de eventos y encriptación de atributos.",
        "Como se puede ver en la Fig. 6, el cifrado del contenido del evento introduce una gran sobrecarga en comparación con no usar cifrado.",
        "El rendimiento al utilizar cifrado de atributos con un tipo de evento con un atributo es del 46% del rendimiento logrado cuando los eventos se envían en texto plano.",
        "Cuando el número de atributos aumenta, la brecha de rendimiento también aumenta: con diez atributos, el rendimiento con cifrado de atributos ha disminuido al 11.7% del rendimiento en texto plano.",
        "El cifrado de eventos es más eficiente, debido a un menor número de operaciones de cifrado.",
        "El aumento en la cantidad de datos encriptados no afecta tanto al rendimiento como lo hace el número de operaciones de encriptación individuales.",
        "La diferencia en el rendimiento con la encriptación de eventos y la encriptación de atributos con solo un atributo es causada por el mecanismo de serialización de objetos de Java: en el caso de la encriptación de eventos, se serializa toda la estructura de atributos, lo que resulta en más objetos que al serializar un único valor de atributo.",
        "Una implementación más eficiente proporcionaría su propio mecanismo de empaquetado.",
        "Ten en cuenta que la implementación de EAX que utilizamos hace pasar el nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad.",
        "Dado que no es necesario mantener en secreto el nonce (solo que sea único), existe un posible compromiso entre tiempo y espacio que aún no hemos investigado al adjuntar atributos de nonce adicionales a los que ya se les ha aplicado este constructo OMAC. Eventos Internos del Dominio 5.2. Explicamos en la Sección 3.4 que el descifrado y cifrado del contenido del evento pueden evitarse si ambos corredores están autorizados para acceder al contenido del evento.",
        "Este test fue diseñado para demostrar que el uso del mecanismo de contenido de eventos encriptado entre dos corredores autorizados solo incurre en una pequeña sobrecarga de rendimiento.",
        "En esta prueba formamos nuevamente una red de corredores con dos corredores. 111 Programa de actualización de claves Corredor 1 uniéndose y saliendo del grupo de claves Corredor 2 uniéndose y saliendo del grupo de claves Tiempos reales de actualización de claves Tiempo Un día Las credenciales del grupo de claves de los corredores son válidas Tiempo real de unión Tiempo real de salida Un día Un día Figura 5: Cómo se ve afectado el programa de actualización de claves por la unión y salida de corredores de grupos de claves 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 Mensajes por segundo Número de atributos Sin cifrado Cifrado de atributos Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores están configurados con las mismas credenciales.",
        "El editor está vinculado a uno de los corredores y el suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtro en su suscripción.",
        "El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para derivar el rendimiento del mensaje del sistema.",
        "El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de encriptación no está incluido en las mediciones.",
        "El objetivo es modelar un entorno donde un corredor ha recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado.",
        "En este escenario, el intermediario central no necesita descifrar ni cifrar el contenido del evento.",
        "Como se muestra en la Fig. 2, el tiempo transcurrido se midió a medida que el número de atributos en el evento publicado aumentaba de 1 a 25.",
        "Los valores de atributo en cada caso son cadenas de 30 caracteres.",
        "Cada prueba se repite cinco veces y utilizamos el promedio de todas las iteraciones en el gráfico.",
        "El mismo test fue luego repetido sin encriptación, con encriptación de eventos y con encriptación de atributos activada.",
        "Los modos encriptados siguen muy de cerca uno al otro.",
        "Predeciblemente, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos.",
        "La diferencia puede explicarse parcialmente porque los eventos encriptados son de mayor tamaño, ya que incluyen tanto el texto plano como el contenido encriptado en esta prueba.",
        "La diferencia en el rendimiento es del 3.7% con un atributo y del 2.5% con 25 atributos.",
        "Creemos que la rugosidad de los gráficos puede ser explicada por el recolector de basura de Java interfiriendo con la simulación.",
        "El hecho de que los tres gráficos muestren las mismas irregularidades respalda esta teoría. A través de la definición de múltiples tipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado del contenido del evento.",
        "El último test que realizamos fue para mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales.",
        "En la prueba formamos una red de corredores de 2000 corredores.",
        "Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes.",
        "Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado.",
        "Cada grupo de suscriptores tiene su propio tipo de evento en la prueba.",
        "El resultado de esta prueba se muestra en la Figura 8.",
        "El número de grupos de suscriptores se incrementa de 1 a 50 (el eje x).",
        "Para cada grupo de suscriptores n, el editor publica un evento para representar el uso de cifrado de atributos y n eventos que representan los eventos para cada grupo de suscriptores.",
        "Contamos el número de saltos que cada publicación realiza a través de la red de intermediarios (eje y).",
        "Ten en cuenta que la Fig. 8 muestra cargas de trabajo más allá de lo que esperaríamos en un uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos.",
        "Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permisos disjuntos sobre los atributos de eventos.",
        "El número de estos conjuntos puede determinarse a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado.",
        "Los gráficos indican que el cifrado por atributo funciona mejor que el cifrado por evento incluso para un pequeño número de grupos de suscriptores.",
        "De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso de eventos de matrícula), el recuento de saltos aumenta de 7.2 saltos para el cifrado de atributos a 16.6 saltos para el cifrado de eventos.",
        "Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, una diferencia de un orden de magnitud. 6.",
        "TRABAJO RELACIONADO Wang et al. han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20].",
        "El artículo es una visión general exhaustiva de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, intenta llamar la atención sobre los problemas en lugar de proporcionar soluciones.",
        "Bacon et al. en [1] examinan el uso del control de acceso basado en roles en sistemas de publicación/suscripción distribuidos de múltiples dominios.",
        "Su trabajo es complementario a este documento: el RBAC distribuido es una posible formalización de políticas que podría utilizar los mecanismos de aplicación que hemos presentado.",
        "Opyrchal y Prakash abordan el problema de la confidencialidad de eventos en el último enlace entre el suscriptor y el SHB en [10].",
        "Ellos afirman correctamente que un enfoque de comunicación de grupo seguro es inviable en un entorno como el de publicar/suscribir que tiene membresías de grupo altamente dinámicas.",
        "Como solución, proponen un esquema que utiliza el almacenamiento en caché de claves y la agrupación de suscriptores para minimizar el número de cifrados necesarios al entregar una publicación de un SHB a un conjunto de suscriptores coincidentes.",
        "En nuestro trabajo asumimos que el SHB es lo suficientemente potente como para manejar una conexión segura de TLS para cada suscriptor local.",
        "Tanto Srivatsa et al. [19] como Raiciu et al. [16] presentan mecanismos para proteger la confidencialidad de los mensajes en infraestructuras descentralizadas de publicación/suscripción.",
        "En comparación con nuestro trabajo, ambos artículos tienen como objetivo proporcionar los medios para proteger la integridad y confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red del intermediario.",
        "Raiciu et al. asumen en su trabajo que ninguno de los intermediarios en la red es de confianza y, por lo tanto, todos los eventos están encriptados desde el publicador hasta el suscriptor y que todas las coincidencias se basan en eventos encriptados.",
        "Por el contrario, asumimos que algunos de los intermediarios en el camino de una publicación son de confianza para acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos.",
        "También asumimos que los corredores de publicación y suscripción alojados son siempre de confianza para acceder a la publicación.",
        "Las contribuciones de Srivatsa et al. y Raiciu et al. son complementarias a las contribuciones en este artículo.",
        "Finalmente, Fiege et al. abordan el tema relacionado con la visibilidad de eventos en [6].",
        "Si bien el trabajo se centró en el uso de alcances como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad de eventos sí se relaciona con el control de acceso en cierta medida. 7.",
        "CONCLUSIONES El cifrado del contenido del evento puede ser utilizado para hacer cumplir una política de control de acceso mientras los eventos están en tránsito en la red de intermediarios de un sistema de publicación/suscripción multi-dominio.",
        "El cifrado genera una sobrecarga, pero i) puede que no haya alternativa cuando se requiere control de acceso, y ii) la penalización en el rendimiento puede reducirse con optimizaciones de implementación, como pasar contenido en texto plano almacenado en caché junto con contenido cifrado entre intermediarios con credenciales de seguridad idénticas.",
        "Esto es especialmente apropiado si las conexiones de intermediario a intermediario están aseguradas por defecto, de modo que el espionaje de cables no sea un problema.",
        "El cifrado a nivel de atributo se puede implementar para hacer cumplir políticas de control de acceso detalladas.",
        "Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los intermediarios parcialmente autorizados implementar enrutamiento basado en contenido basado en los atributos a los que tienen acceso.",
        "Nuestros experimentos muestran que i) al almacenar en caché el contenido de texto plano y cifrado cuando es posible, podemos ofrecer un rendimiento comparable a los eventos de texto plano, y ii) que la encriptación de atributos dentro de un evento incurre en mucho menos sobrecarga que definir tipos de eventos separados para los atributos que necesitan diferentes niveles de protección.",
        "En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer un equilibrio entre el rendimiento y la expresividad.",
        "Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles.",
        "Lauri Pesonen cuenta con el apoyo del EPSRC (GR/T28164) y la Fundación Nokia.",
        "David Eyers cuenta con el apoyo de EPSRC (GR/S94919). 114 8.",
        "REFERENCIAS [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen.",
        "Asegurando la publicación/suscripción para sistemas multi-dominio.",
        "En G. Alonso, editor, Middleware, volumen 3790 de las Notas de Conferencia en Ciencias de la Computación, páginas 1-20.",
        "Springer, 2005. [2] M. Bellare, P. Rogaway, y D. Wagner.",
        "Eax: Un modo de autenticación y cifrado convencional.",
        "Archivo de Criptología ePrint, Reporte 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf.",
        "Diseño y evaluación de un servicio de notificación de eventos de amplia área.",
        "ACM Transactions on Computer Systems, 19(3):332-383, ago. 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron.",
        "SCRIBE: Una infraestructura de multidifusión a nivel de aplicación a gran escala y descentralizada.",
        "Revista IEEE sobre Áreas Seleccionadas en Comunicaciones (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks y C. Allen.",
        "El protocolo TLS, versión 1.0.",
        "RFC 2246, Grupo de Trabajo de Ingeniería de Internet, enero de 1999. [6] L. Fiege, M. Mezini, G. M uhl y A. P. Buchmann.",
        "Diseñando sistemas basados en eventos con alcances.",
        "En ECOOP 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002.",
        "Springer-Verlag. [7] T. Iwata y I.",
        "Iurosawa.",
        "OMAC: One-key CBC MAC, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman.",
        "Establecimiento de clave en grupos grandes y dinámicos utilizando árboles de funciones unidireccionales.",
        "Informe técnico 0755, Laboratorios TIS en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Estándares y Tecnología (NIST).",
        "Estándar de Cifrado Avanzado (AES).",
        "Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash.",
        "Distribución segura de eventos en sistemas de publicación y suscripción basados en contenido.",
        "En Actas del 10º Simposio de Seguridad USENIX.",
        "USENIX, ago. 2001. [11] L. I. W. Pesonen y J. Bacon.",
        "Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y multi-dominio.",
        "En SEM 05: Actas del 5º taller internacional sobre ingeniería de software y middleware, páginas 98-105, Nueva York, NY, EE. UU., septiembre de 2005.",
        "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers y J. Bacon.",
        "Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio.",
        "En Actas del Simposio sobre Aplicaciones y la Internet (SAINT 2006), páginas 222-228, Phoenix, AZ, enero de 2006.",
        "IEEE. [13] P. R. Pietzuch y J. M. Bacon.",
        "Hermes: Una arquitectura middleware distribuida basada en eventos.",
        "En Actas del 1er Taller Internacional sobre Sistemas Basados en Eventos Distribuidos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002.",
        "IEEE. [14] P. R. Pietzuch y S. Bhola.",
        "Control de congestión en un middleware orientado a mensajes confiable y escalable.",
        "En M. Endler y D. Schmidt, editores, Actas del 4to Congreso Internacional.",
        "Conferencia sobre Middleware (Middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003.",
        "Springer. [15] S. Rafaeli y D. Hutchison.",
        "Una encuesta sobre la gestión de claves para la comunicación segura en grupo.",
        "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu y D. S. Rosenblum.",
        "Habilitando la confidencialidad en infraestructuras de publicación/suscripción basadas en contenido.",
        "En Securecomm 06: Actas de la Segunda Conferencia Internacional IEEE/CreatNet sobre Seguridad y Privacidad en Redes de Comunicación, 2006. [17] P. Rogaway, M. Bellare, J.",
        "Negro, y T. Krovetz.",
        "OCB: un modo de operación de cifrado de bloque para una eficiente encriptación autenticada.",
        "En la Conferencia ACM sobre Seguridad Informática y de Comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner.",
        "Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu.",
        "Asegurando servicios de superposición de publicación-suscripción con eventguard.",
        "En CCS 05: Actas de la 12ª conferencia de ACM sobre seguridad informática y de comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005.",
        "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, y A. L. Wolf.",
        "Problemas de seguridad y requisitos en sistemas de publicación-suscripción a escala de internet.",
        "En Actas de la 35ª Conferencia Internacional de Ciencias de Sistemas de Hawái (HICSS02), Isla Grande, HI, EE. UU., 2002.",
        "IEEE. [21] D. Whitfield y M. Hellman.",
        "Privacidad y autenticación: Una introducción a la criptografía.",
        "En Actas del IEEE, volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson.",
        "Contraataque con CBC-MAC (CCM).",
        "RFC 3610, Grupo de Trabajo de Ingeniería de Internet, septiembre de 2003. 115"
    ],
    "error_count": 4,
    "keys": {
        "secure publish/subscribe system": {
            "translated_key": "sistema seguro de publicación/suscripción",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "distributed access control": {
            "translated_key": "control de acceso distribuido",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "multiple administrative domain": {
            "translated_key": "múltiples dominios administrativos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span <br>multiple administrative domain</br>s, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning <br>multiple administrative domain</br>s is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span <br>multiple administrative domain</br>s, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning <br>multiple administrative domain</br>s is likely to require addressing security considerations."
            ],
            "translated_annotated_samples": [
                "Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán <br>múltiples dominios administrativos</br>, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos.",
                "Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples <br>dominios administrativos</br> requiera abordar consideraciones de seguridad."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán <br>múltiples dominios administrativos</br>, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples <br>dominios administrativos</br> requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del Servicio de Cargo por Congestión. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de rendimiento significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5. La ventaja del cifrado de atributos es que el propietario del tipo puede controlar el acceso al tipo de evento a nivel de atributo. El propietario del tipo de evento puede permitir que los clientes tengan diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado a nivel de atributo permite el enrutamiento basado en el contenido en casos en los que un intermediario solo tiene acceso a algunos de los atributos del evento, reduciendo así el impacto general de la entrega de eventos en la red de intermediarios. Por lo tanto, la elección entre cifrado de eventos y cifrado de atributos es un compromiso entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos puede ser emulada introduciendo un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. El editor publicaría entonces una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría volverse difícil de gestionar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría un gran número de tipos de eventos y las políticas y suscripciones podrían cambiar dinámicamente. Este enfoque crea un gran número de eventos adicionales que deben ser enrutados a través de la red, como se muestra en la Sección 5.3. 3.3 Cifrado de suscripciones. Para proteger completamente la confidencialidad del contenido de los eventos, también debemos cifrar las suscripciones. Las suscripciones encriptadas garantizan: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido del evento al monitorear qué suscripciones coincide con un evento dado. Por ejemplo, en el primer caso un corredor no autorizado puede crear suscripciones con filtros adecuadamente elegidos, dirigirlas hacia la raíz del árbol de difusión de eventos y monitorear qué eventos le fueron entregados como coincidentes con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento incluso si el evento seguía encriptado. En el segundo caso, aunque un corredor no autorizado no pudiera crear suscripciones por sí mismo, aún podría revisar las suscripciones que se dirigían a través de él, tomar nota de los filtros de esas suscripciones y monitorear qué eventos le son entregados por corredores aguas arriba que coincidan con los filtros de suscripción. Esto revelaría nuevamente información sobre el contenido del evento al corredor no autorizado. En el caso de cifrar eventos completos, también ciframos el filtro de suscripción completo. El identificador del tipo de evento en la suscripción debe mantenerse intacto para permitir a los corredores de bolsa dirigir los eventos según su tema cuando no estén autorizados a acceder al filtro. En tales casos, se requiere que el corredor no autorizado asuma que los eventos de ese tipo coinciden con todas las expresiones de filtro. Cada filtro de atributo se encripta de forma individual, al igual que al encriptar una publicación. Además del identificador del tipo de evento, los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifren esos filtros a los que tienen acceso, y enrutan el evento en función de si coincide con los filtros descifrados. 3.4 Evitar Operaciones Criptográficas Innecesarias No es necesario cifrar el contenido del evento si el corredor actual y el siguiente corredor en el árbol de difusión de eventos tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede asumir que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, siempre que el siguiente corredor sea miembro del mismo dominio, el evento puede ser enrutado hacia él en texto plano. Con el cifrado de atributos es posible que el corredor vecino esté autorizado para acceder a un subconjunto de los atributos descifrados, en cuyo caso los atributos a los que el corredor no está autorizado a acceder se le pasarían cifrados. Para saber cuándo es seguro pasar el evento en forma de texto plano, los corredores intercambian credenciales como parte de un saludo cuando se conectan entre sí. En los casos en que los corredores puedan verificar las credenciales de los demás, los agregarán a la tabla de enrutamiento para futuras referencias. Si un corredor adquiere nuevas credenciales después del saludo inicial, presentará estas nuevas credenciales a sus vecinos mientras esté en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, ya que es más económico cifrar el evento una vez en la raíz del árbol de difusión de eventos. En Hermes, el nodo de encuentro para cada tipo de evento se selecciona de forma uniformemente aleatoria (el nombre del tipo de evento se hashea con el algoritmo de hash SHA-1 para producir el tipo de evento 108 PHB IBIB IB SHB RN IB SHB Figura 2: La dirección de los nodos está distribuida de manera uniforme en toda la red, por lo que los nodos de encuentro pueden encontrarse fuera del dominio que posee un tipo de evento IB IB SHBPHBP S Encripta Filtra desde la caché Desencripta, entrega Desencripta, filtra Texto plano Caché de texto plano (la mayoría de los datos) Caché de texto plano (algunos datos) Diferentes dominios Cifrado CLAVE Figura 3: Almacenamiento en caché de datos desencriptados para aumentar la eficiencia al entregar a pares con privilegios de seguridad equivalentes, luego el identificador se utiliza para seleccionar el nodo de encuentro en la red superpuesta estructurada). Por lo tanto, es probable que el nodo de encuentro resida fuera del dominio actual. Esta situación está ilustrada en el árbol de difusión del evento en la Figura 2. Incluso con aplicaciones internas del dominio, donde el evento puede ser enviado desde el publicador a todos los suscriptores en forma de texto plano, el contenido del evento en la mayoría de los casos tendrá que ser encriptado para poder ser enviado al nodo de encuentro. Para evitar desciframientos innecesarios, adjuntamos una caché de contenido en texto plano a los eventos encriptados. Un corredor llena la caché con contenido que ha descifrado, por ejemplo, para filtrar en el contenido. El caché es accedido por el intermediario cuando entrega un evento a un suscriptor local después de verificar primero si el evento coincide con el filtro de suscripción, pero el intermediario también envía el caché al siguiente intermediario con el evento encriptado. El siguiente corredor puede buscar el atributo en la caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, la caché se descartará antes de que se envíe el evento. Obviamente, enviar la caché con el evento encriptado aumentará el costo de comunicación, pero esto se compensa con el ahorro en el procesamiento de encriptación/desencriptación. En la Fig. 3 vemos dos flujos de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre intermediarios en dos dominios diferentes. Mostramos en la Sección 5.2 que el costo adicional de enviar mensajes encriptados con una caché de texto completo incurre en casi ningún costo adicional en comparación con el envío de mensajes de texto plano. 3.5 Implementación En nuestra implementación hemos utilizado el modo de operación EAX [2] al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para cifradores de bloque, también llamado algoritmo de Cifrado Autenticado con Datos Asociados (AEAD) que proporciona simultáneamente confidencialidad de datos y protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer paso se encripta el texto plano, y en el segundo paso se genera un código de autenticación de mensaje (MAC) para los datos encriptados. El modo EAX es compatible con cualquier cifrador de bloques. Decidimos utilizar el algoritmo Estándar de Encriptación Avanzada (AES) en nuestra implementación, debido a su estatus estándar y al hecho de que el algoritmo ha sido sometido a un exhaustivo criptoanálisis durante su existencia y hasta el momento no se han encontrado vulnerabilidades graves. Además de proporcionar confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en modo de contador (modo CTR) [21]. Un cifrado de bloque en modo de contador se utiliza para producir una secuencia de bits de clave que luego se XORean con el texto plano. El modo CTR transforma efectivamente un cifrado por bloques en un cifrado de flujo. La ventaja de los cifrados de flujo es que el texto cifrado tiene la misma longitud que el texto plano, mientras que con los cifrados de bloque el texto plano debe ser rellenado a un múltiplo de la longitud del bloque del cifrado de bloque (por ejemplo, el tamaño de bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, ya que el relleno podría aumentar el tamaño del atributo de manera desproporcionada. Por ejemplo, un solo entero podría tener una longitud de 32 bits, que se rellenaría a 128 bits si usáramos un cifrado por bloques. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno necesario para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud total del texto plano. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número usado una vez), una clave de cifrado y el texto plano, y devuelve el texto cifrado y una etiqueta de autenticación. En el modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve ya sea el texto plano, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente al pasar a través de una construcción OMAC (ver [7]). Es importante que los valores de nonce particulares no se reutilicen, de lo contrario, el cifrado de bloques en modo CTR produciría una secuencia de clave idéntica. En nuestra implementación utilizamos la marca de tiempo del evento definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) seguida de la identidad de PHB (es decir, la clave pública) como nonce. El corredor es responsable de asegurarse de que las marcas de tiempo aumenten de forma monótona. La etiqueta de autenticación se añade al texto cifrado producido para crear un par ordenado. Con el cifrado de eventos se crea una única etiqueta para el evento cifrado. Con el cifrado de atributo 109, cada atributo se cifra y autentica por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer un equilibrio entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación añadida. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero se podría hacer que la longitud de la etiqueta sea un parámetro definido por el publicador/suscriptor para cada publicación/suscripción o incluirlo en la definición del tipo de evento para hacerlo un parámetro específico del tipo. EAX también admite incluir datos asociados no encriptados en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero sigue siendo legible por todos. Esta característica podría ser utilizada con cifrado de eventos en casos donde parte del contenido del evento es público y, por lo tanto, sería útil para enrutamiento basado en contenido. La integridad de los datos seguiría protegida contra cambios, pero los intermediarios no autorizados podrían aplicar filtros. Hemos incluido el identificador del tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AEAD incluyen el modo de libro de códigos de desplazamiento (OCB) [17] y el modo de contador con CBC-MAC (CCM) [22]. A diferencia del modo EAX, el modo OCB solo requiere un paso sobre el texto plano, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en los Estados Unidos, lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado con el fin de proporcionar una alternativa gratuita a OCB. El EAX se desarrolló más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasadas. 4. GESTIÓN DE CLAVES En ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador del atributo). Ese identificador se utiliza para determinar la clave de encriptación que se debe usar al encriptar o desencriptar el contenido. Cada tipo de evento, en el cifrado de eventos, y atributo, en el cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo de claves de intermediarios para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando sea necesario y para entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicita unirse al grupo clave esté autorizado para hacerlo. Por lo tanto, el administrador del grupo clave debe ser confiable por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el administrador del grupo clave es o bien un tercero de confianza o, alternativamente, un miembro del dominio de propietarios del tipo. En [12] Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo posee un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento específico es otorgada por el propietario de ese tipo al emitir una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que el Propietario del Tipo, el Corredor, y el Administrador de Claves deben seguir. 1. Conceder autorización para la clave de la placa de número. 2. El Corredor solicita unirse al grupo de claves de la placa de número. 5. Si el corredor cumple con todas las verificaciones, comenzará a recibir las claves apropiadas. 3. El Administrador de Claves puede verificar las credenciales de los corredores en el Servicio de Control de Acceso. 4. El Administrador de Claves puede verificar que el Propietario del Tipo permita el acceso. Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo de claves al que el nodo está autorizado a acceder. Por ejemplo, una tupla <NP, suscribirse, *> autorizaría al propietario a suscribirse a eventos de matrícula con acceso a todos los atributos en los eventos publicados. La secuencia de eventos necesarios para que un corredor se una con éxito a un grupo clave se muestra en la Figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para realizar la solicitud del cliente. Es decir, si el cliente realiza una solicitud de suscripción para eventos de matrícula, tanto el cliente como el corredor local deben estar autorizados para suscribirse a eventos de matrícula. Esto se debe a que, desde la perspectiva de la red de corredores, el corredor local actúa como un intermediario para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utilizan para autorizar las solicitudes de publicación/suscripción. No hacerlo podría llevar a la situación inconsistente en la que un SHB está autorizado para realizar una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la Matrícula anterior, el corredor local que posee la capacidad mencionada está autorizado para unirse al grupo clave de Matrícula, así como a los grupos clave de todos los atributos en el tipo de evento de Matrícula. La encriptación de contenido de eventos en un sistema de publicación/suscripción multi-dominio descentralizado puede considerarse como una subcategoría de la comunicación de grupo segura. En ambos casos, el sistema de gestión de claves debe escalar bien con el número de clientes, los clientes pueden estar distribuidos en áreas geográficas extensas, puede haber altas tasas de rotación en la membresía del grupo, y todos los miembros deben estar sincronizados entre sí en tiempo para poder utilizar la misma clave de cifrado al mismo tiempo. Existen varios protocolos de gestión de claves escalables para comunicación segura en grupo [15]. Hemos implementado el protocolo del Árbol de Función Unidireccional (OFT) [8] como una prueba de concepto. Decidimos implementar OFT debido a su relativa simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de intermediarios como transporte. El protocolo OFT se basa en un árbol binario donde los participantes se encuentran en las hojas del árbol. Escalando en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, lo cual hemos verificado en nuestras simulaciones. 4.2 Actualización de claves Tradicionalmente, en los esquemas de gestión de claves de grupo, la clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente abandona el grupo o expira un temporizador. Actualizar la clave cuando un nuevo miembro se une proporciona secrecía hacia atrás, es decir, se evita que el nuevo miembro acceda a los mensajes antiguos. Refrescar la clave de manera similar cuando un miembro existente se va proporciona secreto hacia adelante, es decir, se evita que el antiguo miembro acceda a los mensajes futuros. Se emiten actualizaciones periódicas desencadenadas por temporizador para limitar el daño causado por la clave actual comprometida. Aunque los protocolos de gestión de claves de última generación son eficientes, refrescar la clave innecesariamente introduce tráfico adicional y procesamiento entre los miembros del grupo de claves. En nuestro caso, la membresía del grupo clave se basa en que el corredor posea una capacidad que lo autorice a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que, en su forma más simple, definen un período de tiempo durante el cual el certificado es válido, y en casos más complejos implican verificaciones en línea hacia el emisor. Para evitar actualizaciones innecesarias de claves, el administrador de claves examina las condiciones de validez del certificado del miembro que se une o abandona. En caso de unirse a un miembro, si el gerente puede asegurar que el certificado era válido en el momento de la actualización de clave anterior, se puede evitar una nueva actualización de clave. De manera similar, en lugar de actualizar la clave inmediatamente cuando un miembro abandona el grupo de claves, el administrador de claves puede almacenar en caché sus credenciales y actualizar la clave solo cuando las credenciales expiren. Estas situaciones están ilustradas en la Fig. 5. Se puede asumir que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio está autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad en el futuro previsible. Se implementaría un control de acceso más detallado y dinámico en el borde de la red del intermediario entre los clientes y los intermediarios que alojan a los clientes. Cuando se actualiza una clave de encriptación, la nueva clave se etiqueta con una marca de tiempo. La clave de encriptación a utilizar para un evento dado se selecciona en función de la marca de tiempo de publicación del evento. Las llaves antiguas se mantendrán durante un tiempo razonable para permitir cierta desviación del reloj. Establecer este valor es parte del protocolo de gestión de claves, aunque exactamente cuánto tiempo debe ser dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar de forma independiente por grupo de teclas si es necesario. 5. EVALUACIÓN Para evaluar el rendimiento del cifrado de contenido del evento, hemos implementado ambos enfoques de cifrado ejecutándose en nuestra implementación del middleware de publicación/suscripción Hermes. La implementación admite tres modos: contenido en texto plano, cifrado de eventos y cifrado de atributos, en un único sistema de publicación/suscripción. Realizamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 de 3.2GHz con 1GB de memoria principal. Decidimos realizar las pruebas en un simulador de eventos en lugar de en un sistema desplegado real para poder medir el tiempo total que lleva manejar todos los mensajes en el sistema. Las siguientes secciones describen con más detalle las configuraciones específicas de las pruebas y los resultados. 5.1 Sobrecarga de Extremo a Extremo La prueba de sobrecarga de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por la encriptación del contenido del evento. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor se suscribió al tipo de evento anunciado sin ningún filtro, es decir, cada publicación coincidía con la publicación del suscriptor y, por lo tanto, se entregaba al suscriptor. El test mide el tiempo combinado que se tarda en publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye tanto encriptar el contenido en el PHB como desencriptarlo en el SHB. En la prueba, el número de atributos en el tipo de evento se incrementa de 1 a 25 (el eje x). Cada atributo se establece como una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y se mide el tiempo transcurrido para derivar el rendimiento del mensaje. El test se repitió cinco veces para cada número de atributos y utilizamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que la desviación estándar no se muestra. Los mismos tests se realizaron sin encriptación de contenido, encriptación de eventos y encriptación de atributos. Como se puede ver en la Fig. 6, el cifrado del contenido del evento introduce una gran sobrecarga en comparación con no usar cifrado. El rendimiento al utilizar cifrado de atributos con un tipo de evento con un atributo es del 46% del rendimiento logrado cuando los eventos se envían en texto plano. Cuando el número de atributos aumenta, la brecha de rendimiento también aumenta: con diez atributos, el rendimiento con cifrado de atributos ha disminuido al 11.7% del rendimiento en texto plano. El cifrado de eventos es más eficiente, debido a un menor número de operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta tanto al rendimiento como lo hace el número de operaciones de encriptación individuales. La diferencia en el rendimiento con la encriptación de eventos y la encriptación de atributos con solo un atributo es causada por el mecanismo de serialización de objetos de Java: en el caso de la encriptación de eventos, se serializa toda la estructura de atributos, lo que resulta en más objetos que al serializar un único valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de empaquetado. Ten en cuenta que la implementación de EAX que utilizamos hace pasar el nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no es necesario mantener en secreto el nonce (solo que sea único), existe un posible compromiso entre tiempo y espacio que aún no hemos investigado al adjuntar atributos de nonce adicionales a los que ya se les ha aplicado este constructo OMAC. Eventos Internos del Dominio 5.2. Explicamos en la Sección 3.4 que el descifrado y cifrado del contenido del evento pueden evitarse si ambos corredores están autorizados para acceder al contenido del evento. Este test fue diseñado para demostrar que el uso del mecanismo de contenido de eventos encriptado entre dos corredores autorizados solo incurre en una pequeña sobrecarga de rendimiento. En esta prueba formamos nuevamente una red de corredores con dos corredores. 111 Programa de actualización de claves Corredor 1 uniéndose y saliendo del grupo de claves Corredor 2 uniéndose y saliendo del grupo de claves Tiempos reales de actualización de claves Tiempo Un día Las credenciales del grupo de claves de los corredores son válidas Tiempo real de unión Tiempo real de salida Un día Un día Figura 5: Cómo se ve afectado el programa de actualización de claves por la unión y salida de corredores de grupos de claves 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 Mensajes por segundo Número de atributos Sin cifrado Cifrado de atributos Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores están configurados con las mismas credenciales. El editor está vinculado a uno de los corredores y el suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtro en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para derivar el rendimiento del mensaje del sistema. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de encriptación no está incluido en las mediciones. El objetivo es modelar un entorno donde un corredor ha recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el intermediario central no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió a medida que el número de atributos en el evento publicado aumentaba de 1 a 25. Los valores de atributo en cada caso son cadenas de 30 caracteres. Cada prueba se repite cinco veces y utilizamos el promedio de todas las iteraciones en el gráfico. El mismo test fue luego repetido sin encriptación, con encriptación de eventos y con encriptación de atributos activada. Los modos encriptados siguen muy de cerca uno al otro. Predeciblemente, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente porque los eventos encriptados son de mayor tamaño, ya que incluyen tanto el texto plano como el contenido encriptado en esta prueba. La diferencia en el rendimiento es del 3.7% con un atributo y del 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede ser explicada por el recolector de basura de Java interfiriendo con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalda esta teoría. A través de la definición de múltiples tipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado del contenido del evento. El último test que realizamos fue para mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la Figura 8. El número de grupos de suscriptores se incrementa de 1 a 50 (el eje x). Para cada grupo de suscriptores n, el editor publica un evento para representar el uso de cifrado de atributos y n eventos que representan los eventos para cada grupo de suscriptores. Contamos el número de saltos que cada publicación realiza a través de la red de intermediarios (eje y). Ten en cuenta que la Fig. 8 muestra cargas de trabajo más allá de lo que esperaríamos en un uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permisos disjuntos sobre los atributos de eventos. El número de estos conjuntos puede determinarse a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado por atributo funciona mejor que el cifrado por evento incluso para un pequeño número de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso de eventos de matrícula), el recuento de saltos aumenta de 7.2 saltos para el cifrado de atributos a 16.6 saltos para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, una diferencia de un orden de magnitud. 6. TRABAJO RELACIONADO Wang et al. han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El artículo es una visión general exhaustiva de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, intenta llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al. en [1] examinan el uso del control de acceso basado en roles en sistemas de publicación/suscripción distribuidos de múltiples dominios. Su trabajo es complementario a este documento: el RBAC distribuido es una posible formalización de políticas que podría utilizar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad de eventos en el último enlace entre el suscriptor y el SHB en [10]. Ellos afirman correctamente que un enfoque de comunicación de grupo seguro es inviable en un entorno como el de publicar/suscribir que tiene membresías de grupo altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché de claves y la agrupación de suscriptores para minimizar el número de cifrados necesarios al entregar una publicación de un SHB a un conjunto de suscriptores coincidentes. En nuestro trabajo asumimos que el SHB es lo suficientemente potente como para manejar una conexión segura de TLS para cada suscriptor local. Tanto Srivatsa et al. [19] como Raiciu et al. [16] presentan mecanismos para proteger la confidencialidad de los mensajes en infraestructuras descentralizadas de publicación/suscripción. En comparación con nuestro trabajo, ambos artículos tienen como objetivo proporcionar los medios para proteger la integridad y confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red del intermediario. Raiciu et al. asumen en su trabajo que ninguno de los intermediarios en la red es de confianza y, por lo tanto, todos los eventos están encriptados desde el publicador hasta el suscriptor y que todas las coincidencias se basan en eventos encriptados. Por el contrario, asumimos que algunos de los intermediarios en el camino de una publicación son de confianza para acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También asumimos que los corredores de publicación y suscripción alojados son siempre de confianza para acceder a la publicación. Las contribuciones de Srivatsa et al. y Raiciu et al. son complementarias a las contribuciones en este artículo. Finalmente, Fiege et al. abordan el tema relacionado con la visibilidad de eventos en [6]. Si bien el trabajo se centró en el uso de alcances como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad de eventos sí se relaciona con el control de acceso en cierta medida. 7. CONCLUSIONES El cifrado del contenido del evento puede ser utilizado para hacer cumplir una política de control de acceso mientras los eventos están en tránsito en la red de intermediarios de un sistema de publicación/suscripción multi-dominio. El cifrado genera una sobrecarga, pero i) puede que no haya alternativa cuando se requiere control de acceso, y ii) la penalización en el rendimiento puede reducirse con optimizaciones de implementación, como pasar contenido en texto plano almacenado en caché junto con contenido cifrado entre intermediarios con credenciales de seguridad idénticas. Esto es especialmente apropiado si las conexiones de intermediario a intermediario están aseguradas por defecto, de modo que el espionaje de cables no sea un problema. El cifrado a nivel de atributo se puede implementar para hacer cumplir políticas de control de acceso detalladas. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los intermediarios parcialmente autorizados implementar enrutamiento basado en contenido basado en los atributos a los que tienen acceso. Nuestros experimentos muestran que i) al almacenar en caché el contenido de texto plano y cifrado cuando es posible, podemos ofrecer un rendimiento comparable a los eventos de texto plano, y ii) que la encriptación de atributos dentro de un evento incurre en mucho menos sobrecarga que definir tipos de eventos separados para los atributos que necesitan diferentes niveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer un equilibrio entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo del EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919). 114 8. REFERENCIAS [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurando la publicación/suscripción para sistemas multi-dominio. En G. Alonso, editor, Middleware, volumen 3790 de las Notas de Conferencia en Ciencias de la Computación, páginas 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, y D. Wagner. Eax: Un modo de autenticación y cifrado convencional. Archivo de Criptología ePrint, Reporte 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de amplia área. ACM Transactions on Computer Systems, 19(3):332-383, ago. 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. SCRIBE: Una infraestructura de multidifusión a nivel de aplicación a gran escala y descentralizada. Revista IEEE sobre Áreas Seleccionadas en Comunicaciones (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Grupo de Trabajo de Ingeniería de Internet, enero de 1999. [6] L. Fiege, M. Mezini, G. M uhl y A. P. Buchmann. Diseñando sistemas basados en eventos con alcances. En ECOOP 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag. [7] T. Iwata y I. Iurosawa. OMAC: One-key CBC MAC, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento de clave en grupos grandes y dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, Laboratorios TIS en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Estándares y Tecnología (NIST). Estándar de Cifrado Avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de publicación y suscripción basados en contenido. En Actas del 10º Simposio de Seguridad USENIX. USENIX, ago. 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y multi-dominio. En SEM 05: Actas del 5º taller internacional sobre ingeniería de software y middleware, páginas 98-105, Nueva York, NY, EE. UU., septiembre de 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. En Actas del Simposio sobre Aplicaciones y la Internet (SAINT 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE. [13] P. R. Pietzuch y J. M. Bacon. Hermes: Una arquitectura middleware distribuida basada en eventos. En Actas del 1er Taller Internacional sobre Sistemas Basados en Eventos Distribuidos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE. [14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware orientado a mensajes confiable y escalable. En M. Endler y D. Schmidt, editores, Actas del 4to Congreso Internacional. Conferencia sobre Middleware (Middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Springer. [15] S. Rafaeli y D. Hutchison. Una encuesta sobre la gestión de claves para la comunicación segura en grupo. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en infraestructuras de publicación/suscripción basadas en contenido. En Securecomm 06: Actas de la Segunda Conferencia Internacional IEEE/CreatNet sobre Seguridad y Privacidad en Redes de Comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Negro, y T. Krovetz. OCB: un modo de operación de cifrado de bloque para una eficiente encriptación autenticada. En la Conferencia ACM sobre Seguridad Informática y de Comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando servicios de superposición de publicación-suscripción con eventguard. En CCS 05: Actas de la 12ª conferencia de ACM sobre seguridad informática y de comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, y A. L. Wolf. Problemas de seguridad y requisitos en sistemas de publicación-suscripción a escala de internet. En Actas de la 35ª Conferencia Internacional de Ciencias de Sistemas de Hawái (HICSS02), Isla Grande, HI, EE. UU., 2002. IEEE. [21] D. Whitfield y M. Hellman. Privacidad y autenticación: Una introducción a la criptografía. En Actas del IEEE, volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contraataque con CBC-MAC (CCM). RFC 3610, Grupo de Trabajo de Ingeniería de Internet, septiembre de 2003. 115 ",
            "candidates": [],
            "error": [
                [
                    "múltiples dominios administrativos",
                    "dominios administrativos"
                ]
            ]
        },
        "attribute encryption": {
            "translated_key": "cifrado de atributos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "<br>attribute encryption</br> enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to <br>attribute encryption</br>. 3.2 <br>attribute encryption</br> In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, <br>attribute encryption</br> usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in <br>attribute encryption</br>, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result <br>attribute encryption</br> incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of <br>attribute encryption</br> is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and <br>attribute encryption</br> is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by <br>attribute encryption</br> can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With <br>attribute encryption</br> it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in <br>attribute encryption</br>, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in <br>attribute encryption</br>, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and <br>attribute encryption</br>, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and <br>attribute encryption</br>.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using <br>attribute encryption</br> with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with <br>attribute encryption</br> has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and <br>attribute encryption</br> with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption <br>attribute encryption</br> Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and <br>attribute encryption</br> turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption <br>attribute encryption</br> Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of <br>attribute encryption</br> using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real <br>attribute encryption</br>.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of <br>attribute encryption</br> and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that <br>attribute encryption</br> performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for <br>attribute encryption</br> to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups <br>attribute encryption</br> Whole-content Encryption Figure 8: Hop Counts When Emulating <br>attribute encryption</br> age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, <br>attribute encryption</br> enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that <br>attribute encryption</br> within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "<br>attribute encryption</br> enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "This results in a significant performance advantage compared to <br>attribute encryption</br>. 3.2 <br>attribute encryption</br> In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "Compared with event encryption, <br>attribute encryption</br> usually results in larger processing overheads, because each attribute is encrypted separately.",
                "This disparity is emphasised in <br>attribute encryption</br>, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result <br>attribute encryption</br> incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5."
            ],
            "translated_annotated_samples": [
                "El <br>cifrado de atributos</br> permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor.",
                "Esto resulta en una ventaja de rendimiento significativa en comparación con el <br>cifrado de atributos</br>. 3.2 Cifrado de Atributos En el <br>cifrado de atributos</br>, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado.",
                "En comparación con el cifrado de eventos, el <br>cifrado de atributos</br> generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado.",
                "Esta disparidad se enfatiza en el <br>cifrado de atributos</br>, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña.",
                "Como resultado, el <br>cifrado de atributos</br> conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del Servicio de Cargo por Congestión. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El <br>cifrado de atributos</br> permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de rendimiento significativa en comparación con el <br>cifrado de atributos</br>. 3.2 Cifrado de Atributos En el <br>cifrado de atributos</br>, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el <br>cifrado de atributos</br> generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el <br>cifrado de atributos</br>, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el <br>cifrado de atributos</br> conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "multi-domain": {
            "translated_key": "multi-dominio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic <br>multi-domain</br> Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure <br>multi-domain</br> publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a <br>multi-domain</br>, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a <br>multi-domain</br> environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a <br>multi-domain</br> publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the <br>multi-domain</br> publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our <br>multi-domain</br> access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in <br>multi-domain</br> publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about <br>multi-domain</br> publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our <br>multi-domain</br> publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for <br>multi-domain</br> publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for <br>multi-domain</br> publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised <br>multi-domain</br> publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in <br>multi-domain</br>, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a <br>multi-domain</br> publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for <br>multi-domain</br> systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, <br>multi-domain</br> publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for <br>multi-domain</br> publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "Encryption-Enforced Access Control in Dynamic <br>multi-domain</br> Publish/Subscribe Networks Lauri I.W.",
                "This paper extends previous work to present and evaluate a secure <br>multi-domain</br> publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "In [12] Pesonen et al. propose a <br>multi-domain</br>, capabilitybased access control architecture for publish/subscribe systems.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a <br>multi-domain</br> environment in which organisations share a common infrastructure.",
                "We expect that access control would need to be enforced in a <br>multi-domain</br> publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications."
            ],
            "translated_annotated_samples": [
                "Control de acceso reforzado por cifrado en redes de publicación/suscripción <br>multi-dominio</br> dinámicas de Lauri I.W.",
                "Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción <br>multi-dominio</br> que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos.",
                "En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción.",
                "Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno <br>multi-dominio</br> en el que las organizaciones comparten una infraestructura común.",
                "Esperamos que el control de acceso deba ser aplicado en un <br>sistema de publicación/suscripción multi-dominio</br> cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción <br>multi-dominio</br> dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción <br>multi-dominio</br> que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno <br>multi-dominio</br> en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un <br>sistema de publicación/suscripción multi-dominio</br> cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. ",
            "candidates": [],
            "error": [
                [
                    "multi-dominio",
                    "multi-dominio",
                    "multi-dominio",
                    "sistema de publicación/suscripción multi-dominio"
                ]
            ]
        },
        "overall communication overhead": {
            "translated_key": "sobrecosto de comunicación general",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller <br>overall communication overhead</br> than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "We show that our approach has a smaller <br>overall communication overhead</br> than existing approaches for achieving the same degree of control over security in publish/subscribe networks."
            ],
            "translated_annotated_samples": [
                "Mostramos que nuestro enfoque tiene un menor <br>sobrecosto de comunicación general</br> que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor <br>sobrecosto de comunicación general</br> que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del Servicio de Cargo por Congestión. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de rendimiento significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5. La ventaja del cifrado de atributos es que el propietario del tipo puede controlar el acceso al tipo de evento a nivel de atributo. El propietario del tipo de evento puede permitir que los clientes tengan diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado a nivel de atributo permite el enrutamiento basado en el contenido en casos en los que un intermediario solo tiene acceso a algunos de los atributos del evento, reduciendo así el impacto general de la entrega de eventos en la red de intermediarios. Por lo tanto, la elección entre cifrado de eventos y cifrado de atributos es un compromiso entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos puede ser emulada introduciendo un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. El editor publicaría entonces una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría volverse difícil de gestionar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría un gran número de tipos de eventos y las políticas y suscripciones podrían cambiar dinámicamente. Este enfoque crea un gran número de eventos adicionales que deben ser enrutados a través de la red, como se muestra en la Sección 5.3. 3.3 Cifrado de suscripciones. Para proteger completamente la confidencialidad del contenido de los eventos, también debemos cifrar las suscripciones. Las suscripciones encriptadas garantizan: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido del evento al monitorear qué suscripciones coincide con un evento dado. Por ejemplo, en el primer caso un corredor no autorizado puede crear suscripciones con filtros adecuadamente elegidos, dirigirlas hacia la raíz del árbol de difusión de eventos y monitorear qué eventos le fueron entregados como coincidentes con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento incluso si el evento seguía encriptado. En el segundo caso, aunque un corredor no autorizado no pudiera crear suscripciones por sí mismo, aún podría revisar las suscripciones que se dirigían a través de él, tomar nota de los filtros de esas suscripciones y monitorear qué eventos le son entregados por corredores aguas arriba que coincidan con los filtros de suscripción. Esto revelaría nuevamente información sobre el contenido del evento al corredor no autorizado. En el caso de cifrar eventos completos, también ciframos el filtro de suscripción completo. El identificador del tipo de evento en la suscripción debe mantenerse intacto para permitir a los corredores de bolsa dirigir los eventos según su tema cuando no estén autorizados a acceder al filtro. En tales casos, se requiere que el corredor no autorizado asuma que los eventos de ese tipo coinciden con todas las expresiones de filtro. Cada filtro de atributo se encripta de forma individual, al igual que al encriptar una publicación. Además del identificador del tipo de evento, los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifren esos filtros a los que tienen acceso, y enrutan el evento en función de si coincide con los filtros descifrados. 3.4 Evitar Operaciones Criptográficas Innecesarias No es necesario cifrar el contenido del evento si el corredor actual y el siguiente corredor en el árbol de difusión de eventos tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede asumir que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, siempre que el siguiente corredor sea miembro del mismo dominio, el evento puede ser enrutado hacia él en texto plano. Con el cifrado de atributos es posible que el corredor vecino esté autorizado para acceder a un subconjunto de los atributos descifrados, en cuyo caso los atributos a los que el corredor no está autorizado a acceder se le pasarían cifrados. Para saber cuándo es seguro pasar el evento en forma de texto plano, los corredores intercambian credenciales como parte de un saludo cuando se conectan entre sí. En los casos en que los corredores puedan verificar las credenciales de los demás, los agregarán a la tabla de enrutamiento para futuras referencias. Si un corredor adquiere nuevas credenciales después del saludo inicial, presentará estas nuevas credenciales a sus vecinos mientras esté en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, ya que es más económico cifrar el evento una vez en la raíz del árbol de difusión de eventos. En Hermes, el nodo de encuentro para cada tipo de evento se selecciona de forma uniformemente aleatoria (el nombre del tipo de evento se hashea con el algoritmo de hash SHA-1 para producir el tipo de evento 108 PHB IBIB IB SHB RN IB SHB Figura 2: La dirección de los nodos está distribuida de manera uniforme en toda la red, por lo que los nodos de encuentro pueden encontrarse fuera del dominio que posee un tipo de evento IB IB SHBPHBP S Encripta Filtra desde la caché Desencripta, entrega Desencripta, filtra Texto plano Caché de texto plano (la mayoría de los datos) Caché de texto plano (algunos datos) Diferentes dominios Cifrado CLAVE Figura 3: Almacenamiento en caché de datos desencriptados para aumentar la eficiencia al entregar a pares con privilegios de seguridad equivalentes, luego el identificador se utiliza para seleccionar el nodo de encuentro en la red superpuesta estructurada). Por lo tanto, es probable que el nodo de encuentro resida fuera del dominio actual. Esta situación está ilustrada en el árbol de difusión del evento en la Figura 2. Incluso con aplicaciones internas del dominio, donde el evento puede ser enviado desde el publicador a todos los suscriptores en forma de texto plano, el contenido del evento en la mayoría de los casos tendrá que ser encriptado para poder ser enviado al nodo de encuentro. Para evitar desciframientos innecesarios, adjuntamos una caché de contenido en texto plano a los eventos encriptados. Un corredor llena la caché con contenido que ha descifrado, por ejemplo, para filtrar en el contenido. El caché es accedido por el intermediario cuando entrega un evento a un suscriptor local después de verificar primero si el evento coincide con el filtro de suscripción, pero el intermediario también envía el caché al siguiente intermediario con el evento encriptado. El siguiente corredor puede buscar el atributo en la caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, la caché se descartará antes de que se envíe el evento. Obviamente, enviar la caché con el evento encriptado aumentará el costo de comunicación, pero esto se compensa con el ahorro en el procesamiento de encriptación/desencriptación. En la Fig. 3 vemos dos flujos de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre intermediarios en dos dominios diferentes. Mostramos en la Sección 5.2 que el costo adicional de enviar mensajes encriptados con una caché de texto completo incurre en casi ningún costo adicional en comparación con el envío de mensajes de texto plano. 3.5 Implementación En nuestra implementación hemos utilizado el modo de operación EAX [2] al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para cifradores de bloque, también llamado algoritmo de Cifrado Autenticado con Datos Asociados (AEAD) que proporciona simultáneamente confidencialidad de datos y protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer paso se encripta el texto plano, y en el segundo paso se genera un código de autenticación de mensaje (MAC) para los datos encriptados. El modo EAX es compatible con cualquier cifrador de bloques. Decidimos utilizar el algoritmo Estándar de Encriptación Avanzada (AES) en nuestra implementación, debido a su estatus estándar y al hecho de que el algoritmo ha sido sometido a un exhaustivo criptoanálisis durante su existencia y hasta el momento no se han encontrado vulnerabilidades graves. Además de proporcionar confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en modo de contador (modo CTR) [21]. Un cifrado de bloque en modo de contador se utiliza para producir una secuencia de bits de clave que luego se XORean con el texto plano. El modo CTR transforma efectivamente un cifrado por bloques en un cifrado de flujo. La ventaja de los cifrados de flujo es que el texto cifrado tiene la misma longitud que el texto plano, mientras que con los cifrados de bloque el texto plano debe ser rellenado a un múltiplo de la longitud del bloque del cifrado de bloque (por ejemplo, el tamaño de bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, ya que el relleno podría aumentar el tamaño del atributo de manera desproporcionada. Por ejemplo, un solo entero podría tener una longitud de 32 bits, que se rellenaría a 128 bits si usáramos un cifrado por bloques. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno necesario para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud total del texto plano. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número usado una vez), una clave de cifrado y el texto plano, y devuelve el texto cifrado y una etiqueta de autenticación. En el modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve ya sea el texto plano, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente al pasar a través de una construcción OMAC (ver [7]). Es importante que los valores de nonce particulares no se reutilicen, de lo contrario, el cifrado de bloques en modo CTR produciría una secuencia de clave idéntica. En nuestra implementación utilizamos la marca de tiempo del evento definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) seguida de la identidad de PHB (es decir, la clave pública) como nonce. El corredor es responsable de asegurarse de que las marcas de tiempo aumenten de forma monótona. La etiqueta de autenticación se añade al texto cifrado producido para crear un par ordenado. Con el cifrado de eventos se crea una única etiqueta para el evento cifrado. Con el cifrado de atributo 109, cada atributo se cifra y autentica por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer un equilibrio entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación añadida. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero se podría hacer que la longitud de la etiqueta sea un parámetro definido por el publicador/suscriptor para cada publicación/suscripción o incluirlo en la definición del tipo de evento para hacerlo un parámetro específico del tipo. EAX también admite incluir datos asociados no encriptados en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero sigue siendo legible por todos. Esta característica podría ser utilizada con cifrado de eventos en casos donde parte del contenido del evento es público y, por lo tanto, sería útil para enrutamiento basado en contenido. La integridad de los datos seguiría protegida contra cambios, pero los intermediarios no autorizados podrían aplicar filtros. Hemos incluido el identificador del tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AEAD incluyen el modo de libro de códigos de desplazamiento (OCB) [17] y el modo de contador con CBC-MAC (CCM) [22]. A diferencia del modo EAX, el modo OCB solo requiere un paso sobre el texto plano, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en los Estados Unidos, lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado con el fin de proporcionar una alternativa gratuita a OCB. El EAX se desarrolló más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasadas. 4. GESTIÓN DE CLAVES En ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador del atributo). Ese identificador se utiliza para determinar la clave de encriptación que se debe usar al encriptar o desencriptar el contenido. Cada tipo de evento, en el cifrado de eventos, y atributo, en el cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo de claves de intermediarios para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando sea necesario y para entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicita unirse al grupo clave esté autorizado para hacerlo. Por lo tanto, el administrador del grupo clave debe ser confiable por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el administrador del grupo clave es o bien un tercero de confianza o, alternativamente, un miembro del dominio de propietarios del tipo. En [12] Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo posee un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento específico es otorgada por el propietario de ese tipo al emitir una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que el Propietario del Tipo, el Corredor, y el Administrador de Claves deben seguir. 1. Conceder autorización para la clave de la placa de número. 2. El Corredor solicita unirse al grupo de claves de la placa de número. 5. Si el corredor cumple con todas las verificaciones, comenzará a recibir las claves apropiadas. 3. El Administrador de Claves puede verificar las credenciales de los corredores en el Servicio de Control de Acceso. 4. El Administrador de Claves puede verificar que el Propietario del Tipo permita el acceso. Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo de claves al que el nodo está autorizado a acceder. Por ejemplo, una tupla <NP, suscribirse, *> autorizaría al propietario a suscribirse a eventos de matrícula con acceso a todos los atributos en los eventos publicados. La secuencia de eventos necesarios para que un corredor se una con éxito a un grupo clave se muestra en la Figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para realizar la solicitud del cliente. Es decir, si el cliente realiza una solicitud de suscripción para eventos de matrícula, tanto el cliente como el corredor local deben estar autorizados para suscribirse a eventos de matrícula. Esto se debe a que, desde la perspectiva de la red de corredores, el corredor local actúa como un intermediario para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utilizan para autorizar las solicitudes de publicación/suscripción. No hacerlo podría llevar a la situación inconsistente en la que un SHB está autorizado para realizar una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la Matrícula anterior, el corredor local que posee la capacidad mencionada está autorizado para unirse al grupo clave de Matrícula, así como a los grupos clave de todos los atributos en el tipo de evento de Matrícula. La encriptación de contenido de eventos en un sistema de publicación/suscripción multi-dominio descentralizado puede considerarse como una subcategoría de la comunicación de grupo segura. En ambos casos, el sistema de gestión de claves debe escalar bien con el número de clientes, los clientes pueden estar distribuidos en áreas geográficas extensas, puede haber altas tasas de rotación en la membresía del grupo, y todos los miembros deben estar sincronizados entre sí en tiempo para poder utilizar la misma clave de cifrado al mismo tiempo. Existen varios protocolos de gestión de claves escalables para comunicación segura en grupo [15]. Hemos implementado el protocolo del Árbol de Función Unidireccional (OFT) [8] como una prueba de concepto. Decidimos implementar OFT debido a su relativa simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de intermediarios como transporte. El protocolo OFT se basa en un árbol binario donde los participantes se encuentran en las hojas del árbol. Escalando en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, lo cual hemos verificado en nuestras simulaciones. 4.2 Actualización de claves Tradicionalmente, en los esquemas de gestión de claves de grupo, la clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente abandona el grupo o expira un temporizador. Actualizar la clave cuando un nuevo miembro se une proporciona secrecía hacia atrás, es decir, se evita que el nuevo miembro acceda a los mensajes antiguos. Refrescar la clave de manera similar cuando un miembro existente se va proporciona secreto hacia adelante, es decir, se evita que el antiguo miembro acceda a los mensajes futuros. Se emiten actualizaciones periódicas desencadenadas por temporizador para limitar el daño causado por la clave actual comprometida. Aunque los protocolos de gestión de claves de última generación son eficientes, refrescar la clave innecesariamente introduce tráfico adicional y procesamiento entre los miembros del grupo de claves. En nuestro caso, la membresía del grupo clave se basa en que el corredor posea una capacidad que lo autorice a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que, en su forma más simple, definen un período de tiempo durante el cual el certificado es válido, y en casos más complejos implican verificaciones en línea hacia el emisor. Para evitar actualizaciones innecesarias de claves, el administrador de claves examina las condiciones de validez del certificado del miembro que se une o abandona. En caso de unirse a un miembro, si el gerente puede asegurar que el certificado era válido en el momento de la actualización de clave anterior, se puede evitar una nueva actualización de clave. De manera similar, en lugar de actualizar la clave inmediatamente cuando un miembro abandona el grupo de claves, el administrador de claves puede almacenar en caché sus credenciales y actualizar la clave solo cuando las credenciales expiren. Estas situaciones están ilustradas en la Fig. 5. Se puede asumir que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio está autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad en el futuro previsible. Se implementaría un control de acceso más detallado y dinámico en el borde de la red del intermediario entre los clientes y los intermediarios que alojan a los clientes. Cuando se actualiza una clave de encriptación, la nueva clave se etiqueta con una marca de tiempo. La clave de encriptación a utilizar para un evento dado se selecciona en función de la marca de tiempo de publicación del evento. Las llaves antiguas se mantendrán durante un tiempo razonable para permitir cierta desviación del reloj. Establecer este valor es parte del protocolo de gestión de claves, aunque exactamente cuánto tiempo debe ser dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar de forma independiente por grupo de teclas si es necesario. 5. EVALUACIÓN Para evaluar el rendimiento del cifrado de contenido del evento, hemos implementado ambos enfoques de cifrado ejecutándose en nuestra implementación del middleware de publicación/suscripción Hermes. La implementación admite tres modos: contenido en texto plano, cifrado de eventos y cifrado de atributos, en un único sistema de publicación/suscripción. Realizamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 de 3.2GHz con 1GB de memoria principal. Decidimos realizar las pruebas en un simulador de eventos en lugar de en un sistema desplegado real para poder medir el tiempo total que lleva manejar todos los mensajes en el sistema. Las siguientes secciones describen con más detalle las configuraciones específicas de las pruebas y los resultados. 5.1 Sobrecarga de Extremo a Extremo La prueba de sobrecarga de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por la encriptación del contenido del evento. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor se suscribió al tipo de evento anunciado sin ningún filtro, es decir, cada publicación coincidía con la publicación del suscriptor y, por lo tanto, se entregaba al suscriptor. El test mide el tiempo combinado que se tarda en publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye tanto encriptar el contenido en el PHB como desencriptarlo en el SHB. En la prueba, el número de atributos en el tipo de evento se incrementa de 1 a 25 (el eje x). Cada atributo se establece como una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y se mide el tiempo transcurrido para derivar el rendimiento del mensaje. El test se repitió cinco veces para cada número de atributos y utilizamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que la desviación estándar no se muestra. Los mismos tests se realizaron sin encriptación de contenido, encriptación de eventos y encriptación de atributos. Como se puede ver en la Fig. 6, el cifrado del contenido del evento introduce una gran sobrecarga en comparación con no usar cifrado. El rendimiento al utilizar cifrado de atributos con un tipo de evento con un atributo es del 46% del rendimiento logrado cuando los eventos se envían en texto plano. Cuando el número de atributos aumenta, la brecha de rendimiento también aumenta: con diez atributos, el rendimiento con cifrado de atributos ha disminuido al 11.7% del rendimiento en texto plano. El cifrado de eventos es más eficiente, debido a un menor número de operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta tanto al rendimiento como lo hace el número de operaciones de encriptación individuales. La diferencia en el rendimiento con la encriptación de eventos y la encriptación de atributos con solo un atributo es causada por el mecanismo de serialización de objetos de Java: en el caso de la encriptación de eventos, se serializa toda la estructura de atributos, lo que resulta en más objetos que al serializar un único valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de empaquetado. Ten en cuenta que la implementación de EAX que utilizamos hace pasar el nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no es necesario mantener en secreto el nonce (solo que sea único), existe un posible compromiso entre tiempo y espacio que aún no hemos investigado al adjuntar atributos de nonce adicionales a los que ya se les ha aplicado este constructo OMAC. Eventos Internos del Dominio 5.2. Explicamos en la Sección 3.4 que el descifrado y cifrado del contenido del evento pueden evitarse si ambos corredores están autorizados para acceder al contenido del evento. Este test fue diseñado para demostrar que el uso del mecanismo de contenido de eventos encriptado entre dos corredores autorizados solo incurre en una pequeña sobrecarga de rendimiento. En esta prueba formamos nuevamente una red de corredores con dos corredores. 111 Programa de actualización de claves Corredor 1 uniéndose y saliendo del grupo de claves Corredor 2 uniéndose y saliendo del grupo de claves Tiempos reales de actualización de claves Tiempo Un día Las credenciales del grupo de claves de los corredores son válidas Tiempo real de unión Tiempo real de salida Un día Un día Figura 5: Cómo se ve afectado el programa de actualización de claves por la unión y salida de corredores de grupos de claves 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 Mensajes por segundo Número de atributos Sin cifrado Cifrado de atributos Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores están configurados con las mismas credenciales. El editor está vinculado a uno de los corredores y el suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtro en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para derivar el rendimiento del mensaje del sistema. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de encriptación no está incluido en las mediciones. El objetivo es modelar un entorno donde un corredor ha recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el intermediario central no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió a medida que el número de atributos en el evento publicado aumentaba de 1 a 25. Los valores de atributo en cada caso son cadenas de 30 caracteres. Cada prueba se repite cinco veces y utilizamos el promedio de todas las iteraciones en el gráfico. El mismo test fue luego repetido sin encriptación, con encriptación de eventos y con encriptación de atributos activada. Los modos encriptados siguen muy de cerca uno al otro. Predeciblemente, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente porque los eventos encriptados son de mayor tamaño, ya que incluyen tanto el texto plano como el contenido encriptado en esta prueba. La diferencia en el rendimiento es del 3.7% con un atributo y del 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede ser explicada por el recolector de basura de Java interfiriendo con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalda esta teoría. A través de la definición de múltiples tipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado del contenido del evento. El último test que realizamos fue para mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la Figura 8. El número de grupos de suscriptores se incrementa de 1 a 50 (el eje x). Para cada grupo de suscriptores n, el editor publica un evento para representar el uso de cifrado de atributos y n eventos que representan los eventos para cada grupo de suscriptores. Contamos el número de saltos que cada publicación realiza a través de la red de intermediarios (eje y). Ten en cuenta que la Fig. 8 muestra cargas de trabajo más allá de lo que esperaríamos en un uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permisos disjuntos sobre los atributos de eventos. El número de estos conjuntos puede determinarse a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado por atributo funciona mejor que el cifrado por evento incluso para un pequeño número de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso de eventos de matrícula), el recuento de saltos aumenta de 7.2 saltos para el cifrado de atributos a 16.6 saltos para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, una diferencia de un orden de magnitud. 6. TRABAJO RELACIONADO Wang et al. han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El artículo es una visión general exhaustiva de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, intenta llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al. en [1] examinan el uso del control de acceso basado en roles en sistemas de publicación/suscripción distribuidos de múltiples dominios. Su trabajo es complementario a este documento: el RBAC distribuido es una posible formalización de políticas que podría utilizar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad de eventos en el último enlace entre el suscriptor y el SHB en [10]. Ellos afirman correctamente que un enfoque de comunicación de grupo seguro es inviable en un entorno como el de publicar/suscribir que tiene membresías de grupo altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché de claves y la agrupación de suscriptores para minimizar el número de cifrados necesarios al entregar una publicación de un SHB a un conjunto de suscriptores coincidentes. En nuestro trabajo asumimos que el SHB es lo suficientemente potente como para manejar una conexión segura de TLS para cada suscriptor local. Tanto Srivatsa et al. [19] como Raiciu et al. [16] presentan mecanismos para proteger la confidencialidad de los mensajes en infraestructuras descentralizadas de publicación/suscripción. En comparación con nuestro trabajo, ambos artículos tienen como objetivo proporcionar los medios para proteger la integridad y confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red del intermediario. Raiciu et al. asumen en su trabajo que ninguno de los intermediarios en la red es de confianza y, por lo tanto, todos los eventos están encriptados desde el publicador hasta el suscriptor y que todas las coincidencias se basan en eventos encriptados. Por el contrario, asumimos que algunos de los intermediarios en el camino de una publicación son de confianza para acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También asumimos que los corredores de publicación y suscripción alojados son siempre de confianza para acceder a la publicación. Las contribuciones de Srivatsa et al. y Raiciu et al. son complementarias a las contribuciones en este artículo. Finalmente, Fiege et al. abordan el tema relacionado con la visibilidad de eventos en [6]. Si bien el trabajo se centró en el uso de alcances como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad de eventos sí se relaciona con el control de acceso en cierta medida. 7. CONCLUSIONES El cifrado del contenido del evento puede ser utilizado para hacer cumplir una política de control de acceso mientras los eventos están en tránsito en la red de intermediarios de un sistema de publicación/suscripción multi-dominio. El cifrado genera una sobrecarga, pero i) puede que no haya alternativa cuando se requiere control de acceso, y ii) la penalización en el rendimiento puede reducirse con optimizaciones de implementación, como pasar contenido en texto plano almacenado en caché junto con contenido cifrado entre intermediarios con credenciales de seguridad idénticas. Esto es especialmente apropiado si las conexiones de intermediario a intermediario están aseguradas por defecto, de modo que el espionaje de cables no sea un problema. El cifrado a nivel de atributo se puede implementar para hacer cumplir políticas de control de acceso detalladas. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los intermediarios parcialmente autorizados implementar enrutamiento basado en contenido basado en los atributos a los que tienen acceso. Nuestros experimentos muestran que i) al almacenar en caché el contenido de texto plano y cifrado cuando es posible, podemos ofrecer un rendimiento comparable a los eventos de texto plano, y ii) que la encriptación de atributos dentro de un evento incurre en mucho menos sobrecarga que definir tipos de eventos separados para los atributos que necesitan diferentes niveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer un equilibrio entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo del EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919). 114 8. REFERENCIAS [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurando la publicación/suscripción para sistemas multi-dominio. En G. Alonso, editor, Middleware, volumen 3790 de las Notas de Conferencia en Ciencias de la Computación, páginas 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, y D. Wagner. Eax: Un modo de autenticación y cifrado convencional. Archivo de Criptología ePrint, Reporte 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de amplia área. ACM Transactions on Computer Systems, 19(3):332-383, ago. 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. SCRIBE: Una infraestructura de multidifusión a nivel de aplicación a gran escala y descentralizada. Revista IEEE sobre Áreas Seleccionadas en Comunicaciones (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Grupo de Trabajo de Ingeniería de Internet, enero de 1999. [6] L. Fiege, M. Mezini, G. M uhl y A. P. Buchmann. Diseñando sistemas basados en eventos con alcances. En ECOOP 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag. [7] T. Iwata y I. Iurosawa. OMAC: One-key CBC MAC, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento de clave en grupos grandes y dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, Laboratorios TIS en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Estándares y Tecnología (NIST). Estándar de Cifrado Avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de publicación y suscripción basados en contenido. En Actas del 10º Simposio de Seguridad USENIX. USENIX, ago. 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y multi-dominio. En SEM 05: Actas del 5º taller internacional sobre ingeniería de software y middleware, páginas 98-105, Nueva York, NY, EE. UU., septiembre de 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. En Actas del Simposio sobre Aplicaciones y la Internet (SAINT 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE. [13] P. R. Pietzuch y J. M. Bacon. Hermes: Una arquitectura middleware distribuida basada en eventos. En Actas del 1er Taller Internacional sobre Sistemas Basados en Eventos Distribuidos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE. [14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware orientado a mensajes confiable y escalable. En M. Endler y D. Schmidt, editores, Actas del 4to Congreso Internacional. Conferencia sobre Middleware (Middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Springer. [15] S. Rafaeli y D. Hutchison. Una encuesta sobre la gestión de claves para la comunicación segura en grupo. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en infraestructuras de publicación/suscripción basadas en contenido. En Securecomm 06: Actas de la Segunda Conferencia Internacional IEEE/CreatNet sobre Seguridad y Privacidad en Redes de Comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Negro, y T. Krovetz. OCB: un modo de operación de cifrado de bloque para una eficiente encriptación autenticada. En la Conferencia ACM sobre Seguridad Informática y de Comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando servicios de superposición de publicación-suscripción con eventguard. En CCS 05: Actas de la 12ª conferencia de ACM sobre seguridad informática y de comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, y A. L. Wolf. Problemas de seguridad y requisitos en sistemas de publicación-suscripción a escala de internet. En Actas de la 35ª Conferencia Internacional de Ciencias de Sistemas de Hawái (HICSS02), Isla Grande, HI, EE. UU., 2002. IEEE. [21] D. Whitfield y M. Hellman. Privacidad y autenticación: Una introducción a la criptografía. En Actas del IEEE, volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contraataque con CBC-MAC (CCM). RFC 3610, Grupo de Trabajo de Ingeniería de Internet, septiembre de 2003. 115 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "distributed systems-distributed application": {
            "translated_key": "sistemas distribuidos-aplicación distribuida",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "performance": {
            "translated_key": "rendimiento",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, <br>performance</br> 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the <br>performance</br> of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger <br>performance</br> penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant <br>performance</br> advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the <br>performance</br> results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and <br>performance</br>, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good <br>performance</br>.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the <br>performance</br> of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three <br>performance</br> tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the <br>performance</br> gap increases as well: with ten attributes the <br>performance</br> with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the <br>performance</br> as much as the number of individual encryption operations does.",
                "The difference in <br>performance</br> with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small <br>performance</br> overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in <br>performance</br> is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the <br>performance</br> penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable <br>performance</br> to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between <br>performance</br> and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, <br>performance</br> 1.",
                "We analytically evaluate the <br>performance</br> of our proposal in Section 5.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger <br>performance</br> penalty.",
                "This results in a significant <br>performance</br> advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the <br>performance</br> results in Sect. 5."
            ],
            "translated_annotated_samples": [
                "Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1.",
                "Evaluamos analíticamente el <br>rendimiento</br> de nuestra propuesta en la Sección 5.",
                "El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de <br>rendimiento</br> mayor.",
                "Esto resulta en una ventaja de <br>rendimiento</br> significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado.",
                "Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de <br>rendimiento</br> en la Sección 5."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del Servicio de Cargo por Congestión. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el <br>rendimiento</br> de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de <br>rendimiento</br> mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de <br>rendimiento</br> significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de <br>rendimiento</br> en la Sección 5. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "encryption": {
            "translated_key": "cifrado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>encryption</br>-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of <br>encryption</br> techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary <br>encryption</br> keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the <br>encryption</br> keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the <br>encryption</br> key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "<br>encryption</br> protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply <br>encryption</br> to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific <br>encryption</br> keys.",
                "By controlling access to the <br>encryption</br> keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential <br>encryption</br> keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing <br>encryption</br> keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level <br>encryption</br> scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the <br>encryption</br> key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to <br>encryption</br> keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the <br>encryption</br> keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level <br>encryption</br>).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the <br>encryption</br> keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content <br>encryption</br> within the broker network without involving the clients.",
                "By delegating the <br>encryption</br> tasks to the brokers, we lower the number of nodes required to have access to a given <br>encryption</br> key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential <br>encryption</br> key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The <br>encryption</br> keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating <br>encryption</br> tasks to the local broker is appropriate, because <br>encryption</br> is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement <br>encryption</br> either at the event level or the attribute level.",
                "Event <br>encryption</br> is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute <br>encryption</br> enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content <br>encryption</br> was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to <br>encryption</br> keys, any <br>encryption</br> performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the <br>encryption</br> key used to encrypt the event content.",
                "Each event type in the system will have its own individual <br>encryption</br> key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the <br>encryption</br> key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the <br>encryption</br> key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event <br>encryption</br> results in one <br>encryption</br> at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute <br>encryption</br>. 3.2 Attribute <br>encryption</br> In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The <br>encryption</br> key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event <br>encryption</br>, attribute <br>encryption</br> usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the <br>encryption</br> process the initialisation of the <br>encryption</br> algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute <br>encryption</br>, where an <br>encryption</br> algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute <br>encryption</br> incurs larger processing overheads when compared with event <br>encryption</br> which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute <br>encryption</br> is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level <br>encryption</br> enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute <br>encryption</br> is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute <br>encryption</br> can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute <br>encryption</br> it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in <br>encryption</br>/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated <br>encryption</br> with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced <br>encryption</br> Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute <br>encryption</br>, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event <br>encryption</br> the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In <br>encryption</br> mode the EAX algorithm takes as input a nonce (a number used once), an <br>encryption</br> key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the <br>encryption</br> key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event <br>encryption</br> a single tag is created for the encrypted event.",
                "With attribute 109 <br>encryption</br> each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event <br>encryption</br> in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both <br>encryption</br> approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the <br>encryption</br> key to use when encrypting or decrypting the content.",
                "Each event type, in event <br>encryption</br>, and attribute, in attribute <br>encryption</br>, has its own individual encryption key.",
                "By controlling access to the <br>encryption</br> key we effectively control access to the encrypted event content.",
                "In order to control access to the <br>encryption</br> keys we form a key group of brokers for each individual <br>encryption</br> key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content <br>encryption</br> in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same <br>encryption</br> key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the <br>encryption</br> key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an <br>encryption</br> key is refreshed the new key is tagged with a timestamp.",
                "The <br>encryption</br> key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content <br>encryption</br> we have implemented both <br>encryption</br> approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event <br>encryption</br>, and attribute <br>encryption</br>, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content <br>encryption</br>.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content <br>encryption</br>, event <br>encryption</br>, and attribute encryption.",
                "As can be seen in Fig. 6, event content <br>encryption</br> introduces a large overhead compared to not using <br>encryption</br>.",
                "The throughput when using attribute <br>encryption</br> with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute <br>encryption</br> has decreased to 11.7% of plaintext performance.",
                "Event <br>encryption</br> fares better, because of fewer <br>encryption</br> operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual <br>encryption</br> operations does.",
                "The difference in performance with event <br>encryption</br> and attribute <br>encryption</br> with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and <br>encryption</br> can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No <br>encryption</br> Attribute <br>encryption</br> Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the <br>encryption</br> cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no <br>encryption</br>, event <br>encryption</br> and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No <br>encryption</br> Attribute <br>encryption</br> Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute <br>encryption</br>.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute <br>encryption</br> and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute <br>encryption</br> performs better than event <br>encryption</br> even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute <br>encryption</br> to 16.6 hops for event <br>encryption</br>.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute <br>encryption</br> Whole-content <br>encryption</br> Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content <br>encryption</br> can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "<br>encryption</br> causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level <br>encryption</br> can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute <br>encryption</br> enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute <br>encryption</br> within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-<br>encryption</br> mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced <br>encryption</br> Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated <br>encryption</br>.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "<br>encryption</br>-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of <br>encryption</br> techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary <br>encryption</br> keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the <br>encryption</br> keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the <br>encryption</br> key managers."
            ],
            "translated_annotated_samples": [
                "Control de acceso reforzado por <br>cifrado</br> en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W.",
                "Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de <br>encriptación</br>, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias.",
                "Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la <br>encriptación</br> del contenido de los eventos, y que la política dicte los controles sobre las claves de <br>encriptación</br> necesarias.",
                "Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de <br>cifrado</br> pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar).",
                "Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de <br>cifrado</br>."
            ],
            "translated_text": "Control de acceso reforzado por <br>cifrado</br> en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de <br>encriptación</br>, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la <br>encriptación</br> del contenido de los eventos, y que la política dicte los controles sobre las claves de <br>encriptación</br> necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de <br>cifrado</br> pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de <br>cifrado</br>. ",
            "candidates": [],
            "error": [
                [
                    "cifrado",
                    "encriptación",
                    "encriptación",
                    "encriptación",
                    "cifrado",
                    "cifrado"
                ]
            ]
        },
        "congestion charge service": {
            "translated_key": "Servicio de Carga por Congestión",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "<br>congestion charge service</br> Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the <br>congestion charge service</br> would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain <br>congestion charge service</br> Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "<br>congestion charge service</br> Domain.",
                "In our example scenario, the <br>congestion charge service</br> would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain <br>congestion charge service</br> Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively."
            ],
            "translated_annotated_samples": [
                "Dominio del <br>Servicio de Cargo por Congestión</br>.",
                "En nuestro escenario de ejemplo, el <br>Servicio de Carga por Congestión</br> solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado.",
                "En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples dominios administrativos requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del <br>Servicio de Cargo por Congestión</br>. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el <br>Servicio de Carga por Congestión</br> solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de rendimiento significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5. La ventaja del cifrado de atributos es que el propietario del tipo puede controlar el acceso al tipo de evento a nivel de atributo. El propietario del tipo de evento puede permitir que los clientes tengan diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado a nivel de atributo permite el enrutamiento basado en el contenido en casos en los que un intermediario solo tiene acceso a algunos de los atributos del evento, reduciendo así el impacto general de la entrega de eventos en la red de intermediarios. Por lo tanto, la elección entre cifrado de eventos y cifrado de atributos es un compromiso entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos puede ser emulada introduciendo un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. El editor publicaría entonces una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría volverse difícil de gestionar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría un gran número de tipos de eventos y las políticas y suscripciones podrían cambiar dinámicamente. Este enfoque crea un gran número de eventos adicionales que deben ser enrutados a través de la red, como se muestra en la Sección 5.3. 3.3 Cifrado de suscripciones. Para proteger completamente la confidencialidad del contenido de los eventos, también debemos cifrar las suscripciones. Las suscripciones encriptadas garantizan: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido del evento al monitorear qué suscripciones coincide con un evento dado. Por ejemplo, en el primer caso un corredor no autorizado puede crear suscripciones con filtros adecuadamente elegidos, dirigirlas hacia la raíz del árbol de difusión de eventos y monitorear qué eventos le fueron entregados como coincidentes con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento incluso si el evento seguía encriptado. En el segundo caso, aunque un corredor no autorizado no pudiera crear suscripciones por sí mismo, aún podría revisar las suscripciones que se dirigían a través de él, tomar nota de los filtros de esas suscripciones y monitorear qué eventos le son entregados por corredores aguas arriba que coincidan con los filtros de suscripción. Esto revelaría nuevamente información sobre el contenido del evento al corredor no autorizado. En el caso de cifrar eventos completos, también ciframos el filtro de suscripción completo. El identificador del tipo de evento en la suscripción debe mantenerse intacto para permitir a los corredores de bolsa dirigir los eventos según su tema cuando no estén autorizados a acceder al filtro. En tales casos, se requiere que el corredor no autorizado asuma que los eventos de ese tipo coinciden con todas las expresiones de filtro. Cada filtro de atributo se encripta de forma individual, al igual que al encriptar una publicación. Además del identificador del tipo de evento, los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifren esos filtros a los que tienen acceso, y enrutan el evento en función de si coincide con los filtros descifrados. 3.4 Evitar Operaciones Criptográficas Innecesarias No es necesario cifrar el contenido del evento si el corredor actual y el siguiente corredor en el árbol de difusión de eventos tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede asumir que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, siempre que el siguiente corredor sea miembro del mismo dominio, el evento puede ser enrutado hacia él en texto plano. Con el cifrado de atributos es posible que el corredor vecino esté autorizado para acceder a un subconjunto de los atributos descifrados, en cuyo caso los atributos a los que el corredor no está autorizado a acceder se le pasarían cifrados. Para saber cuándo es seguro pasar el evento en forma de texto plano, los corredores intercambian credenciales como parte de un saludo cuando se conectan entre sí. En los casos en que los corredores puedan verificar las credenciales de los demás, los agregarán a la tabla de enrutamiento para futuras referencias. Si un corredor adquiere nuevas credenciales después del saludo inicial, presentará estas nuevas credenciales a sus vecinos mientras esté en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, ya que es más económico cifrar el evento una vez en la raíz del árbol de difusión de eventos. En Hermes, el nodo de encuentro para cada tipo de evento se selecciona de forma uniformemente aleatoria (el nombre del tipo de evento se hashea con el algoritmo de hash SHA-1 para producir el tipo de evento 108 PHB IBIB IB SHB RN IB SHB Figura 2: La dirección de los nodos está distribuida de manera uniforme en toda la red, por lo que los nodos de encuentro pueden encontrarse fuera del dominio que posee un tipo de evento IB IB SHBPHBP S Encripta Filtra desde la caché Desencripta, entrega Desencripta, filtra Texto plano Caché de texto plano (la mayoría de los datos) Caché de texto plano (algunos datos) Diferentes dominios Cifrado CLAVE Figura 3: Almacenamiento en caché de datos desencriptados para aumentar la eficiencia al entregar a pares con privilegios de seguridad equivalentes, luego el identificador se utiliza para seleccionar el nodo de encuentro en la red superpuesta estructurada). Por lo tanto, es probable que el nodo de encuentro resida fuera del dominio actual. Esta situación está ilustrada en el árbol de difusión del evento en la Figura 2. Incluso con aplicaciones internas del dominio, donde el evento puede ser enviado desde el publicador a todos los suscriptores en forma de texto plano, el contenido del evento en la mayoría de los casos tendrá que ser encriptado para poder ser enviado al nodo de encuentro. Para evitar desciframientos innecesarios, adjuntamos una caché de contenido en texto plano a los eventos encriptados. Un corredor llena la caché con contenido que ha descifrado, por ejemplo, para filtrar en el contenido. El caché es accedido por el intermediario cuando entrega un evento a un suscriptor local después de verificar primero si el evento coincide con el filtro de suscripción, pero el intermediario también envía el caché al siguiente intermediario con el evento encriptado. El siguiente corredor puede buscar el atributo en la caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, la caché se descartará antes de que se envíe el evento. Obviamente, enviar la caché con el evento encriptado aumentará el costo de comunicación, pero esto se compensa con el ahorro en el procesamiento de encriptación/desencriptación. En la Fig. 3 vemos dos flujos de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre intermediarios en dos dominios diferentes. Mostramos en la Sección 5.2 que el costo adicional de enviar mensajes encriptados con una caché de texto completo incurre en casi ningún costo adicional en comparación con el envío de mensajes de texto plano. 3.5 Implementación En nuestra implementación hemos utilizado el modo de operación EAX [2] al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para cifradores de bloque, también llamado algoritmo de Cifrado Autenticado con Datos Asociados (AEAD) que proporciona simultáneamente confidencialidad de datos y protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer paso se encripta el texto plano, y en el segundo paso se genera un código de autenticación de mensaje (MAC) para los datos encriptados. El modo EAX es compatible con cualquier cifrador de bloques. Decidimos utilizar el algoritmo Estándar de Encriptación Avanzada (AES) en nuestra implementación, debido a su estatus estándar y al hecho de que el algoritmo ha sido sometido a un exhaustivo criptoanálisis durante su existencia y hasta el momento no se han encontrado vulnerabilidades graves. Además de proporcionar confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en modo de contador (modo CTR) [21]. Un cifrado de bloque en modo de contador se utiliza para producir una secuencia de bits de clave que luego se XORean con el texto plano. El modo CTR transforma efectivamente un cifrado por bloques en un cifrado de flujo. La ventaja de los cifrados de flujo es que el texto cifrado tiene la misma longitud que el texto plano, mientras que con los cifrados de bloque el texto plano debe ser rellenado a un múltiplo de la longitud del bloque del cifrado de bloque (por ejemplo, el tamaño de bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, ya que el relleno podría aumentar el tamaño del atributo de manera desproporcionada. Por ejemplo, un solo entero podría tener una longitud de 32 bits, que se rellenaría a 128 bits si usáramos un cifrado por bloques. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno necesario para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud total del texto plano. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número usado una vez), una clave de cifrado y el texto plano, y devuelve el texto cifrado y una etiqueta de autenticación. En el modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve ya sea el texto plano, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente al pasar a través de una construcción OMAC (ver [7]). Es importante que los valores de nonce particulares no se reutilicen, de lo contrario, el cifrado de bloques en modo CTR produciría una secuencia de clave idéntica. En nuestra implementación utilizamos la marca de tiempo del evento definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) seguida de la identidad de PHB (es decir, la clave pública) como nonce. El corredor es responsable de asegurarse de que las marcas de tiempo aumenten de forma monótona. La etiqueta de autenticación se añade al texto cifrado producido para crear un par ordenado. Con el cifrado de eventos se crea una única etiqueta para el evento cifrado. Con el cifrado de atributo 109, cada atributo se cifra y autentica por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer un equilibrio entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación añadida. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero se podría hacer que la longitud de la etiqueta sea un parámetro definido por el publicador/suscriptor para cada publicación/suscripción o incluirlo en la definición del tipo de evento para hacerlo un parámetro específico del tipo. EAX también admite incluir datos asociados no encriptados en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero sigue siendo legible por todos. Esta característica podría ser utilizada con cifrado de eventos en casos donde parte del contenido del evento es público y, por lo tanto, sería útil para enrutamiento basado en contenido. La integridad de los datos seguiría protegida contra cambios, pero los intermediarios no autorizados podrían aplicar filtros. Hemos incluido el identificador del tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AEAD incluyen el modo de libro de códigos de desplazamiento (OCB) [17] y el modo de contador con CBC-MAC (CCM) [22]. A diferencia del modo EAX, el modo OCB solo requiere un paso sobre el texto plano, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en los Estados Unidos, lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado con el fin de proporcionar una alternativa gratuita a OCB. El EAX se desarrolló más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasadas. 4. GESTIÓN DE CLAVES En ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador del atributo). Ese identificador se utiliza para determinar la clave de encriptación que se debe usar al encriptar o desencriptar el contenido. Cada tipo de evento, en el cifrado de eventos, y atributo, en el cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo de claves de intermediarios para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando sea necesario y para entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicita unirse al grupo clave esté autorizado para hacerlo. Por lo tanto, el administrador del grupo clave debe ser confiable por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el administrador del grupo clave es o bien un tercero de confianza o, alternativamente, un miembro del dominio de propietarios del tipo. En [12] Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo posee un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento específico es otorgada por el propietario de ese tipo al emitir una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que el Propietario del Tipo, el Corredor, y el Administrador de Claves deben seguir. 1. Conceder autorización para la clave de la placa de número. 2. El Corredor solicita unirse al grupo de claves de la placa de número. 5. Si el corredor cumple con todas las verificaciones, comenzará a recibir las claves apropiadas. 3. El Administrador de Claves puede verificar las credenciales de los corredores en el Servicio de Control de Acceso. 4. El Administrador de Claves puede verificar que el Propietario del Tipo permita el acceso. Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo de claves al que el nodo está autorizado a acceder. Por ejemplo, una tupla <NP, suscribirse, *> autorizaría al propietario a suscribirse a eventos de matrícula con acceso a todos los atributos en los eventos publicados. La secuencia de eventos necesarios para que un corredor se una con éxito a un grupo clave se muestra en la Figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para realizar la solicitud del cliente. Es decir, si el cliente realiza una solicitud de suscripción para eventos de matrícula, tanto el cliente como el corredor local deben estar autorizados para suscribirse a eventos de matrícula. Esto se debe a que, desde la perspectiva de la red de corredores, el corredor local actúa como un intermediario para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utilizan para autorizar las solicitudes de publicación/suscripción. No hacerlo podría llevar a la situación inconsistente en la que un SHB está autorizado para realizar una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la Matrícula anterior, el corredor local que posee la capacidad mencionada está autorizado para unirse al grupo clave de Matrícula, así como a los grupos clave de todos los atributos en el tipo de evento de Matrícula. La encriptación de contenido de eventos en un sistema de publicación/suscripción multi-dominio descentralizado puede considerarse como una subcategoría de la comunicación de grupo segura. En ambos casos, el sistema de gestión de claves debe escalar bien con el número de clientes, los clientes pueden estar distribuidos en áreas geográficas extensas, puede haber altas tasas de rotación en la membresía del grupo, y todos los miembros deben estar sincronizados entre sí en tiempo para poder utilizar la misma clave de cifrado al mismo tiempo. Existen varios protocolos de gestión de claves escalables para comunicación segura en grupo [15]. Hemos implementado el protocolo del Árbol de Función Unidireccional (OFT) [8] como una prueba de concepto. Decidimos implementar OFT debido a su relativa simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de intermediarios como transporte. El protocolo OFT se basa en un árbol binario donde los participantes se encuentran en las hojas del árbol. Escalando en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, lo cual hemos verificado en nuestras simulaciones. 4.2 Actualización de claves Tradicionalmente, en los esquemas de gestión de claves de grupo, la clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente abandona el grupo o expira un temporizador. Actualizar la clave cuando un nuevo miembro se une proporciona secrecía hacia atrás, es decir, se evita que el nuevo miembro acceda a los mensajes antiguos. Refrescar la clave de manera similar cuando un miembro existente se va proporciona secreto hacia adelante, es decir, se evita que el antiguo miembro acceda a los mensajes futuros. Se emiten actualizaciones periódicas desencadenadas por temporizador para limitar el daño causado por la clave actual comprometida. Aunque los protocolos de gestión de claves de última generación son eficientes, refrescar la clave innecesariamente introduce tráfico adicional y procesamiento entre los miembros del grupo de claves. En nuestro caso, la membresía del grupo clave se basa en que el corredor posea una capacidad que lo autorice a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que, en su forma más simple, definen un período de tiempo durante el cual el certificado es válido, y en casos más complejos implican verificaciones en línea hacia el emisor. Para evitar actualizaciones innecesarias de claves, el administrador de claves examina las condiciones de validez del certificado del miembro que se une o abandona. En caso de unirse a un miembro, si el gerente puede asegurar que el certificado era válido en el momento de la actualización de clave anterior, se puede evitar una nueva actualización de clave. De manera similar, en lugar de actualizar la clave inmediatamente cuando un miembro abandona el grupo de claves, el administrador de claves puede almacenar en caché sus credenciales y actualizar la clave solo cuando las credenciales expiren. Estas situaciones están ilustradas en la Fig. 5. Se puede asumir que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio está autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad en el futuro previsible. Se implementaría un control de acceso más detallado y dinámico en el borde de la red del intermediario entre los clientes y los intermediarios que alojan a los clientes. Cuando se actualiza una clave de encriptación, la nueva clave se etiqueta con una marca de tiempo. La clave de encriptación a utilizar para un evento dado se selecciona en función de la marca de tiempo de publicación del evento. Las llaves antiguas se mantendrán durante un tiempo razonable para permitir cierta desviación del reloj. Establecer este valor es parte del protocolo de gestión de claves, aunque exactamente cuánto tiempo debe ser dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar de forma independiente por grupo de teclas si es necesario. 5. EVALUACIÓN Para evaluar el rendimiento del cifrado de contenido del evento, hemos implementado ambos enfoques de cifrado ejecutándose en nuestra implementación del middleware de publicación/suscripción Hermes. La implementación admite tres modos: contenido en texto plano, cifrado de eventos y cifrado de atributos, en un único sistema de publicación/suscripción. Realizamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 de 3.2GHz con 1GB de memoria principal. Decidimos realizar las pruebas en un simulador de eventos en lugar de en un sistema desplegado real para poder medir el tiempo total que lleva manejar todos los mensajes en el sistema. Las siguientes secciones describen con más detalle las configuraciones específicas de las pruebas y los resultados. 5.1 Sobrecarga de Extremo a Extremo La prueba de sobrecarga de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por la encriptación del contenido del evento. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor se suscribió al tipo de evento anunciado sin ningún filtro, es decir, cada publicación coincidía con la publicación del suscriptor y, por lo tanto, se entregaba al suscriptor. El test mide el tiempo combinado que se tarda en publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye tanto encriptar el contenido en el PHB como desencriptarlo en el SHB. En la prueba, el número de atributos en el tipo de evento se incrementa de 1 a 25 (el eje x). Cada atributo se establece como una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y se mide el tiempo transcurrido para derivar el rendimiento del mensaje. El test se repitió cinco veces para cada número de atributos y utilizamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que la desviación estándar no se muestra. Los mismos tests se realizaron sin encriptación de contenido, encriptación de eventos y encriptación de atributos. Como se puede ver en la Fig. 6, el cifrado del contenido del evento introduce una gran sobrecarga en comparación con no usar cifrado. El rendimiento al utilizar cifrado de atributos con un tipo de evento con un atributo es del 46% del rendimiento logrado cuando los eventos se envían en texto plano. Cuando el número de atributos aumenta, la brecha de rendimiento también aumenta: con diez atributos, el rendimiento con cifrado de atributos ha disminuido al 11.7% del rendimiento en texto plano. El cifrado de eventos es más eficiente, debido a un menor número de operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta tanto al rendimiento como lo hace el número de operaciones de encriptación individuales. La diferencia en el rendimiento con la encriptación de eventos y la encriptación de atributos con solo un atributo es causada por el mecanismo de serialización de objetos de Java: en el caso de la encriptación de eventos, se serializa toda la estructura de atributos, lo que resulta en más objetos que al serializar un único valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de empaquetado. Ten en cuenta que la implementación de EAX que utilizamos hace pasar el nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no es necesario mantener en secreto el nonce (solo que sea único), existe un posible compromiso entre tiempo y espacio que aún no hemos investigado al adjuntar atributos de nonce adicionales a los que ya se les ha aplicado este constructo OMAC. Eventos Internos del Dominio 5.2. Explicamos en la Sección 3.4 que el descifrado y cifrado del contenido del evento pueden evitarse si ambos corredores están autorizados para acceder al contenido del evento. Este test fue diseñado para demostrar que el uso del mecanismo de contenido de eventos encriptado entre dos corredores autorizados solo incurre en una pequeña sobrecarga de rendimiento. En esta prueba formamos nuevamente una red de corredores con dos corredores. 111 Programa de actualización de claves Corredor 1 uniéndose y saliendo del grupo de claves Corredor 2 uniéndose y saliendo del grupo de claves Tiempos reales de actualización de claves Tiempo Un día Las credenciales del grupo de claves de los corredores son válidas Tiempo real de unión Tiempo real de salida Un día Un día Figura 5: Cómo se ve afectado el programa de actualización de claves por la unión y salida de corredores de grupos de claves 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 Mensajes por segundo Número de atributos Sin cifrado Cifrado de atributos Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores están configurados con las mismas credenciales. El editor está vinculado a uno de los corredores y el suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtro en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para derivar el rendimiento del mensaje del sistema. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de encriptación no está incluido en las mediciones. El objetivo es modelar un entorno donde un corredor ha recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el intermediario central no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió a medida que el número de atributos en el evento publicado aumentaba de 1 a 25. Los valores de atributo en cada caso son cadenas de 30 caracteres. Cada prueba se repite cinco veces y utilizamos el promedio de todas las iteraciones en el gráfico. El mismo test fue luego repetido sin encriptación, con encriptación de eventos y con encriptación de atributos activada. Los modos encriptados siguen muy de cerca uno al otro. Predeciblemente, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente porque los eventos encriptados son de mayor tamaño, ya que incluyen tanto el texto plano como el contenido encriptado en esta prueba. La diferencia en el rendimiento es del 3.7% con un atributo y del 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede ser explicada por el recolector de basura de Java interfiriendo con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalda esta teoría. A través de la definición de múltiples tipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado del contenido del evento. El último test que realizamos fue para mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la Figura 8. El número de grupos de suscriptores se incrementa de 1 a 50 (el eje x). Para cada grupo de suscriptores n, el editor publica un evento para representar el uso de cifrado de atributos y n eventos que representan los eventos para cada grupo de suscriptores. Contamos el número de saltos que cada publicación realiza a través de la red de intermediarios (eje y). Ten en cuenta que la Fig. 8 muestra cargas de trabajo más allá de lo que esperaríamos en un uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permisos disjuntos sobre los atributos de eventos. El número de estos conjuntos puede determinarse a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado por atributo funciona mejor que el cifrado por evento incluso para un pequeño número de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso de eventos de matrícula), el recuento de saltos aumenta de 7.2 saltos para el cifrado de atributos a 16.6 saltos para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, una diferencia de un orden de magnitud. 6. TRABAJO RELACIONADO Wang et al. han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El artículo es una visión general exhaustiva de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, intenta llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al. en [1] examinan el uso del control de acceso basado en roles en sistemas de publicación/suscripción distribuidos de múltiples dominios. Su trabajo es complementario a este documento: el RBAC distribuido es una posible formalización de políticas que podría utilizar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad de eventos en el último enlace entre el suscriptor y el SHB en [10]. Ellos afirman correctamente que un enfoque de comunicación de grupo seguro es inviable en un entorno como el de publicar/suscribir que tiene membresías de grupo altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché de claves y la agrupación de suscriptores para minimizar el número de cifrados necesarios al entregar una publicación de un SHB a un conjunto de suscriptores coincidentes. En nuestro trabajo asumimos que el SHB es lo suficientemente potente como para manejar una conexión segura de TLS para cada suscriptor local. Tanto Srivatsa et al. [19] como Raiciu et al. [16] presentan mecanismos para proteger la confidencialidad de los mensajes en infraestructuras descentralizadas de publicación/suscripción. En comparación con nuestro trabajo, ambos artículos tienen como objetivo proporcionar los medios para proteger la integridad y confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red del intermediario. Raiciu et al. asumen en su trabajo que ninguno de los intermediarios en la red es de confianza y, por lo tanto, todos los eventos están encriptados desde el publicador hasta el suscriptor y que todas las coincidencias se basan en eventos encriptados. Por el contrario, asumimos que algunos de los intermediarios en el camino de una publicación son de confianza para acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También asumimos que los corredores de publicación y suscripción alojados son siempre de confianza para acceder a la publicación. Las contribuciones de Srivatsa et al. y Raiciu et al. son complementarias a las contribuciones en este artículo. Finalmente, Fiege et al. abordan el tema relacionado con la visibilidad de eventos en [6]. Si bien el trabajo se centró en el uso de alcances como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad de eventos sí se relaciona con el control de acceso en cierta medida. 7. CONCLUSIONES El cifrado del contenido del evento puede ser utilizado para hacer cumplir una política de control de acceso mientras los eventos están en tránsito en la red de intermediarios de un sistema de publicación/suscripción multi-dominio. El cifrado genera una sobrecarga, pero i) puede que no haya alternativa cuando se requiere control de acceso, y ii) la penalización en el rendimiento puede reducirse con optimizaciones de implementación, como pasar contenido en texto plano almacenado en caché junto con contenido cifrado entre intermediarios con credenciales de seguridad idénticas. Esto es especialmente apropiado si las conexiones de intermediario a intermediario están aseguradas por defecto, de modo que el espionaje de cables no sea un problema. El cifrado a nivel de atributo se puede implementar para hacer cumplir políticas de control de acceso detalladas. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los intermediarios parcialmente autorizados implementar enrutamiento basado en contenido basado en los atributos a los que tienen acceso. Nuestros experimentos muestran que i) al almacenar en caché el contenido de texto plano y cifrado cuando es posible, podemos ofrecer un rendimiento comparable a los eventos de texto plano, y ii) que la encriptación de atributos dentro de un evento incurre en mucho menos sobrecarga que definir tipos de eventos separados para los atributos que necesitan diferentes niveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer un equilibrio entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo del EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919). 114 8. REFERENCIAS [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurando la publicación/suscripción para sistemas multi-dominio. En G. Alonso, editor, Middleware, volumen 3790 de las Notas de Conferencia en Ciencias de la Computación, páginas 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, y D. Wagner. Eax: Un modo de autenticación y cifrado convencional. Archivo de Criptología ePrint, Reporte 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de amplia área. ACM Transactions on Computer Systems, 19(3):332-383, ago. 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. SCRIBE: Una infraestructura de multidifusión a nivel de aplicación a gran escala y descentralizada. Revista IEEE sobre Áreas Seleccionadas en Comunicaciones (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Grupo de Trabajo de Ingeniería de Internet, enero de 1999. [6] L. Fiege, M. Mezini, G. M uhl y A. P. Buchmann. Diseñando sistemas basados en eventos con alcances. En ECOOP 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag. [7] T. Iwata y I. Iurosawa. OMAC: One-key CBC MAC, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento de clave en grupos grandes y dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, Laboratorios TIS en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Estándares y Tecnología (NIST). Estándar de Cifrado Avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de publicación y suscripción basados en contenido. En Actas del 10º Simposio de Seguridad USENIX. USENIX, ago. 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y multi-dominio. En SEM 05: Actas del 5º taller internacional sobre ingeniería de software y middleware, páginas 98-105, Nueva York, NY, EE. UU., septiembre de 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. En Actas del Simposio sobre Aplicaciones y la Internet (SAINT 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE. [13] P. R. Pietzuch y J. M. Bacon. Hermes: Una arquitectura middleware distribuida basada en eventos. En Actas del 1er Taller Internacional sobre Sistemas Basados en Eventos Distribuidos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE. [14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware orientado a mensajes confiable y escalable. En M. Endler y D. Schmidt, editores, Actas del 4to Congreso Internacional. Conferencia sobre Middleware (Middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Springer. [15] S. Rafaeli y D. Hutchison. Una encuesta sobre la gestión de claves para la comunicación segura en grupo. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en infraestructuras de publicación/suscripción basadas en contenido. En Securecomm 06: Actas de la Segunda Conferencia Internacional IEEE/CreatNet sobre Seguridad y Privacidad en Redes de Comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Negro, y T. Krovetz. OCB: un modo de operación de cifrado de bloque para una eficiente encriptación autenticada. En la Conferencia ACM sobre Seguridad Informática y de Comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando servicios de superposición de publicación-suscripción con eventguard. En CCS 05: Actas de la 12ª conferencia de ACM sobre seguridad informática y de comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, y A. L. Wolf. Problemas de seguridad y requisitos en sistemas de publicación-suscripción a escala de internet. En Actas de la 35ª Conferencia Internacional de Ciencias de Sistemas de Hawái (HICSS02), Isla Grande, HI, EE. UU., 2002. IEEE. [21] D. Whitfield y M. Hellman. Privacidad y autenticación: Una introducción a la criptografía. En Actas del IEEE, volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contraataque con CBC-MAC (CCM). RFC 3610, Grupo de Trabajo de Ingeniería de Internet, septiembre de 2003. 115 ",
            "candidates": [],
            "error": [
                [
                    "Servicio de Cargo por Congestión",
                    "Servicio de Carga por Congestión"
                ]
            ]
        },
        "distribute access control": {
            "translated_key": "distribuir el control de acceso",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple administrative domains, be they independent administrative domains inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple administrative domains is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "administrative domain": {
            "translated_key": "dominios administrativos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Encryption-Enforced Access Control in Dynamic Multi-Domain Publish/Subscribe Networks Lauri I.W.",
                "Pesonen University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk David M. Eyers University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk Jean Bacon University of Cambridge, Computer Laboratory JJ Thomson Avenue, Cambridge, CB3 0FD, UK {first.last}@cl.cam.ac.uk ABSTRACT Publish/subscribe systems provide an efficient, event-based, wide-area distributed communications infrastructure.",
                "Large scale publish/subscribe systems are likely to employ components of the event transport network owned by cooperating, but independent organisations.",
                "As the number of participants in the network increases, security becomes an increasing concern.",
                "This paper extends previous work to present and evaluate a secure multi-domain publish/subscribe infrastructure that supports and enforces fine-grained access control over the individual attributes of event types.",
                "Key refresh allows us to ensure forward and backward security when event brokers join and leave the network.",
                "We demonstrate that the time and space overheads can be minimised by careful consideration of encryption techniques, and by the use of caching to decrease unnecessary decryptions.",
                "We show that our approach has a smaller overall communication overhead than existing approaches for achieving the same degree of control over security in publish/subscribe networks.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems-Distributed applications General Terms Security, Performance 1.",
                "INTRODUCTION Publish/subscribe is well suited as a communication mechanism for building Internet-scale distributed event-driven applications.",
                "Much of its capacity for scale in the number of participants comes from its decoupling of publishers and subscribers by placing an asynchronous event delivery service between them.",
                "In truly Internet-scale publish/subscribe systems, the event delivery service will include a large set of interconnected broker nodes spanning a wide geographic (and thus network) area.",
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple <br>administrative domain</br>s, be they independent <br>administrative domain</br>s inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple <br>administrative domain</br>s is likely to require addressing security considerations.",
                "As security and access control are almost the antithesis of decoupling, relatively little publish/subscribe research has focused on security so far.",
                "Our overall research aim is to develop Internet-scale publish/subscribe networks that provide secure, efficient delivery of events, fault-tolerance and self-healing in the delivery infrastructure, and a convenient event interface.",
                "In [12] Pesonen et al. propose a multi-domain, capabilitybased access control architecture for publish/subscribe systems.",
                "The architecture provides a mechanism for authorising event clients to publish and subscribe to event types.",
                "The privileges of the client are checked by the local broker that the client connects to in order to access the publish/ subscribe system.",
                "The approach implements access control at the edge of the broker network and assumes that all brokers can be trusted to enforce the access control policies correctly.",
                "Any malicious, compromised or unauthorised broker is free to read and write any events that pass through it on their way from the publishers to the subscribers.",
                "This might be acceptable in a relatively small system deployed inside a single organisation, but it is not appropriate in a multi-domain environment in which organisations share a common infrastructure.",
                "We propose enforcing access control within the broker network by encrypting event content, and that policy dictate controls over the necessary encryption keys.",
                "With encrypted event content only those brokers that are authorised to ac104 cess the encryption keys are able to access the event content (i.e. publish, subscribe to, or filter).",
                "We effectively move the enforcement of access control from the brokers to the encryption key managers.",
                "We expect that access control would need to be enforced in a multi-domain publish/subscribe system when multiple organisations form a shared publish/subscribe system yet run multiple independent applications.",
                "Access control might also be needed when a single organisation consists of multiple sub-domains that deliver confidential data over the organisation-wide publish/subscribe system.",
                "Both cases require access control because event delivery in a dynamic publish/subscribe infrastructure based on a shared broker network may well lead to events being routed through unauthorised domains along their paths from publishers to subscribers.",
                "There are two particular benefits to sharing the publish/ subscribe infrastructure, both of which relate to the broker network.",
                "First, sharing brokers will create a physically larger network that will provide greater geographic reach.",
                "Second, increasing the inter-connectivity of brokers will allow the publish/subscribe system to provide higher faulttolerance.",
                "Figure 1 shows the multi-domain publish/subscribe network we use as an example throughout this paper.",
                "It is based on the United Kingdom Police Forces, and we show three particular sub-domains: Metropolitan Police Domain.",
                "This domain contains a set of CCTV cameras that publish information about the movements of vehicles around the London area.",
                "We have included Detective Smith as a subscriber in this domain.",
                "Congestion Charge Service Domain.",
                "The charges that are levied on the vehicles that have passed through the London Congestion Charge zone each day are issued by systems within this domain.",
                "The source numberplate recognition data comes from the cameras in the Metropolitan Police Domain.",
                "The fact that the CCS are only authorised to read a subset of the vehicle event data will exercise some of the key features of the enforceable publish/subscribe system access control presented in this paper.",
                "PITO Domain.",
                "The Police Information Technology Organisation (PITO) is the centre from which Police data standards are managed.",
                "It is the event type owner in this particular scenario.",
                "Encryption protects the confidentiality of events should they be transported through unauthorised domains.",
                "However encrypting whole events means unauthorised brokers cannot make efficient routing decisions.",
                "Our approach is to apply encryption to the individual attributes of events.",
                "This way our multi-domain access control policy works at a finer granularity - publishers and subscribers may be authorised access to a subset of the available attributes.",
                "In cases where non-encrypted events are used for routing, we can reduce the total number of events sent through the system without revealing the values of sensitive attributes.",
                "In our example scenario, the Congestion Charge Service would only be authorised to read the numberplate field of vehicle sightings - the location attribute would not be decrypted.",
                "We thus preserve the privacy of motorists while still allowing the CCS to do its job using the shared publish/subscribe infrastructure.",
                "Let us assume that a Metropolitan Police Service detective is investigating a crime and she is interested in sightings of a specific vehicle.",
                "The detective gets a court order that authorises her to subscribe to numberplate events of the specific numberplate related to her case.",
                "Current publish/subscribe access control systems enforce security at the edge of the broker network where clients connect to it.",
                "However this approach will often not be acceptable in Internet-scale systems.",
                "We propose enforcing security within the broker network as well as at the edges that event clients connect to, by encrypting event content.",
                "Publications will be encrypted with their event type specific encryption keys.",
                "By controlling access to the encryption keys, we can control access to the event types.",
                "The proposed approach allows event brokers to route events even when they have access only to a subset of the potential encryption keys.",
                "We introduce decentralised publish/subscribe systems and relevant cryptography in Section 2.",
                "In Section 3 we present our model for encrypting event content on both the event and the attribute level.",
                "Section 4 discusses managing encryption keys in multi-domain publish/subscribe systems.",
                "We analytically evaluate the performance of our proposal in Section 5.",
                "Finally Section 6 discusses related work in securing publish/subscribe systems and Section 7 provides concluding remarks. 2.",
                "BACKGROUND In this section we provide a brief introduction to decentralised publish/subscribe systems.",
                "We indicate our assumptions about multi-domain publish/subscribe systems, and describe how these assumptions influence the developments we have made from our previously published work. 2.1 Decentralised Publish/Subscribe Systems A publish/subscribe system includes publishers, subscribers, and an event service.",
                "Publishers publish events, subscribers subscribe to events of interest to them, and the event service is responsible for delivering published events to all subscribers whose interests match the given event.",
                "The event service in a decentralised publish/subscribe system is distributed over a number of broker nodes.",
                "Together these brokers form a network that is responsible for maintaining the necessary routing paths from publishers to subscribers.",
                "Clients (publishers and subscribers) connect to a local broker, which is fully trusted by the client.",
                "In our discussion we refer to the client hosting brokers as publisher hosting brokers (PHB) or subscriber hosting brokers (SHB) depending on whether the connected client is a publisher or 105 IB SHB Sub Pub Pub Sub Sub IB PHB IB IB PHB IB IB IB IB SHB SHB IBIB IB IB IB IB IB IBIB IB TO IB IB IB Metropolitan Police Domain Congestion Charge Service Domain PITO Domain Detective Smith Camera 1 Camera 2 Billing Office Statistics Office Sub Subscriber SHB Subscriber Hosting Broker Pub Publisher PHB Publisher Hosting Broker TO Type Owner IB Intermediate Broker KEY Figure 1: An overall view of our multi-domain publish/subscribe deployment a subscriber, respectively.",
                "A local broker is usually either part of the same domain as the client, or it is owned by a service provider trusted by the client.",
                "A broker network can have a static topology (e.g.",
                "Siena [3] and Gryphon [14]) or a dynamic topology (e.g.",
                "Scribe [4] and Hermes [13]).",
                "Our proposed approach will work in both cases.",
                "A static topology enables the system administrator to build trusted domains and in that way improve the efficiency of routing by avoiding unnecessary encryptions (see Sect. 3.4), which is very difficult with a dynamic topology.",
                "On the other hand, a dynamic topology allows the broker network to dynamically re-balance itself when brokers join or leave the network either in a controlled fashion or as a result of a network or node failure.",
                "Our work is based on the Hermes system.",
                "Hermes is a content-based publish/subscribe middleware that includes strong event type support.",
                "In other words, each publication is an instance of a particular predefined event type.",
                "Publications are type checked at the local broker of each publisher.",
                "Our attribute level encryption scheme assumes that events are typed.",
                "Hermes uses a structured overlay network as a transport and therefore has a dynamic topology.",
                "A Hermes publication consists of an event type identifier and a set of attribute value pairs.",
                "The type identifier is the SHA-1 hash of the name of the event type.",
                "It is used to route the publication through the event broker network.",
                "It conveniently hides the type of the publication, i.e. brokers are prevented from seeing which events are flowing through them unless they are aware of the specific event type name and identifier. 2.2 Secure Event Types Pesonen et al. introduced secure event types in [11], which can have their integrity and authenticity confirmed by checking their digital signatures.",
                "A useful side effect of secure event types are their globally unique event type and attribute names.",
                "These names can be referred to by access control policies.",
                "In this paper we use the secure name of the event type or attribute to refer to the encryption key used to encrypt the event or attribute. 2.3 Capability-Based Access Control Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems in [12].",
                "The model treats event types as resources that publishers, subscribers, and event brokers want to access.",
                "The event type owner is responsible for managing access control for an event type by issuing Simple Public Key Infrastructure (SPKI) authorisation certificates that grant the holder access to the specified event type.",
                "For example, authorised publishers will have been issued an authorisation certificate that specifies that the publisher, identified by public key, is authorised to publish instances of the event type specified in the certificate.",
                "We leverage the above mentioned access control mechanism in this paper by controlling access to encryption keys using the same authorisation certificates.",
                "That is, a publisher who is authorised to publish a given event type, is also authorised 106 to access the encryption keys used to protect events of that type.",
                "We discuss this in more detail in Sect. 4. 2.4 Threat model The goal of the proposed mechanism is to enforce access control for authorised participants in the system.",
                "In our case the first level of access control is applied when the participant tries to join the publish/subscribe network.",
                "Unauthorised event brokers are not allowed to join the broker network.",
                "Similarly unauthorised event clients are not allowed to connect to an event broker.",
                "All the connections in the broker network between event brokers and event clients utilise Transport Layer Security (TLS) [5] in order to prevent unauthorised access on the transport layer.",
                "The architecture of the publish/subscribe system means that event clients must connect to event brokers in order to be able to access the publish/subscribe system.",
                "Thus we assume that these clients are not a threat.",
                "The event client relies completely on the local event broker for access to the broker network.",
                "Therefore the event client is unable to access any events without the assistance of the local broker.",
                "The brokers on the other hand are able to analyse all events in the system that pass through them.",
                "A broker can analyse both the event traffic as well as the number and names of attributes that are populated in an event (in the case of attribute level encryption).",
                "There are viable approaches to preventing traffic analysis by inserting random events into the event stream in order to produce a uniform traffic pattern.",
                "Similarly attribute content can be padded to a standard length in order to avoid leaking information to the adversary.",
                "While traffic analysis is an important concern we have not addressed it further in this paper. 3.",
                "ENCRYPTING EVENT CONTENT We propose enforcing access control in a decentralised broker network by encrypting the contents of published events and controlling access to the encryption keys.",
                "Effectively we move the responsibility for access control from the broker network to the key managers.",
                "It is assumed that all clients have access to a broker that they can trust and that is authorised to access the event content required by the client.",
                "This allows us to implement the event content encryption within the broker network without involving the clients.",
                "By delegating the encryption tasks to the brokers, we lower the number of nodes required to have access to a given encryption key1 .",
                "The benefits are three-fold: i) fewer nodes handle the confidential encryption key so there is a smaller chance of the key being disclosed; ii) key refreshes involve fewer nodes which means that the key management algorithm will incur smaller communication and processing overheads to the publish/subscribe system; and iii) the local broker will decrypt an event once and deliver it to all subscribers, instead of each subscriber 1 The encryption keys are changed over time in response to brokers joining or leaving the network, and periodically to reduce the amount of time any single key is used.",
                "This is discussed in Sect. 4.2 having to decrypt the same event.",
                "Delegating encryption tasks to the local broker is appropriate, because encryption is a middleware feature used to enforce access control within the middleware system.",
                "If applications need to handle encrypted data in the application layer, they are free to publish encrypted data over the publish/subscribe system.",
                "We can implement encryption either at the event level or the attribute level.",
                "Event encryption is simpler, requires fewer keys, fewer independent cryptographic operations, and thus is usually faster.",
                "Attribute encryption enables access control at the attribute level, which means that we have a more expressive and powerful access control mechanism, while usually incurring a larger performance penalty.",
                "In this section we discuss encrypting event content both at the event level and the attribute level; avoiding leaking information to unauthorised brokers by encrypting subscription filters; avoiding unnecessary encryptions between authorised brokers; and finally, how event content encryption was implemented in our prototype.",
                "Note that since no publish/subscribe client is ever given access to encryption keys, any encryption performed by the brokers is necessarily completely transparent to all clients. 3.1 Event Encryption In event encryption all the event attributes are encrypted as a single block of plaintext.",
                "The event type identifier is left intact (i.e. in plaintext) in order to facilitate event routing in the broker network.",
                "The globally unique event type identifier specifies the encryption key used to encrypt the event content.",
                "Each event type in the system will have its own individual encryption key.",
                "Keys are refreshed, as discussed in Sect. 4.2.",
                "While in transit the event will consist of a tuple containing the type identifier, a publication timestamp, ciphertext, and a message authentication tag: <type id, timestamp, cipher text, authentication tag>.",
                "Event brokers that are authorised to access the event, and thus have access to the encryption key, can decrypt the event and implement content-based routing.",
                "Event brokers that do not have access to the encryption key will be forced to route the event based only on its type.",
                "That is, they will not be able to make intelligent decisions about whether events need not be transmitted down their outgoing links.",
                "Event encryption results in one encryption at the publisher hosting broker, and one decryption at each filtering intermediate broker and subscriber hosting broker that the event passes through, regardless of the number of attributes.",
                "This results in a significant performance advantage compared to attribute encryption. 3.2 Attribute Encryption In attribute encryption each attribute value in an event is encrypted separately with its own encryption key.",
                "The encryption key is identified by the attributes globally unique identifier (the globally unique event identifier defines a namespace inside which the attribute identifier is a fully qualified name). 107 The event type identifier is left intact to facilitate event routing for unauthorised brokers.",
                "The attribute identifiers are also left intact to allow authorised brokers to decrypt the attribute values with the correct keys.",
                "Brokers that are authorised to access some of the attributes in an event, can implement content-based routing over the attributes that are accessible to them.",
                "An attribute encrypted event in transit consists of the event type identifier, a publication timestamp, and a set of attribute tuples: <type id, timestamp, attributes >.",
                "Attribute tuples consist of an attribute identifier, ciphertext, and a message authentication tag: <attr id, ciphertext, authentication tag>.",
                "The attribute identifier is the SHA-1 hash of the attribute name used in the event type definition.",
                "Using the attribute identifier in the published event instead of the attribute name prevents unauthorised parties from learning which attributes are included in the publication.",
                "Compared with event encryption, attribute encryption usually results in larger processing overheads, because each attribute is encrypted separately.",
                "In the encryption process the initialisation of the encryption algorithm takes a significant portion of the total running time of the algorithm.",
                "Once the algorithm is initialised, increasing the amount of data to be encrypted does not affect the running time very much.",
                "This disparity is emphasised in attribute encryption, where an encryption algorithm must be initialised for each attribute separately, and the amount of data encrypted is relatively small.",
                "As a result attribute encryption incurs larger processing overheads when compared with event encryption which can be clearly seen from the performance results in Sect. 5.",
                "The advantage of attribute encryption is that the type owner is able to control access to the event type at the attribute level.",
                "The event type owner can therefore allow clients to have different levels of access to the same event type.",
                "Also, attribute level encryption enables content-based routing in cases where an intermediate broker has access only to some of the attributes of the event, thus reducing the overall impact of event delivery on the broker network.",
                "Therefore the choice between event and attribute encryption is a trade-off between expressiveness and performance, and depends on the requirements of the distributed application.",
                "The expressiveness provided by attribute encryption can be emulated by introducing a new event type for each group of subscribers with the same authorisation.",
                "The publisher would then publish an instance of each of these types instead of publishing just a combined event.",
                "For example, in our London police network, the congestion control cameras would have to publish one event for the CCS and another for the detective.",
                "This approach could become difficult to manage if the attributes have a variety of security properties, since a large number of event types would be required and policies and subscriptions may change dynamically.",
                "This approach creates a large number of extra events that must be routed through the network, as is shown in Sect. 5.3. 3.3 Encrypting Subscriptions In order to fully protect the confidentiality of event content we must also encrypt subscriptions.",
                "Encrypted subscriptions guarantee: i) that only authorised brokers are able to submit subscriptions to the broker network, and ii) that unauthorised brokers do not gain information about event content by monitoring which subscriptions a given event matches.",
                "For example, in the first case an unauthorised broker can create subscriptions with appropriately chosen filters, route them towards the root of the event dissemination tree, and monitor which events were delivered to it as matching the subscription.",
                "The fact that the event matched the subscription would leak information to the broker about the event content even if the event was still encrypted.",
                "In the second case, even if an unauthorised broker was unable to create subscriptions itself, it could still look at subscriptions that were routed through it, take note of the filters on those subscriptions, and monitor which events are delivered to it by upstream brokers as matching the subscription filters.",
                "This would again reveal information about the event content to the unauthorised broker.",
                "In the case of encrypting complete events, we also encrypt the complete subscription filter.",
                "The event type identifier in the subscription must be left intact to allow brokers to route events based on their topic when they are not authorised to access the filter.",
                "In such cases the unauthorised broker is required to assume that events of such a type match all filter expressions.",
                "Each attribute filter is encrypted individually, much as when encrypting a publication.",
                "In addition to the event type identifier the attribute identifiers are also left intact to allow authorised brokers to decrypt those filters that they have access to, and route the event based on its matching the decrypted filters. 3.4 Avoiding Unnecessary Cryptographic Operations Encrypting the event content is not necessary if the current broker and the next broker down the event dissemination tree have the same credentials with respect to the event type at hand.",
                "For example, one can assume that all brokers inside an organisation would share the same credentials and therefore, as long as the next broker is a member of the same domain, the event can be routed to it in plaintext.",
                "With attribute encryption it is possible that the neighbouring broker is authorised to access a subset of the decrypted attributes, in which case those attributes that the broker is not authorised to access would be passed to it encrypted.",
                "In order to know when it is safe to pass the event in plaintext form, the brokers exchange credentials as part of a handshake when they connect to each other.",
                "In cases when the brokers are able to verify each others credentials, they will add them to the routing table for future reference.",
                "If a broker acquires new credentials after the initial handshake, it will present these new credentials to its neighbours while in session.",
                "Regardless of its neighbouring brokers, the PHB will always encrypt the event content, because it is cheaper to encrypt the event once at the root of the event dissemination tree.",
                "In Hermes the rendezvous node for each event type is selected uniformly randomly (the event type name is hashed with the SHA-1 hash algorithm to produce the event type 108 PHB IBIB IB SHB RN IB SHB Figure 2: Node addressing is evenly distributed across the network, thus rendezvous nodes may lie outside the domain that owns an event type IB IB SHBPHBP S Encrypts Filters from cache Decrypts, delivers Decrypts, filters Plaintext Cached Plaintext (most data) Cached Plaintext (some data) Different domains Cyphertext KEY Figure 3: Caching decrypted data to increase efficiency when delivering to peers with equivalent security privileges identifier, then the identifier is used to select the rendezvous node in the structured overlay network).",
                "Therefore it is probable that the rendezvous node will reside outside the current domain.",
                "This situation is illustrated in the event dissemination tree in Fig. 2.",
                "So even with domain internal applications, where the event can be routed from the publisher to all subscribers in plaintext form, the event content will in most cases have to be encrypted for it to be routed to the rendezvous node.",
                "To avoid unnecessary decryptions, we attach a plaintext content cache to encrypted events.",
                "A broker fills the cache with content that it has decrypted, for example, in order to filter on the content.",
                "The cache is accessed by the broker when it delivers an event to a local subscriber after first seeing if the event matches the subscription filter, but the broker also sends the cache to the next broker with the encrypted event.",
                "The next broker can look the attribute up from the cache instead of having to decrypt it.",
                "If the event is being sent to an unauthorised broker, the cache will be discarded before the event is sent.",
                "Obviously sending the cache with the encrypted event will add to the communication cost, but this is outweighed by the saving in encryption/decryption processing.",
                "In Fig. 3 we see two separate cached plaintext streams accompanying an event depending on the inter-broker relationships in two different domains.",
                "We show in Sect. 5.2 that the overhead of sending encrypted messages with a full plaintext cache incurs almost no overhead compared to sending plaintext messages. 3.5 Implementation In our implementation we have used the EAX mode [2] of operation when encrypting events, attributes, and subscription filters.",
                "EAX is a mode of operation for block ciphers, also called an Authenticated Encryption with Associated Data (AEAD) algorithm that provides simultaneously both data confidentiality and integrity protection.",
                "The algorithm implements a two-pass scheme where during the first pass the plain text is encrypted, and on the second pass a message authentication code (MAC) is generated for the encrypted data.",
                "The EAX mode is compatible with any block cipher.",
                "We decided to use the Advanced Encryption Standard (AES) [9] algorithm in our implementation, because of its standard status and the fact that the algorithm has gone through thorough cryptanalysis during its existence and no serious vulnerabilities have been found thus far.",
                "In addition to providing both confidentiality and integrity protection, the EAX mode uses the underlying block cipher in counter mode (CTR mode) [21].",
                "A block cipher in counter mode is used to produce a stream of key bits that are then XORed with the plaintext.",
                "Effectively CTR mode transforms a block cipher into a stream cipher.",
                "The advantage of stream ciphers is that the ciphertext is the same length as the plaintext, whereas with block ciphers the plaintext must be padded to a multiple of the block ciphers block length (e.g. the AES block size is 128 bits).",
                "Avoiding padding is very important in attribute encryption, because the padding might increase the size of the attribute disproportionally.",
                "For example, a single integer might be 32 bits in length, which would be padded to 128 bits if we used a block cipher.",
                "With event encryption the message expansion is not that relevant, since the length of padding required to reach the next 16 byte multiple will probably be a small proportion of the overall plaintext length.",
                "In encryption mode the EAX algorithm takes as input a nonce (a number used once), an encryption key and the plaintext, and it returns the ciphertext and an authentication tag.",
                "In decryption mode the algorithm takes as input the encryption key, the ciphertext and the authentication tag, and it returns either the plaintext, or an error if the authentication check failed.",
                "The nonce is expanded to the block length of the underlying block cipher by passing it through an OMAC construct (see [7]).",
                "It is important that particular nonce values are not reused, otherwise the block cipher in CTR mode would produce an identical key stream.",
                "In our implementation we used the PHB defined event timestamp (64-bit value counting the milliseconds since January 1, 1970 UTC) appended by the PHBs identity (i.e. public key) as the nonce.",
                "The broker is responsible for ensuring that the timestamps increase monotonically.",
                "The authentication tag is appended to the produced cipher text to create a two-tuple.",
                "With event encryption a single tag is created for the encrypted event.",
                "With attribute 109 encryption each attribute is encrypted and authenticated separately, and they all have their individual tags.",
                "The tag length is configurable in EAX without restrictions, which allows the user to make a trade-off between the authenticity guarantees provided by EAX and the added communication overhead.",
                "We used a tag length of 16 bytes in our implementation, but one could make the tag length a publisher/subscriber defined parameter for each publication/subscription or include it in the event type definition to make it a type specific parameter.",
                "EAX also supports including unencrypted associated data in the tag calculation.",
                "The integrity of this data is protected, but it is still readable by everyone.",
                "This feature could be used with event encryption in cases where some of the event content is public and thus would be useful for content-based routing.",
                "The integrity of the data would still be protected against changes, but unauthorised brokers would be able to apply filters.",
                "We have included the event type identifier as associated data in order to protect its integrity.",
                "Other AEAD algorithms include the offset codebook mode (OCB) [17] and the counter with CBC-MAC mode (CCM) [22].",
                "Contrarily to the EAX mode the OCB mode requires only one pass over the plaintext, which makes it roughly twice as fast as EAX.",
                "Unfortunately the OCB mode has a patent application in place in the USA, which restricts its use.",
                "The CCM mode is the predecessor of the EAX mode.",
                "It was developed in order to provide a free alternative to OCB.",
                "The EAX was developed later to address some issues with CCM [18].",
                "Similarly to EAX, CCM is also a two-pass mode. 4.",
                "KEY MANAGEMENT In both encryption approaches the encrypted event content has a globally unique identifier (i.e. the event type or the attribute identifier).",
                "That identifier is used to determine the encryption key to use when encrypting or decrypting the content.",
                "Each event type, in event encryption, and attribute, in attribute encryption, has its own individual encryption key.",
                "By controlling access to the encryption key we effectively control access to the encrypted event content.",
                "In order to control access to the encryption keys we form a key group of brokers for each individual encryption key.",
                "The key group is used to refresh the key when necessary and to deliver the new key to all current members of the key group.",
                "The key group manager is responsible for verifying that a new member requesting to join the key group is authorised to do so.",
                "Therefore the key group manager must be trusted by the type owner to enforce the access control policy.",
                "We assume that the key group manager is either a trusted third party or alternatively a member of the type owners domain.",
                "In [12] Pesonen et al. proposed a capability-based access control architecture for multi-domain publish/subscribe systems.",
                "The approach uses capabilities to decentralise the access control policy amongst the publish/subscribe nodes (i.e. clients and brokers): each node holds a set of capabilities that define the authority granted to that node.",
                "Authority to access a given event type is granted by the owner of that type issuing a capability to a node.",
                "The capability defines the event type, the action, and the attributes that Type Owner ACS Broker Key Manager 1.Grant authorisation for Number Platekey 2.Broker requests to join Number Plate key group 5.If the broker satisfies all checks,they will begin receiving appropriate keys. 3.Key manager may check brokers credentials at the Access Control Service 4.Key manager may check that the Type Owner permits access Figure 4: The steps involved for a broker to be successful in joining a key group the node is authorised to access.",
                "For example, a tuple <NP, subscribe, *> would authorise the owner to subscribe to Numberplate events with access to all attributes in the published events.",
                "The sequence of events required for a broker to successfully join a key group is shown in Fig. 4.",
                "Both the client hosting broker and the client must be authorised to make the clients request.",
                "That is, if the client makes a subscription request for Numberplate events, both the client and the local broker must be authorised to subscribe to Numberplate events.",
                "This is because from the perspective of the broker network, the local broker acts as a proxy for the client.",
                "We use the same capabilities to authorise membership in a key group that are used to authorise publish/subscribe requests.",
                "Not doing so could lead to the inconsistent situation where a SHB is authorised to make a subscription on behalf of its clients, but is not able to decrypt incoming event content for them.",
                "In the Numberplate example above, the local broker holding the above capability is authorised to join the Numberplate key group as well as the key groups for all the attributes in the Numberplate event type. 4.1 Secure Group Communication Event content encryption in a decentralised multi-domain publish/subscribe system can be seen as a sub-category of secure group communication.",
                "In both cases the key management system must scale well with the number of clients, clients might be spread over large geographic areas, there might be high rates of churn in group membership, and all members must be synchronised with each other in time in order to use the same encryption key at the same time.",
                "There are a number of scalable key management protocols for secure group communication [15].",
                "We have implemented the One-Way Function Tree (OFT) [8] protocol as a proof of concept.",
                "We chose to implement OFT, because of its relatively simplicity and good performance.",
                "Our implementation uses the same structured overlay network used by the broker network as a transport.",
                "The OFT protocol is based on a binary tree where the participants are at the leaves of the tree.",
                "It scales in log2n in processing and communication costs, as well as in the size of the state stored at each participant, which we have verified in our simulations. 4.2 Key Refreshing Traditionally in group key management schemes the encryption key is refreshed when a new member joins the group, an 110 existing member leaves the group, or a timer expires.",
                "Refreshing the key when a new member joins provides backward secrecy, i.e. the new member is prevented from accessing old messages.",
                "Similarly refreshing the key when an existing member leaves provides forward secrecy, i.e. the old member is prevented from accessing future messages.",
                "Timer triggered refreshes are issued periodically in order to limit the damage caused by the current key being compromised.",
                "Even though the state-of-the-art key management protocols are efficient, refreshing the key unnecessarily introduces extra traffic and processing amongst the key group members.",
                "In our case key group membership is based on the broker holding a capability that authorises it to join the key group.",
                "The capability has a set of validity conditions that in their simplest form define a time period when the certificate is valid, and in more complex cases involve on-line checks back towards the issuer.",
                "In order to avoid unnecessary key refreshes the key manager looks at the certificate validity conditions of the joining or leaving member.",
                "In case of a joining member, if the manager can ascertain that the certificate was valid at the time of the previous key refresh, a new key refresh can be avoided.",
                "Similarly, instead of refreshing the key immediately when a member leaves the key group, the key manager can cache their credentials and refresh the key only when the credentials expire.",
                "These situations are both illustrated in Fig.5.",
                "It can be assumed that the credentials granted to brokers are relatively static, i.e. once a domain is authorised to access an event type, the authority will be delegated to all brokers of that domain, and they will have the authority for the foreseeable future.",
                "More fine grained and dynamic access control would be implemented at the edge of the broker network between the clients and the client hosting brokers.",
                "When an encryption key is refreshed the new key is tagged with a timestamp.",
                "The encryption key to use for a given event is selected based on the events publication timestamp.",
                "The old keys will be kept for a reasonable amount of time in order to allow for some clock drift.",
                "Setting this value is part of the key management protocol, although exactly how long this time should be will depend on the nature of the application and possibly the size of the network.",
                "It can be configured independently per key group if necessary. 5.",
                "EVALUATION In order to evaluate the performance of event content encryption we have implemented both encryption approaches running over our implementation of the Hermes publish/ subscribe middleware.",
                "The implementation supports three modes: plaintext content, event encryption, and attribute encryption, in a single publish/subscribe system.",
                "We ran three performance tests in a discrete event simulator.",
                "The simulator was run on an Intel P4 3.2GHz workstation with 1GB of main memory.",
                "We decided to run the tests on an event simulator instead of an actual deployed system in order to be able to measure to aggregate time it takes to handle all messages in the system.",
                "The following sections describe the specific test setups and the results in more detail. 5.1 End-to-End Overhead The end-to-end overhead test shows how much the overall message throughput of the simulator was affected by event content encryption.",
                "We formed a broker network with two brokers, attached a publisher to one of them and a subscriber to the other one.",
                "The subscriber subscribed to the advertised event type without any filters, i.e. each publication matched the subscribers publication and thus was delivered to the subscriber.",
                "The test measures the combined time it takes to publish and deliver 100,000 events.",
                "If the content is encrypted this includes both encrypting the content at the PHB and decrypting it at the SHB.",
                "In the test the number of attributes in the event type is increased from 1 to 25 (the x-axis).",
                "Each attribute is set to a 30 character string.",
                "For each number of attributes in the event type the publisher publishes 100,000 events, and the elapsed time is measured to derive the message throughput.",
                "The test was repeated five times for each number of attributes and we use the average of all iterations in the graph, but the results were highly consistent so the standard deviation is not shown.",
                "The same tests were run with no content encryption, event encryption, and attribute encryption.",
                "As can be seen in Fig. 6, event content encryption introduces a large overhead compared to not using encryption.",
                "The throughput when using attribute encryption with an event type with one attribute is 46% of the throughput achieved when events are sent in plaintext.",
                "When the number of attributes increases the performance gap increases as well: with ten attributes the performance with attribute encryption has decreased to 11.7% of plaintext performance.",
                "Event encryption fares better, because of fewer encryption operations.",
                "The increase in the amount of encrypted data does not affect the performance as much as the number of individual encryption operations does.",
                "The difference in performance with event encryption and attribute encryption with only one attribute is caused by the Java object serialisation mechanism: in the event encryption case the whole attribute structure is serialised, which results in more objects than serialising a single attribute value.",
                "A more efficient implementation would provide its own marshalling mechanism.",
                "Note that the EAX implementation we use runs the nonce (i.e. initialisation vector) through an OMAC construct to increase its randomness.",
                "Since the nonce is not required to be kept secret (just unique), there is a potential time/space trade-off we have not yet investigated in attaching extra nonce attributes that have already had this OMAC construct applied to them. 5.2 Domain Internal Events We explained in Sect. 3.4 that event content decryption and encryption can be avoided if both brokers are authorised to access the event content.",
                "This test was designed to show that the use of the encrypted event content mechanism between two authorised brokers incurs only a small performance overhead.",
                "In this test we again form a broker network with two brokers. 111 Key refresh schedule Broker 1 joining and leaving the key group Broker 2 joining and leaving the key group Actual key refresh times Time One day Brokers key group credentials are valid Actual join time Actual leave time One day One day Figure 5: How the key refresh schedule is affected by brokers joining and leaving key groups 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 6: Throughput of Events in a Simulator Both brokers are configured with the same credentials.",
                "The publisher is attached to one of the brokers and the subscriber to the other, and again the subscriber does not specify any filters in its subscription.",
                "The publisher publishes 100,000 events and the test measures the elapsed time in order to derive the systems message throughput.",
                "The event content is encrypted outside the timing measurement, i.e. the encryption cost is not included in the measurements.",
                "The goal is to model an environment where a broker has received a message from another authorised broker, and it routes the event to a third authorised broker.",
                "In this scenario the middle broker does not need to decrypt nor encrypt the event content.",
                "As shown in Fig. 2, the elapsed time was measured as the number of attributes in the published event was increased from 1 to 25.",
                "The attribute values in each case are 30 character strings.",
                "Each test is repeated five times, and we use the average of all iterations in the graph.",
                "The same test was then repeated with no encryption, event encryption and attribute encryption turned on.",
                "The encrypted modes follow each other very closely.",
                "Predictably, the plaintext mode performs a little better for all attribute counts.",
                "The difference can be explained partially by the encrypted events being larger in size, because they include both the plaintext and the encrypted content in this test.",
                "The difference in performance is 3.7% with one attribute and 2.5% with 25 attributes.",
                "We believe that the roughness of the graphs can be explained by the Java garbage collector interfering with the simulation.",
                "The fact that all three graphs show the same irregularities supports this theory. 112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 20 25 MessagesperSecond Number of Attributes No Encryption Attribute Encryption Whole-content Encryption Figure 7: Throughput of Domain Internal Events 5.3 Communication Overhead Through the definition of multiple event types, it is possible to emulate the expressiveness of attribute encryption using only event content encryption.",
                "The last test we ran was to show the communication overhead caused by this emulation technique, compared to using real attribute encryption.",
                "In the test we form a broker network of 2000 brokers.",
                "We attach one publisher to one of the brokers, and an increasing number of subscribers to the remaining brokers.",
                "Each subscriber simulates a group of subscribers that all have the same access rights to the published event.",
                "Each subscriber group has its own event type in the test.",
                "The outcome of this test is shown in Fig. 8.",
                "The number of subscriber groups is increased from 1 to 50 (the x-axis).",
                "For each n subscriber groups the publisher publishes one event to represent the use of attribute encryption and n events representing the events for each subscriber group.",
                "We count the number of hops each publication makes through the broker network (y-axis).",
                "Note that Fig. 8 shows workloads beyond what we would expect in common usage, in which many event types are likely to contain fewer than ten attributes.",
                "The subscriber groups used in this test represent disjoint permission sets over such event attributes.",
                "The number of these sets can be determined from the particular access control policy in use, but will be a value less than or equal to the factorial of the number of attributes in a given event type.",
                "The graphs indicate that attribute encryption performs better than event encryption even for small numbers of subscriber groups.",
                "Indeed, with only two subscriber groups (e.g. the case with Numberplate events) the hop count increases from 7.2 hops for attribute encryption to 16.6 hops for event encryption.",
                "With 10 subscriber groups the corresponding numbers are 24.2 and 251.0, i.e. an order of magnitude difference. 6.",
                "RELATED WORK Wang et al. have categorised the various security issues that need to be addressed in publish/subscribe systems in the future in [20].",
                "The paper is a comprehensive overview of security issues in publish/subscribe systems and as such tries to draw attention to the issues rather than providing solutions.",
                "Bacon et al. in [1] examine the use of role-based access control in multi-domain, distributed publish/subscribe systems.",
                "Their work is complementary to this paper: distributed RBAC is one potential policy formalism that might use the enforcement mechanisms we have presented.",
                "Opyrchal and Prakash address the problem of event confidentiality at the last link between the subscriber and the SHB in [10].",
                "They correctly state that a secure group communication approach is infeasible in an environment like publish/subscribe that has highly dynamic group memberships.",
                "As a solution they propose a scheme utilising key caching and subscriber grouping in order to minimise the number of required encryptions when delivering a publication from a SHB to a set of matching subscribers.",
                "We assume in our work that the SHB is powerful enough to man113 1 10 100 1000 10000 0 5 10 15 20 25 30 35 40 45 50 NumberofHopsinTotal Number of Subscription Groups Attribute Encryption Whole-content Encryption Figure 8: Hop Counts When Emulating Attribute Encryption age a TLS secured connection for each local subscriber.",
                "Both Srivatsa et al. [19] and Raiciu et al. [16] present mechanisms for protecting the confidentiality of messages in decentralised publish/subscribe infrastructures.",
                "Compared to our work both papers aim to provide the means for protecting the integrity and confidentiality of messages whereas the goal for our work is to enforce access control inside the broker network.",
                "Raiciu et al. assume in their work that none of the brokers in the network are trusted and therefore all events are encrypted from publisher to subscriber and that all matching is based on encrypted events.",
                "In contrast, we assume that some of the brokers on the path of a publication are trusted to access that publication and are therefore able to implement event matching.",
                "We also assume that the publisher and subscriber hosting brokers are always trusted to access the publication.",
                "The contributions of Srivatsa et al. and Raiciu et al. are complementary to the contributions in this paper.",
                "Finally, Fiege et al. address the related topic of event visibility in [6].",
                "While the work concentrated on using scopes as mechanism for structuring large-scale event-based systems, the notion of event visibility does resonate with access control to some extent. 7.",
                "CONCLUSIONS Event content encryption can be used to enforce an access control policy while events are in transit in the broker network of a multi-domain publish/subscribe system.",
                "Encryption causes an overhead, but i) there may be no alternative when access control is required, and ii) the performance penalty can be lessened with implementation optimisations, such as passing cached plaintext content alongside encrypted content between brokers with identical security credentials.",
                "This is particularly appropriate if broker-to-broker connections are secured by default so that wire-sniffing is not an issue.",
                "Attribute level encryption can be implemented in order to enforce fine-grained access control policies.",
                "In addition to providing attribute-level access control, attribute encryption enables partially authorised brokers to implement contentbased routing based on the attributes that are accessible to them.",
                "Our experiments show that i) by caching plaintext and ciphertext content when possible, we are able to deliver comparable performance to plaintext events, and ii) that attribute encryption within an event incurs far less overhead than defining separate event types for the attributes that need different levels of protection.",
                "In environments comprising multiple domains, where eventbrokers have different security credentials, we have quantified how a trade-off can be made between performance and expressiveness.",
                "Acknowledgements We would like to thank the anonymous reviewers for their very helpful comments.",
                "Lauri Pesonen is supported by EPSRC (GR/T28164) and the Nokia Foundation.",
                "David Eyers is supported by EPSRC (GR/S94919). 114 8.",
                "REFERENCES [1] J. Bacon, D. M. Eyers, K. Moody, and L. I. W. Pesonen.",
                "Securing publish/subscribe for multi-domain systems.",
                "In G. Alonso, editor, Middleware, volume 3790 of Lecture Notes in Computer Science, pages 1-20.",
                "Springer, 2005. [2] M. Bellare, P. Rogaway, and D. Wagner.",
                "Eax: A conventional authenticated-encryption mode.",
                "Cryptology ePrint Archive, Report 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum, and A. L. Wolf.",
                "Design and evaluation of a wide-area event notification service.",
                "ACM Transactions on Computer Systems, 19(3):332-383, Aug. 2001. [4] M. Castro, P. Druschel, A. Kermarrec, and A. Rowstron.",
                "SCRIBE: A large-scale and decentralized application-level multicast infrastructure.",
                "IEEE Journal on Selected Areas in communications (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks and C. Allen.",
                "The TLS protocol, version 1.0.",
                "RFC 2246, Internet Engineering Task Force, Jan. 1999. [6] L. Fiege, M. Mezini, G. M uhl, and A. P. Buchmann.",
                "Engineering event-based systems with scopes.",
                "In ECOOP 02: Proceedings of the 16th European Conference on Object-Oriented Programming, pages 309-333, London, UK, 2002.",
                "Springer-Verlag. [7] T. Iwata and I.",
                "A. Iurosawa.",
                "OMAC: One-key CBC MAC, Jan. 14 2002. [8] D. A. McGrew and A. T. Sherman.",
                "Key establishment in large dynamic groups using one-way function trees.",
                "Technical Report 0755, TIS Labs at Network Associates, Inc., Glenwood, MD, May 1998. [9] National Institute of Standards and Technology (NIST).",
                "Advanced Encryption Standard (AES).",
                "Federal Information Processing Standards Publication (FIPS PUB) 197, Nov. 2001. [10] L. Opyrchal and A. Prakash.",
                "Secure distribution of events in content-based publish subscribe systems.",
                "In Proc. of the 10th USENIX Security Symposium.",
                "USENIX, Aug. 2001. [11] L. I. W. Pesonen and J. Bacon.",
                "Secure event types in content-based, multi-domain publish/subscribe systems.",
                "In SEM 05: Proceedings of the 5th international workshop on Software engineering and middleware, pages 98-105, New York, NY, USA, Sept. 2005.",
                "ACM Press. [12] L. I. W. Pesonen, D. M. Eyers, and J. Bacon.",
                "A capabilities-based access control architecture for multi-domain publish/subscribe systems.",
                "In Proceedings of the Symposium on Applications and the Internet (SAINT 2006), pages 222-228, Phoenix, AZ, Jan. 2006.",
                "IEEE. [13] P. R. Pietzuch and J. M. Bacon.",
                "Hermes: A distributed event-based middleware architecture.",
                "In Proc. of the 1st International Workshop on Distributed Event-Based Systems (DEBS02), pages 611-618, Vienna, Austria, July 2002.",
                "IEEE. [14] P. R. Pietzuch and S. Bhola.",
                "Congestion control in a reliable scalable message-oriented middleware.",
                "In M. Endler and D. Schmidt, editors, Proc. of the 4th Int.",
                "Conf. on Middleware (Middleware 03), pages 202-221, Rio de Janeiro, Brazil, June 2003.",
                "Springer. [15] S. Rafaeli and D. Hutchison.",
                "A survey of key management for secure group communication.",
                "ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu and D. S. Rosenblum.",
                "Enabling confidentiality in content-based publish/subscribe infrastructures.",
                "In Securecomm 06: Proceedings of the Second IEEE/CreatNet International Conference on Security and Privacy in Communication Networks, 2006. [17] P. Rogaway, M. Bellare, J.",
                "Black, and T. Krovetz.",
                "OCB: a block-cipher mode of operation for efficient authenticated encryption.",
                "In ACM Conference on Computer and Communications Security, pages 196-205, 2001. [18] P. Rogaway and D. Wagner.",
                "A critique of CCM, Feb. 2003. [19] M. Srivatsa and L. Liu.",
                "Securing publish-subscribe overlay services with eventguard.",
                "In CCS 05: Proceedings of the 12th ACM conference on Computer and communications security, pages 289-298, New York, NY, USA, 2005.",
                "ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, and A. L. Wolf.",
                "Security issues and requirements in internet-scale publish-subscribe systems.",
                "In Proc. of the 35th Annual Hawaii International Conference on System Sciences (HICSS02), Big Island, HI, USA, 2002.",
                "IEEE. [21] D. Whitfield and M. Hellman.",
                "Privacy and authentication: An introduction to cryptography.",
                "In Proceedings of the IEEE, volume 67, pages 397-427, 1979. [22] D. Whiting, R. Housley, and N. Ferguson.",
                "Counter with CBC-MAC (CCM).",
                "RFC 3610, Internet Engineering Task Force, Sept. 2003. 115"
            ],
            "original_annotated_samples": [
                "However, publish/subscribe systems that do span a wide geographic area are likely to also span multiple <br>administrative domain</br>s, be they independent <br>administrative domain</br>s inside a single organisation, multiple independent organisations, or a combination of the two.",
                "While the communication capabilities of publish/subscribe systems are well proved, spanning multiple <br>administrative domain</br>s is likely to require addressing security considerations."
            ],
            "translated_annotated_samples": [
                "Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples <br>dominios administrativos</br>, ya sean <br>dominios administrativos</br> independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos.",
                "Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples <br>dominios administrativos</br> requiera abordar consideraciones de seguridad."
            ],
            "translated_text": "Control de acceso reforzado por cifrado en redes de publicación/suscripción multi-dominio dinámicas de Lauri I.W. Los sistemas de publicación/suscripción proporcionan una infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplia área. Los sistemas de publicación/suscripción a gran escala probablemente emplearán componentes de la red de transporte de eventos propiedad de organizaciones cooperativas pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación creciente. Este documento amplía trabajos anteriores para presentar y evaluar una infraestructura segura de publicación/suscripción multi-dominio que respalda y hace cumplir un control de acceso detallado sobre los atributos individuales de los tipos de eventos. La actualización de claves nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los brokers de eventos se unen y abandonan la red. Demostramos que los costos de tiempo y espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de encriptación, y mediante el uso de almacenamiento en caché para disminuir las desencriptaciones innecesarias. Mostramos que nuestro enfoque tiene un menor sobrecosto de comunicación general que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en redes de publicación/suscripción. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos-Aplicaciones Distribuidas Términos Generales Seguridad, Rendimiento 1. La publicación/suscripción es muy adecuada como mecanismo de comunicación para construir aplicaciones distribuidas a escala de Internet basadas en eventos. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asincrónicos entre ellos. En sistemas de publicación/suscripción a escala verdaderamente de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de intermediación interconectados que abarcan una amplia área geográfica (y, por lo tanto, de red). Sin embargo, los sistemas de publicación/suscripción que abarcan una amplia área geográfica probablemente también abarcarán múltiples <br>dominios administrativos</br>, ya sean <br>dominios administrativos</br> independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de ambos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcar múltiples <br>dominios administrativos</br> requiera abordar consideraciones de seguridad. Dado que la seguridad y el control de acceso son casi lo opuesto a la desvinculación, hasta ahora relativamente poca investigación de publicación/suscripción se ha centrado en la seguridad. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallos y auto recuperación en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al. proponen una arquitectura de control de acceso basada en capacidades y multidominio para sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos a publicar y suscribirse a tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que se conecta el cliente para acceder al sistema de publicación/suscripción. El enfoque implementa control de acceso en el borde de la red del broker y asume que todos los brokers pueden ser confiados para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado tiene libertad para leer y escribir cualquier evento que pase a través de él en su camino desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno multi-dominio en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de intermediarios mediante la encriptación del contenido de los eventos, y que la política dicte los controles sobre las claves de encriptación necesarias. Con el contenido del evento encriptado, solo aquellos corredores autorizados para acceder a las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Movemos de manera efectiva la aplicación del control de acceso de los corredores a los gestores de claves de cifrado. Esperamos que el control de acceso deba ser aplicado en un sistema de publicación/suscripción multi-dominio cuando múltiples organizaciones forman un sistema de publicación/suscripción compartido pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales a través del sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de intermediarios compartidos puede llevar a que los eventos sean enrutados a través de dominios no autorizados en su camino desde los editores hasta los suscriptores. Hay dos beneficios particulares al compartir la infraestructura de publicación/suscripción, ambos relacionados con la red de intermediarios. Primero, los corredores de intercambio crearán una red físicamente más grande que proporcionará un alcance geográfico mayor. Segundo, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallos. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo a lo largo de este documento. Está basado en las Fuerzas de Policía del Reino Unido, y mostramos tres subdominios particulares: Dominio de la Policía Metropolitana. Este dominio contiene un conjunto de cámaras de circuito cerrado de televisión que publican información sobre los movimientos de vehículos en el área de Londres. Hemos incluido al Detective Smith como suscriptor en este dominio. Dominio del Servicio de Cargo por Congestión. Los cargos que se aplican a los vehículos que han pasado por la zona de la tarifa de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de matrículas provienen de las cámaras en el Dominio de la Policía Metropolitana. El hecho de que los CCS solo estén autorizados para leer un subconjunto de los datos de eventos del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción ejecutable presentado en este documento. Dominio PITO. La Organización de Tecnología de la Información de la Policía (PITO) es el centro desde el cual se gestionan los estándares de datos de la Policía. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos en caso de que sean transportados a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso de múltiples dominios funciona con una granularidad más fina: los editores y suscriptores pueden tener autorización para acceder a un subconjunto de los atributos disponibles. En los casos en los que se utilizan eventos no encriptados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de atributos sensibles. En nuestro escenario de ejemplo, el Servicio de Carga por Congestión solo estaría autorizado para leer el campo de la matrícula de los avistamientos de vehículos; el atributo de ubicación no sería descifrado. Así preservamos la privacidad de los conductores mientras permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un crimen y está interesada en avistamientos de un vehículo específico. El detective obtiene una orden judicial que le autoriza a suscribirse a los eventos de matrícula del número de matrícula específico relacionado con su caso. Los sistemas actuales de control de acceso de publicación/suscripción hacen cumplir la seguridad en el borde de la red del intermediario donde los clientes se conectan a él. Sin embargo, este enfoque a menudo no será aceptable en sistemas a escala de Internet. Proponemos reforzar la seguridad dentro de la red del intermediario, así como en los extremos a los que se conectan los clientes de eventos, mediante la encriptación del contenido del evento. Las publicaciones serán encriptadas con sus claves de encriptación específicas del tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los intermediarios de eventos dirigir eventos incluso cuando solo tienen acceso a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para cifrar el contenido del evento tanto a nivel del evento como a nivel del atributo. La sección 4 trata sobre la gestión de claves de cifrado en sistemas de publicación/suscripción multi-dominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 discute el trabajo relacionado en la seguridad de los sistemas de publicación/suscripción y la Sección 7 ofrece observaciones finales. ANTECEDENTES En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestras suposiciones sobre los sistemas de publicación/suscripción multi-dominio, y describimos cómo estas suposiciones influyen en los desarrollos que hemos realizado a partir de nuestro trabajo previamente publicado. 2.1 Sistemas de Publicación/Suscripción Descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar los eventos publicados a todos los suscriptores cuyos intereses coincidan con el evento dado. El servicio de eventos en un sistema de publicación/suscripción descentralizado se distribuye en varios nodos de intermediarios. Juntos, estos corredores forman una red que es responsable de mantener las rutas de enrutamiento necesarias desde los editores hasta los suscriptores. Los clientes (editores y suscriptores) se conectan a un intermediario local, el cual es completamente confiable para el cliente. En nuestra discusión nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios en quien el cliente confía. Una red de corredores puede tener una topología estática (por ejemplo, Siena [3] y Gryphon [14]) o una topología dinámica (por ejemplo, Escribe [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios de confianza y de esa manera mejorar la eficiencia del enrutamiento al evitar encriptaciones innecesarias (ver Sección 3.4), lo cual es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se reequilibre dinámicamente cuando los corredores se unen o abandonan la red, ya sea de manera controlada o como resultado de una falla en la red o en un nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un sólido soporte para tipos de eventos. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones son verificadas en el corredor local de cada editorial. Nuestro esquema de cifrado a nivel de atributo asume que los eventos están tipificados. Hermes utiliza una red superpuesta estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valores de atributos. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para dirigir la publicación a través de la red del intermediario de eventos. Convenientemente oculta el tipo de publicación, es decir, los corredores no pueden ver qué eventos están pasando a través de ellos a menos que estén al tanto del nombre y del identificador específico del tipo de evento. 2.2 Tipos de Eventos Seguros Pesonen et al. introdujeron tipos de eventos seguros en [11], cuya integridad y autenticidad pueden ser confirmadas mediante la verificación de sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son sus nombres de tipo de evento y atributos globalmente únicos. Estos nombres pueden ser referidos por políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para encriptar el evento o atributo. 2.3 Control de Acceso Basado en Capacidades Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multidominio en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de gestionar el control de acceso para un tipo de evento emitiendo certificados de autorización de Infraestructura de Clave Pública Simple (SPKI) que otorgan al titular acceso al tipo de evento especificado. Por ejemplo, a los editores autorizados se les habrá expedido un certificado de autorización que especifica que el editor, identificado por la clave pública, está autorizado para publicar instancias del tipo de evento especificado en el certificado. En este documento aprovechamos el mecanismo de control de acceso mencionado anteriormente al controlar el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor autorizado para publicar un determinado tipo de evento también está autorizado para acceder a las claves de cifrado utilizadas para proteger eventos de ese tipo. Discutimos esto con más detalle en la Sección 4. 2.4 Modelo de amenazas El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no tienen permitido unirse a la red de corredores. Del mismo modo, los clientes de eventos no autorizados no tienen permitido conectarse a un intermediario de eventos. Todas las conexiones en la red de corredores entre corredores de eventos y clientes de eventos utilizan Seguridad de la Capa de Transporte (TLS) [5] para prevenir el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción implica que los clientes de eventos deben conectarse a los intermediarios de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, asumimos que estos clientes no representan una amenaza. El cliente del evento depende completamente del corredor de eventos local para acceder a la red del corredor. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, son capaces de analizar todos los eventos en el sistema que pasan a través de ellos. Un corredor puede analizar tanto el tráfico del evento como el número y los nombres de los atributos que se completan en un evento (en el caso del cifrado a nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico mediante la inserción de eventos aleatorios en el flujo de eventos con el fin de producir un patrón de tráfico uniforme. Del mismo modo, el contenido del atributo se puede rellenar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento. 3. CIFRADO DE CONTENIDO DE EVENTOS Proponemos hacer cumplir el control de acceso en una red de intermediarios descentralizada mediante el cifrado de los contenidos de los eventos publicados y controlando el acceso a las claves de cifrado. Efectivamente trasladamos la responsabilidad del control de acceso de la red de intermediarios a los gestores de claves. Se asume que todos los clientes tienen acceso a un corredor en quien puedan confiar y que esté autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado del contenido del evento dentro de la red del intermediario sin involucrar a los clientes. Al delegar las tareas de encriptación a los corredores, reducimos el número de nodos necesarios para tener acceso a una clave de encriptación determinada. Los beneficios son triples: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay menos posibilidades de que la clave sea revelada; ii) las actualizaciones de clave involucran menos nodos, lo que significa que el algoritmo de gestión de claves incurrirá en menores costos de comunicación y procesamiento para el sistema de publicación/suscripción; y iii) el broker local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de a cada suscriptor. Las claves de cifrado se cambian con el tiempo en respuesta a los brokers que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo que se utiliza una sola clave. Esto se discute en la Sección 4.2 teniendo que descifrar el mismo evento. Delegar las tareas de encriptación al intermediario local es apropiado, ya que la encriptación es una característica del middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones necesitan manejar datos encriptados en la capa de la aplicación, pueden publicar datos encriptados a través del sistema de publicación/suscripción. Podemos implementar el cifrado ya sea a nivel de evento o a nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, suele ser más rápido. El cifrado de atributos permite el control de acceso a nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, aunque generalmente conlleva una penalización de rendimiento mayor. En esta sección discutimos la encriptación del contenido del evento tanto a nivel del evento como a nivel del atributo; evitando la filtración de información a corredores no autorizados mediante la encriptación de los filtros de suscripción; evitando encriptaciones innecesarias entre corredores autorizados; y finalmente, cómo se implementó la encriptación del contenido del evento en nuestro prototipo. Ten en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a las claves de cifrado, cualquier cifrado realizado por los brokers es necesariamente completamente transparente para todos los clientes. 3.1 Cifrado de Eventos En el cifrado de eventos, todos los atributos del evento se cifran como un único bloque de texto plano. El identificador del tipo de evento se deja intacto (es decir, en texto plano) para facilitar el enrutamiento de eventos en la red de intermediarios. El identificador del tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de encriptación individual. Las claves se actualizan, como se discute en la Sección 4.2. Durante el tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, el texto cifrado y una etiqueta de autenticación del mensaje: <identificador de tipo, marca de tiempo, texto cifrado, etiqueta de autenticación>. Los brokers de eventos que están autorizados para acceder al evento, y por lo tanto tienen acceso a la clave de encriptación, pueden desencriptar el evento e implementar el enrutamiento basado en contenido. Los intermediarios de eventos que no tengan acceso a la clave de encriptación se verán obligados a enrutar el evento basándose únicamente en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado del evento resulta en un cifrado en el broker que aloja al publicador, y una descifrado en cada broker intermedio de filtrado y en el broker que aloja al suscriptor por el que pase el evento, independientemente del número de atributos. Esto resulta en una ventaja de rendimiento significativa en comparación con el cifrado de atributos. 3.2 Cifrado de Atributos En el cifrado de atributos, cada valor de atributo en un evento se cifra por separado con su propia clave de cifrado. La clave de encriptación se identifica por los atributos identificador único global (el identificador único global de evento define un espacio de nombres dentro del cual el identificador de atributo es un nombre completamente calificado). El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se mantienen intactos para permitir que los corredores autorizados descifren los valores de atributos con las claves correctas. Los corredores autorizados para acceder a algunos de los atributos en un evento pueden implementar enrutamiento basado en contenido sobre los atributos a los que tienen acceso. Un evento con atributos encriptados en tránsito consta del identificador del tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <identificador de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensaje: <id de atributo, texto cifrado, etiqueta de autenticación>. El identificador del atributo es el hash SHA-1 del nombre del atributo utilizado en la definición del tipo de evento. El uso del identificador de atributo en el evento publicado en lugar del nombre del atributo evita que partes no autorizadas aprendan qué atributos están incluidos en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente resulta en mayores costos de procesamiento, ya que cada atributo se cifra por separado. En el proceso de encriptación, la inicialización del algoritmo de encriptación ocupa una parte significativa del tiempo total de ejecución del algoritmo. Una vez que el algoritmo está inicializado, aumentar la cantidad de datos a ser encriptados no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde un algoritmo de cifrado debe ser inicializado para cada atributo por separado, y la cantidad de datos cifrados es relativamente pequeña. Como resultado, el cifrado de atributos conlleva mayores costos de procesamiento en comparación con el cifrado de eventos, lo cual se puede ver claramente en los resultados de rendimiento en la Sección 5. La ventaja del cifrado de atributos es que el propietario del tipo puede controlar el acceso al tipo de evento a nivel de atributo. El propietario del tipo de evento puede permitir que los clientes tengan diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado a nivel de atributo permite el enrutamiento basado en el contenido en casos en los que un intermediario solo tiene acceso a algunos de los atributos del evento, reduciendo así el impacto general de la entrega de eventos en la red de intermediarios. Por lo tanto, la elección entre cifrado de eventos y cifrado de atributos es un compromiso entre expresividad y rendimiento, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos puede ser emulada introduciendo un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. El editor publicaría entonces una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría volverse difícil de gestionar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría un gran número de tipos de eventos y las políticas y suscripciones podrían cambiar dinámicamente. Este enfoque crea un gran número de eventos adicionales que deben ser enrutados a través de la red, como se muestra en la Sección 5.3. 3.3 Cifrado de suscripciones. Para proteger completamente la confidencialidad del contenido de los eventos, también debemos cifrar las suscripciones. Las suscripciones encriptadas garantizan: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido del evento al monitorear qué suscripciones coincide con un evento dado. Por ejemplo, en el primer caso un corredor no autorizado puede crear suscripciones con filtros adecuadamente elegidos, dirigirlas hacia la raíz del árbol de difusión de eventos y monitorear qué eventos le fueron entregados como coincidentes con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento incluso si el evento seguía encriptado. En el segundo caso, aunque un corredor no autorizado no pudiera crear suscripciones por sí mismo, aún podría revisar las suscripciones que se dirigían a través de él, tomar nota de los filtros de esas suscripciones y monitorear qué eventos le son entregados por corredores aguas arriba que coincidan con los filtros de suscripción. Esto revelaría nuevamente información sobre el contenido del evento al corredor no autorizado. En el caso de cifrar eventos completos, también ciframos el filtro de suscripción completo. El identificador del tipo de evento en la suscripción debe mantenerse intacto para permitir a los corredores de bolsa dirigir los eventos según su tema cuando no estén autorizados a acceder al filtro. En tales casos, se requiere que el corredor no autorizado asuma que los eventos de ese tipo coinciden con todas las expresiones de filtro. Cada filtro de atributo se encripta de forma individual, al igual que al encriptar una publicación. Además del identificador del tipo de evento, los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifren esos filtros a los que tienen acceso, y enrutan el evento en función de si coincide con los filtros descifrados. 3.4 Evitar Operaciones Criptográficas Innecesarias No es necesario cifrar el contenido del evento si el corredor actual y el siguiente corredor en el árbol de difusión de eventos tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede asumir que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, siempre que el siguiente corredor sea miembro del mismo dominio, el evento puede ser enrutado hacia él en texto plano. Con el cifrado de atributos es posible que el corredor vecino esté autorizado para acceder a un subconjunto de los atributos descifrados, en cuyo caso los atributos a los que el corredor no está autorizado a acceder se le pasarían cifrados. Para saber cuándo es seguro pasar el evento en forma de texto plano, los corredores intercambian credenciales como parte de un saludo cuando se conectan entre sí. En los casos en que los corredores puedan verificar las credenciales de los demás, los agregarán a la tabla de enrutamiento para futuras referencias. Si un corredor adquiere nuevas credenciales después del saludo inicial, presentará estas nuevas credenciales a sus vecinos mientras esté en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, ya que es más económico cifrar el evento una vez en la raíz del árbol de difusión de eventos. En Hermes, el nodo de encuentro para cada tipo de evento se selecciona de forma uniformemente aleatoria (el nombre del tipo de evento se hashea con el algoritmo de hash SHA-1 para producir el tipo de evento 108 PHB IBIB IB SHB RN IB SHB Figura 2: La dirección de los nodos está distribuida de manera uniforme en toda la red, por lo que los nodos de encuentro pueden encontrarse fuera del dominio que posee un tipo de evento IB IB SHBPHBP S Encripta Filtra desde la caché Desencripta, entrega Desencripta, filtra Texto plano Caché de texto plano (la mayoría de los datos) Caché de texto plano (algunos datos) Diferentes dominios Cifrado CLAVE Figura 3: Almacenamiento en caché de datos desencriptados para aumentar la eficiencia al entregar a pares con privilegios de seguridad equivalentes, luego el identificador se utiliza para seleccionar el nodo de encuentro en la red superpuesta estructurada). Por lo tanto, es probable que el nodo de encuentro resida fuera del dominio actual. Esta situación está ilustrada en el árbol de difusión del evento en la Figura 2. Incluso con aplicaciones internas del dominio, donde el evento puede ser enviado desde el publicador a todos los suscriptores en forma de texto plano, el contenido del evento en la mayoría de los casos tendrá que ser encriptado para poder ser enviado al nodo de encuentro. Para evitar desciframientos innecesarios, adjuntamos una caché de contenido en texto plano a los eventos encriptados. Un corredor llena la caché con contenido que ha descifrado, por ejemplo, para filtrar en el contenido. El caché es accedido por el intermediario cuando entrega un evento a un suscriptor local después de verificar primero si el evento coincide con el filtro de suscripción, pero el intermediario también envía el caché al siguiente intermediario con el evento encriptado. El siguiente corredor puede buscar el atributo en la caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, la caché se descartará antes de que se envíe el evento. Obviamente, enviar la caché con el evento encriptado aumentará el costo de comunicación, pero esto se compensa con el ahorro en el procesamiento de encriptación/desencriptación. En la Fig. 3 vemos dos flujos de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre intermediarios en dos dominios diferentes. Mostramos en la Sección 5.2 que el costo adicional de enviar mensajes encriptados con una caché de texto completo incurre en casi ningún costo adicional en comparación con el envío de mensajes de texto plano. 3.5 Implementación En nuestra implementación hemos utilizado el modo de operación EAX [2] al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para cifradores de bloque, también llamado algoritmo de Cifrado Autenticado con Datos Asociados (AEAD) que proporciona simultáneamente confidencialidad de datos y protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer paso se encripta el texto plano, y en el segundo paso se genera un código de autenticación de mensaje (MAC) para los datos encriptados. El modo EAX es compatible con cualquier cifrador de bloques. Decidimos utilizar el algoritmo Estándar de Encriptación Avanzada (AES) en nuestra implementación, debido a su estatus estándar y al hecho de que el algoritmo ha sido sometido a un exhaustivo criptoanálisis durante su existencia y hasta el momento no se han encontrado vulnerabilidades graves. Además de proporcionar confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en modo de contador (modo CTR) [21]. Un cifrado de bloque en modo de contador se utiliza para producir una secuencia de bits de clave que luego se XORean con el texto plano. El modo CTR transforma efectivamente un cifrado por bloques en un cifrado de flujo. La ventaja de los cifrados de flujo es que el texto cifrado tiene la misma longitud que el texto plano, mientras que con los cifrados de bloque el texto plano debe ser rellenado a un múltiplo de la longitud del bloque del cifrado de bloque (por ejemplo, el tamaño de bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, ya que el relleno podría aumentar el tamaño del atributo de manera desproporcionada. Por ejemplo, un solo entero podría tener una longitud de 32 bits, que se rellenaría a 128 bits si usáramos un cifrado por bloques. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno necesario para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud total del texto plano. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número usado una vez), una clave de cifrado y el texto plano, y devuelve el texto cifrado y una etiqueta de autenticación. En el modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve ya sea el texto plano, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente al pasar a través de una construcción OMAC (ver [7]). Es importante que los valores de nonce particulares no se reutilicen, de lo contrario, el cifrado de bloques en modo CTR produciría una secuencia de clave idéntica. En nuestra implementación utilizamos la marca de tiempo del evento definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) seguida de la identidad de PHB (es decir, la clave pública) como nonce. El corredor es responsable de asegurarse de que las marcas de tiempo aumenten de forma monótona. La etiqueta de autenticación se añade al texto cifrado producido para crear un par ordenado. Con el cifrado de eventos se crea una única etiqueta para el evento cifrado. Con el cifrado de atributo 109, cada atributo se cifra y autentica por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer un equilibrio entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación añadida. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero se podría hacer que la longitud de la etiqueta sea un parámetro definido por el publicador/suscriptor para cada publicación/suscripción o incluirlo en la definición del tipo de evento para hacerlo un parámetro específico del tipo. EAX también admite incluir datos asociados no encriptados en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero sigue siendo legible por todos. Esta característica podría ser utilizada con cifrado de eventos en casos donde parte del contenido del evento es público y, por lo tanto, sería útil para enrutamiento basado en contenido. La integridad de los datos seguiría protegida contra cambios, pero los intermediarios no autorizados podrían aplicar filtros. Hemos incluido el identificador del tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AEAD incluyen el modo de libro de códigos de desplazamiento (OCB) [17] y el modo de contador con CBC-MAC (CCM) [22]. A diferencia del modo EAX, el modo OCB solo requiere un paso sobre el texto plano, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en los Estados Unidos, lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado con el fin de proporcionar una alternativa gratuita a OCB. El EAX se desarrolló más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasadas. 4. GESTIÓN DE CLAVES En ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador del atributo). Ese identificador se utiliza para determinar la clave de encriptación que se debe usar al encriptar o desencriptar el contenido. Cada tipo de evento, en el cifrado de eventos, y atributo, en el cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo de claves de intermediarios para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando sea necesario y para entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicita unirse al grupo clave esté autorizado para hacerlo. Por lo tanto, el administrador del grupo clave debe ser confiable por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el administrador del grupo clave es o bien un tercero de confianza o, alternativamente, un miembro del dominio de propietarios del tipo. En [12] Pesonen et al. propusieron una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo posee un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento específico es otorgada por el propietario de ese tipo al emitir una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que el Propietario del Tipo, el Corredor, y el Administrador de Claves deben seguir. 1. Conceder autorización para la clave de la placa de número. 2. El Corredor solicita unirse al grupo de claves de la placa de número. 5. Si el corredor cumple con todas las verificaciones, comenzará a recibir las claves apropiadas. 3. El Administrador de Claves puede verificar las credenciales de los corredores en el Servicio de Control de Acceso. 4. El Administrador de Claves puede verificar que el Propietario del Tipo permita el acceso. Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo de claves al que el nodo está autorizado a acceder. Por ejemplo, una tupla <NP, suscribirse, *> autorizaría al propietario a suscribirse a eventos de matrícula con acceso a todos los atributos en los eventos publicados. La secuencia de eventos necesarios para que un corredor se una con éxito a un grupo clave se muestra en la Figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para realizar la solicitud del cliente. Es decir, si el cliente realiza una solicitud de suscripción para eventos de matrícula, tanto el cliente como el corredor local deben estar autorizados para suscribirse a eventos de matrícula. Esto se debe a que, desde la perspectiva de la red de corredores, el corredor local actúa como un intermediario para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utilizan para autorizar las solicitudes de publicación/suscripción. No hacerlo podría llevar a la situación inconsistente en la que un SHB está autorizado para realizar una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la Matrícula anterior, el corredor local que posee la capacidad mencionada está autorizado para unirse al grupo clave de Matrícula, así como a los grupos clave de todos los atributos en el tipo de evento de Matrícula. La encriptación de contenido de eventos en un sistema de publicación/suscripción multi-dominio descentralizado puede considerarse como una subcategoría de la comunicación de grupo segura. En ambos casos, el sistema de gestión de claves debe escalar bien con el número de clientes, los clientes pueden estar distribuidos en áreas geográficas extensas, puede haber altas tasas de rotación en la membresía del grupo, y todos los miembros deben estar sincronizados entre sí en tiempo para poder utilizar la misma clave de cifrado al mismo tiempo. Existen varios protocolos de gestión de claves escalables para comunicación segura en grupo [15]. Hemos implementado el protocolo del Árbol de Función Unidireccional (OFT) [8] como una prueba de concepto. Decidimos implementar OFT debido a su relativa simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de intermediarios como transporte. El protocolo OFT se basa en un árbol binario donde los participantes se encuentran en las hojas del árbol. Escalando en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, lo cual hemos verificado en nuestras simulaciones. 4.2 Actualización de claves Tradicionalmente, en los esquemas de gestión de claves de grupo, la clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente abandona el grupo o expira un temporizador. Actualizar la clave cuando un nuevo miembro se une proporciona secrecía hacia atrás, es decir, se evita que el nuevo miembro acceda a los mensajes antiguos. Refrescar la clave de manera similar cuando un miembro existente se va proporciona secreto hacia adelante, es decir, se evita que el antiguo miembro acceda a los mensajes futuros. Se emiten actualizaciones periódicas desencadenadas por temporizador para limitar el daño causado por la clave actual comprometida. Aunque los protocolos de gestión de claves de última generación son eficientes, refrescar la clave innecesariamente introduce tráfico adicional y procesamiento entre los miembros del grupo de claves. En nuestro caso, la membresía del grupo clave se basa en que el corredor posea una capacidad que lo autorice a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que, en su forma más simple, definen un período de tiempo durante el cual el certificado es válido, y en casos más complejos implican verificaciones en línea hacia el emisor. Para evitar actualizaciones innecesarias de claves, el administrador de claves examina las condiciones de validez del certificado del miembro que se une o abandona. En caso de unirse a un miembro, si el gerente puede asegurar que el certificado era válido en el momento de la actualización de clave anterior, se puede evitar una nueva actualización de clave. De manera similar, en lugar de actualizar la clave inmediatamente cuando un miembro abandona el grupo de claves, el administrador de claves puede almacenar en caché sus credenciales y actualizar la clave solo cuando las credenciales expiren. Estas situaciones están ilustradas en la Fig. 5. Se puede asumir que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio está autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad en el futuro previsible. Se implementaría un control de acceso más detallado y dinámico en el borde de la red del intermediario entre los clientes y los intermediarios que alojan a los clientes. Cuando se actualiza una clave de encriptación, la nueva clave se etiqueta con una marca de tiempo. La clave de encriptación a utilizar para un evento dado se selecciona en función de la marca de tiempo de publicación del evento. Las llaves antiguas se mantendrán durante un tiempo razonable para permitir cierta desviación del reloj. Establecer este valor es parte del protocolo de gestión de claves, aunque exactamente cuánto tiempo debe ser dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar de forma independiente por grupo de teclas si es necesario. 5. EVALUACIÓN Para evaluar el rendimiento del cifrado de contenido del evento, hemos implementado ambos enfoques de cifrado ejecutándose en nuestra implementación del middleware de publicación/suscripción Hermes. La implementación admite tres modos: contenido en texto plano, cifrado de eventos y cifrado de atributos, en un único sistema de publicación/suscripción. Realizamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 de 3.2GHz con 1GB de memoria principal. Decidimos realizar las pruebas en un simulador de eventos en lugar de en un sistema desplegado real para poder medir el tiempo total que lleva manejar todos los mensajes en el sistema. Las siguientes secciones describen con más detalle las configuraciones específicas de las pruebas y los resultados. 5.1 Sobrecarga de Extremo a Extremo La prueba de sobrecarga de extremo a extremo muestra cuánto se vio afectado el rendimiento general del mensaje del simulador por la encriptación del contenido del evento. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor se suscribió al tipo de evento anunciado sin ningún filtro, es decir, cada publicación coincidía con la publicación del suscriptor y, por lo tanto, se entregaba al suscriptor. El test mide el tiempo combinado que se tarda en publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye tanto encriptar el contenido en el PHB como desencriptarlo en el SHB. En la prueba, el número de atributos en el tipo de evento se incrementa de 1 a 25 (el eje x). Cada atributo se establece como una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y se mide el tiempo transcurrido para derivar el rendimiento del mensaje. El test se repitió cinco veces para cada número de atributos y utilizamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que la desviación estándar no se muestra. Los mismos tests se realizaron sin encriptación de contenido, encriptación de eventos y encriptación de atributos. Como se puede ver en la Fig. 6, el cifrado del contenido del evento introduce una gran sobrecarga en comparación con no usar cifrado. El rendimiento al utilizar cifrado de atributos con un tipo de evento con un atributo es del 46% del rendimiento logrado cuando los eventos se envían en texto plano. Cuando el número de atributos aumenta, la brecha de rendimiento también aumenta: con diez atributos, el rendimiento con cifrado de atributos ha disminuido al 11.7% del rendimiento en texto plano. El cifrado de eventos es más eficiente, debido a un menor número de operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta tanto al rendimiento como lo hace el número de operaciones de encriptación individuales. La diferencia en el rendimiento con la encriptación de eventos y la encriptación de atributos con solo un atributo es causada por el mecanismo de serialización de objetos de Java: en el caso de la encriptación de eventos, se serializa toda la estructura de atributos, lo que resulta en más objetos que al serializar un único valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de empaquetado. Ten en cuenta que la implementación de EAX que utilizamos hace pasar el nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no es necesario mantener en secreto el nonce (solo que sea único), existe un posible compromiso entre tiempo y espacio que aún no hemos investigado al adjuntar atributos de nonce adicionales a los que ya se les ha aplicado este constructo OMAC. Eventos Internos del Dominio 5.2. Explicamos en la Sección 3.4 que el descifrado y cifrado del contenido del evento pueden evitarse si ambos corredores están autorizados para acceder al contenido del evento. Este test fue diseñado para demostrar que el uso del mecanismo de contenido de eventos encriptado entre dos corredores autorizados solo incurre en una pequeña sobrecarga de rendimiento. En esta prueba formamos nuevamente una red de corredores con dos corredores. 111 Programa de actualización de claves Corredor 1 uniéndose y saliendo del grupo de claves Corredor 2 uniéndose y saliendo del grupo de claves Tiempos reales de actualización de claves Tiempo Un día Las credenciales del grupo de claves de los corredores son válidas Tiempo real de unión Tiempo real de salida Un día Un día Figura 5: Cómo se ve afectado el programa de actualización de claves por la unión y salida de corredores de grupos de claves 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 Mensajes por segundo Número de atributos Sin cifrado Cifrado de atributos Cifrado de contenido completo Figura 6: Rendimiento de eventos en un simulador Ambos corredores están configurados con las mismas credenciales. El editor está vinculado a uno de los corredores y el suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtro en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para derivar el rendimiento del mensaje del sistema. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de encriptación no está incluido en las mediciones. El objetivo es modelar un entorno donde un corredor ha recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el intermediario central no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió a medida que el número de atributos en el evento publicado aumentaba de 1 a 25. Los valores de atributo en cada caso son cadenas de 30 caracteres. Cada prueba se repite cinco veces y utilizamos el promedio de todas las iteraciones en el gráfico. El mismo test fue luego repetido sin encriptación, con encriptación de eventos y con encriptación de atributos activada. Los modos encriptados siguen muy de cerca uno al otro. Predeciblemente, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente porque los eventos encriptados son de mayor tamaño, ya que incluyen tanto el texto plano como el contenido encriptado en esta prueba. La diferencia en el rendimiento es del 3.7% con un atributo y del 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede ser explicada por el recolector de basura de Java interfiriendo con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalda esta teoría. A través de la definición de múltiples tipos de eventos, es posible emular la expresividad del cifrado de atributos utilizando solo el cifrado del contenido del evento. El último test que realizamos fue para mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la Figura 8. El número de grupos de suscriptores se incrementa de 1 a 50 (el eje x). Para cada grupo de suscriptores n, el editor publica un evento para representar el uso de cifrado de atributos y n eventos que representan los eventos para cada grupo de suscriptores. Contamos el número de saltos que cada publicación realiza a través de la red de intermediarios (eje y). Ten en cuenta que la Fig. 8 muestra cargas de trabajo más allá de lo que esperaríamos en un uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permisos disjuntos sobre los atributos de eventos. El número de estos conjuntos puede determinarse a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado por atributo funciona mejor que el cifrado por evento incluso para un pequeño número de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso de eventos de matrícula), el recuento de saltos aumenta de 7.2 saltos para el cifrado de atributos a 16.6 saltos para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, una diferencia de un orden de magnitud. 6. TRABAJO RELACIONADO Wang et al. han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El artículo es una visión general exhaustiva de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, intenta llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al. en [1] examinan el uso del control de acceso basado en roles en sistemas de publicación/suscripción distribuidos de múltiples dominios. Su trabajo es complementario a este documento: el RBAC distribuido es una posible formalización de políticas que podría utilizar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad de eventos en el último enlace entre el suscriptor y el SHB en [10]. Ellos afirman correctamente que un enfoque de comunicación de grupo seguro es inviable en un entorno como el de publicar/suscribir que tiene membresías de grupo altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché de claves y la agrupación de suscriptores para minimizar el número de cifrados necesarios al entregar una publicación de un SHB a un conjunto de suscriptores coincidentes. En nuestro trabajo asumimos que el SHB es lo suficientemente potente como para manejar una conexión segura de TLS para cada suscriptor local. Tanto Srivatsa et al. [19] como Raiciu et al. [16] presentan mecanismos para proteger la confidencialidad de los mensajes en infraestructuras descentralizadas de publicación/suscripción. En comparación con nuestro trabajo, ambos artículos tienen como objetivo proporcionar los medios para proteger la integridad y confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red del intermediario. Raiciu et al. asumen en su trabajo que ninguno de los intermediarios en la red es de confianza y, por lo tanto, todos los eventos están encriptados desde el publicador hasta el suscriptor y que todas las coincidencias se basan en eventos encriptados. Por el contrario, asumimos que algunos de los intermediarios en el camino de una publicación son de confianza para acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También asumimos que los corredores de publicación y suscripción alojados son siempre de confianza para acceder a la publicación. Las contribuciones de Srivatsa et al. y Raiciu et al. son complementarias a las contribuciones en este artículo. Finalmente, Fiege et al. abordan el tema relacionado con la visibilidad de eventos en [6]. Si bien el trabajo se centró en el uso de alcances como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad de eventos sí se relaciona con el control de acceso en cierta medida. 7. CONCLUSIONES El cifrado del contenido del evento puede ser utilizado para hacer cumplir una política de control de acceso mientras los eventos están en tránsito en la red de intermediarios de un sistema de publicación/suscripción multi-dominio. El cifrado genera una sobrecarga, pero i) puede que no haya alternativa cuando se requiere control de acceso, y ii) la penalización en el rendimiento puede reducirse con optimizaciones de implementación, como pasar contenido en texto plano almacenado en caché junto con contenido cifrado entre intermediarios con credenciales de seguridad idénticas. Esto es especialmente apropiado si las conexiones de intermediario a intermediario están aseguradas por defecto, de modo que el espionaje de cables no sea un problema. El cifrado a nivel de atributo se puede implementar para hacer cumplir políticas de control de acceso detalladas. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los intermediarios parcialmente autorizados implementar enrutamiento basado en contenido basado en los atributos a los que tienen acceso. Nuestros experimentos muestran que i) al almacenar en caché el contenido de texto plano y cifrado cuando es posible, podemos ofrecer un rendimiento comparable a los eventos de texto plano, y ii) que la encriptación de atributos dentro de un evento incurre en mucho menos sobrecarga que definir tipos de eventos separados para los atributos que necesitan diferentes niveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer un equilibrio entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo del EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919). 114 8. REFERENCIAS [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurando la publicación/suscripción para sistemas multi-dominio. En G. Alonso, editor, Middleware, volumen 3790 de las Notas de Conferencia en Ciencias de la Computación, páginas 1-20. Springer, 2005. [2] M. Bellare, P. Rogaway, y D. Wagner. Eax: Un modo de autenticación y cifrado convencional. Archivo de Criptología ePrint, Reporte 2003/069, 2003. http://eprint.iacr.org/. [3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de amplia área. ACM Transactions on Computer Systems, 19(3):332-383, ago. 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. SCRIBE: Una infraestructura de multidifusión a nivel de aplicación a gran escala y descentralizada. Revista IEEE sobre Áreas Seleccionadas en Comunicaciones (JSAC), 20(8):1489-1499, Oct. 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Grupo de Trabajo de Ingeniería de Internet, enero de 1999. [6] L. Fiege, M. Mezini, G. M uhl y A. P. Buchmann. Diseñando sistemas basados en eventos con alcances. En ECOOP 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag. [7] T. Iwata y I. Iurosawa. OMAC: One-key CBC MAC, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento de clave en grupos grandes y dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, Laboratorios TIS en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Estándares y Tecnología (NIST). Estándar de Cifrado Avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de publicación y suscripción basados en contenido. En Actas del 10º Simposio de Seguridad USENIX. USENIX, ago. 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basados en contenido y multi-dominio. En SEM 05: Actas del 5º taller internacional sobre ingeniería de software y middleware, páginas 98-105, Nueva York, NY, EE. UU., septiembre de 2005. ACM Press. [12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción multi-dominio. En Actas del Simposio sobre Aplicaciones y la Internet (SAINT 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE. [13] P. R. Pietzuch y J. M. Bacon. Hermes: Una arquitectura middleware distribuida basada en eventos. En Actas del 1er Taller Internacional sobre Sistemas Basados en Eventos Distribuidos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE. [14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware orientado a mensajes confiable y escalable. En M. Endler y D. Schmidt, editores, Actas del 4to Congreso Internacional. Conferencia sobre Middleware (Middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Springer. [15] S. Rafaeli y D. Hutchison. Una encuesta sobre la gestión de claves para la comunicación segura en grupo. ACM Computing Surveys, 35(3):309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en infraestructuras de publicación/suscripción basadas en contenido. En Securecomm 06: Actas de la Segunda Conferencia Internacional IEEE/CreatNet sobre Seguridad y Privacidad en Redes de Comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Negro, y T. Krovetz. OCB: un modo de operación de cifrado de bloque para una eficiente encriptación autenticada. En la Conferencia ACM sobre Seguridad Informática y de Comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando servicios de superposición de publicación-suscripción con eventguard. En CCS 05: Actas de la 12ª conferencia de ACM sobre seguridad informática y de comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press. [20] C. Wang, A. Carzaniga, D. Evans, y A. L. Wolf. Problemas de seguridad y requisitos en sistemas de publicación-suscripción a escala de internet. En Actas de la 35ª Conferencia Internacional de Ciencias de Sistemas de Hawái (HICSS02), Isla Grande, HI, EE. UU., 2002. IEEE. [21] D. Whitfield y M. Hellman. Privacidad y autenticación: Una introducción a la criptografía. En Actas del IEEE, volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contraataque con CBC-MAC (CCM). RFC 3610, Grupo de Trabajo de Ingeniería de Internet, septiembre de 2003. 115 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}